[
  {
    "instance_id": "openhab__openhab-addons-18823",
    "pr_id": 18823,
    "issue_id": 18714,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[deconz] Color item state not correct after sendCommand\n<!-- Provide a general summary of the issue in the *Title* above -->\n<!-- If the issue is related to a binding, please include its short name in -->\n<!-- square brackets in the title - Example: \"[astro] My issue...\" -->\n\n<!-- Important: Please contact the openHAB community forum for questions or -->\n<!-- for configuration and usage guidance: https://community.openhab.org -->\n\n<!-- Feel free to delete any comment lines in the template (starting with \"<!--\") -->\n\n## Expected Behavior\nIssuing a command to a Deconz extendedcolorlight color channel does not update the item state.\nAs far as I can tell this worked in the 4.1.X version, but the behavior changed with 4.3.5.\n\n## Current Behavior\nThe item state is not the same as the issued command.\n\nSetting the value to `13,97,10` makes the item state go to `15.641,87.13100,100.00` and after a short delay it becomes `21.749,87.37800,52.781`. The light itself is dimmed to (whats seems to be) 10% and stays that way. It never has a brightness of 100% (which would be the first state after issuing the command) nor does it change its brightness in anyway after the initial dimming.\n\nIssuing the same command again will not change the state to `13,97,10` either.\n\n\n## Steps to Reproduce (for Bugs)\n\nThing:\n```\nextendedcolorlight         Light_LED_Office              \"LED-Streifen Büro\"          @ \"Office\"          [ id=\"16\" ]\n```\nItem:\n```\nColor                 Light_LED_Office_Color                          \"LED-Streifen Büro Farbe\"                                                                          {channel = \"deconz:extendedcolorlight:homeserver:Light_LED_Office:color\"}\n```\n\n1. Send command `13,97,10`\n2. Check state -> it is `15.641,87.13100,100.00`\n3. Check state after 1 second again -> it is `21.749,87.37800,52.781`\n\n## Context\nI noticed this because I have rules that set the light value and then change it back after a while if it has not changed. This check now fails, because the expected value (the command issued) will always differ from the current state.\n\n## Your Environment\nopenHABian with 4.3.5 on a Raspberry Pi\n",
    "issue_word_count": 330,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/dto/LightState.java",
      "bundles/org.openhab.binding.deconz/src/test/java/org/openhab/binding/deconz/LightsTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.deconz/src/test/java/org/openhab/binding/deconz/LightsTest.java"
    ],
    "base_commit": "69e74467c31ebdf6a2290e2ced4065acdecb56c9",
    "head_commit": "cbd2d2b127d7e11dc805867c4fbfafeb58566e39",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18823",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18823",
    "dockerfile": "",
    "pr_merged_at": "2025-06-21T13:20:16.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/dto/LightState.java b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/dto/LightState.java\nindex bb5f268a3ceb9..e184268f67861 100644\n--- a/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/dto/LightState.java\n+++ b/bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/dto/LightState.java\n@@ -51,15 +51,46 @@ public class LightState {\n \n     public @Nullable Integer transitiontime;\n \n+    private static enum ColorMode {\n+        CT,\n+        HS,\n+        XY\n+    }\n+\n+    private @Nullable ColorMode colorModeFrom(@Nullable String value) {\n+        if (value != null) {\n+            try {\n+                return ColorMode.valueOf(value.toUpperCase());\n+            } catch (IllegalArgumentException e) {\n+                // fall through\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private boolean compareXYWithTolerance(double @Nullable [] a, double @Nullable [] b, double tolerance) {\n+        return a == null || b == null || ((a.length > 1) && (b.length > 1) && (Math.abs(a[0] - b[0]) < tolerance)\n+                && (Math.abs(a[1] - b[1]) < tolerance));\n+    }\n+\n     /**\n      * compares two light states and ignore all fields that are null in either state\n      *\n-     * @param o state to compare with\n+     * @param other state to compare with\n      * @return true if equal\n      */\n-    public boolean equalsIgnoreNull(LightState o) {\n-        return equalsIgnoreNull(on, o.on) && equalsIgnoreNull(bri, o.bri) && equalsIgnoreNull(hue, o.hue)\n-                && equalsIgnoreNull(sat, o.sat) && ((xy != null && o.xy != null) ? Arrays.equals(xy, o.xy) : true);\n+    public boolean equalsIgnoreNull(LightState other) {\n+        boolean colorsEqual = true;\n+        ColorMode thisMode = colorModeFrom(this.colormode);\n+        ColorMode otherMode = colorModeFrom(other.colormode);\n+        if (thisMode == ColorMode.CT || otherMode == ColorMode.CT) {\n+            colorsEqual = equalsIgnoreNull(this.ct, other.ct);\n+        } else if (thisMode == ColorMode.HS || otherMode == ColorMode.HS) {\n+            colorsEqual = equalsIgnoreNull(this.hue, other.hue) && equalsIgnoreNull(this.sat, other.sat);\n+        } else if (thisMode == ColorMode.XY || otherMode == ColorMode.XY) {\n+            colorsEqual = compareXYWithTolerance(this.xy, other.xy, 0.01);\n+        }\n+        return colorsEqual && equalsIgnoreNull(this.on, other.on) && equalsIgnoreNull(this.bri, other.bri);\n     }\n \n     /**\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.deconz/src/test/java/org/openhab/binding/deconz/LightsTest.java b/bundles/org.openhab.binding.deconz/src/test/java/org/openhab/binding/deconz/LightsTest.java\nindex f8abdda4eb73c..eadba3c5115af 100644\n--- a/bundles/org.openhab.binding.deconz/src/test/java/org/openhab/binding/deconz/LightsTest.java\n+++ b/bundles/org.openhab.binding.deconz/src/test/java/org/openhab/binding/deconz/LightsTest.java\n@@ -12,7 +12,7 @@\n  */\n package org.openhab.binding.deconz;\n \n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.ArgumentMatchers.*;\n import static org.openhab.binding.deconz.internal.BindingConstants.*;\n import static org.openhab.core.thing.internal.ThingManagerImpl.PROPERTY_THING_TYPE_VERSION;\n@@ -33,6 +33,7 @@\n import org.openhab.binding.deconz.internal.DeconzDynamicCommandDescriptionProvider;\n import org.openhab.binding.deconz.internal.DeconzDynamicStateDescriptionProvider;\n import org.openhab.binding.deconz.internal.dto.LightMessage;\n+import org.openhab.binding.deconz.internal.dto.LightState;\n import org.openhab.binding.deconz.internal.handler.LightThingHandler;\n import org.openhab.binding.deconz.internal.types.LightType;\n import org.openhab.binding.deconz.internal.types.LightTypeDeserializer;\n@@ -311,4 +312,16 @@ public void windowCoveringUpdateTest() throws IOException {\n         lightThingHandler.messageReceived(lightMessage);\n         Mockito.verify(thingHandlerCallback).stateUpdated(eq(channelUIDPos), eq(new PercentType(\"41\")));\n     }\n+\n+    @Test\n+    public void testCompareLightStates() {\n+        Gson gson = new Gson();\n+        String commandJson = \"{\\\"on\\\":true,\\\"bri\\\":203,\\\"xy\\\":[0.2210631504407662,0.7055816687044134]}\";\n+        String responseJson = \"{\\\"alert\\\":\\\"none\\\",\\\"bri\\\":203,\\\"colormode\\\":\\\"xy\\\",\\\"ct\\\":500,\\\"effect\\\":\\\"none\\\",\\\"hue\\\":21504,\\\"on\\\":true,\\\"reachable\\\":true,\\\"sat\\\":254,\\\"xy\\\":[0.2211,0.7056]}\";\n+        LightState command = gson.fromJson(commandJson, LightState.class);\n+        LightState response = gson.fromJson(responseJson, LightState.class);\n+        assertNotNull(command);\n+        assertNotNull(response);\n+        assertTrue(command.equalsIgnoreNull(response));\n+    }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18690",
    "pr_id": 18690,
    "issue_id": 18222,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[knx] Also catch IllegalArguementException in ValueDecoder to handle all error scenario,\nHello,\n\nI hit the following error on my openhab / Knx installation.\n\n2025-02-03 10:01:03.846 [DEBUG] [.internal.handler.DeviceThingHandler] - onGroupWrite Thing 'knx:device:bridge:generic' received a GroupValueWrite telegram from '1.0.248' for destination '10/4/3'\n2025-02-03 10:01:03.846 [WARN ] [mmon.WrappedScheduledExecutorService] - Scheduled runnable ended with an exception: \njava.lang.IllegalArgumentException: Number cannot be parsed\n\tat tech.units.indriya.format.NumberDelimiterQuantityFormat.parse(NumberDelimiterQuantityFormat.java:315) ~[?:?]\n\tat org.openhab.core.library.types.QuantityType.<init>(QuantityType.java:160) ~[?:?]\n\tat org.openhab.core.library.types.QuantityType.<init>(QuantityType.java:123) ~[?:?]\n\tat org.openhab.binding.knx.internal.dpt.ValueDecoder.handleNumericDpt(ValueDecoder.java:505) ~[?:?]\n\tat org.openhab.binding.knx.internal.dpt.ValueDecoder.decode(ValueDecoder.java:230) ~[?:?]\n\tat org.openhab.binding.knx.internal.handler.DeviceThingHandler.processDataReceived(DeviceThingHandler.java:397) ~[?:?]\n\tat org.openhab.binding.knx.internal.handler.DeviceThingHandler.onGroupWrite(DeviceThingHandler.java:385) ~[?:?]\n\tat org.openhab.binding.knx.internal.client.AbstractKNXClient$1.lambda$0(AbstractKNXClient.java:129) ~[?:?]\n\tat org.openhab.binding.knx.internal.client.AbstractKNXClient.lambda$8(AbstractKNXClient.java:348) ~[?:?]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[?:?]\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]\n\tat java.lang.Thread.run(Thread.java:1583) [?:?]\n\nAfter investigating a little bit, I find that the error is triggered because one of the participant push a Not a Number (Nan) on this group 10/4/3.\n\n## Expected Behavior\n\nWhat I expected in this case is to have a clae error in the exception telling me what group / participant / value make things goes wrong.\nBut I've only get the generic exception bellow.\n\nAfter analysis the code, what is happenning is that:\n- The method   public static @Nullable Type decode(String dptId, byte[] data, Class<? extends Type> preferredType)  of ValueDecoder is called to convert the raw value.\n\n- We hit in the case the handleNumericDpt(...) at the end of the swictch / case.\n\n- This method throw an IllegalArgumentException parsing the NaN.\n\n- But the catch clause in the decode function only catch NumberFormatException, not IllegalArgumentException.\n  So the Logger.info just bellow is never it in this case.\n\nSo I think we have to changed:\n``\n} catch (NumberFormatException | KNXFormatException | KNXIllegalArgumentException | ParseException e) {\n\nby \n\n} catch (IllegalArgumentException | KNXFormatException | KNXIllegalArgumentException | ParseException e) {\n``\nthat will cauth IllegalArgumentException  as well as NumberFormatException \n\n\n## Your Environment\nOpenhab 5.x nightly, running on Fedora / Linux\n\n",
    "issue_word_count": 421,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/dpt/ValueDecoder.java",
      "bundles/org.openhab.binding.knx/src/test/java/org/openhab/binding/knx/internal/dpt/DPTTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.knx/src/test/java/org/openhab/binding/knx/internal/dpt/DPTTest.java"
    ],
    "base_commit": "3607758dea5ac593ebb4b739f4ed4bb7b090666b",
    "head_commit": "b40cf62a572d2b91c66fff5cdaed7849fd148ea5",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18690",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18690",
    "dockerfile": "",
    "pr_merged_at": "2025-06-06T19:52:00.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/dpt/ValueDecoder.java b/bundles/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/dpt/ValueDecoder.java\nindex f0268b095b050..a8ff5bb135733 100644\n--- a/bundles/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/dpt/ValueDecoder.java\n+++ b/bundles/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/dpt/ValueDecoder.java\n@@ -181,6 +181,13 @@ private static boolean check23561001(byte[] data) throws KNXException {\n                     } else {\n                         return handleNumericDpt(id, translator, preferredType);\n                     }\n+                case \"9\":\n+                    if ((data.length == 2) && (data[0] == (byte) 0x7f) && (data[1] == (byte) 0xff)) {\n+                        // 0x7fff denotes invalid data, this is not handled by Calimero\n+                        LOGGER.debug(\"Ignoring incoming packet for DPT '{}', 0x7fff indicates invalid value\", id);\n+                        return null;\n+                    }\n+                    return handleNumericDpt(id, translator, preferredType);\n                 case \"10\":\n                     return handleDpt10(value);\n                 case \"11\":\n@@ -498,11 +505,16 @@ private static Type handleDpt10(String value) throws ParseException {\n         if (allowedTypes.contains(QuantityType.class) && !disableUoM) {\n             String unit = DPTUnits.getUnitForDpt(id);\n             if (unit != null) {\n-                if (translator instanceof DPTXlator64BitSigned translatorSigned) {\n-                    // prevent loss of precision, do not represent 64bit decimal using double\n-                    return new QuantityType<>(translatorSigned.getValueSigned() + \" \" + unit);\n+                try {\n+                    if (translator instanceof DPTXlator64BitSigned translatorSigned) {\n+                        // prevent loss of precision, do not represent 64bit decimal using double\n+                        return new QuantityType<>(translatorSigned.getValueSigned() + \" \" + unit);\n+                    }\n+                    return new QuantityType<>(value + \" \" + unit);\n+                } catch (IllegalArgumentException e) {\n+                    LOGGER.debug(\"Could not represent value '{}' received for DPT '{}' as QuantityType\", value, id);\n+                    return null;\n                 }\n-                return new QuantityType<>(value + \" \" + unit);\n             } else {\n                 LOGGER.trace(\"Could not determine unit for DPT '{}', fallback to plain decimal\", id);\n             }\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.knx/src/test/java/org/openhab/binding/knx/internal/dpt/DPTTest.java b/bundles/org.openhab.binding.knx/src/test/java/org/openhab/binding/knx/internal/dpt/DPTTest.java\nindex 8248bd17ed446..35e697b3c167e 100644\n--- a/bundles/org.openhab.binding.knx/src/test/java/org/openhab/binding/knx/internal/dpt/DPTTest.java\n+++ b/bundles/org.openhab.binding.knx/src/test/java/org/openhab/binding/knx/internal/dpt/DPTTest.java\n@@ -200,6 +200,14 @@ void testToDPT9ValueFromQuantityType() {\n         ValueEncoder.encode(new QuantityType<>(\"1\"), \"9.030\");\n         // wrong unit\n         ValueEncoder.encode(new QuantityType<>(\"1 kg\"), \"9.030\");\n+\n+        // MEEE EMMM MMMM MMMM\n+        // \"the encoded value 7FFFh shall always be used to denote invalid data\"\n+        // ETS sends 0x7fff if NaN is sent via diagnostics\n+        // approach is to ignore data, same as for NaN with DPT14\n+        // -> should return null and do not throw an exception\n+        assertNull(ValueDecoder.decode(\"9.001\", new byte[] { (byte) 0x7f, (byte) 0xff }, QuantityType.class));\n+        assertNull(ValueDecoder.decode(\"9.001\", new byte[] { (byte) 0x7f, (byte) 0xff }, DecimalType.class));\n     }\n \n     @Test\n@@ -344,6 +352,26 @@ void testToDPT14ValueFromQuantityType() {\n \n         assertEquals(\"1\", ValueEncoder.encode(new QuantityType<>(\"1 m³/h\"), \"14.1200\"));\n         assertEquals(\"1\", ValueEncoder.encode(new QuantityType<>(\"1 l/s\"), \"14.1201\"));\n+        // IEEE 754 floating point representation, signaling and and non-signaling +/-NAN and +/-INF\n+        // -> should return null and do not throw an exception\n+        // ETS sends 0xffc00000 if NaN is sent via diagnostics\n+        assertNull(ValueDecoder.decode(\"14.000\", new byte[] { (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff },\n+                QuantityType.class));\n+        assertNull(ValueDecoder.decode(\"14.000\", new byte[] { (byte) 0xff, (byte) 0xbf, (byte) 0xff, (byte) 0xff },\n+                QuantityType.class));\n+        assertNull(ValueDecoder.decode(\"14.000\", new byte[] { (byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff },\n+                QuantityType.class));\n+        assertNull(ValueDecoder.decode(\"14.000\", new byte[] { (byte) 0x7f, (byte) 0xbf, (byte) 0xff, (byte) 0xff },\n+                QuantityType.class));\n+        assertNull(ValueDecoder.decode(\"14.000\", new byte[] { (byte) 0x7f, (byte) 0x80, 0, 0 }, QuantityType.class));\n+        assertNull(ValueDecoder.decode(\"14.000\", new byte[] { (byte) 0xff, (byte) 0x80, 0, 0 }, QuantityType.class));\n+        // same for DecimalType\n+        assertNull(ValueDecoder.decode(\"14.000\", new byte[] { (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff },\n+                DecimalType.class));\n+        // and for dimensionless\n+        assertNull(ValueDecoder.decode(\"14.057\", new byte[] { (byte) 0xff, (byte) 0x80, 0, 0 }, QuantityType.class));\n+        assertNull(ValueDecoder.decode(\"14.057\", new byte[] { (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff },\n+                DecimalType.class));\n     }\n \n     @Test\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18613",
    "pr_id": 18613,
    "issue_id": 18600,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[fenecon] Provide access to additional data such the BMS temperature..\n<!-- Provide a general summary of the feature request in the *Title* above -->\n<!-- If the feature request is related to an add-on, please include its short name in -->\n<!-- square brackets in the title - Example: \"[astro] My feature request...\" -->\n\n<!-- Important: Please contact the openHAB community forum for questions or -->\n<!-- for configuration and usage guidance: https://community.openhab.org -->\n\n##  Motivation\nThe FENECON system provide additional data for home automation to enable better analysis and rules.\n\n## Goal\nThe following data should also be provided via the _fenecon binding_:\n* the currently installed BMS software version\n* different measured temperatures of the BMS\n* more information on the individual solar panels\n* more information on batteries such as the “State of Health”\n",
    "issue_word_count": 124,
    "test_files_count": 4,
    "non_test_files_count": 11,
    "pr_changed_files": [
      "bundles/org.openhab.binding.fenecon/README.md",
      "bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconBindingConstants.java",
      "bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconHandler.java",
      "bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/Address.java",
      "bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressChannel.java",
      "bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressComponent.java",
      "bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressComponentChannelUtil.java",
      "bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/FeneconController.java",
      "bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/i18n/fenecon.properties",
      "bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/thing/thing-types.xml",
      "bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/update/update.xml",
      "bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/FeneconBindingConstantsTest.java",
      "bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentChannelUtilTest.java",
      "bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentTest.java",
      "bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/FeneconBindingConstantsTest.java",
      "bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentChannelUtilTest.java",
      "bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentTest.java",
      "bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressTest.java"
    ],
    "base_commit": "9a4131882e9b90d56dfba0a5f4e8844e53cdc38c",
    "head_commit": "65ad744f40e5d957fa825663c389d6fd308408aa",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18613",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18613",
    "dockerfile": "",
    "pr_merged_at": "2025-05-16T07:24:55.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.fenecon/README.md b/bundles/org.openhab.binding.fenecon/README.md\nindex 09385b4676156..d65073f9adea8 100644\n--- a/bundles/org.openhab.binding.fenecon/README.md\n+++ b/bundles/org.openhab.binding.fenecon/README.md\n@@ -31,32 +31,48 @@ The FENECON Thing only needs to be configured with the `hostname`, all other par\n \n The FENECON binding currently only provides access to read out the values from the energy storage system.\n \n-| Channel                       | Type                 | Read/Write | Description                                                                 |\n-|-------------------------------|----------------------|------------|-----------------------------------------------------------------------------|\n-| state                         | String               | R          | FENECON system state: Ok, Info, Warning or Fault                            |\n-| last-update                   | DateTime             | R          | Last successful update via REST-API from the FENECON system                 |\n-| ess-soc                       | Number:Dimensionless | R          | Battery state of charge in percent                                          |\n-| charger-power                 | Number:Power         | R          | Current charger power of energy storage system in watt.                     |\n-| discharger-power              | Number:Power         | R          | Current discharger power of energy storage system in watt.                  |\n-| emergency-power-mode          | Switch               | R          | Indicates if there is grid power is off and the emergency power mode is on. |\n-| production-active-power       | Number:Power         | R          | Current active power producer load in watt.                                 |\n-| production-max-active-power   | Number:Power         | R          | Maximum active production power in watt that was measured.                  |\n-| export-to-grid-power          | Number:Power         | R          | Current export power to grid in watt.                                       |\n-| exported-to-grid-energy       | Number:Energy        | R          | Total energy exported to the grid in watt per hour.                         |\n-| consumption-active-power      | Number:Power         | R          | Current active power consumer load in watt.                                 |\n-| consumption-max-active-power  | Number:Power         | R          | Maximum active consumption power in watt that was measured.                 |\n-| consumption-active-power-l1   | Number:Power         | R          | Current active power consumer load in watt on phase 1.                      |\n-| consumption-active-power-l2   | Number:Power         | R          | Current active power consumer load in watt on phase 2.                      |\n-| consumption-active-power-l3   | Number:Power         | R          | Current active power consumer load in watt on phase 3.                      |\n-| import-from-grid-power        | Number:Power         | R          | Current import power from grid in watt.                                     |\n-| imported-from-grid-energy     | Number:Energy        | R          | Total energy imported from the grid in watt per hour.                       |\n+| Channel                       | Type                       | Read/Write | Description                                                                    |\n+|-------------------------------|----------------------------|------------|--------------------------------------------------------------------------------|\n+| state                         | String                     | R          | FENECON system state: Ok, Info, Warning or Fault                               |\n+| fems-version                  | String                     | R          | FENECON energy management system (FEMS) version - e.g 2025.2.3                 |\n+| last-update                   | DateTime                   | R          | Last successful update via REST-API from the FENECON system                    |\n+| ess-soc                       | Number:Dimensionless       | R          | Battery state of charge.                                                       |\n+| batt-tower-soh                | Number:Dimensionless       | R          | Battery state of health.                                                       |\n+| charger-power                 | Number:Power               | R          | Current charger power of energy storage system.                                |\n+| discharger-power              | Number:Power               | R          | Current discharger power of energy storage system.                             |\n+| emergency-power-mode          | Switch                     | R          | Indicates if there is grid power is off and the emergency power mode is on.    |\n+| production-active-power       | Number:Power               | R          | Current active power producer load.                                            |\n+| production-max-active-power   | Number:Power               | R          | Maximum active production power that was measured.                             |\n+| export-to-grid-power          | Number:Power               | R          | Current export power to grid.                                                  |\n+| exported-to-grid-energy       | Number:Energy              | R          | Total energy exported to the grid.                                             |\n+| consumption-active-power      | Number:Power               | R          | Current active power consumer load.                                            |\n+| consumption-max-active-power  | Number:Power               | R          | Maximum active consumption power that was measured.                            |\n+| consumption-active-power-l1   | Number:Power               | R          | Current active power consumer load on phase 1.                                 |\n+| consumption-active-power-l2   | Number:Power               | R          | Current active power consumer load on phase 2.                                 |\n+| consumption-active-power-l3   | Number:Power               | R          | Current active power consumer load on phase 3.                                 |\n+| import-from-grid-power        | Number:Power               | R          | Current import power from grid.                                                |\n+| imported-from-grid-energy     | Number:Energy              | R          | Total energy imported from the grid.                                           |\n+| inverter-air-temperature      | Number:Temperature         | R          | Air temperature at the inverter.                                               |\n+| inverter-radiator-temperature | Number:Temperature         | R          | Radiator temperature of the inverter.                                          |\n+| bms-pack-temperature          | Number:Temperature         | R          | Temperature in the battery management system (BMS) box.                        |\n+| batt-tower-voltage            | Number:ElectricPotential   | R          | Battery voltage of the FENECON energy management system (FEMS).                |\n+| batt-tower-current            | Number:ElectricCurrent     | R          | Battery current of the FENECON energy management system (FEMS).                |\n+| charger0-actual-power         | Number:Power               | R          | Charger actual power on the charger 0 - e.g west roof, if available.           |\n+| charger0-voltage              | Number:ElectricPotential   | R          | Charger voltage on the charger 0 - e.g west roof, if available.                |\n+| charger0-current              | Number:ElectricCurrent     | R          | Charger current on the charger 0 - e.g west roof, if available.                |\n+| charger1-actual-power         | Number:Power               | R          | Charger actual power on the charger 1 - e.g east roof, if available.           |\n+| charger1-voltage              | Number:ElectricPotential   | R          | Charger voltage on the charger 1 - e.g east roof, if available.                |\n+| charger1-current              | Number:ElectricCurrent     | R          | Charger current on the charger 1 - e.g east roof, if available.                |\n+| charger2-actual-power         | Number:Power               | R          | Charger actual power on the charger 2 - e.g south roof, if available.          |\n+| charger2-voltage              | Number:ElectricPotential   | R          | Charger voltage on the charger 2 - e.g south roof, if available.               |\n+| charger2-current              | Number:ElectricCurrent     | R          | Charger current on the charger 2 - e.g south roof, if available.               |\n \n ## Full Example\n \n ### fenecon.things\n \n ```java\n-Thing fenecon:home-device:local \"FENECON Home\" [hostname=\"192.168.1.11\", refreshInterval=5]\n+Thing fenecon:home-device:local \"FENECON Home\" [hostname=\"192.168.1.11\", refreshInterval=30]\n ```\n \n ### demo.items\n@@ -66,33 +82,52 @@ Thing fenecon:home-device:local \"FENECON Home\" [hostname=\"192.168.1.11\", refresh\n Group   Home                    \"MyHome\"              <house>                                 [\"Indoor\"]\n Group   GF                      \"GroundFloor\"         <groundfloor>          (Home)           [\"GroundFloor\"]\n // Utility room\n-Group   GF_UtilityRoom          \"Utility room\"        <energy>               (Home, GF)       [\"Room\"]\n+Group   GF_UtilityRoom          \"Utility room\"        <energy>               (GF)             [\"Room\"]\n Group   GF_UtilityRoomSolar     \"Utility room solar\"  <solarplant>           (GF_UtilityRoom) [\"Inverter\"]\n \n // FENECON items\n-String               EssState                       <text>         (GF_UtilityRoomSolar) [\"Status\"]                {channel=\"fenecon:home-device:local:state\"}\n-DateTime             LastFeneconUpdate              <time>         (GF_UtilityRoomSolar) [\"Status\"]                {channel=\"fenecon:home-device:local:last-update\"}\n-Number:Dimensionless EssSoc                         <batterylevel> (GF_UtilityRoomSolar) [\"Measurement\"]           {unit=\"%\", channel=\"fenecon:home-device:local:ess-soc\"}\n-Number:Power         ChargerPower                   <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:charger-power\"}\n-Number:Power         DischargerPower                <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:discharger-power\"}\n-Switch               EmergencyPowerMode             <switch>       (GF_UtilityRoomSolar) [\"Switch\"]                {channel=\"fenecon:home-device:local:emergency-power-mode\"}\n-\n-Number:Power         ProductionActivePower          <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:production-active-power\"}\n-Number:Power         ProductionMaxActivePower       <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:production-max-active-power\"}\n-Number:Power         SellToGridPower                <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:export-to-grid-power\"}\n-Number:Energy        TotalSellEnergy                <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Energy\"] {channel=\"fenecon:home-device:local:exported-to-grid-energy\"}\n-\n-Number:Power         ConsumptionActivePower         <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-active-power\"}\n-Number:Power         ConsumptionMaxActivePower      <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-max-active-power\"}\n-Number:Power         ConsumptionActivePowerPhase1   <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-active-power-l1\"}\n-Number:Power         ConsumptionActivePowerPhase2   <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-active-power-l2\"}\n-Number:Power         ConsumptionActivePowerPhase3   <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-active-power-l3\"}\n-Number:Power         BuyFromGridPower               <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:import-from-grid-power\"}\n-Number:Energy        TotalBuyEnergy                 <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Energy\"] {channel=\"fenecon:home-device:local:imported-from-grid-energy\"}\n-\n-// Examples of items for calculating the energy purchased and sold. Look at the demo.rules section.\n-Number:Currency      SoldEnergy \"Total sold energy [%.2f €]\"           <price> (GF_UtilityRoomSolar)\n-Number:Currency      PurchasedEnergy \"Total purchased energy [%.2f €]\" <price> (GF_UtilityRoomSolar)\n+String                     EssState                       <text>         (GF_UtilityRoomSolar) [\"Status\"]                {channel=\"fenecon:home-device:local:state\"}\n+String                     FemsVersion                    <text>         (GF_UtilityRoomSolar) [\"Status\"]                {channel=\"fenecon:home-device:local:fems-version\"}\n+DateTime                   LastFeneconUpdate              <time>         (GF_UtilityRoomSolar) [\"Status\"]                {channel=\"fenecon:home-device:local:last-update\"}\n+\n+Number:Dimensionless       EssSoc                         <batterylevel> (GF_UtilityRoomSolar) [\"Measurement\"]           {unit=\"%\", channel=\"fenecon:home-device:local:ess-soc\"}\n+Number:Dimensionless       BattSoh                        <batterylevel> (GF_UtilityRoomSolar) [\"Measurement\"]           {unit=\"%\", channel=\"fenecon:home-device:local:batt-tower-soh\"}\n+Number:Power               ChargerPower                   <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:charger-power\"}\n+Number:Power               DischargerPower                <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:discharger-power\"}\n+Switch                     EmergencyPowerMode             <switch>       (GF_UtilityRoomSolar) [\"Switch\"]                {channel=\"fenecon:home-device:local:emergency-power-mode\"}\n+\n+Number:Power               ProductionActivePower          <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:production-active-power\"}\n+Number:Power               ProductionMaxActivePower       <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:production-max-active-power\"}\n+Number:Power               SellToGridPower                <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:export-to-grid-power\"}\n+Number:Energy              TotalSellEnergy                <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Energy\"] {channel=\"fenecon:home-device:local:exported-to-grid-energy\"}\n+\n+Number:Power               ConsumptionActivePower         <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-active-power\"}\n+Number:Power               ConsumptionMaxActivePower      <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-max-active-power\"}\n+Number:Power               ConsumptionActivePowerPhase1   <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-active-power-l1\"}\n+Number:Power               ConsumptionActivePowerPhase2   <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-active-power-l2\"}\n+Number:Power               ConsumptionActivePowerPhase3   <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:consumption-active-power-l3\"}\n+\n+Number:Power               BuyFromGridPower               <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]  {channel=\"fenecon:home-device:local:import-from-grid-power\"}\n+Number:Energy              TotalBuyEnergy                 <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Energy\"] {channel=\"fenecon:home-device:local:imported-from-grid-energy\"}\n+\n+Number:Temperature         InverterAirTemp                <temperature>  (GF_UtilityRoomSolar) [\"Measurement\", \"Temperature\"] {channel=\"fenecon:home-device:local:inverter-air-temperature\"}\n+Number:Temperature         InverterRadiatorTemp           <temperature>  (GF_UtilityRoomSolar) [\"Measurement\", \"Temperature\"] {channel=\"fenecon:home-device:local:inverter-radiator-temperature\"}\n+Number:Temperature         BmsBoxTemp                     <temperature>  (GF_UtilityRoomSolar) [\"Measurement\", \"Temperature\"] {channel=\"fenecon:home-device:local:bms-pack-temperature\"}\n+\n+Number:ElectricPotential   BattTowerVoltage               <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Voltage\"] {channel=\"fenecon:home-device:local:batt-tower-voltage\"}\n+Number:ElectricCurrent     BattTowerCurrent               <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Current\"] {channel=\"fenecon:home-device:local:batt-tower-current\"}\n+\n+// Charger corresponds to the solar power plant on the roof.\n+Number:Power               ChargerWestActualPower         <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]    {channel=\"fenecon:home-device:local:charger0-actual-power\"}\n+Number:ElectricPotential   ChargerWestVoltage             <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Voltage\"]  {channel=\"fenecon:home-device:local:charger0-voltage\"}\n+Number:ElectricCurrent     ChargerWestCurrent             <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Current\"]  {channel=\"fenecon:home-device:local:charger0-current\"}\n+Number:Power               ChargerEastActualPower         <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]    {channel=\"fenecon:home-device:local:charger1-actual-power\"}\n+Number:ElectricPotential   ChargerEastVoltage             <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Voltage\"]  {channel=\"fenecon:home-device:local:charger1-voltage\"}\n+Number:ElectricCurrent     ChargerEastCurrent             <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Current\"]  {channel=\"fenecon:home-device:local:charger1-current\"}\n+Number:Power               ChargerSouthActualPower        <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Power\"]    {channel=\"fenecon:home-device:local:charger2-actual-power\"}\n+Number:ElectricPotential   ChargerSouthVoltage            <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Voltage\"]  {channel=\"fenecon:home-device:local:charger2-voltage\"}\n+Number:ElectricCurrent     ChargerSouthCurrent            <energy>       (GF_UtilityRoomSolar) [\"Measurement\", \"Current\"]  {channel=\"fenecon:home-device:local:charger2-current\"}\n+\n ```\n \n ### demo.sitemap\n@@ -105,6 +140,21 @@ sitemap demo label=\"FENECON Example Sitemap\" {\n }\n ```\n \n+### rrd4j.persist\n+\n+```perl\n+Strategies {\n+    everyMinute : \"0 * * * * ?\"\n+    default = everyChange\n+}\n+\n+Items {\n+    ProductionActivePower: strategy = everyUpdate, everyMinute, restoreOnStartup\n+    ConsumptionActivePower: strategy = everyUpdate, everyMinute, restoreOnStartup\n+    BuyFromGridPower: strategy = everyUpdate, everyMinute, restoreOnStartup\n+}\n+```\n+\n ### demo.rules\n \n :::: tabs\n@@ -152,6 +202,25 @@ then\n     var result = current * purchasedPricePerKiloWattHour;\n     PurchasedEnergy.postUpdate(result)\n end\n+\n+// !!! This is only designed as a demonstration, the calculation should only be executed every 30 or 60 minutes if necessary. And for the calculation, be sure to consider the persistence example: rrd4j.persist!\n+rule \"Calculation daily power values\"\n+when\n+  Item LastFeneconUpdate changed\n+then    \n+    var dailyMax = (ProductionActivePower.maximumSince(now.with(LocalTime.of(0,0,0,0))).state as Number).floatValue()\n+    MaxProductionActivePowerOfTheDay.postUpdate(dailyMax)\n+\n+    var dailyProduction = (ProductionActivePower.sumSince(now.with(LocalTime.of(0,0,0,0))) as Number).floatValue() / 60 / 1000\n+    ProductionActivePowerOfTheDay.postUpdate(dailyProduction)\n+\n+    var dailyConsumption = (ConsumptionActivePower.sumSince(now.with(LocalTime.of(0,0,0,0))) as Number).floatValue() / 60 / 1000\n+    ConsumptionActivePowerOfTheDay.postUpdate(dailyConsumption)\n+\n+    var dailyBuyFromGrid = (BuyFromGridPower.sumSince(now.with(LocalTime.of(0,0,0,0))) as Number).floatValue() / 60 / 1000\n+    BuyFromGridPowerOfTheDay.postUpdate(dailyBuyFromGrid)\n+\n+end\n ```\n \n :::\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconBindingConstants.java b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconBindingConstants.java\nindex 8304112bb7b1b..e3ae8ac64fbad 100644\n--- a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconBindingConstants.java\n+++ b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconBindingConstants.java\n@@ -15,6 +15,7 @@\n import java.util.List;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.binding.fenecon.internal.api.Address;\n import org.openhab.core.thing.ThingTypeUID;\n \n /**\n@@ -32,6 +33,7 @@ public class FeneconBindingConstants {\n     public static final ThingTypeUID THING_TYPE_HOME_DEVICE = new ThingTypeUID(BINDING_ID, \"home-device\");\n \n     // List of all FENECON Addresses\n+    // Group: _sum/...\n     public static final String STATE_ADDRESS = \"_sum/State\";\n     public static final String ESS_SOC_ADDRESS = \"_sum/EssSoc\";\n     public static final String CONSUMPTION_ACTIVE_POWER_ADDRESS = \"_sum/ConsumptionActivePower\";\n@@ -46,13 +48,45 @@ public class FeneconBindingConstants {\n     public static final String GRID_MODE_ADDRESS = \"_sum/GridMode\";\n     public static final String GRID_SELL_ACTIVE_ENERGY_ADDRESS = \"_sum/GridSellActiveEnergy\";\n     public static final String GRID_BUY_ACTIVE_ENERGY_ADDRESS = \"_sum/GridBuyActiveEnergy\";\n+    // Group: _meta/...\n+    public static final String FEMS_VERSION_ADDRESS = \"_meta/Version\";\n+    // Group: batteryInverter0/...\n+    public static final String BATT_INVERTER_AIR_TEMP_ADDRESS = \"batteryInverter0/AirTemperature\";\n+    public static final String BATT_INVERTER_RADIATOR_TEMP_ADDRESS = \"batteryInverter0/RadiatorTemperature\";\n+    public static final String BATT_INVERTER_BMS_PACK_TEMP_ADDRESS = \"batteryInverter0/BmsPackTemperature\";\n+    // Group: battery0/...\n+    public static final String BATT_TOWER_PACK_VOLTAGE_ADDRESS = \"battery0/Tower0PackVoltage\";\n+    public static final String BATT_TOWER_CURRENT_ADDRESS = \"battery0/Current\";\n+    public static final String BATT_SOH_ADDRESS = \"battery0/Soh\";\n+    // Group: charger0/...\n+    public static final String CHARGER0_ACTUAL_POWER_ADDRESS = \"charger0/ActualPower\";\n+    public static final String CHARGER0_VOLTAGE_ADDRESS = \"charger0/Voltage\";\n+    public static final String CHARGER0_CURRENT_ADDRESS = \"charger0/Current\";\n+    // Group: charger1/...\n+    public static final String CHARGER1_ACTUAL_POWER_ADDRESS = \"charger1/ActualPower\";\n+    public static final String CHARGER1_VOLTAGE_ADDRESS = \"charger1/Voltage\";\n+    public static final String CHARGER1_CURRENT_ADDRESS = \"charger1/Current\";\n+    // Group: charger2/...\n+    public static final String CHARGER2_ACTUAL_POWER_ADDRESS = \"charger2/ActualPower\";\n+    public static final String CHARGER2_VOLTAGE_ADDRESS = \"charger2/Voltage\";\n+    public static final String CHARGER2_CURRENT_ADDRESS = \"charger2/Current\";\n+\n     // Group of all FENECON Addresses\n-    public static final List<String> ADDRESSES = List.of(STATE_ADDRESS, GRID_MODE_ADDRESS,\n-            CONSUMPTION_ACTIVE_POWER_ADDRESS, CONSUMPTION_ACTIVE_POWER_PHASE1_ADDRESS,\n-            CONSUMPTION_ACTIVE_POWER_PHASE2_ADDRESS, CONSUMPTION_ACTIVE_POWER_PHASE3_ADDRESS,\n-            CONSUMPTION_MAX_ACTIVE_POWER_ADDRESS, PRODUCTION_MAX_ACTIVE_POWER_ADDRESS, PRODUCTION_ACTIVE_POWER_ADDRESS,\n-            GRID_ACTIVE_POWER_ADDRESS, GRID_BUY_ACTIVE_ENERGY_ADDRESS, GRID_SELL_ACTIVE_ENERGY_ADDRESS, ESS_SOC_ADDRESS,\n-            ESS_DISCHARGE_POWER_ADDRESS);\n+    public static final List<Address> ADDRESSES = List.of(new Address(STATE_ADDRESS), new Address(GRID_MODE_ADDRESS),\n+            new Address(CONSUMPTION_ACTIVE_POWER_ADDRESS), new Address(CONSUMPTION_ACTIVE_POWER_PHASE1_ADDRESS),\n+            new Address(CONSUMPTION_ACTIVE_POWER_PHASE2_ADDRESS), new Address(CONSUMPTION_ACTIVE_POWER_PHASE3_ADDRESS),\n+            new Address(CONSUMPTION_MAX_ACTIVE_POWER_ADDRESS), new Address(PRODUCTION_MAX_ACTIVE_POWER_ADDRESS),\n+            new Address(PRODUCTION_ACTIVE_POWER_ADDRESS), new Address(GRID_ACTIVE_POWER_ADDRESS),\n+            new Address(GRID_BUY_ACTIVE_ENERGY_ADDRESS), new Address(GRID_SELL_ACTIVE_ENERGY_ADDRESS),\n+            new Address(ESS_SOC_ADDRESS), new Address(ESS_DISCHARGE_POWER_ADDRESS), new Address(FEMS_VERSION_ADDRESS),\n+            new Address(BATT_INVERTER_AIR_TEMP_ADDRESS), new Address(BATT_INVERTER_RADIATOR_TEMP_ADDRESS),\n+            new Address(BATT_INVERTER_BMS_PACK_TEMP_ADDRESS), new Address(BATT_TOWER_PACK_VOLTAGE_ADDRESS),\n+            new Address(BATT_TOWER_CURRENT_ADDRESS), new Address(BATT_SOH_ADDRESS),\n+            new Address(CHARGER0_ACTUAL_POWER_ADDRESS), new Address(CHARGER1_ACTUAL_POWER_ADDRESS),\n+            new Address(CHARGER2_ACTUAL_POWER_ADDRESS), new Address(CHARGER0_VOLTAGE_ADDRESS),\n+            new Address(CHARGER1_VOLTAGE_ADDRESS), new Address(CHARGER2_VOLTAGE_ADDRESS),\n+            new Address(CHARGER0_CURRENT_ADDRESS), new Address(CHARGER1_CURRENT_ADDRESS),\n+            new Address(CHARGER2_CURRENT_ADDRESS));\n \n     // List of all Channel IDs\n     public static final String STATE_CHANNEL = \"state\";\n@@ -72,4 +106,20 @@ public class FeneconBindingConstants {\n     public static final String EXPORTED_TO_GRID_ENERGY_CHANNEL = \"exported-to-grid-energy\";\n     public static final String IMPORTED_FROM_GRID_ENERGY_CHANNEL = \"imported-from-grid-energy\";\n     public static final String LAST_UPDATE_CHANNEL = \"last-update\";\n+    public static final String FEMS_VERSION_CHANNEL = \"fems-version\";\n+    public static final String BATT_INVERTER_AIR_TEMP_CHANNEL = \"inverter-air-temperature\";\n+    public static final String BATT_INVERTER_RADIATOR_TEMP_CHANNEL = \"inverter-radiator-temperature\";\n+    public static final String BATT_INVERTER_BMS_PACK_TEMP_CHANNEL = \"bms-pack-temperature\";\n+    public static final String BATT_TOWER_PACK_VOLTAGE_CHANNEL = \"batt-tower-voltage\";\n+    public static final String BATT_TOWER_CURRENT_CHANNEL = \"batt-tower-current\";\n+    public static final String BATT_SOH_CHANNEL = \"batt-tower-soh\";\n+    public static final String CHARGER0_ACTUAL_POWER_CHANNEL = \"charger0-actual-power\";\n+    public static final String CHARGER1_ACTUAL_POWER_CHANNEL = \"charger1-actual-power\";\n+    public static final String CHARGER2_ACTUAL_POWER_CHANNEL = \"charger2-actual-power\";\n+    public static final String CHARGER0_VOLTAGE_CHANNEL = \"charger0-voltage\";\n+    public static final String CHARGER1_VOLTAGE_CHANNEL = \"charger1-voltage\";\n+    public static final String CHARGER2_VOLTAGE_CHANNEL = \"charger2-voltage\";\n+    public static final String CHARGER0_CURRENT_CHANNEL = \"charger0-current\";\n+    public static final String CHARGER1_CURRENT_CHANNEL = \"charger1-current\";\n+    public static final String CHARGER2_CURRENT_CHANNEL = \"charger2-current\";\n }\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconHandler.java b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconHandler.java\nindex 0eb684d1bcb26..7e3542698f137 100644\n--- a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconHandler.java\n+++ b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/FeneconHandler.java\n@@ -12,13 +12,14 @@\n  */\n package org.openhab.binding.fenecon.internal;\n \n-import java.util.Optional;\n+import java.util.List;\n import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.TimeUnit;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.eclipse.jetty.client.HttpClient;\n+import org.openhab.binding.fenecon.internal.api.AddressComponentChannelUtil;\n import org.openhab.binding.fenecon.internal.api.BatteryPower;\n import org.openhab.binding.fenecon.internal.api.FeneconController;\n import org.openhab.binding.fenecon.internal.api.FeneconResponse;\n@@ -29,6 +30,7 @@\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.library.types.QuantityType;\n import org.openhab.core.library.types.StringType;\n+import org.openhab.core.library.unit.SIUnits;\n import org.openhab.core.library.unit.Units;\n import org.openhab.core.thing.ChannelUID;\n import org.openhab.core.thing.Thing;\n@@ -71,18 +73,21 @@ public void initialize() {\n     }\n \n     private void pollingCode() {\n-        for (String eachChannel : FeneconBindingConstants.ADDRESSES) {\n+        List<String> componentRequests = AddressComponentChannelUtil\n+                .createComponentRequests(FeneconBindingConstants.ADDRESSES);\n+\n+        for (String eachComponentRequest : componentRequests) {\n             try {\n                 @SuppressWarnings(\"null\")\n-                Optional<FeneconResponse> response = feneconController.requestChannel(eachChannel);\n+                List<FeneconResponse> responses = feneconController.requestChannel(eachComponentRequest);\n \n-                if (response.isPresent()) {\n-                    processDataPoint(response.get());\n+                for (FeneconResponse eachResponse : responses) {\n+                    processDataPoint(eachResponse);\n                 }\n \n                 updateStatus(ThingStatus.ONLINE);\n             } catch (FeneconException err) {\n-                logger.trace(\"FENECON - connection problem on FENECON channel {}\", eachChannel, err);\n+                logger.trace(\"FENECON - connection problem on FENECON channel {}\", eachComponentRequest, err);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, err.getMessage());\n                 return;\n             }\n@@ -167,6 +172,102 @@ private void processDataPoint(FeneconResponse response) throws FeneconException\n                 updateState(FeneconBindingConstants.IMPORTED_FROM_GRID_ENERGY_CHANNEL,\n                         new QuantityType<>(Integer.valueOf(response.value()), Units.WATT_HOUR));\n                 break;\n+            case FeneconBindingConstants.FEMS_VERSION_ADDRESS:\n+                // { \"address\": \"_meta/Version\",\"type\": \"STRING\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"\", \"value\":\n+                // \"2025.2.3\"}\n+                updateState(FeneconBindingConstants.FEMS_VERSION_CHANNEL, new StringType(response.value()));\n+                break;\n+            case FeneconBindingConstants.BATT_INVERTER_AIR_TEMP_ADDRESS:\n+                // {\"address\": \"batteryInverter0/AirTemperature\",\"type\": \"INTEGER\",\"accessMode\": \"RO\", \"text\": \"\",\n+                // \"unit\": \"C\", \"value\": 41 }\n+                updateState(FeneconBindingConstants.BATT_INVERTER_AIR_TEMP_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()), SIUnits.CELSIUS));\n+                break;\n+            case FeneconBindingConstants.BATT_INVERTER_RADIATOR_TEMP_ADDRESS:\n+                // {\"address\": \"batteryInverter0/RadiatorTemperature\",\"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\",\n+                // \"unit\": \"C\", \"value\": 37 }\n+                updateState(FeneconBindingConstants.BATT_INVERTER_RADIATOR_TEMP_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()), SIUnits.CELSIUS));\n+                break;\n+            case FeneconBindingConstants.BATT_INVERTER_BMS_PACK_TEMP_ADDRESS:\n+                // {\"address\": \"batteryInverter0/BmsPackTemperature\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\",\n+                // \"unit\": \"C\", \"value\": 26 }\n+                updateState(FeneconBindingConstants.BATT_INVERTER_BMS_PACK_TEMP_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()), SIUnits.CELSIUS));\n+                break;\n+            case FeneconBindingConstants.BATT_TOWER_PACK_VOLTAGE_ADDRESS:\n+                // {\"address\": \"battery0/Tower0PackVoltage\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\":\n+                // \"\", \"value\": 2749 }\n+                // Tower pack voltage in mV\n+                updateState(FeneconBindingConstants.BATT_TOWER_PACK_VOLTAGE_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()) / 1000.0, Units.VOLT));\n+                break;\n+            case FeneconBindingConstants.BATT_TOWER_CURRENT_ADDRESS:\n+                // {\"address\": \"battery0/Current\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"A\",\n+                // \"value\": 9 }\n+                updateState(FeneconBindingConstants.BATT_TOWER_CURRENT_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()), Units.AMPERE));\n+                break;\n+            case FeneconBindingConstants.BATT_SOH_ADDRESS:\n+                // { \"address\": \"battery0/Soh\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"%\", \"value\":\n+                // 100 }\n+                updateState(FeneconBindingConstants.BATT_SOH_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()), Units.PERCENT));\n+                break;\n+            case FeneconBindingConstants.CHARGER0_ACTUAL_POWER_ADDRESS:\n+                // { \"address\": \"charger0/ActualPower\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"W\",\n+                // \"value\": 312 }\n+                updateState(FeneconBindingConstants.CHARGER0_ACTUAL_POWER_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()), Units.WATT));\n+                break;\n+            case FeneconBindingConstants.CHARGER1_ACTUAL_POWER_ADDRESS:\n+                // { \"address\": \"charger1/ActualPower\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"W\",\n+                // \"value\": 33 }\n+                updateState(FeneconBindingConstants.CHARGER1_ACTUAL_POWER_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()), Units.WATT));\n+                break;\n+            case FeneconBindingConstants.CHARGER2_ACTUAL_POWER_ADDRESS:\n+                // { \"address\": \"charger2/ActualPower\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"W\",\n+                // \"value\": 412 }\n+                updateState(FeneconBindingConstants.CHARGER2_ACTUAL_POWER_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()), Units.WATT));\n+                break;\n+            case FeneconBindingConstants.CHARGER0_VOLTAGE_ADDRESS:\n+                // { \"address\": \"charger0/Voltage\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"mV\",\n+                // \"value\": 193000 }\n+                updateState(FeneconBindingConstants.CHARGER0_VOLTAGE_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()) / 1000.0, Units.VOLT));\n+                break;\n+            case FeneconBindingConstants.CHARGER1_VOLTAGE_ADDRESS:\n+                // { \"address\": \"charger1/Voltage\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"mV\",\n+                // \"value\": 193000 }\n+                updateState(FeneconBindingConstants.CHARGER1_VOLTAGE_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()) / 1000.0, Units.VOLT));\n+                break;\n+            case FeneconBindingConstants.CHARGER2_VOLTAGE_ADDRESS:\n+                // { \"address\": \"charger2/Voltage\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"mV\",\n+                // \"value\": 193000 }\n+                updateState(FeneconBindingConstants.CHARGER2_VOLTAGE_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()) / 1000.0, Units.VOLT));\n+                break;\n+            case FeneconBindingConstants.CHARGER0_CURRENT_ADDRESS:\n+                // {\"address\": \"charger0/Current\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"mA\",\n+                // \"value\": 1200 },\n+                updateState(FeneconBindingConstants.CHARGER0_CURRENT_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()) / 1000.0, Units.AMPERE));\n+                break;\n+            case FeneconBindingConstants.CHARGER1_CURRENT_ADDRESS:\n+                // {\"address\": \"charger1/Current\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"mA\",\n+                // \"value\": 1000 },\n+                updateState(FeneconBindingConstants.CHARGER1_CURRENT_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()) / 1000.0, Units.AMPERE));\n+                break;\n+            case FeneconBindingConstants.CHARGER2_CURRENT_ADDRESS:\n+                // {\"address\": \"charger2/Current\", \"type\": \"INTEGER\", \"accessMode\": \"RO\", \"text\": \"\", \"unit\": \"mA\",\n+                // \"value\": 1100 },\n+                updateState(FeneconBindingConstants.CHARGER2_CURRENT_CHANNEL,\n+                        new QuantityType<>(Integer.valueOf(response.value()) / 1000.0, Units.AMPERE));\n+                break;\n             default:\n                 logger.trace(\"FENECON - No channel ID to address {} found.\", response.address());\n                 break;\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/Address.java b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/Address.java\nnew file mode 100644\nindex 0000000000000..4838c8ef0b0f5\n--- /dev/null\n+++ b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/Address.java\n@@ -0,0 +1,86 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.fenecon.internal.api;\n+\n+import java.util.Objects;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+/**\n+ * The {@link Address} is a small helper class to split a REST-API Address in component and channel.\n+ *\n+ * @author Philipp Schneider - Initial contribution\n+ */\n+@NonNullByDefault\n+public final class Address {\n+\n+    private final String address;\n+    private final AddressComponent component;\n+    private final AddressChannel channel;\n+\n+    public Address(@NotNull String address) {\n+        this.address = address;\n+\n+        String[] parts = address.split(\"/\");\n+\n+        if (parts.length != 2) {\n+            throw new IllegalArgumentException(\"Invalid address format 'component/channel' for: \" + address);\n+        }\n+\n+        component = new AddressComponent(parts[0]);\n+        channel = new AddressChannel(parts[1]);\n+    }\n+\n+    public String getAddress() {\n+        return address;\n+    }\n+\n+    public AddressComponent getComponent() {\n+        return component;\n+    }\n+\n+    public AddressChannel getChannel() {\n+        return channel;\n+    }\n+\n+    @Override\n+    public boolean equals(@Nullable Object other) {\n+        if (this == other) {\n+            return true;\n+        }\n+        if (other == null) {\n+            return false;\n+        }\n+        if (!(other instanceof Address)) {\n+            return false;\n+        }\n+        Address address = (Address) other;\n+        if (address.address.equals(this.address)) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(address);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return address;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressChannel.java b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressChannel.java\nnew file mode 100644\nindex 0000000000000..7f42996cc9f69\n--- /dev/null\n+++ b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressChannel.java\n@@ -0,0 +1,32 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.fenecon.internal.api;\n+\n+import java.util.Comparator;\n+import java.util.Objects;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link AddressChannel} is a container class to identify a channel of a {@link Address}.\n+ *\n+ * @author Philipp Schneider - Initial contribution\n+ */\n+@NonNullByDefault\n+public record AddressChannel(String channel) implements Comparable<AddressChannel> {\n+    @Override\n+    public int compareTo(AddressChannel that) {\n+        return Objects.compare(this, that,\n+                Comparator.comparing(AddressChannel::channel).thenComparing(AddressChannel::channel));\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressComponent.java b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressComponent.java\nnew file mode 100644\nindex 0000000000000..7c5f74205ba79\n--- /dev/null\n+++ b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressComponent.java\n@@ -0,0 +1,32 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.fenecon.internal.api;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link AddressComponent} is a container class to identify a component of a {@link Address}.\n+ *\n+ * @author Philipp Schneider - Initial contribution\n+ */\n+@NonNullByDefault\n+public record AddressComponent(String component) {\n+    public AddressComponent(String component) {\n+        this.component = convertComponentWithRegEx(component);\n+    }\n+\n+    // Bundle same components with regex if possible, to reduce the number of requests\n+    private static String convertComponentWithRegEx(String component) {\n+        return component.replaceFirst(\"\\\\d$\", \".+\");\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressComponentChannelUtil.java b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressComponentChannelUtil.java\nnew file mode 100644\nindex 0000000000000..db0bbf180bac8\n--- /dev/null\n+++ b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/AddressComponentChannelUtil.java\n@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.fenecon.internal.api;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link AddressComponentChannelUtil} is a small helper class for e.g. to split a list of {@link Address} in\n+ * {@link AddressComponent} and a list of {@link AddressChannel} for a group REST-API request.\n+ *\n+ * @author Philipp Schneider - Initial contribution\n+ */\n+@NonNullByDefault\n+public class AddressComponentChannelUtil {\n+\n+    public static List<String> createComponentRequests(List<Address> addresses) {\n+        return split(addresses).entrySet().stream()\n+                .map(entry -> createComponentRequest(entry.getKey(), entry.getValue())).toList();\n+    }\n+\n+    protected static Map<AddressComponent, Set<AddressChannel>> split(List<Address> addresses) {\n+        return addresses.stream().collect(Collectors.toMap(Address::getComponent,\n+                value -> new TreeSet<AddressChannel>(List.of(value.getChannel())), (existing, newest) -> {\n+                    existing.addAll(newest);\n+                    return existing;\n+                }));\n+    }\n+\n+    protected static String createComponentRequest(AddressComponent component, Set<AddressChannel> channels) {\n+        // Grouping REST-API requests - e.g. http://...:8084/rest/channel/_sum/(State|EssSoc)\n+\n+        // For valid URIs the pipe delimiter must be encoded as %7C\n+        return component.component() + \"/(\"\n+                + String.join(\"%7C\", channels.stream().map(AddressChannel::channel).toList()) + \")\";\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/FeneconController.java b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/FeneconController.java\nindex 9706ac1ced6fb..e249119c402ba 100644\n--- a/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/FeneconController.java\n+++ b/bundles/org.openhab.binding.fenecon/src/main/java/org/openhab/binding/fenecon/internal/api/FeneconController.java\n@@ -14,6 +14,8 @@\n \n import java.net.URI;\n import java.net.URISyntaxException;\n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.Optional;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.TimeUnit;\n@@ -33,6 +35,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n import com.google.gson.JsonParser;\n import com.google.gson.JsonSyntaxException;\n@@ -68,16 +72,17 @@ private String getBaseUrl(FeneconConfiguration config) {\n     }\n \n     /**\n-     * Queries the data for a specified channel.\n+     * Queries the data for a specified channel group.\n      *\n-     * @param channel Channel to be queried, e.g. _sum/State .\n+     * @param channel Channel group to be queried, e.g. _sum/(State|EssSoc) .\n      * @return {@link FeneconResponse} can be optional if values are not available.\n      * @throws FeneconException is thrown if there are problems with the connection or processing of data to the FENECON\n      *             system.\n      */\n-    public Optional<FeneconResponse> requestChannel(String channel) throws FeneconException {\n+    public List<FeneconResponse> requestChannel(String channel) throws FeneconException {\n         try {\n             URI uri = new URI(getBaseUrl(config) + \"rest/channel/\" + channel);\n+            logger.trace(\"FENECON - uri: {}\", uri);\n \n             Request request = httpClient.newRequest(uri).timeout(10, TimeUnit.SECONDS).method(HttpMethod.GET);\n             logger.trace(\"FENECON - request: {}\", request);\n@@ -88,37 +93,68 @@ public Optional<FeneconResponse> requestChannel(String channel) throws FeneconEx\n \n             int statusCode = response.getStatus();\n             if (statusCode > 300) {\n-                // Authentication error\n-                if (statusCode == 401) {\n+                if (statusCode == 401) { // Authentication error\n                     throw new FeneconAuthenticationException(\n                             \"Authentication on the FENECON system was not possible. Check password.\");\n+                } else if (statusCode == 404) { // Channel-URL not supported\n+                    logger.debug(\"Channel request '{}' not possible, is not supported by the FENECON system.\", channel);\n+                    return List.of();\n                 } else {\n                     throw new FeneconCommunicationException(\"Unexpected http status code: \" + statusCode);\n                 }\n             } else {\n-                return createResponseFromJson(JsonParser.parseString(response.getContentAsString()).getAsJsonObject());\n+                return createResponseFromJson(JsonParser.parseString(response.getContentAsString()));\n             }\n         } catch (TimeoutException | ExecutionException | UnsupportedOperationException | InterruptedException err) {\n-            throw new FeneconCommunicationException(\"Communication error with FENECON system on channel: \" + channel,\n+            throw new FeneconCommunicationException(\n+                    \"Communication error: \" + err.getMessage() + \" with FENECON system on channel: \" + channel, err);\n+        } catch (URISyntaxException | IllegalStateException | JsonSyntaxException err) {\n+            throw new FeneconCommunicationException(\"Syntax error: \" + err.getMessage() + \" on channel: \" + channel,\n                     err);\n-        } catch (URISyntaxException | JsonSyntaxException err) {\n-            throw new FeneconCommunicationException(\"Syntax error on channel: \" + channel, err);\n         }\n     }\n \n-    private Optional<FeneconResponse> createResponseFromJson(JsonObject response) {\n+    private List<FeneconResponse> createResponseFromJson(JsonElement jsonElement) {\n+        if (jsonElement.isJsonArray()) {\n+            return createResponseFromJsonArray(jsonElement.getAsJsonArray());\n+        } else if (jsonElement.isJsonObject()) {\n+            return createResponseFromJsonObject(jsonElement.getAsJsonObject());\n+        } else {\n+            throw new IllegalStateException(\"Unexpected response format: \" + jsonElement);\n+        }\n+    }\n+\n+    private List<FeneconResponse> createResponseFromJsonArray(JsonArray jsonArray) {\n+        // Example response: [{\"address\":\"_sum/EssSoc\",\"type\":\"INTEGER\",\"accessMode\":\"RO\",\"text\":\"Range\n+        // 0..100\",\"unit\":\"%\",\"value\":99}]\n+        List<FeneconResponse> result = new ArrayList<>();\n+        for (JsonElement each : jsonArray) {\n+            if (each.isJsonObject()) {\n+                result.addAll(createResponseFromJsonObject(each.getAsJsonObject()));\n+            }\n+        }\n+        return result;\n+    }\n+\n+    private List<FeneconResponse> createResponseFromJsonObject(JsonObject jsonObject) {\n         // Example response: {\"address\":\"_sum/EssSoc\",\"type\":\"INTEGER\",\"accessMode\":\"RO\",\"text\":\"Range\n         // 0..100\",\"unit\":\"%\",\"value\":99}\n+        List<FeneconResponse> result = new ArrayList<>();\n+        convertJsonObjectToResponse(jsonObject).ifPresent(result::add);\n+        return result;\n+    }\n \n-        if (response.get(\"value\").isJsonNull()) {\n-            // Example problem response: {\"address\":\"_sum/EssSoc\",\"type\":\"INTEGER\",\"accessMode\":\"RO\",\"text\":\"Range\n+    private Optional<FeneconResponse> convertJsonObjectToResponse(JsonObject jsonObject) {\n+        if (jsonObject.get(\"value\").isJsonNull()) {\n+            // Example problem response:\n+            // {\"address\":\"_sum/EssSoc\",\"type\":\"INTEGER\",\"accessMode\":\"RO\",\"text\":\"Range\n             // 0..100\",\"unit\":\"%\",\"value\":null}\n             return Optional.empty();\n         }\n \n-        String address = response.get(\"address\").getAsString();\n-        String text = response.get(\"text\").getAsString();\n-        String value = response.get(\"value\").getAsString();\n+        String address = jsonObject.get(\"address\").getAsString();\n+        String text = jsonObject.get(\"text\").getAsString();\n+        String value = jsonObject.get(\"value\").getAsString();\n \n         return Optional.of(new FeneconResponse(address, text, value));\n     }\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/i18n/fenecon.properties b/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/i18n/fenecon.properties\nindex ea8a61f272b47..67d01d4053f97 100644\n--- a/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/i18n/fenecon.properties\n+++ b/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/i18n/fenecon.properties\n@@ -21,34 +21,54 @@ thing-type.config.fenecon.home-device.refreshInterval.description = Interval the\n \n # channel types\n \n+channel-type.fenecon.batt-tower-current.label = FEMS Battery Current\n+channel-type.fenecon.batt-tower-current.description = Battery current of the FENECON energy management system (FEMS).\n+channel-type.fenecon.batt-tower-soh.label = Battery Health State\n+channel-type.fenecon.batt-tower-soh.description = Battery state of health.\n+channel-type.fenecon.batt-tower-voltage.label = FEMS Battery Voltage\n+channel-type.fenecon.batt-tower-voltage.description = Battery voltage of the FENECON energy management system (FEMS).\n+channel-type.fenecon.bms-pack-temperature.label = BMS Pack Temperature\n+channel-type.fenecon.bms-pack-temperature.description = Temperature in the battery management system (BMS) box.\n+channel-type.fenecon.charger-actual-power.label = Charger Actual Power\n+channel-type.fenecon.charger-actual-power.description = Charger actual power on the corresponding charger.\n+channel-type.fenecon.charger-current.label = Charger Current\n+channel-type.fenecon.charger-current.description = Charger current on the corresponding charger.\n channel-type.fenecon.charger-power.label = Charger Power\n-channel-type.fenecon.charger-power.description = Current charger power of energy storage system in watt.\n+channel-type.fenecon.charger-power.description = Current charger power of energy storage system.\n+channel-type.fenecon.charger-voltage.label = Charger Voltage\n+channel-type.fenecon.charger-voltage.description = Charger voltage on the corresponding charger.\n channel-type.fenecon.consumption-active-power-phase.label = Consumer Power Phase\n-channel-type.fenecon.consumption-active-power-phase.description = Current active power consumer load in watt on the corresponding phase.\n+channel-type.fenecon.consumption-active-power-phase.description = Current active power consumer load on the corresponding phase.\n channel-type.fenecon.consumption-active-power.label = Consumer Power\n-channel-type.fenecon.consumption-active-power.description = Current active power consumer load in watt.\n+channel-type.fenecon.consumption-active-power.description = Current active power consumer load.\n channel-type.fenecon.consumption-max-active-power.label = Consumer Max Power\n-channel-type.fenecon.consumption-max-active-power.description = Maximum active consumption power in watt that was measured.\n+channel-type.fenecon.consumption-max-active-power.description = Maximum active consumption power that was measured.\n channel-type.fenecon.discharger-power.label = Discharger Power\n-channel-type.fenecon.discharger-power.description = Current discharger power of energy storage system in watt.\n+channel-type.fenecon.discharger-power.description = Current discharger power of energy storage system.\n channel-type.fenecon.emergency-power-mode.label = Emergency Power Mode\n channel-type.fenecon.emergency-power-mode.description = Indicates if there is no power from the grid and the emergency power mode is on.\n channel-type.fenecon.ess-soc.label = Battery State\n-channel-type.fenecon.ess-soc.description = Battery state of charge in percent\n+channel-type.fenecon.ess-soc.description = Battery state of charge.\n channel-type.fenecon.export-to-grid-power.label = Export Grid Power\n-channel-type.fenecon.export-to-grid-power.description = Current export power to grid in watt.\n+channel-type.fenecon.export-to-grid-power.description = Current export power to grid.\n channel-type.fenecon.exported-to-grid-energy.label = Exported Grid Energy\n-channel-type.fenecon.exported-to-grid-energy.description = Total energy exported to the grid in watt per hour.\n+channel-type.fenecon.exported-to-grid-energy.description = Total energy exported to the grid.\n+channel-type.fenecon.fems-version.label = FEMS Version\n+channel-type.fenecon.fems-version.description = FENECON energy management system (FEMS) version.\n channel-type.fenecon.import-from-grid-power.label = Import Grid Power\n-channel-type.fenecon.import-from-grid-power.description = Current import power from grid in watt.\n+channel-type.fenecon.import-from-grid-power.description = Current import power from grid.\n channel-type.fenecon.imported-from-grid-energy.label = Imported Grid Energy\n-channel-type.fenecon.imported-from-grid-energy.description = Total energy imported from the grid in watt per hour.\n+channel-type.fenecon.imported-from-grid-energy.description = Total energy imported from the grid.\n+channel-type.fenecon.inverter-air-temperature.label = Inverter Air Temperature\n+channel-type.fenecon.inverter-air-temperature.description = Air temperature at the inverter.\n+channel-type.fenecon.inverter-radiator-temperature.label = Inverter Radiator Temperature\n+channel-type.fenecon.inverter-radiator-temperature.description = Radiator temperature at the inverter.\n channel-type.fenecon.last-update.label = Last Update\n-channel-type.fenecon.last-update.description = Last successful update via REST-API from the FENECON system\n+channel-type.fenecon.last-update.description = Last successful update via REST-API from the FENECON system.\n channel-type.fenecon.production-active-power.label = Producer Power\n-channel-type.fenecon.production-active-power.description = Current active power producer load in watt.\n+channel-type.fenecon.production-active-power.description = Current active power producer load.\n channel-type.fenecon.production-max-active-power.label = Producer Max Power\n-channel-type.fenecon.production-max-active-power.description = Maximum active production power in watt that was measured.\n+channel-type.fenecon.production-max-active-power.description = Maximum active production power that was measured.\n channel-type.fenecon.state.label = System State\n channel-type.fenecon.state.description = FENECON system state\n channel-type.fenecon.state.state.option.OK = Ok\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/thing/thing-types.xml b/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/thing/thing-types.xml\nindex 1523e48d2ba2a..7103b24fde4f8 100644\n--- a/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/thing/thing-types.xml\n+++ b/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/thing/thing-types.xml\n@@ -14,8 +14,10 @@\n \n \t\t<channels>\n \t\t\t<channel id=\"state\" typeId=\"state\"/>\n+\t\t\t<channel id=\"fems-version\" typeId=\"fems-version\"/>\n \t\t\t<channel id=\"last-update\" typeId=\"last-update\"/>\n \t\t\t<channel id=\"ess-soc\" typeId=\"ess-soc\"/>\n+\t\t\t<channel id=\"batt-tower-soh\" typeId=\"batt-tower-soh\"/>\n \t\t\t<channel id=\"charger-power\" typeId=\"charger-power\"/>\n \t\t\t<channel id=\"discharger-power\" typeId=\"discharger-power\"/>\n \t\t\t<channel id=\"emergency-power-mode\" typeId=\"emergency-power-mode\"/>\n@@ -30,8 +32,26 @@\n \t\t\t<channel id=\"exported-to-grid-energy\" typeId=\"exported-to-grid-energy\"/>\n \t\t\t<channel id=\"import-from-grid-power\" typeId=\"import-from-grid-power\"/>\n \t\t\t<channel id=\"imported-from-grid-energy\" typeId=\"imported-from-grid-energy\"/>\n+\t\t\t<channel id=\"inverter-air-temperature\" typeId=\"inverter-air-temperature\"/>\n+\t\t\t<channel id=\"inverter-radiator-temperature\" typeId=\"inverter-radiator-temperature\"/>\n+\t\t\t<channel id=\"bms-pack-temperature\" typeId=\"bms-pack-temperature\"/>\n+\t\t\t<channel id=\"batt-tower-voltage\" typeId=\"batt-tower-voltage\"/>\n+\t\t\t<channel id=\"batt-tower-current\" typeId=\"batt-tower-current\"/>\n+\t\t\t<channel id=\"charger0-actual-power\" typeId=\"charger-actual-power\"/>\n+\t\t\t<channel id=\"charger0-voltage\" typeId=\"charger-voltage\"/>\n+\t\t\t<channel id=\"charger0-current\" typeId=\"charger-current\"/>\n+\t\t\t<channel id=\"charger1-actual-power\" typeId=\"charger-actual-power\"/>\n+\t\t\t<channel id=\"charger1-voltage\" typeId=\"charger-voltage\"/>\n+\t\t\t<channel id=\"charger1-current\" typeId=\"charger-current\"/>\n+\t\t\t<channel id=\"charger2-actual-power\" typeId=\"charger-actual-power\"/>\n+\t\t\t<channel id=\"charger2-voltage\" typeId=\"charger-voltage\"/>\n+\t\t\t<channel id=\"charger2-current\" typeId=\"charger-current\"/>\n \t\t</channels>\n \n+\t\t<properties>\n+\t\t\t<property name=\"thingTypeVersion\">1</property>\n+\t\t</properties>\n+\n \t\t<config-description>\n \t\t\t<parameter name=\"hostname\" type=\"text\" required=\"true\">\n \t\t\t\t<context>network-address</context>\n@@ -76,31 +96,45 @@\n \t\t\t</options>\n \t\t</state>\n \t</channel-type>\n+\t<channel-type id=\"fems-version\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>FEMS Version</label>\n+\t\t<description>FENECON energy management system (FEMS) version.</description>\n+\t\t<category>Text</category>\n+\t\t<state readOnly=\"true\" pattern=\"%s\"></state>\n+\t</channel-type>\n \t<channel-type id=\"last-update\">\n \t\t<item-type>DateTime</item-type>\n \t\t<label>Last Update</label>\n-\t\t<description>Last successful update via REST-API from the FENECON system</description>\n+\t\t<description>Last successful update via REST-API from the FENECON system.</description>\n \t\t<category>Time</category>\n \t\t<state readOnly=\"true\"></state>\n \t</channel-type>\n \t<channel-type id=\"ess-soc\">\n \t\t<item-type unitHint=\"%\">Number:Dimensionless</item-type>\n \t\t<label>Battery State</label>\n-\t\t<description>Battery state of charge in percent</description>\n+\t\t<description>Battery state of charge.</description>\n+\t\t<category>BatteryLevel</category>\n+\t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"batt-tower-soh\">\n+\t\t<item-type unitHint=\"%\">Number:Dimensionless</item-type>\n+\t\t<label>Battery Health State</label>\n+\t\t<description>Battery state of health.</description>\n \t\t<category>BatteryLevel</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"charger-power\">\n \t\t<item-type>Number:Power</item-type>\n \t\t<label>Charger Power</label>\n-\t\t<description>Current charger power of energy storage system in watt.</description>\n+\t\t<description>Current charger power of energy storage system.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"discharger-power\">\n \t\t<item-type>Number:Power</item-type>\n \t\t<label>Discharger Power</label>\n-\t\t<description>Current discharger power of energy storage system in watt.</description>\n+\t\t<description>Current discharger power of energy storage system.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n@@ -114,65 +148,121 @@\n \t<channel-type id=\"production-active-power\">\n \t\t<item-type>Number:Power</item-type>\n \t\t<label>Producer Power</label>\n-\t\t<description>Current active power producer load in watt.</description>\n+\t\t<description>Current active power producer load.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"export-to-grid-power\">\n \t\t<item-type>Number:Power</item-type>\n \t\t<label>Export Grid Power</label>\n-\t\t<description>Current export power to grid in watt.</description>\n+\t\t<description>Current export power to grid.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"exported-to-grid-energy\">\n \t\t<item-type>Number:Energy</item-type>\n \t\t<label>Exported Grid Energy</label>\n-\t\t<description>Total energy exported to the grid in watt per hour.</description>\n+\t\t<description>Total energy exported to the grid.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"consumption-active-power\">\n \t\t<item-type>Number:Power</item-type>\n \t\t<label>Consumer Power</label>\n-\t\t<description>Current active power consumer load in watt.</description>\n+\t\t<description>Current active power consumer load.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"consumption-active-power-phase\">\n \t\t<item-type>Number:Power</item-type>\n \t\t<label>Consumer Power Phase</label>\n-\t\t<description>Current active power consumer load in watt on the corresponding phase.</description>\n+\t\t<description>Current active power consumer load on the corresponding phase.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"consumption-max-active-power\">\n \t\t<item-type>Number:Power</item-type>\n \t\t<label>Consumer Max Power</label>\n-\t\t<description>Maximum active consumption power in watt that was measured.</description>\n+\t\t<description>Maximum active consumption power that was measured.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"production-max-active-power\">\n \t\t<item-type>Number:Power</item-type>\n \t\t<label>Producer Max Power</label>\n-\t\t<description>Maximum active production power in watt that was measured.</description>\n+\t\t<description>Maximum active production power that was measured.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"import-from-grid-power\">\n \t\t<item-type>Number:Power</item-type>\n \t\t<label>Import Grid Power</label>\n-\t\t<description>Current import power from grid in watt.</description>\n+\t\t<description>Current import power from grid.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n \t<channel-type id=\"imported-from-grid-energy\">\n \t\t<item-type>Number:Energy</item-type>\n \t\t<label>Imported Grid Energy</label>\n-\t\t<description>Total energy imported from the grid in watt per hour.</description>\n+\t\t<description>Total energy imported from the grid.</description>\n \t\t<category>Energy</category>\n \t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n \t</channel-type>\n+\t<channel-type id=\"inverter-air-temperature\">\n+\t\t<item-type>Number:Temperature</item-type>\n+\t\t<label>Inverter Air Temperature</label>\n+\t\t<description>Air temperature at the inverter.</description>\n+\t\t<category>Temperature</category>\n+\t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"inverter-radiator-temperature\">\n+\t\t<item-type>Number:Temperature</item-type>\n+\t\t<label>Inverter Radiator Temperature</label>\n+\t\t<description>Radiator temperature at the inverter.</description>\n+\t\t<category>Temperature</category>\n+\t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"bms-pack-temperature\">\n+\t\t<item-type>Number:Temperature</item-type>\n+\t\t<label>BMS Pack Temperature</label>\n+\t\t<description>Temperature in the battery management system (BMS) box.</description>\n+\t\t<category>Temperature</category>\n+\t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"batt-tower-voltage\">\n+\t\t<item-type>Number:ElectricPotential</item-type>\n+\t\t<label>FEMS Battery Voltage</label>\n+\t\t<description>Battery voltage of the FENECON energy management system (FEMS).</description>\n+\t\t<category>Voltage</category>\n+\t\t<state readOnly=\"true\" pattern=\"%.2f %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"batt-tower-current\">\n+\t\t<item-type>Number:ElectricCurrent</item-type>\n+\t\t<label>FEMS Battery Current</label>\n+\t\t<description>Battery current of the FENECON energy management system (FEMS).</description>\n+\t\t<category>Current</category>\n+\t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"charger-actual-power\">\n+\t\t<item-type>Number:Power</item-type>\n+\t\t<label>Charger Actual Power</label>\n+\t\t<description>Charger actual power on the corresponding charger.</description>\n+\t\t<category>Energy</category>\n+\t\t<state readOnly=\"true\" pattern=\"%.0f %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"charger-voltage\">\n+\t\t<item-type>Number:ElectricPotential</item-type>\n+\t\t<label>Charger Voltage</label>\n+\t\t<description>Charger voltage on the corresponding charger.</description>\n+\t\t<category>Voltage</category>\n+\t\t<state readOnly=\"true\" pattern=\"%.2f %unit%\"/>\n+\t</channel-type>\n+\t<channel-type id=\"charger-current\">\n+\t\t<item-type>Number:ElectricCurrent</item-type>\n+\t\t<label>Charger Current</label>\n+\t\t<description>Charger current on the corresponding charger.</description>\n+\t\t<category>Current</category>\n+\t\t<state readOnly=\"true\" pattern=\"%.2f %unit%\"/>\n+\t</channel-type>\n \n </thing:thing-descriptions>\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/update/update.xml b/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/update/update.xml\nnew file mode 100644\nindex 0000000000000..a9700f47e42ca\n--- /dev/null\n+++ b/bundles/org.openhab.binding.fenecon/src/main/resources/OH-INF/update/update.xml\n@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>\n+<update:update-descriptions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:update=\"https://openhab.org/schemas/update-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/update-description/v1.0.0 https://openhab.org/schemas/update-description-1.0.0.xsd\">\n+\n+\t<thing-type uid=\"fenecon:home-device\">\n+\t\t<instruction-set targetVersion=\"1\">\n+\t\t\t<add-channel id=\"fems-version\">\n+\t\t\t\t<type>fenecon:fems-version</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"batt-tower-soh\">\n+\t\t\t\t<type>fenecon:batt-tower-soh</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"inverter-air-temperature\">\n+\t\t\t\t<type>fenecon:inverter-air-temperature</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"inverter-radiator-temperature\">\n+\t\t\t\t<type>fenecon:inverter-radiator-temperature</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"bms-pack-temperature\">\n+\t\t\t\t<type>fenecon:bms-pack-temperature</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"batt-tower-voltage\">\n+\t\t\t\t<type>fenecon:batt-tower-voltage</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"batt-tower-current\">\n+\t\t\t\t<type>fenecon:batt-tower-current</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"charger0-actual-power\">\n+\t\t\t\t<type>fenecon:charger-actual-power</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"charger0-voltage\">\n+\t\t\t\t<type>fenecon:charger-voltage</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"charger0-current\">\n+\t\t\t\t<type>fenecon:charger-current</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"charger1-actual-power\">\n+\t\t\t\t<type>fenecon:charger-actual-power</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"charger1-voltage\">\n+\t\t\t\t<type>fenecon:charger-voltage</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"charger1-current\">\n+\t\t\t\t<type>fenecon:charger-current</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"charger2-actual-power\">\n+\t\t\t\t<type>fenecon:charger-actual-power</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"charger2-voltage\">\n+\t\t\t\t<type>fenecon:charger-voltage</type>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"charger2-current\">\n+\t\t\t\t<type>fenecon:charger-current</type>\n+\t\t\t</add-channel>\n+\t\t</instruction-set>\n+\t</thing-type>\n+\n+</update:update-descriptions>\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/FeneconBindingConstantsTest.java b/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/FeneconBindingConstantsTest.java\nindex f945ab950515f..82d3090797bb6 100644\n--- a/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/FeneconBindingConstantsTest.java\n+++ b/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/FeneconBindingConstantsTest.java\n@@ -20,6 +20,7 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.Test;\n+import org.openhab.binding.fenecon.internal.api.Address;\n \n /**\n  * Test for {@link FeneconBindingConstants}.\n@@ -31,13 +32,13 @@ public class FeneconBindingConstantsTest {\n \n     @Test\n     void checkAllAddressesAreListed() throws IllegalArgumentException, IllegalAccessException {\n-        List<String> findAddresses = new ArrayList<>();\n+        List<Address> findAddresses = new ArrayList<>();\n \n         for (Field eachDeclaredField : FeneconBindingConstants.class.getDeclaredFields()) {\n             if (eachDeclaredField.getName().endsWith(\"_ADDRESS\")) {\n                 String address = (String) eachDeclaredField.get(FeneconBindingConstants.class);\n                 if (address != null) {\n-                    findAddresses.add(address);\n+                    findAddresses.add(new Address(address));\n                 }\n             }\n         }\n@@ -45,4 +46,33 @@ void checkAllAddressesAreListed() throws IllegalArgumentException, IllegalAccess\n         assertEquals(FeneconBindingConstants.ADDRESSES.size(), findAddresses.size());\n         assertTrue(findAddresses.containsAll(FeneconBindingConstants.ADDRESSES));\n     }\n+\n+    @Test\n+    void checkAllAddressesAreUnique() throws IllegalArgumentException, IllegalAccessException {\n+        List<Address> findAddresses = new ArrayList<>();\n+\n+        for (Field eachDeclaredField : FeneconBindingConstants.class.getDeclaredFields()) {\n+            if (eachDeclaredField.getName().endsWith(\"_ADDRESS\")) {\n+                String address = (String) eachDeclaredField.get(FeneconBindingConstants.class);\n+                if (address != null) {\n+                    Address findAddress = new Address(address);\n+                    assertFalse(findAddresses.contains(findAddress),\n+                            \"Duplicate address found: \" + findAddress + \" for field \" + eachDeclaredField.getName());\n+                    findAddresses.add(findAddress);\n+                }\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void checkAllAddressesConsistOfComponentAndChannel() throws IllegalArgumentException, IllegalAccessException {\n+        for (Field eachDeclaredField : FeneconBindingConstants.class.getDeclaredFields()) {\n+            if (eachDeclaredField.getName().endsWith(\"_ADDRESS\")) {\n+                String address = (String) eachDeclaredField.get(FeneconBindingConstants.class);\n+                if (address != null) {\n+                    assertDoesNotThrow(() -> new Address(address));\n+                }\n+            }\n+        }\n+    }\n }\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentChannelUtilTest.java b/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentChannelUtilTest.java\nnew file mode 100644\nindex 0000000000000..950d417767fbd\n--- /dev/null\n+++ b/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentChannelUtilTest.java\n@@ -0,0 +1,109 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.fenecon.internal.api;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.binding.fenecon.internal.FeneconBindingConstants;\n+\n+/**\n+ * Test for {@link AddressComponentChannelUtil}.\n+ *\n+ * @author Philipp Schneider - Initial contribution\n+ */\n+@NonNullByDefault\n+public class AddressComponentChannelUtilTest {\n+\n+    @Test\n+    void testCreateComponentRequests() {\n+        // ARRANGE\n+        List<Address> expectedSumList = List.of(new Address(FeneconBindingConstants.STATE_ADDRESS),\n+                new Address(FeneconBindingConstants.GRID_MODE_ADDRESS), new Address(\"system/Version\"),\n+                new Address(\"battery/SoH\"), new Address(\"battery/Current\"));\n+\n+        // ACT\n+        List<String> result = AddressComponentChannelUtil.createComponentRequests(expectedSumList);\n+\n+        // ASSERT\n+        assertTrue(result.size() == 3);\n+        assertTrue(result.contains(\"_sum/(GridMode%7CState)\"));\n+        assertTrue(result.contains(\"system/(Version)\"));\n+        assertTrue(result.contains(\"battery/(Current%7CSoH)\"));\n+    }\n+\n+    @Test\n+    void testCreateComponentRequestsWithRegEx() {\n+        // ARRANGE\n+        List<Address> expectedSumList = List.of(new Address(\"system/Version\"), new Address(\"battery0/SoH\"),\n+                new Address(\"battery0/Current\"), new Address(\"battery1/SoH\"));\n+\n+        // ACT\n+        List<String> result = AddressComponentChannelUtil.createComponentRequests(expectedSumList);\n+\n+        // ASSERT\n+        assertTrue(result.size() == 2);\n+        assertTrue(result.contains(\"system/(Version)\"));\n+        assertTrue(result.contains(\"battery.+/(Current%7CSoH)\"));\n+    }\n+\n+    @Test\n+    void testSplit() {\n+        // ARRANGE\n+        List<Address> expectedSumList = List.of(new Address(FeneconBindingConstants.STATE_ADDRESS),\n+                new Address(FeneconBindingConstants.GRID_MODE_ADDRESS),\n+                new Address(FeneconBindingConstants.CONSUMPTION_ACTIVE_POWER_ADDRESS));\n+\n+        List<Address> expectedFantasyList = List.of(new Address(\"fantasy/Potter\"));\n+        List<Address> expectedScyFiList = List.of(new Address(\"scify/Dune\"), new Address(\"scify/Expanse\"));\n+\n+        List<Address> addresses = Stream.of(expectedSumList, expectedFantasyList, expectedScyFiList)\n+                .flatMap(Collection::stream).toList();\n+\n+        // ACT\n+        Map<AddressComponent, Set<AddressChannel>> result = AddressComponentChannelUtil.split(addresses);\n+\n+        // ASSERT\n+        assertTrue(result.getOrDefault(new Address(FeneconBindingConstants.STATE_ADDRESS).getComponent(), Set.of())\n+                .containsAll(expectedSumList.stream().map(Address::getChannel).toList()));\n+\n+        assertTrue(result.getOrDefault(new AddressComponent(\"fantasy\"), Set.of())\n+                .containsAll(expectedFantasyList.stream().map(Address::getChannel).toList()));\n+\n+        assertTrue(result.getOrDefault(new AddressComponent(\"scify\"), Set.of())\n+                .containsAll(expectedScyFiList.stream().map(Address::getChannel).toList()));\n+    }\n+\n+    @Test\n+    void testCreateRequest() {\n+        // ARRANGE\n+        List<Address> expectedSumList = List.of(new Address(FeneconBindingConstants.STATE_ADDRESS),\n+                new Address(FeneconBindingConstants.GRID_MODE_ADDRESS));\n+\n+        // ACT\n+        AddressComponent component = new AddressComponent(\"_sum\");\n+        Map<AddressComponent, Set<AddressChannel>> split = AddressComponentChannelUtil.split(expectedSumList);\n+        Set<AddressChannel> sciFyChannels = split.getOrDefault(component, Set.of());\n+        String result = AddressComponentChannelUtil.createComponentRequest(component, sciFyChannels);\n+\n+        // ASSERT\n+        assertEquals(\"_sum/(GridMode%7CState)\", result);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentTest.java b/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentTest.java\nnew file mode 100644\nindex 0000000000000..adcc4dea5b74b\n--- /dev/null\n+++ b/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressComponentTest.java\n@@ -0,0 +1,54 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.fenecon.internal.api;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test for {@link AddressComponent}.\n+ *\n+ * @author Philipp Schneider - Initial contribution\n+ */\n+@NonNullByDefault\n+public class AddressComponentTest {\n+\n+    @Test\n+    void testFixComponent() {\n+        String component = \"component\";\n+\n+        AddressComponent result = new AddressComponent(component);\n+\n+        assertEquals(\"component\", result.component());\n+    }\n+\n+    @Test\n+    void testVariableComponentChangedForBundleRegexRequest1() {\n+        String component = \"charger0\";\n+\n+        AddressComponent result = new AddressComponent(component);\n+\n+        assertEquals(\"charger.+\", result.component());\n+    }\n+\n+    @Test\n+    void testVariableComponentChangedForBundleRegexRequest2() {\n+        String component = \"charger1\";\n+\n+        AddressComponent result = new AddressComponent(component);\n+\n+        assertEquals(\"charger.+\", result.component());\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressTest.java b/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressTest.java\nnew file mode 100644\nindex 0000000000000..5fefef80641e2\n--- /dev/null\n+++ b/bundles/org.openhab.binding.fenecon/src/test/java/org/openhab/binding/fenecon/internal/api/AddressTest.java\n@@ -0,0 +1,71 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.fenecon.internal.api;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test for {@link Address}.\n+ *\n+ * @author Philipp Schneider - Initial contribution\n+ */\n+@NonNullByDefault\n+public class AddressTest {\n+\n+    @Test\n+    void testSplitAddress() {\n+        String adress = \"component/channel\";\n+\n+        Address restApiAddress = new Address(adress);\n+\n+        assertEquals(\"component\", restApiAddress.getComponent().component());\n+        assertEquals(\"channel\", restApiAddress.getChannel().channel());\n+    }\n+\n+    @Test\n+    void testInvalidAddress1() {\n+        String invalidAddress = \"invalidAddress\";\n+\n+        assertThrowsExactly(IllegalArgumentException.class, () -> {\n+            new Address(invalidAddress);\n+        });\n+    }\n+\n+    @Test\n+    void testInvalidAddress2() {\n+        String invalidAddress = \"in/valid/address\";\n+\n+        assertThrowsExactly(IllegalArgumentException.class, () -> {\n+            new Address(invalidAddress);\n+        });\n+    }\n+\n+    @Test\n+    void testCompareSameAddress() {\n+        Address adress1 = new Address(\"component/channel\");\n+        Address adress2 = new Address(\"component/channel\");\n+\n+        assertEquals(adress1, adress2);\n+    }\n+\n+    @Test\n+    void testCompareNotSameAddress() {\n+        Address adress1 = new Address(\"component/channel1\");\n+        Address adress2 = new Address(\"component/channel2\");\n+\n+        assertNotEquals(adress1, adress2);\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18524",
    "pr_id": 18524,
    "issue_id": 17992,
    "repo": "openhab/openhab-addons",
    "problem_statement": "Replace config actions with Thing actions\nWith UI support for Thing actions in openHAB 4.3, I would like to get rid of the config actions, which have a high code complexity in the UI and as the issues with Z-Wave's config actions have shown, are prone to bugs.\r\nBindings should implement Thing actions instead of using this hacky approach-\r\n\r\nThe following search query gives an overview of the remaining config actions:\r\nhttps://github.com/search?q=org%3Aopenhab+name%3D%22actions%22+language%3AXML&type=code&l=XML\r\n\r\nAffected bindings are:\r\n\r\n- [ ] Konnected\r\n- [ ] Max\r\n- [ ] MQTT HomeAssistant\r\n- [ ] Z-Wave\r\n\r\nPinging @openhab/add-ons-maintainers and @openhab/z-wave-maintainers, as well as @ccutrer for MQTT HomeAssistant.",
    "issue_word_count": 117,
    "test_files_count": 2,
    "non_test_files_count": 5,
    "pr_changed_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/generic/internal/MqttThingHandlerFactory.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/actions/HomeAssistantUpdateThingActions.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/config/homeassistant-thing-config.xml",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/i18n/mqtt.properties",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandlerTests.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandlerTests.java"
    ],
    "base_commit": "dd6a16dc7b792da825b7251a5eb31b634374b015",
    "head_commit": "7ba11b108f2c55ae24c870cd54e0d159ca5dafa9",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18524",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18524",
    "dockerfile": "",
    "pr_merged_at": "2025-05-17T12:10:55.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/generic/internal/MqttThingHandlerFactory.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/generic/internal/MqttThingHandlerFactory.java\nindex 86f6b8b316f17..808f272c3a5e1 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/generic/internal/MqttThingHandlerFactory.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/generic/internal/MqttThingHandlerFactory.java\n@@ -81,8 +81,8 @@ private boolean isHomeassistantDynamicType(ThingTypeUID thingTypeUID) {\n         ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n \n         if (supportsThingType(thingTypeUID)) {\n-            return new HomeAssistantThingHandler(thing, typeProvider, stateDescriptionProvider, channelTypeRegistry,\n-                    jinjava, unitProvider, 10000, 2000);\n+            return new HomeAssistantThingHandler(thing, this, typeProvider, stateDescriptionProvider,\n+                    channelTypeRegistry, jinjava, unitProvider, 10000, 2000);\n         }\n         return null;\n     }\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/actions/HomeAssistantUpdateThingActions.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/actions/HomeAssistantUpdateThingActions.java\nnew file mode 100644\nindex 0000000000000..bdf3c93e4d0f2\n--- /dev/null\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/actions/HomeAssistantUpdateThingActions.java\n@@ -0,0 +1,62 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.mqtt.homeassistant.internal.actions;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.mqtt.homeassistant.internal.handler.HomeAssistantThingHandler;\n+import org.openhab.core.automation.annotation.RuleAction;\n+import org.openhab.core.thing.binding.ThingActions;\n+import org.openhab.core.thing.binding.ThingActionsScope;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.ServiceScope;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is the automation engine action handler service for the update action.\n+ *\n+ * @author Cody Cutrer - Initial contribution\n+ */\n+@Component(scope = ServiceScope.PROTOTYPE, service = HomeAssistantUpdateThingActions.class)\n+@ThingActionsScope(name = \"mqtt\")\n+@NonNullByDefault\n+public class HomeAssistantUpdateThingActions implements ThingActions {\n+    private final Logger logger = LoggerFactory.getLogger(HomeAssistantUpdateThingActions.class);\n+    private @Nullable HomeAssistantThingHandler handler;\n+\n+    @Override\n+    public void setThingHandler(@Nullable ThingHandler handler) {\n+        this.handler = (HomeAssistantThingHandler) handler;\n+    }\n+\n+    @Override\n+    public @Nullable ThingHandler getThingHandler() {\n+        return handler;\n+    }\n+\n+    @RuleAction(label = \"@text/updateActionLabel\", description = \"@text/updateActionDesc\")\n+    public void update() {\n+        HomeAssistantThingHandler handler = this.handler;\n+        if (handler == null) {\n+            logger.warn(\"Home Assistant Update Action Service ThingHandler is null!\");\n+            return;\n+        }\n+        handler.doUpdate();\n+    }\n+\n+    public static void update(ThingActions actions) {\n+        ((HomeAssistantUpdateThingActions) actions).update();\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\nindex 77286bce64d49..d3058cd6ecff6 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\n@@ -12,7 +12,6 @@\n  */\n package org.openhab.binding.mqtt.homeassistant.internal.handler;\n \n-import java.net.URI;\n import java.util.ArrayList;\n import java.util.Comparator;\n import java.util.HashMap;\n@@ -40,13 +39,13 @@\n import org.openhab.binding.mqtt.homeassistant.internal.HaID;\n import org.openhab.binding.mqtt.homeassistant.internal.HandlerConfiguration;\n import org.openhab.binding.mqtt.homeassistant.internal.HomeAssistantChannelLinkageChecker;\n+import org.openhab.binding.mqtt.homeassistant.internal.actions.HomeAssistantUpdateThingActions;\n import org.openhab.binding.mqtt.homeassistant.internal.component.AbstractComponent;\n import org.openhab.binding.mqtt.homeassistant.internal.component.ComponentFactory;\n import org.openhab.binding.mqtt.homeassistant.internal.component.Update;\n import org.openhab.binding.mqtt.homeassistant.internal.config.ChannelConfigurationTypeAdapterFactory;\n import org.openhab.binding.mqtt.homeassistant.internal.exception.ConfigurationException;\n import org.openhab.core.config.core.Configuration;\n-import org.openhab.core.config.core.validation.ConfigValidationException;\n import org.openhab.core.i18n.UnitProvider;\n import org.openhab.core.io.transport.mqtt.MqttBrokerConnection;\n import org.openhab.core.thing.Channel;\n@@ -56,6 +55,7 @@\n import org.openhab.core.thing.ThingStatusDetail;\n import org.openhab.core.thing.ThingTypeUID;\n import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.BaseThingHandlerFactory;\n import org.openhab.core.thing.binding.builder.ThingBuilder;\n import org.openhab.core.thing.type.ChannelTypeRegistry;\n import org.slf4j.Logger;\n@@ -88,10 +88,10 @@ public class HomeAssistantThingHandler extends AbstractMQTTThingHandler\n     private static final Comparator<AbstractComponent<?>> COMPONENT_COMPARATOR = Comparator\n             .comparing((AbstractComponent<?> component) -> component.hasGroup())\n             .thenComparing(AbstractComponent::getName);\n-    private static final URI UPDATABLE_CONFIG_DESCRIPTION_URI = URI.create(\"thing-type:mqtt:homeassistant-updatable\");\n \n     private final Logger logger = LoggerFactory.getLogger(HomeAssistantThingHandler.class);\n \n+    protected final BaseThingHandlerFactory thingHandlerFactory;\n     protected final MqttChannelTypeProvider channelTypeProvider;\n     protected final MqttChannelStateDescriptionProvider stateDescriptionProvider;\n     protected final ChannelTypeRegistry channelTypeRegistry;\n@@ -122,11 +122,13 @@ public class HomeAssistantThingHandler extends AbstractMQTTThingHandler\n      * @param subscribeTimeout Timeout for the entire tree parsing and subscription. In milliseconds.\n      * @param attributeReceiveTimeout The timeout per attribute field subscription. In milliseconds.\n      */\n-    public HomeAssistantThingHandler(Thing thing, MqttChannelTypeProvider channelTypeProvider,\n-            MqttChannelStateDescriptionProvider stateDescriptionProvider, ChannelTypeRegistry channelTypeRegistry,\n-            Jinjava jinjava, UnitProvider unitProvider, int subscribeTimeout, int attributeReceiveTimeout) {\n+    public HomeAssistantThingHandler(Thing thing, BaseThingHandlerFactory thingHandlerFactory,\n+            MqttChannelTypeProvider channelTypeProvider, MqttChannelStateDescriptionProvider stateDescriptionProvider,\n+            ChannelTypeRegistry channelTypeRegistry, Jinjava jinjava, UnitProvider unitProvider, int subscribeTimeout,\n+            int attributeReceiveTimeout) {\n         super(thing, subscribeTimeout);\n         this.gson = new GsonBuilder().registerTypeAdapterFactory(new ChannelConfigurationTypeAdapterFactory()).create();\n+        this.thingHandlerFactory = thingHandlerFactory;\n         this.channelTypeProvider = channelTypeProvider;\n         this.stateDescriptionProvider = stateDescriptionProvider;\n         this.channelTypeRegistry = channelTypeRegistry;\n@@ -338,11 +340,6 @@ private void addComponents(List<AbstractComponent<?>> discoveredComponentsList)\n                         return null;\n                     });\n                 }\n-\n-                if (discovered instanceof Update) {\n-                    updateComponent = (Update) discovered;\n-                    updateComponent.setReleaseStateUpdateListener(this::releaseStateUpdated);\n-                }\n             }\n             updateThingType(typeID);\n         }\n@@ -363,6 +360,10 @@ private void removeComponents(List<HaID> removedComponentsList) {\n                     haComponents.remove(known.getComponentId());\n                     haComponentsByHaId.remove(removed);\n                     componentActuallyRemoved = true;\n+\n+                    if (known.equals(updateComponent)) {\n+                        updateComponent = null;\n+                    }\n                 }\n             }\n             if (componentActuallyRemoved) {\n@@ -371,6 +372,17 @@ private void removeComponents(List<HaID> removedComponentsList) {\n         }\n     }\n \n+    public void doUpdate() {\n+        Update updateComponent = this.updateComponent;\n+        if (updateComponent == null) {\n+            logger.warn(\n+                    \"Received update command for Home Assistant device {}, but it does not have an update component.\",\n+                    getThing().getUID());\n+        } else {\n+            updateComponent.doUpdate();\n+        }\n+    }\n+\n     @Override\n     protected void updateThingStatus(boolean messageReceived, Optional<Boolean> availabilityTopicsSeen) {\n         if (availabilityTopicsSeen.orElse(messageReceived)) {\n@@ -380,26 +392,6 @@ protected void updateThingStatus(boolean messageReceived, Optional<Boolean> avai\n         }\n     }\n \n-    @Override\n-    public void handleConfigurationUpdate(Map<String, Object> configurationParameters)\n-            throws ConfigValidationException {\n-        if (configurationParameters.containsKey(\"doUpdate\")) {\n-            configurationParameters = new HashMap<>(configurationParameters);\n-            Object value = configurationParameters.remove(\"doUpdate\");\n-            if (value instanceof Boolean doUpdate && doUpdate) {\n-                Update updateComponent = this.updateComponent;\n-                if (updateComponent == null) {\n-                    logger.warn(\n-                            \"Received update command for Home Assistant device {}, but it does not have an update component.\",\n-                            getThing().getUID());\n-                } else {\n-                    updateComponent.doUpdate();\n-                }\n-            }\n-        }\n-        super.handleConfigurationUpdate(configurationParameters);\n-    }\n-\n     private boolean updateThingType(ThingTypeUID typeID) {\n         // if this is a dynamic type, then we update the type\n         if (!MqttBindingConstants.HOMEASSISTANT_MQTT_THING.equals(typeID)) {\n@@ -428,10 +420,6 @@ private boolean updateThingType(ThingTypeUID typeID) {\n                 var channelDefs = sortedComponents.stream().map(AbstractComponent::getChannelDefinitions)\n                         .flatMap(List::stream).toList();\n                 thingTypeBuilder.withChannelDefinitions(channelDefs).withChannelGroupDefinitions(groupDefs);\n-                Update updateComponent = this.updateComponent;\n-                if (updateComponent != null && updateComponent.isUpdatable()) {\n-                    thingTypeBuilder.withConfigDescriptionURI(UPDATABLE_CONFIG_DESCRIPTION_URI);\n-                }\n \n                 channelTypeProvider.putThingType(thingTypeBuilder.build());\n \n@@ -505,6 +493,14 @@ private boolean addComponent(AbstractComponent<?> component) {\n         haComponents.put(component.getComponentId(), component);\n         haComponentsByUniqueId.put(component.getUniqueId(), component);\n         haComponentsByHaId.put(component.getHaID(), component);\n+\n+        if (component instanceof Update updateComponent) {\n+            this.updateComponent = updateComponent;\n+            updateComponent.setReleaseStateUpdateListener(this::releaseStateUpdated);\n+            if (updateComponent.isUpdatable()) {\n+                thingHandlerFactory.registerService(this, HomeAssistantUpdateThingActions.class);\n+            }\n+        }\n         return true;\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/config/homeassistant-thing-config.xml b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/config/homeassistant-thing-config.xml\nindex c09fccc5cb209..9822a064168ba 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/config/homeassistant-thing-config.xml\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/config/homeassistant-thing-config.xml\n@@ -16,28 +16,4 @@\n \t\t\t<default>homeassistant</default>\n \t\t</parameter>\n \t</config-description>\n-\n-\t<config-description uri=\"thing-type:mqtt:homeassistant-updatable\">\n-\t\t<parameter-group name=\"actions\">\n-\t\t\t<label>Actions</label>\n-\t\t</parameter-group>\n-\n-\t\t<parameter name=\"topics\" type=\"text\" required=\"true\" multiple=\"true\">\n-\t\t\t<label>MQTT Config Topic</label>\n-\t\t\t<description>List of Home Assistant configuration topics (e.g. button/my-device/restart)</description>\n-\t\t</parameter>\n-\n-\t\t<parameter name=\"basetopic\" type=\"text\" required=\"true\">\n-\t\t\t<label>MQTT Base Prefix</label>\n-\t\t\t<description>MQTT base prefix</description>\n-\t\t\t<default>homeassistant</default>\n-\t\t</parameter>\n-\n-\t\t<parameter name=\"doUpdate\" type=\"boolean\" groupName=\"actions\">\n-\t\t\t<label>Update</label>\n-\t\t\t<description>Request the device do an OTA update</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t\t<default>false</default>\n-\t\t</parameter>\n-\t</config-description>\n </config-description:config-descriptions>\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/i18n/mqtt.properties b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/i18n/mqtt.properties\nindex b7d92813d0545..d90840061be93 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/i18n/mqtt.properties\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/resources/OH-INF/i18n/mqtt.properties\n@@ -45,15 +45,6 @@ channel-type.config.mqtt.ha-channel.nodeid.description = Optional node name of t\n channel-type.config.mqtt.ha-channel.objectid.label = Object ID\n channel-type.config.mqtt.ha-channel.objectid.description = Object ID of the component\n \n-# thing types config\n-\n-thing-type.config.mqtt.homeassistant-updatable.basetopic.label = MQTT Base Prefix\n-thing-type.config.mqtt.homeassistant-updatable.basetopic.description = MQTT base prefix\n-thing-type.config.mqtt.homeassistant-updatable.topics.label = MQTT Config Topic\n-thing-type.config.mqtt.homeassistant-updatable.topics.description = List of Home Assistant configuration topics (e.g. button/my-device/restart)\n-thing-type.config.mqtt.homeassistant-updatable.doUpdate.label = Update\n-thing-type.config.mqtt.homeassistant-updatable.doUpdate.description = Request the device do an OTA update\n-\n # binding config\n \n binding.config.mqtt.homeassistant-status.label = Publish Online Status\n@@ -129,3 +120,8 @@ state.water-heater.mode.gas = Gas\n state.water-heater.mode.heat-pump = Heat Pump\n state.water-heater.mode.high-demand = High Demand\n state.water-heater.mode.performance = Performance\n+\n+# thing actions\n+\n+updateActionLabel = Update\n+updateActionDesc = Trigger the device to perform an update\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java\nindex 42927f98e4553..9c8a5ca6007cf 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java\n@@ -47,6 +47,7 @@\n import org.openhab.core.thing.ChannelUID;\n import org.openhab.core.thing.Thing;\n import org.openhab.core.thing.ThingStatusInfo;\n+import org.openhab.core.thing.binding.BaseThingHandlerFactory;\n import org.openhab.core.thing.binding.ThingHandlerCallback;\n import org.openhab.core.thing.type.AutoUpdatePolicy;\n import org.openhab.core.thing.type.ChannelKind;\n@@ -67,6 +68,7 @@ public abstract class AbstractComponentTests extends AbstractHomeAssistantTests\n     private static final int ATTRIBUTE_RECEIVE_TIMEOUT = 2000;\n \n     private @Mock @NonNullByDefault({}) ThingHandlerCallback callbackMock;\n+    protected @Mock @NonNullByDefault({}) BaseThingHandlerFactory thingHandlerFactory;\n     private @NonNullByDefault({}) LatchThingHandler thingHandler;\n     protected @Mock @NonNullByDefault({}) UnitProvider unitProvider;\n \n@@ -85,8 +87,9 @@ public void setupThingHandler() {\n \n         when(callbackMock.getBridge(eq(BRIDGE_UID))).thenReturn(bridgeThing);\n \n-        thingHandler = new LatchThingHandler(haThing, channelTypeProvider, stateDescriptionProvider,\n-                channelTypeRegistry, unitProvider, SUBSCRIBE_TIMEOUT, ATTRIBUTE_RECEIVE_TIMEOUT);\n+        thingHandler = new LatchThingHandler(haThing, thingHandlerFactory, channelTypeProvider,\n+                stateDescriptionProvider, channelTypeRegistry, unitProvider, SUBSCRIBE_TIMEOUT,\n+                ATTRIBUTE_RECEIVE_TIMEOUT);\n         thingHandler.setConnection(bridgeConnection);\n         thingHandler.setCallback(callbackMock);\n         thingHandler = spy(thingHandler);\n@@ -361,11 +364,12 @@ protected static class LatchThingHandler extends HomeAssistantThingHandler {\n         private @Nullable CountDownLatch latch;\n         private @Nullable AbstractComponent<@NonNull ? extends AbstractChannelConfiguration> discoveredComponent;\n \n-        public LatchThingHandler(Thing thing, MqttChannelTypeProvider channelTypeProvider,\n+        public LatchThingHandler(Thing thing, BaseThingHandlerFactory thingHandlerFactory,\n+                MqttChannelTypeProvider channelTypeProvider,\n                 MqttChannelStateDescriptionProvider stateDescriptionProvider, ChannelTypeRegistry channelTypeRegistry,\n                 UnitProvider unitProvider, int subscribeTimeout, int attributeReceiveTimeout) {\n-            super(thing, channelTypeProvider, stateDescriptionProvider, channelTypeRegistry, new Jinjava(),\n-                    unitProvider, subscribeTimeout, attributeReceiveTimeout);\n+            super(thing, thingHandlerFactory, channelTypeProvider, stateDescriptionProvider, channelTypeRegistry,\n+                    new Jinjava(), unitProvider, subscribeTimeout, attributeReceiveTimeout);\n         }\n \n         @Override\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandlerTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandlerTests.java\nindex 039b25349620e..4449a8f333a7b 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandlerTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandlerTests.java\n@@ -42,6 +42,7 @@\n import org.openhab.core.library.CoreItemFactory;\n import org.openhab.core.thing.Channel;\n import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.binding.BaseThingHandlerFactory;\n import org.openhab.core.thing.binding.ThingHandlerCallback;\n import org.openhab.core.thing.binding.builder.ChannelBuilder;\n import org.openhab.core.thing.binding.builder.ThingBuilder;\n@@ -70,6 +71,7 @@ public class HomeAssistantThingHandlerTests extends AbstractHomeAssistantTests {\n     private static final List<String> MQTT_TOPICS = CONFIG_TOPICS.stream()\n             .map(AbstractHomeAssistantTests::configTopicToMqtt).collect(Collectors.toList());\n \n+    private @Mock @NonNullByDefault({}) BaseThingHandlerFactory thingHandlerFactory;\n     private @Mock @NonNullByDefault({}) ThingHandlerCallback callbackMock;\n     private @NonNullByDefault({}) HomeAssistantThingHandler thingHandler;\n     private @NonNullByDefault({}) HomeAssistantThingHandler nonSpyThingHandler;\n@@ -88,8 +90,9 @@ public void setup() {\n     }\n \n     protected void setupThingHandler() {\n-        thingHandler = new HomeAssistantThingHandler(haThing, channelTypeProvider, stateDescriptionProvider,\n-                channelTypeRegistry, new Jinjava(), unitProvider, SUBSCRIBE_TIMEOUT, ATTRIBUTE_RECEIVE_TIMEOUT);\n+        thingHandler = new HomeAssistantThingHandler(haThing, thingHandlerFactory, channelTypeProvider,\n+                stateDescriptionProvider, channelTypeRegistry, new Jinjava(), unitProvider, SUBSCRIBE_TIMEOUT,\n+                ATTRIBUTE_RECEIVE_TIMEOUT);\n         thingHandler.setConnection(bridgeConnection);\n         thingHandler.setCallback(callbackMock);\n         nonSpyThingHandler = thingHandler;\n@@ -357,8 +360,9 @@ public void testRestoreComponentFromChannelConfig() {\n \n     @Test\n     public void testDuplicateChannelId() {\n-        thingHandler = new HomeAssistantThingHandler(haThing, channelTypeProvider, stateDescriptionProvider,\n-                channelTypeRegistry, new Jinjava(), unitProvider, SUBSCRIBE_TIMEOUT, ATTRIBUTE_RECEIVE_TIMEOUT);\n+        thingHandler = new HomeAssistantThingHandler(haThing, thingHandlerFactory, channelTypeProvider,\n+                stateDescriptionProvider, channelTypeRegistry, new Jinjava(), unitProvider, SUBSCRIBE_TIMEOUT,\n+                ATTRIBUTE_RECEIVE_TIMEOUT);\n         thingHandler.setConnection(bridgeConnection);\n         thingHandler.setCallback(callbackMock);\n         nonSpyThingHandler = thingHandler;\n@@ -413,8 +417,9 @@ public void testDuplicateChannelId() {\n \n     @Test\n     public void testDuplicateChannelIdComplex() {\n-        thingHandler = new HomeAssistantThingHandler(haThing, channelTypeProvider, stateDescriptionProvider,\n-                channelTypeRegistry, new Jinjava(), unitProvider, SUBSCRIBE_TIMEOUT, ATTRIBUTE_RECEIVE_TIMEOUT);\n+        thingHandler = new HomeAssistantThingHandler(haThing, thingHandlerFactory, channelTypeProvider,\n+                stateDescriptionProvider, channelTypeRegistry, new Jinjava(), unitProvider, SUBSCRIBE_TIMEOUT,\n+                ATTRIBUTE_RECEIVE_TIMEOUT);\n         thingHandler.setConnection(bridgeConnection);\n         thingHandler.setCallback(callbackMock);\n         nonSpyThingHandler = thingHandler;\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18391",
    "pr_id": 18391,
    "issue_id": 16279,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[boschshc] Use MAC address as default bridge thing ID\nAs discussed in https://github.com/openhab/openhab-addons/pull/16211#issuecomment-1890957072, the IP addresses of the Bosch Smart Home Controllers (bridges) should be configured to be static in the local network. But theoretically it is still possible that this IP changes. It is expected that this only happens rarely, in which case users can change the IP address in the configuration manually.\r\n\r\nHowever, we currently propose a thing ID for the bridges in the discovery which is derived from the IP address, e.g. `192-168-0-42`. If the IP changes later, the thing ID (and possibly also all child thing UIDs) would be \"out of sync\", i.e. still contain the old IP address.\r\n\r\nTherefore it would be preferable if we proposed a unique identifier specific to the bridge (e.g. the MAC address) as thing ID.\r\n\r\nThis change would not affect already created things, only newly discovered/created bridges.",
    "issue_word_count": 163,
    "test_files_count": 3,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformation.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipant.java",
      "bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformationTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipantTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformationTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipantTest.java"
    ],
    "base_commit": "81ea83bc02315d212f076f3308f3123ba23a3df2",
    "head_commit": "d1a9ccad23bb6a69511abcbf19e82ac5e856a30c",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18391",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18391",
    "dockerfile": "",
    "pr_merged_at": "2025-03-17T19:52:07.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java\nindex d3fef358fcba0..dc9ea60782a6f 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java\n@@ -21,7 +21,9 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.Objects;\n import java.util.Set;\n import java.util.concurrent.ExecutionException;\n@@ -88,12 +90,16 @@\n @NonNullByDefault\n public class BridgeHandler extends BaseBridgeHandler {\n \n+    private final Logger logger = LoggerFactory.getLogger(BridgeHandler.class);\n+\n+    public static final String THING_PROPERTY_SHC_GENERATION = \"shcGeneration\";\n+    public static final String THING_PROPERTY_API_VERSIONS = \"apiVersions\";\n+    public static final String CONFIGURATION_PARAMETER_IP_ADDRESS = \"ipAddress\";\n+\n     private static final String HTTP_CLIENT_NOT_INITIALIZED = \"HttpClient not initialized\";\n \n     private static final Duration ROOM_CACHE_DURATION = Duration.ofMinutes(2);\n \n-    private final Logger logger = LoggerFactory.getLogger(BridgeHandler.class);\n-\n     /**\n      * Handler to do long polling.\n      */\n@@ -286,6 +292,8 @@ private void scheduleInitialAccess(BoschHttpClient httpClient) {\n                 return;\n             }\n \n+            updateThingProperties();\n+\n             // do thing discovery after pairing\n             final ThingDiscoveryService discovery = thingDiscoveryService;\n             if (discovery != null) {\n@@ -302,6 +310,23 @@ private void scheduleInitialAccess(BoschHttpClient httpClient) {\n         }\n     }\n \n+    private void updateThingProperties() {\n+        try {\n+            PublicInformation publicInformation = getPublicInformation();\n+            @Nullable\n+            Map<String, String> properties = new HashMap<>();\n+            properties.put(Thing.PROPERTY_MAC_ADDRESS, publicInformation.macAddress);\n+            properties.put(THING_PROPERTY_SHC_GENERATION, publicInformation.shcGeneration);\n+            properties.put(THING_PROPERTY_API_VERSIONS, publicInformation.getApiVersionsAsCommaSeparatedList());\n+            updateProperties(properties);\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            logger.warn(\"Thread was interrupted while retrieving public information to update thing properties.\", e);\n+        } catch (BoschSHCException | ExecutionException | TimeoutException e) {\n+            logger.warn(\"Error while retrieving public information to update thing properties.\", e);\n+        }\n+    }\n+\n     private void startLongPolling(BoschHttpClient httpClient) {\n         try {\n             this.longPolling.start(httpClient);\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformation.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformation.java\nindex f3162fba7adc4..e99b0e1d0f37f 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformation.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformation.java\n@@ -13,6 +13,7 @@\n package org.openhab.binding.boschshc.internal.devices.bridge.dto;\n \n import java.util.List;\n+import java.util.stream.Collectors;\n \n /**\n  * Public Information of the controller.\n@@ -20,32 +21,42 @@\n  *\n  * Currently, only the ipAddress is used for discovery. More fields can be added on demand.\n  * <p>\n- * Json example:\n+ * JSON example:\n  *\n  * <pre>\n  * {\n- * \"apiVersions\":[\"1.2\",\"2.1\"],\n- * ...\n- * \"shcIpAddress\":\"192.168.1.2\",\n- * ...\n+ *     \"apiVersions\": [\"2.9\",\"3.2\"],\n+ *     \"macAddress\": \"64-da-a0-ab-cd-ef\",\n+ *     \"shcIpAddress\": \"192.168.0.123\",\n+ *     ...\n+ *     \"shcGeneration\": \"SHC_1\"\n  * }\n  * </pre>\n  *\n  * @author Gerd Zanker - Initial contribution\n  */\n public class PublicInformation {\n-    public PublicInformation() {\n-        this.shcIpAddress = \"\";\n-        this.shcGeneration = \"\";\n-    }\n-\n     public List<String> apiVersions;\n+    public String macAddress;\n     public String shcIpAddress;\n     public String shcGeneration;\n     public SoftwareUpdateState softwareUpdateState;\n \n     public static boolean isValid(PublicInformation obj) {\n-        return obj != null && obj.shcIpAddress != null && obj.shcGeneration != null && obj.apiVersions != null\n-                && SoftwareUpdateState.isValid(obj.softwareUpdateState);\n+        return obj != null && obj.macAddress != null && obj.shcIpAddress != null && obj.shcGeneration != null\n+                && obj.apiVersions != null && SoftwareUpdateState.isValid(obj.softwareUpdateState);\n+    }\n+\n+    /**\n+     * Returns the API versions as comma-separated list.\n+     * \n+     * @return a comma-separated list of API versions or <code>null</code> if {@link #apiVersions} is <code>null</code>.\n+     */\n+    public String getApiVersionsAsCommaSeparatedList() {\n+        if (apiVersions == null) {\n+            return null;\n+        }\n+\n+        return apiVersions.stream().collect(Collectors.joining(\", \"));\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipant.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipant.java\nindex 735829146968e..9d811be0c3dad 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipant.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipant.java\n@@ -30,12 +30,14 @@\n import org.eclipse.jetty.util.ssl.SslContextFactory;\n import org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants;\n import org.openhab.binding.boschshc.internal.devices.bridge.BoschHttpClient;\n+import org.openhab.binding.boschshc.internal.devices.bridge.BridgeHandler;\n import org.openhab.binding.boschshc.internal.devices.bridge.dto.PublicInformation;\n import org.openhab.core.cache.ExpiringCacheMap;\n import org.openhab.core.config.discovery.DiscoveryResult;\n import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n import org.openhab.core.config.discovery.mdns.MDNSDiscoveryParticipant;\n import org.openhab.core.io.net.http.HttpClientFactory;\n+import org.openhab.core.thing.Thing;\n import org.openhab.core.thing.ThingTypeUID;\n import org.openhab.core.thing.ThingUID;\n import org.osgi.service.component.annotations.Activate;\n@@ -145,9 +147,14 @@ public String getServiceType() {\n \n         return DiscoveryResultBuilder.create(uid)\n                 .withLabel(\"Bosch Smart Home Controller (\" + publicInformation.shcIpAddress + \")\")\n-                .withProperty(\"ipAddress\", publicInformation.shcIpAddress)\n-                .withProperty(\"shcGeneration\", publicInformation.shcGeneration)\n-                .withProperty(\"apiVersions\", publicInformation.apiVersions).withTTL(TTL_SECONDS).build();\n+                // note: the IP address will become a configuration parameter, not a thing property\n+                // refer to https://github.com/openhab/openhab-addons/pull/18391#discussion_r1997703718 for more details\n+                .withProperty(BridgeHandler.CONFIGURATION_PARAMETER_IP_ADDRESS, publicInformation.shcIpAddress)\n+                .withProperty(Thing.PROPERTY_MAC_ADDRESS, publicInformation.macAddress)\n+                .withProperty(BridgeHandler.THING_PROPERTY_SHC_GENERATION, publicInformation.shcGeneration)\n+                .withProperty(BridgeHandler.THING_PROPERTY_API_VERSIONS,\n+                        publicInformation.getApiVersionsAsCommaSeparatedList())\n+                .withRepresentationProperty(Thing.PROPERTY_MAC_ADDRESS).withTTL(TTL_SECONDS).build();\n     }\n \n     private @Nullable String getFirstIPAddress(ServiceInfo serviceInfo) {\n@@ -186,8 +193,11 @@ public String getServiceType() {\n             @Nullable\n             PublicInformation publicInformation = getOrComputePublicInformation(ipAddress);\n             if (publicInformation != null) {\n-                String resolvedIpAddress = publicInformation.shcIpAddress;\n-                return new ThingUID(BoschSHCBindingConstants.THING_TYPE_SHC, resolvedIpAddress.replace('.', '-'));\n+                String macAddress = publicInformation.macAddress;\n+                if (macAddress == null) {\n+                    return null;\n+                }\n+                return new ThingUID(BoschSHCBindingConstants.THING_TYPE_SHC, macAddress.replace(\"-\", \"\"));\n             }\n         }\n         return null;\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml\nindex f61ce3cc00a90..b6463ccf2cffa 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml\n+++ b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml\n@@ -18,6 +18,8 @@\n \t\t\t<property name=\"thingTypeVersion\">1</property>\n \t\t</properties>\n \n+\t\t<representation-property>macAddress</representation-property>\n+\n \t\t<config-description-ref uri=\"thing-type:boschshc:bridge\"/>\n \t</bridge-type>\n \n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java\nindex 4e8d7a2b8c2ca..cf045bee8de5f 100644\n--- a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java\n@@ -12,28 +12,13 @@\n  */\n package org.openhab.binding.boschshc.internal.devices.bridge;\n \n-import static org.hamcrest.CoreMatchers.is;\n-import static org.hamcrest.CoreMatchers.nullValue;\n+import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.collection.IsCollectionWithSize.hasSize;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertSame;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.ArgumentMatchers.*;\n import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.ArgumentMatchers.anyString;\n-import static org.mockito.ArgumentMatchers.argThat;\n-import static org.mockito.ArgumentMatchers.contains;\n-import static org.mockito.ArgumentMatchers.eq;\n-import static org.mockito.ArgumentMatchers.isNull;\n-import static org.mockito.ArgumentMatchers.same;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.Mockito.verifyNoInteractions;\n-import static org.mockito.Mockito.verifyNoMoreInteractions;\n-import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.*;\n \n import java.io.IOException;\n import java.nio.file.Files;\n@@ -235,6 +220,14 @@ void initialAccessAccessPossible()\n         when(devicesRequest.send()).thenReturn(devicesResponse);\n         when(httpClient.createRequest(contains(\"/devices\"), same(HttpMethod.GET))).thenReturn(devicesRequest);\n \n+        PublicInformation publicInformation = new PublicInformation();\n+        publicInformation.shcIpAddress = \"192.168.0.123\";\n+        publicInformation.macAddress = \"64-da-a0-ab-cd-ef\";\n+        publicInformation.shcGeneration = \"SHC_1\";\n+        publicInformation.apiVersions = List.of(\"2.9\", \"3.2\");\n+        when(httpClient.sendRequest(any(), same(PublicInformation.class), any(), isNull()))\n+                .thenReturn(publicInformation);\n+\n         SubscribeResult subscribeResult = new SubscribeResult();\n         when(httpClient.sendRequest(any(), same(SubscribeResult.class), any(), any())).thenReturn(subscribeResult);\n \n@@ -249,6 +242,12 @@ void initialAccessAccessPossible()\n \n         verify(thingHandlerCallback).statusUpdated(any(),\n                 eq(ThingStatusInfoBuilder.create(ThingStatus.ONLINE, ThingStatusDetail.NONE).build()));\n+\n+        verify(thing).setProperty(Thing.PROPERTY_MAC_ADDRESS, \"64-da-a0-ab-cd-ef\");\n+        verify(thing).setProperty(BridgeHandler.THING_PROPERTY_API_VERSIONS, \"2.9, 3.2\");\n+\n+        verify(thingHandlerCallback).thingUpdated(thing);\n+\n         verify(thingDiscoveryListener).doScan();\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformationTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformationTest.java\nnew file mode 100644\nindex 0000000000000..244152837db96\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/dto/PublicInformationTest.java\n@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.devices.bridge.dto;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Unit tests for {@link PublicInformation}.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+class PublicInformationTest {\n+\n+    private @NonNullByDefault({}) PublicInformation fixture;\n+\n+    @BeforeEach\n+    void beforeEach() {\n+        fixture = new PublicInformation();\n+        fixture.shcIpAddress = \"192.168.0.123\";\n+        fixture.macAddress = \"64-da-a0-ab-cd-ef\";\n+        fixture.shcGeneration = \"SHC_1\";\n+        fixture.apiVersions = List.of(\"2.9\", \"3.2\");\n+    }\n+\n+    @Test\n+    void getApiVersionsAsCommaSeparatedList() {\n+        assertEquals(\"2.9, 3.2\", fixture.getApiVersionsAsCommaSeparatedList());\n+        fixture.apiVersions = null;\n+        assertNull(fixture.getApiVersionsAsCommaSeparatedList());\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipantTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipantTest.java\nindex 00b938f079fb0..1a24f842973d5 100644\n--- a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipantTest.java\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/BridgeDiscoveryParticipantTest.java\n@@ -20,14 +20,13 @@\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertSame;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.ArgumentMatchers.anyLong;\n-import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.ArgumentMatchers.*;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n import java.net.ConnectException;\n+import java.util.Map;\n import java.util.concurrent.ExecutionException;\n \n import javax.jmdns.ServiceInfo;\n@@ -48,9 +47,11 @@\n import org.mockito.junit.jupiter.MockitoSettings;\n import org.mockito.quality.Strictness;\n import org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants;\n+import org.openhab.binding.boschshc.internal.devices.bridge.BridgeHandler;\n import org.openhab.binding.boschshc.internal.devices.bridge.dto.PublicInformation;\n import org.openhab.core.config.discovery.DiscoveryResult;\n import org.openhab.core.io.net.http.HttpClientFactory;\n+import org.openhab.core.thing.Thing;\n import org.openhab.core.thing.ThingUID;\n \n /**\n@@ -86,8 +87,14 @@ public void beforeEach() throws Exception {\n         when(otherDevice.getHostAddresses()).thenReturn(new String[] { \"192.168.0.1\" });\n         when(otherDevice.getName()).thenReturn(\"Other Device\");\n \n-        when(contentResponse.getContentAsString()).thenReturn(\n-                \"{\\\"apiVersions\\\":[\\\"2.9\\\",\\\"3.2\\\"], \\\"shcIpAddress\\\":\\\"192.168.0.123\\\", \\\"shcGeneration\\\":\\\"SHC_1\\\"}\");\n+        when(contentResponse.getContentAsString()).thenReturn(\"\"\"\n+                {\n+                    \"apiVersions\": [\"2.9\",\"3.2\"],\n+                    \"macAddress\": \"64-da-a0-ab-cd-ef\",\n+                    \"shcIpAddress\": \"192.168.0.123\",\n+                    \"shcGeneration\": \"SHC_1\"\n+                }\n+                \"\"\");\n         when(contentResponse.getStatus()).thenReturn(HttpStatus.OK_200);\n \n         Request mockRequest = mock(Request.class);\n@@ -124,30 +131,36 @@ void testGetSupportedThingTypeUIDs() {\n      *\n      */\n     @Test\n-    void testGetServiceType() throws Exception {\n+    void testGetServiceType() {\n         assertThat(fixture.getServiceType(), is(\"_http._tcp.local.\"));\n     }\n \n     @Test\n-    void testCreateResult() throws Exception {\n+    void testCreateResult() {\n         DiscoveryResult result = fixture.createResult(shcBridge);\n \n         assertNotNull(result);\n         assertThat(result.getBindingId(), is(BoschSHCBindingConstants.BINDING_ID));\n-        assertThat(result.getThingUID().getId(), is(\"192-168-0-123\"));\n+        assertThat(result.getThingUID().getId(), is(\"64daa0abcdef\"));\n         assertThat(result.getThingTypeUID().getId(), is(\"shc\"));\n         assertThat(result.getLabel(), is(\"Bosch Smart Home Controller (192.168.0.123)\"));\n+        Map<String, Object> properties = result.getProperties();\n+        assertThat(properties.get(BridgeHandler.CONFIGURATION_PARAMETER_IP_ADDRESS), is(\"192.168.0.123\"));\n+        assertThat(properties.get(Thing.PROPERTY_MAC_ADDRESS), is(\"64-da-a0-ab-cd-ef\"));\n+        assertThat(properties.get(BridgeHandler.THING_PROPERTY_SHC_GENERATION), is(\"SHC_1\"));\n+        assertThat(properties.get(BridgeHandler.THING_PROPERTY_API_VERSIONS), is(\"2.9, 3.2\"));\n+        assertThat(result.getRepresentationProperty(), is(Thing.PROPERTY_MAC_ADDRESS));\n     }\n \n     @Test\n-    void testCreateResultOtherDevice() throws Exception {\n+    void testCreateResultOtherDevice() {\n         DiscoveryResult result = fixture.createResult(otherDevice);\n \n         assertNull(result);\n     }\n \n     @Test\n-    void testCreateResultNoIPAddress() throws Exception {\n+    void testCreateResultNoIPAddress() {\n         when(shcBridge.getHostAddresses()).thenReturn(new String[] { \"\" });\n \n         DiscoveryResult result = fixture.createResult(shcBridge);\n@@ -156,21 +169,21 @@ void testCreateResultNoIPAddress() throws Exception {\n     }\n \n     @Test\n-    void testGetThingUID() throws Exception {\n+    void testGetThingUID() {\n         ThingUID thingUID = fixture.getThingUID(shcBridge);\n \n         assertNotNull(thingUID);\n         assertThat(thingUID.getBindingId(), is(BoschSHCBindingConstants.BINDING_ID));\n-        assertThat(thingUID.getId(), is(\"192-168-0-123\"));\n+        assertThat(thingUID.getId(), is(\"64daa0abcdef\"));\n     }\n \n     @Test\n-    void testGetThingUIDOtherDevice() throws Exception {\n+    void testGetThingUIDOtherDevice() {\n         assertNull(fixture.getThingUID(otherDevice));\n     }\n \n     @Test\n-    void testGetBridgeAddress() throws Exception {\n+    void testGetBridgeAddress() {\n         @Nullable\n         PublicInformation bridgeInformation = fixture.discoverBridge(\"192.168.0.123\");\n \n@@ -179,12 +192,12 @@ void testGetBridgeAddress() throws Exception {\n     }\n \n     @Test\n-    void testGetBridgeAddressOtherDevice() throws Exception {\n+    void testGetBridgeAddressOtherDevice() {\n         assertThat(fixture.discoverBridge(\"192.168.0.1\"), is(nullValue()));\n     }\n \n     @Test\n-    void testGetPublicInformationFromPossibleBridgeAddress() throws Exception {\n+    void testGetPublicInformationFromPossibleBridgeAddress() {\n         @Nullable\n         PublicInformation bridgeInformation = fixture.getPublicInformationFromPossibleBridgeAddress(\"192.168.0.123\");\n \n@@ -193,7 +206,7 @@ void testGetPublicInformationFromPossibleBridgeAddress() throws Exception {\n     }\n \n     @Test\n-    void testGetPublicInformationFromPossibleBridgeAddressInvalidContent() throws Exception {\n+    void testGetPublicInformationFromPossibleBridgeAddressInvalidContent() {\n         when(contentResponse.getContentAsString()).thenReturn(\"{\\\"nothing\\\":\\\"useful\\\"}\");\n \n         fixture = new BridgeDiscoveryParticipant(mockHttpClient);\n@@ -202,7 +215,7 @@ void testGetPublicInformationFromPossibleBridgeAddressInvalidContent() throws Ex\n     }\n \n     @Test\n-    void testGetPublicInformationFromPossibleBridgeAddressInvalidStatus() throws Exception {\n+    void testGetPublicInformationFromPossibleBridgeAddressInvalidStatus() {\n         when(contentResponse.getStatus()).thenReturn(HttpStatus.BAD_REQUEST_400);\n \n         fixture = new BridgeDiscoveryParticipant(mockHttpClient);\n@@ -211,7 +224,7 @@ void testGetPublicInformationFromPossibleBridgeAddressInvalidStatus() throws Exc\n     }\n \n     @Test\n-    void testGetOrComputePublicInformation() throws Exception {\n+    void testGetOrComputePublicInformation() {\n         @Nullable\n         PublicInformation result = fixture.getOrComputePublicInformation(\"192.168.0.123\");\n         assertNotNull(result);\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18318",
    "pr_id": 18318,
    "issue_id": 4618,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[max] Sending action rebootCube causes StringIndexOutOfBoundsException\nRebooting the cube from either paperUI, Habpanel or via REST API will work, but cause a StringIndexOutOfBoundsException. \r\n\r\n## Expected Behavior\r\nException should not happen.\r\n\r\n## Current Behavior\r\nCube will be rebooted, but an exception is logged:\r\n```\r\n[ERROR] [st.core.internal.thing.ThingResource] - Exception during HTTP PUT request for update config at 'things/max:bridge:NEQ1442746/config'\r\njava.lang.StringIndexOutOfBoundsException: String index out of range: -3\r\n\tat java.lang.String.substring(String.java:1931) [?:?]\r\n\tat org.openhab.binding.max.internal.command.UdpCubeCommand.receiveUdpCommandResponse(UdpCubeCommand.java:139) [205:org.openhab.binding.max:2.3.0]\r\n[...]\r\n```\r\n\r\n## Possible Solution\r\nThe exception is caused by a wrong substring offset in org.openhab.binding.max.internal.command.UdpCubeCommand\r\n\r\nThe offset for should be 20, not 24. Since the string is only 21 chars long, an exception is thrown.\r\n\r\n## Steps to Reproduce (for Bugs)\r\nReboot cube via PaperUI, Habpanel, or REST API\r\n\r\n## Context\r\nNot a big deal really.\r\n\r\n## Your Environment\r\nopenHABian, openHAB 2.4\r\n",
    "issue_word_count": 161,
    "test_files_count": 1,
    "non_test_files_count": 99,
    "pr_changed_files": [
      "bom/openhab-addons/pom.xml",
      "bom/openhab-core-index/pom.xml",
      "bom/pom.xml",
      "bom/runtime-index/pom.xml",
      "bom/test-index/pom.xml",
      "bundles/org.openhab.automation.groovyscripting/pom.xml",
      "bundles/org.openhab.automation.jrubyscripting/pom.xml",
      "bundles/org.openhab.automation.jsscripting/pom.xml",
      "bundles/org.openhab.automation.jsscriptingnashorn/pom.xml",
      "bundles/org.openhab.automation.jythonscripting/pom.xml",
      "bundles/org.openhab.automation.pidcontroller/pom.xml",
      "bundles/org.openhab.automation.pwm/pom.xml",
      "bundles/org.openhab.binding.adorne/pom.xml",
      "bundles/org.openhab.binding.ahawastecollection/pom.xml",
      "bundles/org.openhab.binding.airgradient/pom.xml",
      "bundles/org.openhab.binding.airparif/pom.xml",
      "bundles/org.openhab.binding.airq/pom.xml",
      "bundles/org.openhab.binding.airquality/pom.xml",
      "bundles/org.openhab.binding.airvisualnode/pom.xml",
      "bundles/org.openhab.binding.alarmdecoder/pom.xml",
      "bundles/org.openhab.binding.allplay/pom.xml",
      "bundles/org.openhab.binding.amazondashbutton/pom.xml",
      "bundles/org.openhab.binding.amazonechocontrol/pom.xml",
      "bundles/org.openhab.binding.amberelectric/pom.xml",
      "bundles/org.openhab.binding.ambientweather/pom.xml",
      "bundles/org.openhab.binding.amplipi/pom.xml",
      "bundles/org.openhab.binding.androiddebugbridge/pom.xml",
      "bundles/org.openhab.binding.androidtv/pom.xml",
      "bundles/org.openhab.binding.anel/pom.xml",
      "bundles/org.openhab.binding.anthem/pom.xml",
      "bundles/org.openhab.binding.argoclima/pom.xml",
      "bundles/org.openhab.binding.astro/pom.xml",
      "bundles/org.openhab.binding.asuswrt/pom.xml",
      "bundles/org.openhab.binding.atlona/pom.xml",
      "bundles/org.openhab.binding.autelis/pom.xml",
      "bundles/org.openhab.binding.automower/pom.xml",
      "bundles/org.openhab.binding.avmfritz/pom.xml",
      "bundles/org.openhab.binding.awattar/pom.xml",
      "bundles/org.openhab.binding.benqprojector/pom.xml",
      "bundles/org.openhab.binding.bigassfan/pom.xml",
      "bundles/org.openhab.binding.bluetooth.airthings/pom.xml",
      "bundles/org.openhab.binding.bluetooth.am43/pom.xml",
      "bundles/org.openhab.binding.bluetooth.bluegiga/pom.xml",
      "bundles/org.openhab.binding.bluetooth.bluez/pom.xml",
      "bundles/org.openhab.binding.bluetooth.blukii/pom.xml",
      "bundles/org.openhab.binding.bluetooth.daikinmadoka/pom.xml",
      "bundles/org.openhab.binding.bluetooth.enoceanble/pom.xml",
      "bundles/org.openhab.binding.bluetooth.generic/pom.xml",
      "bundles/org.openhab.binding.bluetooth.govee/pom.xml",
      "bundles/org.openhab.binding.bluetooth.grundfosalpha/pom.xml",
      "bundles/org.openhab.binding.bluetooth.hdpowerview/pom.xml",
      "bundles/org.openhab.binding.bluetooth.radoneye/pom.xml",
      "bundles/org.openhab.binding.bluetooth.roaming/pom.xml",
      "bundles/org.openhab.binding.bluetooth.ruuvitag/pom.xml",
      "bundles/org.openhab.binding.bluetooth/pom.xml",
      "bundles/org.openhab.binding.bondhome/pom.xml",
      "bundles/org.openhab.binding.boschindego/pom.xml",
      "bundles/org.openhab.binding.boschshc/pom.xml",
      "bundles/org.openhab.binding.bosesoundtouch/pom.xml",
      "bundles/org.openhab.binding.broadlink/pom.xml",
      "bundles/org.openhab.binding.broadlinkthermostat/pom.xml",
      "bundles/org.openhab.binding.bsblan/pom.xml",
      "bundles/org.openhab.binding.bticinosmarther/pom.xml",
      "bundles/org.openhab.binding.buienradar/pom.xml",
      "bundles/org.openhab.binding.caddx/pom.xml",
      "bundles/org.openhab.binding.cbus/pom.xml",
      "bundles/org.openhab.binding.chatgpt/pom.xml",
      "bundles/org.openhab.binding.chromecast/pom.xml",
      "bundles/org.openhab.binding.cm11a/pom.xml",
      "bundles/org.openhab.binding.comfoair/pom.xml",
      "bundles/org.openhab.binding.coolmasternet/pom.xml",
      "bundles/org.openhab.binding.coronastats/pom.xml",
      "bundles/org.openhab.binding.daikin/pom.xml",
      "bundles/org.openhab.binding.dali/pom.xml",
      "bundles/org.openhab.binding.danfossairunit/pom.xml",
      "bundles/org.openhab.binding.dbquery/pom.xml",
      "bundles/org.openhab.binding.deconz/pom.xml",
      "bundles/org.openhab.binding.denonmarantz/pom.xml",
      "bundles/org.openhab.binding.deutschebahn/pom.xml",
      "bundles/org.openhab.binding.digiplex/pom.xml",
      "bundles/org.openhab.binding.digitalstrom/pom.xml",
      "bundles/org.openhab.binding.dlinksmarthome/pom.xml",
      "bundles/org.openhab.binding.dmx/pom.xml",
      "bundles/org.openhab.binding.dolbycp/pom.xml",
      "bundles/org.openhab.binding.dominoswiss/pom.xml",
      "bundles/org.openhab.binding.doorbird/pom.xml",
      "bundles/org.openhab.binding.draytonwiser/pom.xml",
      "bundles/org.openhab.binding.dscalarm/pom.xml",
      "bundles/org.openhab.binding.dsmr/pom.xml",
      "bundles/org.openhab.binding.dwdpollenflug/pom.xml",
      "bundles/org.openhab.binding.dwdunwetter/pom.xml",
      "bundles/org.openhab.binding.easee/pom.xml",
      "bundles/org.openhab.binding.echonetlite/pom.xml",
      "bundles/org.openhab.binding.ecobee/pom.xml",
      "bundles/org.openhab.binding.ecotouch/pom.xml",
      "bundles/org.openhab.binding.ecovacs/pom.xml",
      "bundles/org.openhab.binding.ecowatt/pom.xml",
      "bundles/org.openhab.binding.ekey/pom.xml",
      "bundles/org.openhab.binding.electroluxappliance/pom.xml",
      "bundles/org.openhab.binding.elerotransmitterstick/pom.xml"
    ],
    "pr_changed_test_files": [
      "bom/test-index/pom.xml"
    ],
    "base_commit": "722433303953f7296ce4fd67142bf1c1758ab3f1",
    "head_commit": "2b97ceea9457a94ccddf974b98157ecbe25184d8",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18318",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18318",
    "dockerfile": "",
    "pr_merged_at": "2025-02-23T19:23:16.000Z",
    "patch": "diff --git a/bom/openhab-addons/pom.xml b/bom/openhab-addons/pom.xml\nindex 56783211f63b6..9952c007b0d73 100644\n--- a/bom/openhab-addons/pom.xml\n+++ b/bom/openhab-addons/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bom/openhab-core-index/pom.xml b/bom/openhab-core-index/pom.xml\nindex e526d17df68d4..a4a87afd89af7 100644\n--- a/bom/openhab-core-index/pom.xml\n+++ b/bom/openhab-core-index/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bom/pom.xml b/bom/pom.xml\nindex 531a6bbc5c148..32e73f09cdf86 100644\n--- a/bom/pom.xml\n+++ b/bom/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n@@ -39,14 +39,11 @@\n               </goals>\n               <configuration>\n                 <target>\n-                  <copy file=\"${basedirRoot}/../../bundles/pom.xml\" overwrite=\"true\"\n-                    tofile=\"${basedirRoot}/../../bom/openhab-addons/pom.xml\"/>\n+                  <copy file=\"${basedirRoot}/../../bundles/pom.xml\" overwrite=\"true\" tofile=\"${basedirRoot}/../../bom/openhab-addons/pom.xml\"/>\n                   <!-- rewrite footer -->\n-                  <replaceregexp file=\"${basedirRoot}/../../bom/openhab-addons/pom.xml\"\n-                    match=\"/modules[\\s\\S]*dependencies&gt;\" replace=\"/dependencies&gt;\"/>\n+                  <replaceregexp file=\"${basedirRoot}/../../bom/openhab-addons/pom.xml\" match=\"/modules[\\s\\S]*dependencies&gt;\" replace=\"/dependencies&gt;\"/>\n                   <!-- rewrite header -->\n-                  <replaceregexp file=\"${basedirRoot}/../../bom/openhab-addons/pom.xml\"\n-                    match=\"\\S*parent[\\s\\S]*modules&gt;\\S*\" replace=\"header\"/>\n+                  <replaceregexp file=\"${basedirRoot}/../../bom/openhab-addons/pom.xml\" match=\"\\S*parent[\\s\\S]*modules&gt;\\S*\" replace=\"header\"/>\n                   <replace file=\"{basedirRoot}/../../bom/openhab-addons/pom.xml\">\n                     <replacetoken>header</replacetoken>\n                     <replacevalue><![CDATA[<parent>\n\ndiff --git a/bom/runtime-index/pom.xml b/bom/runtime-index/pom.xml\nindex 217b2a896890d..db40f3ebb1b74 100644\n--- a/bom/runtime-index/pom.xml\n+++ b/bom/runtime-index/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.automation.groovyscripting/pom.xml b/bundles/org.openhab.automation.groovyscripting/pom.xml\nindex 06f5000b9ec7a..a4cfbb469bfd8 100644\n--- a/bundles/org.openhab.automation.groovyscripting/pom.xml\n+++ b/bundles/org.openhab.automation.groovyscripting/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n@@ -68,8 +68,7 @@ Require-Capability:\n       cardinality:=multiple\n SPI-Provider: *\n SPI-Consumer: *\n-]]>\n-            </bnd>\n+]]></bnd>\n           </configuration>\n         </plugin>\n       </plugins>\n\ndiff --git a/bundles/org.openhab.automation.jrubyscripting/pom.xml b/bundles/org.openhab.automation.jrubyscripting/pom.xml\nindex 755177ed5c780..4913c5d83325b 100644\n--- a/bundles/org.openhab.automation.jrubyscripting/pom.xml\n+++ b/bundles/org.openhab.automation.jrubyscripting/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.automation.jsscripting/pom.xml b/bundles/org.openhab.automation.jsscripting/pom.xml\nindex 3455cb0b71d74..e6b8652c89c4c 100644\n--- a/bundles/org.openhab.automation.jsscripting/pom.xml\n+++ b/bundles/org.openhab.automation.jsscripting/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n@@ -15,19 +15,46 @@\n   <name>openHAB Add-ons :: Bundles :: Automation :: JavaScript Scripting</name>\n \n   <properties>\n-    <bnd.importpackage>\n-      !sun.misc.*,\n+    <bnd.importpackage>!sun.misc.*,\n       !sun.reflect.*,\n       !com.sun.management.*,\n       !jdk.internal.reflect.*,\n-      !jdk.vm.ci.services\n-    </bnd.importpackage>\n+      !jdk.vm.ci.services</bnd.importpackage>\n     <!-- Remember to check if the fix https://github.com/openhab/openhab-core/pull/4437 still works when upgrading GraalJS -->\n     <graaljs.version>24.1.2</graaljs.version>\n     <oh.version>${project.version}</oh.version>\n     <ohjs.version>openhab@5.8.1</ohjs.version>\n   </properties>\n \n+  <dependencies>\n+    <!-- Graal Polyglot Framework -->\n+    <dependency>\n+      <groupId>org.graalvm.polyglot</groupId>\n+      <artifactId>polyglot</artifactId>\n+      <version>${graaljs.version}</version>\n+    </dependency>\n+    <!-- Graal JavaScript ScriptEngine JSR 223 support -->\n+    <dependency>\n+      <groupId>org.graalvm.js</groupId>\n+      <artifactId>js-scriptengine</artifactId>\n+      <version>${graaljs.version}</version>\n+    </dependency>\n+    <!-- Graal TRegex engine (internally used by Graal JavaScript engine) -->\n+    <dependency>\n+      <groupId>org.graalvm.regex</groupId>\n+      <artifactId>regex</artifactId>\n+      <version>${graaljs.version}</version>\n+    </dependency>\n+    <!-- Graal JavaScript engine (depends on Graal TRegex engine, must be added after it) -->\n+    <dependency>\n+      <groupId>org.graalvm.polyglot</groupId>\n+      <artifactId>js-community</artifactId>\n+      <version>${graaljs.version}</version>\n+      <type>pom</type>\n+      <scope>runtime</scope>\n+    </dependency>\n+  </dependencies>\n+\n   <build>\n     <plugins>\n       <!-- bundle the modular dependencies into an uber-JAR -->\n@@ -37,10 +64,10 @@\n         <version>3.6.0</version>\n         <executions>\n           <execution>\n-            <phase>package</phase>\n             <goals>\n               <goal>shade</goal>\n             </goals>\n+            <phase>package</phase>\n             <configuration>\n               <artifactSet>\n                 <excludes>\n@@ -59,8 +86,7 @@\n               <createDependencyReducedPom>false</createDependencyReducedPom>\n               <transformers>\n                 <!-- Transformer to merge module-info.class files, if needed -->\n-                <transformer\n-                  implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\"/>\n+                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\"/>\n               </transformers>\n             </configuration>\n           </execution>\n@@ -72,7 +98,8 @@\n         <artifactId>frontend-maven-plugin</artifactId>\n         <version>1.15.1</version>\n         <configuration>\n-          <nodeVersion>v16.17.1</nodeVersion> <!-- DO NOT DOWNGRADE: NodeJS < 16 doesn't support Apple Silicon -->\n+          <nodeVersion>v16.17.1</nodeVersion>\n+          <!-- DO NOT DOWNGRADE: NodeJS < 16 doesn't support Apple Silicon -->\n           <workingDirectory>target/js</workingDirectory>\n         </configuration>\n         <executions>\n@@ -90,7 +117,8 @@\n             </goals>\n             <configuration>\n               <!--suppress UnresolvedMavenProperty -->\n-              <arguments>install ${ohjs.version} webpack@^5.94.0 webpack-cli@^5.1.4</arguments> <!-- webpack & webpack-cli versions should match to the ones from openhab-js -->\n+              <arguments>install ${ohjs.version} webpack@^5.94.0 webpack-cli@^5.1.4</arguments>\n+              <!-- webpack & webpack-cli versions should match to the ones from openhab-js -->\n             </configuration>\n           </execution>\n           <execution>\n@@ -148,33 +176,4 @@\n       </plugin>\n     </plugins>\n   </build>\n-\n-  <dependencies>\n-    <!-- Graal Polyglot Framework -->\n-    <dependency>\n-      <groupId>org.graalvm.polyglot</groupId>\n-      <artifactId>polyglot</artifactId>\n-      <version>${graaljs.version}</version>\n-    </dependency>\n-    <!-- Graal JavaScript ScriptEngine JSR 223 support -->\n-    <dependency>\n-      <groupId>org.graalvm.js</groupId>\n-      <artifactId>js-scriptengine</artifactId>\n-      <version>${graaljs.version}</version>\n-    </dependency>\n-    <!-- Graal TRegex engine (internally used by Graal JavaScript engine) -->\n-    <dependency>\n-      <groupId>org.graalvm.regex</groupId>\n-      <artifactId>regex</artifactId>\n-      <version>${graaljs.version}</version>\n-    </dependency>\n-    <!-- Graal JavaScript engine (depends on Graal TRegex engine, must be added after it) -->\n-    <dependency>\n-      <groupId>org.graalvm.polyglot</groupId>\n-      <artifactId>js-community</artifactId>\n-      <version>${graaljs.version}</version>\n-      <type>pom</type>\n-      <scope>runtime</scope>\n-    </dependency>\n-  </dependencies>\n </project>\n\ndiff --git a/bundles/org.openhab.automation.jsscriptingnashorn/pom.xml b/bundles/org.openhab.automation.jsscriptingnashorn/pom.xml\nindex 6ebb72c72e0bc..8c45453932e1d 100644\n--- a/bundles/org.openhab.automation.jsscriptingnashorn/pom.xml\n+++ b/bundles/org.openhab.automation.jsscriptingnashorn/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.automation.jythonscripting/pom.xml b/bundles/org.openhab.automation.jythonscripting/pom.xml\nindex 23da869fb6992..bf20650851cf7 100644\n--- a/bundles/org.openhab.automation.jythonscripting/pom.xml\n+++ b/bundles/org.openhab.automation.jythonscripting/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.automation.pidcontroller/pom.xml b/bundles/org.openhab.automation.pidcontroller/pom.xml\nindex 272bd0e0f00f2..fefb0bc12d7f0 100644\n--- a/bundles/org.openhab.automation.pidcontroller/pom.xml\n+++ b/bundles/org.openhab.automation.pidcontroller/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.automation.pwm/pom.xml b/bundles/org.openhab.automation.pwm/pom.xml\nindex fa475e6a02bd6..72d688ce52014 100644\n--- a/bundles/org.openhab.automation.pwm/pom.xml\n+++ b/bundles/org.openhab.automation.pwm/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.adorne/pom.xml b/bundles/org.openhab.binding.adorne/pom.xml\nindex baa59cab8b427..bc5def904ff22 100644\n--- a/bundles/org.openhab.binding.adorne/pom.xml\n+++ b/bundles/org.openhab.binding.adorne/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.ahawastecollection/pom.xml b/bundles/org.openhab.binding.ahawastecollection/pom.xml\nindex 8148c481ef4b0..dd6d029a85614 100644\n--- a/bundles/org.openhab.binding.ahawastecollection/pom.xml\n+++ b/bundles/org.openhab.binding.ahawastecollection/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.airgradient/pom.xml b/bundles/org.openhab.binding.airgradient/pom.xml\nindex e64409befe1da..bc763ddf83fb3 100644\n--- a/bundles/org.openhab.binding.airgradient/pom.xml\n+++ b/bundles/org.openhab.binding.airgradient/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.airparif/pom.xml b/bundles/org.openhab.binding.airparif/pom.xml\nindex 355042dd5f6e7..68c99aa61308c 100755\n--- a/bundles/org.openhab.binding.airparif/pom.xml\n+++ b/bundles/org.openhab.binding.airparif/pom.xml\n@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.airq/pom.xml b/bundles/org.openhab.binding.airq/pom.xml\nindex 7258998dd69af..00211339dc09f 100644\n--- a/bundles/org.openhab.binding.airq/pom.xml\n+++ b/bundles/org.openhab.binding.airq/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.airquality/pom.xml b/bundles/org.openhab.binding.airquality/pom.xml\nindex 6dcf45622ee2a..d2c57fb816297 100644\n--- a/bundles/org.openhab.binding.airquality/pom.xml\n+++ b/bundles/org.openhab.binding.airquality/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.airvisualnode/pom.xml b/bundles/org.openhab.binding.airvisualnode/pom.xml\nindex 86f96cd0832c5..b7c8d8349dfc8 100644\n--- a/bundles/org.openhab.binding.airvisualnode/pom.xml\n+++ b/bundles/org.openhab.binding.airvisualnode/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n@@ -15,9 +15,7 @@\n   <name>openHAB Add-ons :: Bundles :: AirVisual Node Air Quality Monitor Binding</name>\n \n   <properties>\n-    <bnd.importpackage>\n-      !jcifs\n-    </bnd.importpackage>\n+    <bnd.importpackage>!jcifs</bnd.importpackage>\n   </properties>\n \n   <dependencies>\n\ndiff --git a/bundles/org.openhab.binding.alarmdecoder/pom.xml b/bundles/org.openhab.binding.alarmdecoder/pom.xml\nindex 885a99a11e560..695e971213884 100644\n--- a/bundles/org.openhab.binding.alarmdecoder/pom.xml\n+++ b/bundles/org.openhab.binding.alarmdecoder/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.allplay/pom.xml b/bundles/org.openhab.binding.allplay/pom.xml\nindex e9719f1f39321..9e740dd6e8575 100644\n--- a/bundles/org.openhab.binding.allplay/pom.xml\n+++ b/bundles/org.openhab.binding.allplay/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.amazondashbutton/pom.xml b/bundles/org.openhab.binding.amazondashbutton/pom.xml\nindex 7ac9995a8d87b..4a834b0479135 100644\n--- a/bundles/org.openhab.binding.amazondashbutton/pom.xml\n+++ b/bundles/org.openhab.binding.amazondashbutton/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.amazonechocontrol/pom.xml b/bundles/org.openhab.binding.amazonechocontrol/pom.xml\nindex 62df51e221a16..c01ca7c03b714 100644\n--- a/bundles/org.openhab.binding.amazonechocontrol/pom.xml\n+++ b/bundles/org.openhab.binding.amazonechocontrol/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.amberelectric/pom.xml b/bundles/org.openhab.binding.amberelectric/pom.xml\nindex a5f376a7a3b11..a286f16602a9d 100644\n--- a/bundles/org.openhab.binding.amberelectric/pom.xml\n+++ b/bundles/org.openhab.binding.amberelectric/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.ambientweather/pom.xml b/bundles/org.openhab.binding.ambientweather/pom.xml\nindex e58dd725a840c..113de0d29a97c 100644\n--- a/bundles/org.openhab.binding.ambientweather/pom.xml\n+++ b/bundles/org.openhab.binding.ambientweather/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n@@ -14,6 +14,10 @@\n \n   <name>openHAB Add-ons :: Bundles :: Ambient Weather Binding</name>\n \n+  <properties>\n+    <bnd.importpackage>android.*;resolution:=optional,com.android.org.*;resolution:=optional,dalvik.*;resolution:=optional,javax.annotation.meta.*;resolution:=optional,org.apache.harmony.*;resolution:=optional,org.conscrypt.*;resolution:=optional,sun.security.*;resolution:=optional</bnd.importpackage>\n+  </properties>\n+\n   <dependencies>\n     <dependency>\n       <groupId>org.openhab.osgiify</groupId>\n@@ -47,8 +51,4 @@\n     </dependency>\n   </dependencies>\n \n-  <properties>\n-    <bnd.importpackage>android.*;resolution:=optional,com.android.org.*;resolution:=optional,dalvik.*;resolution:=optional,javax.annotation.meta.*;resolution:=optional,org.apache.harmony.*;resolution:=optional,org.conscrypt.*;resolution:=optional,sun.security.*;resolution:=optional</bnd.importpackage>\n-  </properties>\n-\n </project>\n\ndiff --git a/bundles/org.openhab.binding.amplipi/pom.xml b/bundles/org.openhab.binding.amplipi/pom.xml\nindex 37e859d8024ae..e38a319b98295 100644\n--- a/bundles/org.openhab.binding.amplipi/pom.xml\n+++ b/bundles/org.openhab.binding.amplipi/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n@@ -26,10 +26,10 @@\n         <executions>\n           <execution>\n             <id>add-source</id>\n-            <phase>generate-sources</phase>\n             <goals>\n               <goal>add-source</goal>\n             </goals>\n+            <phase>generate-sources</phase>\n             <configuration>\n               <sources>\n                 <source>src/gen/java</source>\n\ndiff --git a/bundles/org.openhab.binding.androiddebugbridge/pom.xml b/bundles/org.openhab.binding.androiddebugbridge/pom.xml\nindex 19003394210e2..7a431ac889e9d 100644\n--- a/bundles/org.openhab.binding.androiddebugbridge/pom.xml\n+++ b/bundles/org.openhab.binding.androiddebugbridge/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.androidtv/pom.xml b/bundles/org.openhab.binding.androidtv/pom.xml\nindex 69cad8e66f997..0a67f5fa10f98 100644\n--- a/bundles/org.openhab.binding.androidtv/pom.xml\n+++ b/bundles/org.openhab.binding.androidtv/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.anel/pom.xml b/bundles/org.openhab.binding.anel/pom.xml\nindex ab6200b775813..802596d6b1ccf 100644\n--- a/bundles/org.openhab.binding.anel/pom.xml\n+++ b/bundles/org.openhab.binding.anel/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.anthem/pom.xml b/bundles/org.openhab.binding.anthem/pom.xml\nindex 98333500ccc87..bed334b35b700 100644\n--- a/bundles/org.openhab.binding.anthem/pom.xml\n+++ b/bundles/org.openhab.binding.anthem/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.argoclima/pom.xml b/bundles/org.openhab.binding.argoclima/pom.xml\nindex f3ff93524680b..eb4f08cfcee7a 100644\n--- a/bundles/org.openhab.binding.argoclima/pom.xml\n+++ b/bundles/org.openhab.binding.argoclima/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.astro/pom.xml b/bundles/org.openhab.binding.astro/pom.xml\nindex 7caa50e4dfd22..daedd13a0a2e1 100644\n--- a/bundles/org.openhab.binding.astro/pom.xml\n+++ b/bundles/org.openhab.binding.astro/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.asuswrt/pom.xml b/bundles/org.openhab.binding.asuswrt/pom.xml\nindex d850a288776c9..f6f0a83384b8d 100644\n--- a/bundles/org.openhab.binding.asuswrt/pom.xml\n+++ b/bundles/org.openhab.binding.asuswrt/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.atlona/pom.xml b/bundles/org.openhab.binding.atlona/pom.xml\nindex bfdb665c0b5e5..724a89184278e 100644\n--- a/bundles/org.openhab.binding.atlona/pom.xml\n+++ b/bundles/org.openhab.binding.atlona/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.autelis/pom.xml b/bundles/org.openhab.binding.autelis/pom.xml\nindex 97616940b8e54..91f7dea1bf36d 100644\n--- a/bundles/org.openhab.binding.autelis/pom.xml\n+++ b/bundles/org.openhab.binding.autelis/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.automower/pom.xml b/bundles/org.openhab.binding.automower/pom.xml\nindex 0fbc4d9a9c6a4..05880ffce92ba 100644\n--- a/bundles/org.openhab.binding.automower/pom.xml\n+++ b/bundles/org.openhab.binding.automower/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.avmfritz/pom.xml b/bundles/org.openhab.binding.avmfritz/pom.xml\nindex c0a6d77c9469d..d2e73ec80df3a 100644\n--- a/bundles/org.openhab.binding.avmfritz/pom.xml\n+++ b/bundles/org.openhab.binding.avmfritz/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.awattar/pom.xml b/bundles/org.openhab.binding.awattar/pom.xml\nindex 2b1c473f9f45c..b19535a38daab 100644\n--- a/bundles/org.openhab.binding.awattar/pom.xml\n+++ b/bundles/org.openhab.binding.awattar/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.benqprojector/pom.xml b/bundles/org.openhab.binding.benqprojector/pom.xml\nindex fee1ce1284dda..2f05976feaacf 100644\n--- a/bundles/org.openhab.binding.benqprojector/pom.xml\n+++ b/bundles/org.openhab.binding.benqprojector/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bigassfan/pom.xml b/bundles/org.openhab.binding.bigassfan/pom.xml\nindex 2e7fcedff9790..94670cb87df3a 100644\n--- a/bundles/org.openhab.binding.bigassfan/pom.xml\n+++ b/bundles/org.openhab.binding.bigassfan/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.airthings/pom.xml b/bundles/org.openhab.binding.bluetooth.airthings/pom.xml\nindex 18380ff548f85..2ed5208d5b08c 100644\n--- a/bundles/org.openhab.binding.bluetooth.airthings/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.airthings/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.am43/pom.xml b/bundles/org.openhab.binding.bluetooth.am43/pom.xml\nindex 4d58f17d69ed9..02efded94429a 100644\n--- a/bundles/org.openhab.binding.bluetooth.am43/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.am43/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.bluegiga/pom.xml b/bundles/org.openhab.binding.bluetooth.bluegiga/pom.xml\nindex a73370123304f..f5d4a6917f21a 100644\n--- a/bundles/org.openhab.binding.bluetooth.bluegiga/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.bluegiga/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.bluez/pom.xml b/bundles/org.openhab.binding.bluetooth.bluez/pom.xml\nindex 7db8b63a50587..2f8b933373497 100644\n--- a/bundles/org.openhab.binding.bluetooth.bluez/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.bluez/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.blukii/pom.xml b/bundles/org.openhab.binding.bluetooth.blukii/pom.xml\nindex e9e8ac8900f7a..dc13f8ef7cf95 100644\n--- a/bundles/org.openhab.binding.bluetooth.blukii/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.blukii/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.daikinmadoka/pom.xml b/bundles/org.openhab.binding.bluetooth.daikinmadoka/pom.xml\nindex a9777dac8ba42..e7c906c834e2d 100644\n--- a/bundles/org.openhab.binding.bluetooth.daikinmadoka/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.daikinmadoka/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.enoceanble/pom.xml b/bundles/org.openhab.binding.bluetooth.enoceanble/pom.xml\nindex 729d346754feb..df4663c2d4ef2 100644\n--- a/bundles/org.openhab.binding.bluetooth.enoceanble/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.enoceanble/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.generic/pom.xml b/bundles/org.openhab.binding.bluetooth.generic/pom.xml\nindex 589b0a0edd9bb..c228e84df68a4 100644\n--- a/bundles/org.openhab.binding.bluetooth.generic/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.generic/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.govee/pom.xml b/bundles/org.openhab.binding.bluetooth.govee/pom.xml\nindex 1b819212a0564..c2063c7bb169d 100644\n--- a/bundles/org.openhab.binding.bluetooth.govee/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.govee/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.grundfosalpha/pom.xml b/bundles/org.openhab.binding.bluetooth.grundfosalpha/pom.xml\nindex d80dcd0c10425..60af653d70a5b 100644\n--- a/bundles/org.openhab.binding.bluetooth.grundfosalpha/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.grundfosalpha/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.hdpowerview/pom.xml b/bundles/org.openhab.binding.bluetooth.hdpowerview/pom.xml\nindex 842c06ee150ec..0699e2c0da2a2 100644\n--- a/bundles/org.openhab.binding.bluetooth.hdpowerview/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.hdpowerview/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n@@ -29,10 +29,10 @@\n         <artifactId>maven-resources-plugin</artifactId>\n         <executions>\n           <execution>\n-            <phase>generate-sources</phase>\n             <goals>\n               <goal>copy-resources</goal>\n             </goals>\n+            <phase>generate-sources</phase>\n             <configuration>\n               <outputDirectory>${project.build.directory}/import</outputDirectory>\n               <overwrite>true</overwrite>\n@@ -53,10 +53,10 @@\n         <artifactId>build-helper-maven-plugin</artifactId>\n         <executions>\n           <execution>\n-            <phase>generate-sources</phase>\n             <goals>\n               <goal>add-source</goal>\n             </goals>\n+            <phase>generate-sources</phase>\n             <configuration>\n               <sources>\n                 <source>${project.build.directory}/import</source>\n\ndiff --git a/bundles/org.openhab.binding.bluetooth.radoneye/pom.xml b/bundles/org.openhab.binding.bluetooth.radoneye/pom.xml\nindex a4a8640b68ca4..3c7ebc3a07f0e 100644\n--- a/bundles/org.openhab.binding.bluetooth.radoneye/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.radoneye/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.roaming/pom.xml b/bundles/org.openhab.binding.bluetooth.roaming/pom.xml\nindex d9871b6a802ad..a7a728d99de61 100644\n--- a/bundles/org.openhab.binding.bluetooth.roaming/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.roaming/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth.ruuvitag/pom.xml b/bundles/org.openhab.binding.bluetooth.ruuvitag/pom.xml\nindex ca840c7f06578..e1323d301b359 100644\n--- a/bundles/org.openhab.binding.bluetooth.ruuvitag/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth.ruuvitag/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bluetooth/pom.xml b/bundles/org.openhab.binding.bluetooth/pom.xml\nindex bda0f335307bc..968428141913c 100644\n--- a/bundles/org.openhab.binding.bluetooth/pom.xml\n+++ b/bundles/org.openhab.binding.bluetooth/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bondhome/pom.xml b/bundles/org.openhab.binding.bondhome/pom.xml\nindex 52b7da4deab3e..4a8e4f719805e 100644\n--- a/bundles/org.openhab.binding.bondhome/pom.xml\n+++ b/bundles/org.openhab.binding.bondhome/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.boschindego/pom.xml b/bundles/org.openhab.binding.boschindego/pom.xml\nindex 56278be2e41ee..0fcb1cac18564 100644\n--- a/bundles/org.openhab.binding.boschindego/pom.xml\n+++ b/bundles/org.openhab.binding.boschindego/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.boschshc/pom.xml b/bundles/org.openhab.binding.boschshc/pom.xml\nindex be00e14f80755..e3937e1022b49 100644\n--- a/bundles/org.openhab.binding.boschshc/pom.xml\n+++ b/bundles/org.openhab.binding.boschshc/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bosesoundtouch/pom.xml b/bundles/org.openhab.binding.bosesoundtouch/pom.xml\nindex 4197c551ba1fc..c3d5dbcd17964 100644\n--- a/bundles/org.openhab.binding.bosesoundtouch/pom.xml\n+++ b/bundles/org.openhab.binding.bosesoundtouch/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.broadlink/pom.xml b/bundles/org.openhab.binding.broadlink/pom.xml\nindex 5dc594c2ca272..94a86e8bfefb5 100644\n--- a/bundles/org.openhab.binding.broadlink/pom.xml\n+++ b/bundles/org.openhab.binding.broadlink/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.broadlinkthermostat/pom.xml b/bundles/org.openhab.binding.broadlinkthermostat/pom.xml\nindex 18fc9ba5724c9..8f80e1b0ed1f5 100644\n--- a/bundles/org.openhab.binding.broadlinkthermostat/pom.xml\n+++ b/bundles/org.openhab.binding.broadlinkthermostat/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bsblan/pom.xml b/bundles/org.openhab.binding.bsblan/pom.xml\nindex 7cfc33aaf0626..9abb4744fffa3 100644\n--- a/bundles/org.openhab.binding.bsblan/pom.xml\n+++ b/bundles/org.openhab.binding.bsblan/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.bticinosmarther/pom.xml b/bundles/org.openhab.binding.bticinosmarther/pom.xml\nindex b670ff920f227..d0bd0fc72f4c3 100644\n--- a/bundles/org.openhab.binding.bticinosmarther/pom.xml\n+++ b/bundles/org.openhab.binding.bticinosmarther/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.buienradar/pom.xml b/bundles/org.openhab.binding.buienradar/pom.xml\nindex ec95cc24012c0..9f2fa6dbd3967 100644\n--- a/bundles/org.openhab.binding.buienradar/pom.xml\n+++ b/bundles/org.openhab.binding.buienradar/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n     <groupId>org.openhab.addons.bundles</groupId>\n\ndiff --git a/bundles/org.openhab.binding.caddx/pom.xml b/bundles/org.openhab.binding.caddx/pom.xml\nindex 4d1ee445a1de9..824a241762282 100644\n--- a/bundles/org.openhab.binding.caddx/pom.xml\n+++ b/bundles/org.openhab.binding.caddx/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.cbus/pom.xml b/bundles/org.openhab.binding.cbus/pom.xml\nindex 8323889d34a0e..d873bcf9adc82 100644\n--- a/bundles/org.openhab.binding.cbus/pom.xml\n+++ b/bundles/org.openhab.binding.cbus/pom.xml\n@@ -1,7 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.chatgpt/pom.xml b/bundles/org.openhab.binding.chatgpt/pom.xml\nindex 509f926e6c0bb..063c0e2f61b41 100644\n--- a/bundles/org.openhab.binding.chatgpt/pom.xml\n+++ b/bundles/org.openhab.binding.chatgpt/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.chromecast/pom.xml b/bundles/org.openhab.binding.chromecast/pom.xml\nindex 882e88aae3dbe..f4e30026a9944 100644\n--- a/bundles/org.openhab.binding.chromecast/pom.xml\n+++ b/bundles/org.openhab.binding.chromecast/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.cm11a/pom.xml b/bundles/org.openhab.binding.cm11a/pom.xml\nindex 18ef64d2e7d73..17ed54648d8ff 100644\n--- a/bundles/org.openhab.binding.cm11a/pom.xml\n+++ b/bundles/org.openhab.binding.cm11a/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.comfoair/pom.xml b/bundles/org.openhab.binding.comfoair/pom.xml\nindex b578cd7b35e96..ed24e085b2530 100644\n--- a/bundles/org.openhab.binding.comfoair/pom.xml\n+++ b/bundles/org.openhab.binding.comfoair/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.coolmasternet/pom.xml b/bundles/org.openhab.binding.coolmasternet/pom.xml\nindex 787d2c73dcc56..acc01373cf8f0 100644\n--- a/bundles/org.openhab.binding.coolmasternet/pom.xml\n+++ b/bundles/org.openhab.binding.coolmasternet/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.coronastats/pom.xml b/bundles/org.openhab.binding.coronastats/pom.xml\nindex 7036518f45ae8..a9c7a4947a1dd 100644\n--- a/bundles/org.openhab.binding.coronastats/pom.xml\n+++ b/bundles/org.openhab.binding.coronastats/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.daikin/pom.xml b/bundles/org.openhab.binding.daikin/pom.xml\nindex 3c3a5ae97b1d0..31e8f7a6f25dd 100644\n--- a/bundles/org.openhab.binding.daikin/pom.xml\n+++ b/bundles/org.openhab.binding.daikin/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dali/pom.xml b/bundles/org.openhab.binding.dali/pom.xml\nindex 7af0810a219b8..ab52c1cc0f3fe 100644\n--- a/bundles/org.openhab.binding.dali/pom.xml\n+++ b/bundles/org.openhab.binding.dali/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.danfossairunit/pom.xml b/bundles/org.openhab.binding.danfossairunit/pom.xml\nindex 128a719876596..6d3b79477f2de 100644\n--- a/bundles/org.openhab.binding.danfossairunit/pom.xml\n+++ b/bundles/org.openhab.binding.danfossairunit/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dbquery/pom.xml b/bundles/org.openhab.binding.dbquery/pom.xml\nindex 6075632532d8b..de8ca32810168 100644\n--- a/bundles/org.openhab.binding.dbquery/pom.xml\n+++ b/bundles/org.openhab.binding.dbquery/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n@@ -15,9 +15,7 @@\n   <name>openHAB Add-ons :: Bundles :: DBQuery Binding</name>\n \n   <properties>\n-    <bnd.importpackage>\n-      !javax.annotation;!android.*,!com.android.*,!com.google.appengine.*,!dalvik.system,!kotlin.*,!kotlinx.*,!org.conscrypt,!sun.security.ssl,!org.apache.harmony.*,!org.apache.http.*,!rx.*,!org.msgpack.*,!org.bouncycastle.*,!org.openjsse.*\n-    </bnd.importpackage>\n+    <bnd.importpackage>!javax.annotation;!android.*,!com.android.*,!com.google.appengine.*,!dalvik.system,!kotlin.*,!kotlinx.*,!org.conscrypt,!sun.security.ssl,!org.apache.harmony.*,!org.apache.http.*,!rx.*,!org.msgpack.*,!org.bouncycastle.*,!org.openjsse.*</bnd.importpackage>\n     <influx2.version>7.0.0</influx2.version>\n     <io.reactivex.rxjava3>3.1.8</io.reactivex.rxjava3>\n     <retrofit.version>2.10.0</retrofit.version>\n@@ -31,8 +29,8 @@\n       <version>${influx2.version}</version>\n     </dependency>\n     <dependency>\n-      <artifactId>influxdb-client-core</artifactId>\n       <groupId>com.influxdb</groupId>\n+      <artifactId>influxdb-client-core</artifactId>\n       <version>${influx2.version}</version>\n     </dependency>\n     <dependency>\n@@ -62,8 +60,8 @@\n       <version>${retrofit.version}</version>\n     </dependency>\n     <dependency>\n-      <artifactId>retrofit</artifactId>\n       <groupId>com.squareup.retrofit2</groupId>\n+      <artifactId>retrofit</artifactId>\n       <version>${retrofit.version}</version>\n     </dependency>\n     <dependency>\n@@ -72,9 +70,10 @@\n       <version>${retrofit.version}</version>\n     </dependency>\n \n-    <dependency> <!-- also used for querydb library -->\n-      <artifactId>gson</artifactId>\n+    <dependency>\n       <groupId>com.google.code.gson</groupId>\n+      <!-- also used for querydb library -->\n+      <artifactId>gson</artifactId>\n       <version>${gson.version}</version>\n     </dependency>\n     <dependency>\n@@ -83,13 +82,13 @@\n       <version>3.0.2</version>\n     </dependency>\n     <dependency>\n-      <artifactId>gson-fire</artifactId>\n       <groupId>io.gsonfire</groupId>\n+      <artifactId>gson-fire</artifactId>\n       <version>1.8.0</version>\n     </dependency>\n     <dependency>\n-      <artifactId>okio</artifactId>\n       <groupId>com.squareup.okio</groupId>\n+      <artifactId>okio</artifactId>\n       <version>${okio.version}</version>\n       <scope>runtime</scope>\n     </dependency>\n@@ -100,23 +99,23 @@\n       <scope>runtime</scope>\n     </dependency>\n     <dependency>\n-      <artifactId>commons-csv</artifactId>\n       <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-csv</artifactId>\n       <version>1.10.0</version>\n     </dependency>\n     <dependency>\n-      <artifactId>json</artifactId>\n       <groupId>org.json</groupId>\n+      <artifactId>json</artifactId>\n       <version>20231013</version>\n     </dependency>\n     <dependency>\n-      <artifactId>okhttp</artifactId>\n       <groupId>com.squareup.okhttp3</groupId>\n+      <artifactId>okhttp</artifactId>\n       <version>${okhttp3.version}</version>\n     </dependency>\n     <dependency>\n-      <artifactId>logging-interceptor</artifactId>\n       <groupId>com.squareup.okhttp3</groupId>\n+      <artifactId>logging-interceptor</artifactId>\n       <version>${okhttp3.version}</version>\n     </dependency>\n     <dependency>\n@@ -125,8 +124,8 @@\n       <version>${io.reactivex.rxjava3}</version>\n     </dependency>\n     <dependency>\n-      <artifactId>reactive-streams</artifactId>\n       <groupId>org.reactivestreams</groupId>\n+      <artifactId>reactive-streams</artifactId>\n       <version>1.0.4</version>\n     </dependency>\n     <dependency>\n\ndiff --git a/bundles/org.openhab.binding.deconz/pom.xml b/bundles/org.openhab.binding.deconz/pom.xml\nindex 3fd6ee2ab2e24..2cf5c1f5246fa 100644\n--- a/bundles/org.openhab.binding.deconz/pom.xml\n+++ b/bundles/org.openhab.binding.deconz/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.denonmarantz/pom.xml b/bundles/org.openhab.binding.denonmarantz/pom.xml\nindex dd2474ca1f337..87a47f572c78d 100644\n--- a/bundles/org.openhab.binding.denonmarantz/pom.xml\n+++ b/bundles/org.openhab.binding.denonmarantz/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.deutschebahn/pom.xml b/bundles/org.openhab.binding.deutschebahn/pom.xml\nindex cbf5e5e243984..2429daaf554a5 100644\n--- a/bundles/org.openhab.binding.deutschebahn/pom.xml\n+++ b/bundles/org.openhab.binding.deutschebahn/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n@@ -20,14 +20,6 @@\n         <groupId>org.jvnet.jaxb2.maven2</groupId>\n         <artifactId>maven-jaxb2-plugin</artifactId>\n         <version>0.15.3</version>\n-        <executions>\n-          <execution>\n-            <id>generate-jaxb-sources</id>\n-            <goals>\n-              <goal>generate</goal>\n-            </goals>\n-          </execution>\n-        </executions>\n         <configuration>\n           <generatePackage>org.openhab.binding.deutschebahn.internal.timetable.dto</generatePackage>\n           <schemaDirectory>src/main/resources/xsd</schemaDirectory>\n@@ -47,6 +39,14 @@\n             </plugin>\n           </plugins>\n         </configuration>\n+        <executions>\n+          <execution>\n+            <id>generate-jaxb-sources</id>\n+            <goals>\n+              <goal>generate</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n       </plugin>\n     </plugins>\n   </build>\n\ndiff --git a/bundles/org.openhab.binding.digiplex/pom.xml b/bundles/org.openhab.binding.digiplex/pom.xml\nindex 90698c2ddaf18..ac602d2ba499c 100644\n--- a/bundles/org.openhab.binding.digiplex/pom.xml\n+++ b/bundles/org.openhab.binding.digiplex/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.digitalstrom/pom.xml b/bundles/org.openhab.binding.digitalstrom/pom.xml\nindex c3cfb7af8e3a4..fd3fab658ed97 100644\n--- a/bundles/org.openhab.binding.digitalstrom/pom.xml\n+++ b/bundles/org.openhab.binding.digitalstrom/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dlinksmarthome/pom.xml b/bundles/org.openhab.binding.dlinksmarthome/pom.xml\nindex 3b49a898fe662..0b9221d44b45d 100644\n--- a/bundles/org.openhab.binding.dlinksmarthome/pom.xml\n+++ b/bundles/org.openhab.binding.dlinksmarthome/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dmx/pom.xml b/bundles/org.openhab.binding.dmx/pom.xml\nindex 314a9653dc727..2ea630a5a4b95 100644\n--- a/bundles/org.openhab.binding.dmx/pom.xml\n+++ b/bundles/org.openhab.binding.dmx/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dolbycp/pom.xml b/bundles/org.openhab.binding.dolbycp/pom.xml\nindex 7e90a7d111bce..4a5845bb60942 100644\n--- a/bundles/org.openhab.binding.dolbycp/pom.xml\n+++ b/bundles/org.openhab.binding.dolbycp/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dominoswiss/pom.xml b/bundles/org.openhab.binding.dominoswiss/pom.xml\nindex 168b90bd6056d..dd056a745c3d1 100644\n--- a/bundles/org.openhab.binding.dominoswiss/pom.xml\n+++ b/bundles/org.openhab.binding.dominoswiss/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n\ndiff --git a/bundles/org.openhab.binding.doorbird/pom.xml b/bundles/org.openhab.binding.doorbird/pom.xml\nindex a40a68d2c75ad..3ef5f5d69a050 100644\n--- a/bundles/org.openhab.binding.doorbird/pom.xml\n+++ b/bundles/org.openhab.binding.doorbird/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.draytonwiser/pom.xml b/bundles/org.openhab.binding.draytonwiser/pom.xml\nindex 16e7afadeec71..ea1e22603596f 100644\n--- a/bundles/org.openhab.binding.draytonwiser/pom.xml\n+++ b/bundles/org.openhab.binding.draytonwiser/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dscalarm/pom.xml b/bundles/org.openhab.binding.dscalarm/pom.xml\nindex 1fd8ee416cfe6..ed0c4634292db 100644\n--- a/bundles/org.openhab.binding.dscalarm/pom.xml\n+++ b/bundles/org.openhab.binding.dscalarm/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dsmr/pom.xml b/bundles/org.openhab.binding.dsmr/pom.xml\nindex 32efe1262a41f..372c751701da5 100644\n--- a/bundles/org.openhab.binding.dsmr/pom.xml\n+++ b/bundles/org.openhab.binding.dsmr/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dwdpollenflug/pom.xml b/bundles/org.openhab.binding.dwdpollenflug/pom.xml\nindex d1bd85f096cdf..1899a6e1f8543 100644\n--- a/bundles/org.openhab.binding.dwdpollenflug/pom.xml\n+++ b/bundles/org.openhab.binding.dwdpollenflug/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.dwdunwetter/pom.xml b/bundles/org.openhab.binding.dwdunwetter/pom.xml\nindex 3fda40410f485..c3ffbf6028c80 100644\n--- a/bundles/org.openhab.binding.dwdunwetter/pom.xml\n+++ b/bundles/org.openhab.binding.dwdunwetter/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.easee/pom.xml b/bundles/org.openhab.binding.easee/pom.xml\nindex 460093e7fad08..05d2c3ba2c69b 100644\n--- a/bundles/org.openhab.binding.easee/pom.xml\n+++ b/bundles/org.openhab.binding.easee/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.echonetlite/pom.xml b/bundles/org.openhab.binding.echonetlite/pom.xml\nindex ad4bbb4914614..b9bba81c81e60 100644\n--- a/bundles/org.openhab.binding.echonetlite/pom.xml\n+++ b/bundles/org.openhab.binding.echonetlite/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.ecobee/pom.xml b/bundles/org.openhab.binding.ecobee/pom.xml\nindex 5ee2543d533e8..a3f4591f1a892 100644\n--- a/bundles/org.openhab.binding.ecobee/pom.xml\n+++ b/bundles/org.openhab.binding.ecobee/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.ecotouch/pom.xml b/bundles/org.openhab.binding.ecotouch/pom.xml\nindex 8f6c412f154e8..9d0e127d60972 100644\n--- a/bundles/org.openhab.binding.ecotouch/pom.xml\n+++ b/bundles/org.openhab.binding.ecotouch/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.ecovacs/pom.xml b/bundles/org.openhab.binding.ecovacs/pom.xml\nindex 2d1b45cf657f1..76107cfedda38 100644\n--- a/bundles/org.openhab.binding.ecovacs/pom.xml\n+++ b/bundles/org.openhab.binding.ecovacs/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.ecowatt/pom.xml b/bundles/org.openhab.binding.ecowatt/pom.xml\nindex ea9d0315fbb8b..84f47a1f8ac18 100644\n--- a/bundles/org.openhab.binding.ecowatt/pom.xml\n+++ b/bundles/org.openhab.binding.ecowatt/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.ekey/pom.xml b/bundles/org.openhab.binding.ekey/pom.xml\nindex 8a221eb0321f8..08f1e9c2bc840 100644\n--- a/bundles/org.openhab.binding.ekey/pom.xml\n+++ b/bundles/org.openhab.binding.ekey/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.electroluxappliance/pom.xml b/bundles/org.openhab.binding.electroluxappliance/pom.xml\nindex 430f221b188b6..2a831dbea5ff3 100644\n--- a/bundles/org.openhab.binding.electroluxappliance/pom.xml\n+++ b/bundles/org.openhab.binding.electroluxappliance/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.binding.elerotransmitterstick/pom.xml b/bundles/org.openhab.binding.elerotransmitterstick/pom.xml\nindex 0eea526d39ca5..ab141604f2ffa 100644\n--- a/bundles/org.openhab.binding.elerotransmitterstick/pom.xml\n+++ b/bundles/org.openhab.binding.elerotransmitterstick/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n",
    "test_patch": "diff --git a/bom/test-index/pom.xml b/bom/test-index/pom.xml\nindex d6ea459d8c896..ed0a69e5153e5 100644\n--- a/bom/test-index/pom.xml\n+++ b/bom/test-index/pom.xml\n@@ -1,6 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18262",
    "pr_id": 18262,
    "issue_id": 18259,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[mqtt.homeassistant] Collapse scenes into a single channel\nSee discussion at https://community.openhab.org/t/suggestion-for-openhab-4-3-home-assistant-mqtt-scenes-in-single-channel/161226",
    "issue_word_count": 29,
    "test_files_count": 1,
    "non_test_files_count": 5,
    "pr_changed_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrigger.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Scene.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/config/dto/AbstractChannelConfiguration.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SceneTests.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SceneTests.java"
    ],
    "base_commit": "5a57b9e3c75d124f4dca4da9568be55e12a594f0",
    "head_commit": "17107cb101437a1ef68500e8deb38c963d138c22",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18262",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18262",
    "dockerfile": "",
    "pr_merged_at": "2025-02-18T12:30:51.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java\nindex 4bee6d2440561..f15d27936b9c6 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java\n@@ -43,6 +43,7 @@\n import org.openhab.binding.mqtt.homeassistant.internal.config.dto.Availability;\n import org.openhab.binding.mqtt.homeassistant.internal.config.dto.AvailabilityMode;\n import org.openhab.binding.mqtt.homeassistant.internal.config.dto.Device;\n+import org.openhab.core.config.core.Configuration;\n import org.openhab.core.io.transport.mqtt.MqttBrokerConnection;\n import org.openhab.core.library.unit.ImperialUnits;\n import org.openhab.core.library.unit.SIUnits;\n@@ -416,4 +417,45 @@ public C getChannelConfiguration() {\n     private ChannelGroupTypeUID getChannelGroupTypeUID(String prefix) {\n         return new ChannelGroupTypeUID(MqttBindingConstants.BINDING_ID, prefix + \"_\" + uniqueId);\n     }\n+\n+    public boolean mergeable(AbstractComponent<?> other) {\n+        return false;\n+    }\n+\n+    protected Configuration mergeChannelConfiguration(ComponentChannel channel, AbstractComponent<C> other) {\n+        Configuration currentConfiguration = channel.getChannel().getConfiguration();\n+        Configuration newConfiguration = new Configuration();\n+        newConfiguration.put(\"component\", currentConfiguration.get(\"component\"));\n+        newConfiguration.put(\"nodeid\", currentConfiguration.get(\"nodeid\"));\n+        Object objectIdObject = currentConfiguration.get(\"objectid\");\n+        if (objectIdObject instanceof String objectIdString) {\n+            if (!objectIdString.equals(other.getHaID().objectID)) {\n+                newConfiguration.put(\"objectid\", List.of(objectIdString, other.getHaID().objectID));\n+            }\n+        } else if (objectIdObject instanceof List<?> objectIdList) {\n+            newConfiguration.put(\"objectid\", Stream.concat(objectIdList.stream(), Stream.of(other.getHaID().objectID))\n+                    .sorted().distinct().toList());\n+        }\n+        Object configObject = currentConfiguration.get(\"config\");\n+        if (configObject instanceof String configString) {\n+            if (!configString.equals(other.getChannelConfigurationJson())) {\n+                newConfiguration.put(\"config\", List.of(configString, other.getChannelConfigurationJson()));\n+            }\n+        } else if (configObject instanceof List<?> configList) {\n+            newConfiguration.put(\"config\",\n+                    Stream.concat(configList.stream(), Stream.of(other.getChannelConfigurationJson())).sorted()\n+                            .distinct().toList());\n+        }\n+        return newConfiguration;\n+    }\n+\n+    /**\n+     * Take another component of the same type, and merge it so that only one (set of)\n+     * channel(s) exist on the Thing.\n+     *\n+     * @return if the component was stopped, and thus needs restarted\n+     */\n+    public boolean merge(AbstractComponent<?> other) {\n+        return false;\n+    }\n }\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrigger.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrigger.java\nindex 746c98c66caeb..6c4de70323657 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrigger.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrigger.java\n@@ -12,7 +12,7 @@\n  */\n package org.openhab.binding.mqtt.homeassistant.internal.component;\n \n-import java.util.List;\n+import java.util.Objects;\n import java.util.Set;\n import java.util.stream.Stream;\n \n@@ -91,44 +91,40 @@ public DeviceTrigger(ComponentFactory.ComponentConfiguration componentConfigurat\n                 .stateTopic(channelConfiguration.topic, channelConfiguration.getValueTemplate()).trigger(true).build();\n     }\n \n+    @Override\n+    public boolean mergeable(AbstractComponent<?> other) {\n+        if (other instanceof DeviceTrigger newTrigger\n+                && newTrigger.getChannelConfiguration().getSubtype().equals(getChannelConfiguration().getSubtype())\n+                && newTrigger.getChannelConfiguration().getTopic().equals(getChannelConfiguration().getTopic())\n+                && getHaID().nodeID.equals(newTrigger.getHaID().nodeID)) {\n+            String newTriggerValueTemplate = newTrigger.getChannelConfiguration().getValueTemplate();\n+            String oldTriggerValueTemplate = getChannelConfiguration().getValueTemplate();\n+            if ((newTriggerValueTemplate == null && oldTriggerValueTemplate == null)\n+                    || (newTriggerValueTemplate != null & oldTriggerValueTemplate != null\n+                            && newTriggerValueTemplate.equals(oldTriggerValueTemplate))) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n     /**\n      * Take another DeviceTrigger (presumably whose subtype, topic, and value template match),\n      * and adjust this component's channel to accept the payload that trigger allows.\n      * \n      * @return if the component was stopped, and thus needs restarted\n      */\n+    @Override\n+    public boolean merge(AbstractComponent<?> other) {\n+        DeviceTrigger newTrigger = (DeviceTrigger) other;\n+        ComponentChannel channel = Objects.requireNonNull(channels.get(componentId));\n+        Configuration newConfiguration = mergeChannelConfiguration(channel, newTrigger);\n \n-    public boolean merge(DeviceTrigger other) {\n-        ComponentChannel channel = channels.get(componentId);\n         TextValue value = (TextValue) channel.getState().getCache();\n         Set<String> payloads = value.getStates();\n-        // Append objectid/config to channel configuration\n-        Configuration currentConfiguration = channel.getChannel().getConfiguration();\n-        Configuration newConfiguration = new Configuration();\n-        newConfiguration.put(\"component\", currentConfiguration.get(\"component\"));\n-        newConfiguration.put(\"nodeid\", currentConfiguration.get(\"nodeid\"));\n-        Object objectIdObject = currentConfiguration.get(\"objectid\");\n-        if (objectIdObject instanceof String objectIdString) {\n-            if (!objectIdString.equals(other.getHaID().objectID)) {\n-                newConfiguration.put(\"objectid\", List.of(objectIdString, other.getHaID().objectID));\n-            }\n-        } else if (objectIdObject instanceof List<?> objectIdList) {\n-            newConfiguration.put(\"objectid\", Stream.concat(objectIdList.stream(), Stream.of(other.getHaID().objectID))\n-                    .sorted().distinct().toList());\n-        }\n-        Object configObject = currentConfiguration.get(\"config\");\n-        if (configObject instanceof String configString) {\n-            if (!configString.equals(other.getChannelConfigurationJson())) {\n-                newConfiguration.put(\"config\", List.of(configString, other.getChannelConfigurationJson()));\n-            }\n-        } else if (configObject instanceof List<?> configList) {\n-            newConfiguration.put(\"config\",\n-                    Stream.concat(configList.stream(), Stream.of(other.getChannelConfigurationJson())).sorted()\n-                            .distinct().toList());\n-        }\n \n         // Append payload to allowed values\n-        String otherPayload = other.getChannelConfiguration().payload;\n+        String otherPayload = newTrigger.getChannelConfiguration().payload;\n         if (payloads == null || otherPayload == null) {\n             // Need to accept anything\n             value = new TextValue();\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Scene.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Scene.java\nindex 2229570bf7345..5ceac5a8fe29d 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Scene.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Scene.java\n@@ -12,12 +12,24 @@\n  */\n package org.openhab.binding.mqtt.homeassistant.internal.component;\n \n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.TreeMap;\n+\n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.mqtt.generic.ChannelState;\n import org.openhab.binding.mqtt.generic.values.TextValue;\n+import org.openhab.binding.mqtt.homeassistant.internal.ComponentChannel;\n import org.openhab.binding.mqtt.homeassistant.internal.ComponentChannelType;\n import org.openhab.binding.mqtt.homeassistant.internal.config.dto.AbstractChannelConfiguration;\n+import org.openhab.binding.mqtt.homeassistant.internal.exception.ConfigurationException;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.library.types.StringType;\n import org.openhab.core.thing.type.AutoUpdatePolicy;\n+import org.openhab.core.types.Command;\n+import org.openhab.core.types.CommandDescriptionBuilder;\n+import org.openhab.core.types.CommandOption;\n \n import com.google.gson.annotations.SerializedName;\n \n@@ -30,6 +42,29 @@\n public class Scene extends AbstractComponent<Scene.ChannelConfiguration> {\n     public static final String SCENE_CHANNEL_ID = \"scene\";\n \n+    // A command that has already been processed and routed to the correct Value,\n+    // and should be immediately published. This will be the payloadOn value from\n+    // the configuration\n+    private static class SceneCommand extends StringType {\n+        SceneCommand(String value) {\n+            super(value);\n+        }\n+    }\n+\n+    // A value that can provide a proper CommandDescription with values and labels\n+    class SceneValue extends TextValue {\n+        SceneValue() {\n+            super();\n+        }\n+\n+        @Override\n+        public CommandDescriptionBuilder createCommandDescription() {\n+            CommandDescriptionBuilder builder = super.createCommandDescription();\n+            objectIdToScene.forEach((k, v) -> builder.withCommandOption(new CommandOption(k, v.getName())));\n+            return builder;\n+        }\n+    }\n+\n     /**\n      * Configuration class for MQTT component\n      */\n@@ -39,23 +74,106 @@ static class ChannelConfiguration extends AbstractChannelConfiguration {\n         }\n \n         @SerializedName(\"command_topic\")\n-        protected @Nullable String commandTopic;\n+        protected String commandTopic = \"\";\n \n         @SerializedName(\"payload_on\")\n         protected String payloadOn = \"ON\";\n     }\n \n+    // Keeps track of discrete command topics, and one SceneValue that uses that topic\n+    private final Map<String, ChannelState> topicsToChannelStates = new HashMap<>();\n+    private final Map<String, ChannelConfiguration> objectIdToScene = new TreeMap<>();\n+    private final Map<String, ChannelConfiguration> labelToScene = new HashMap<>();\n+\n+    private final SceneValue value = new SceneValue();\n+    private ComponentChannel channel;\n+\n     public Scene(ComponentFactory.ComponentConfiguration componentConfiguration) {\n         super(componentConfiguration, ChannelConfiguration.class);\n \n-        TextValue value = new TextValue(new String[] { channelConfiguration.payloadOn });\n+        if (channelConfiguration.commandTopic.isEmpty()) {\n+            throw new ConfigurationException(\"command_topic is required\");\n+        }\n+\n+        // Name the channel with a constant, not the component ID\n+        // So that we only end up with a single channel for all scenes\n+        componentId = SCENE_CHANNEL_ID;\n+        groupId = null;\n \n-        buildChannel(SCENE_CHANNEL_ID, ComponentChannelType.STRING, value, getName(),\n+        channel = buildChannel(SCENE_CHANNEL_ID, ComponentChannelType.STRING, value, getName(),\n                 componentConfiguration.getUpdateListener())\n                 .commandTopic(channelConfiguration.commandTopic, channelConfiguration.isRetain(),\n                         channelConfiguration.getQos())\n-                .withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\n+                .commandFilter(this::handleCommand).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\n+        topicsToChannelStates.put(channelConfiguration.commandTopic, channel.getState());\n+        addScene(this);\n+    }\n \n-        finalizeChannels();\n+    ComponentChannel getChannel() {\n+        return channel;\n+    }\n+\n+    private void addScene(Scene scene) {\n+        ChannelConfiguration channelConfiguration = scene.getChannelConfiguration();\n+        objectIdToScene.put(scene.getHaID().objectID, channelConfiguration);\n+        labelToScene.put(channelConfiguration.getName(), channelConfiguration);\n+\n+        if (!topicsToChannelStates.containsKey(channelConfiguration.commandTopic)) {\n+            hiddenChannels.add(scene.getChannel());\n+            topicsToChannelStates.put(channelConfiguration.commandTopic, scene.getChannel().getState());\n+        }\n+    }\n+\n+    private boolean handleCommand(Command command) {\n+        // This command has already been processed by the rest of this method,\n+        // so just return immediately.\n+        if (command instanceof SceneCommand) {\n+            return true;\n+        }\n+\n+        String valueStr = command.toString();\n+        ChannelConfiguration sceneConfig = objectIdToScene.get(valueStr);\n+        if (sceneConfig == null) {\n+            sceneConfig = labelToScene.get(command.toString());\n+        }\n+        if (sceneConfig == null) {\n+            throw new IllegalArgumentException(\"Value \" + valueStr + \" not within range\");\n+        }\n+\n+        ChannelState state = Objects.requireNonNull(topicsToChannelStates.get(sceneConfig.commandTopic));\n+        // This will end up calling this same method, so be sure no further processing is done\n+        state.publishValue(new SceneCommand(sceneConfig.payloadOn));\n+\n+        return false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"Scene\";\n+    }\n+\n+    @Override\n+    public boolean mergeable(AbstractComponent<?> other) {\n+        return other instanceof Scene;\n+    }\n+\n+    @Override\n+    public boolean merge(AbstractComponent<?> other) {\n+        Scene newScene = (Scene) other;\n+        Configuration newConfiguration = mergeChannelConfiguration(channel, newScene);\n+\n+        addScene(newScene);\n+\n+        // Recreate the channel so that the configuration will have all the scenes\n+        stop();\n+        channel = buildChannel(SCENE_CHANNEL_ID, ComponentChannelType.STRING, value, \"Scene\",\n+                componentConfiguration.getUpdateListener())\n+                .withConfiguration(newConfiguration)\n+                .commandTopic(channelConfiguration.commandTopic, channelConfiguration.isRetain(),\n+                        channelConfiguration.getQos())\n+                .commandFilter(this::handleCommand).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\n+        // New ChannelState created; need to make sure we're referencing the correct one\n+        topicsToChannelStates.put(channelConfiguration.commandTopic, channel.getState());\n+        return true;\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/config/dto/AbstractChannelConfiguration.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/config/dto/AbstractChannelConfiguration.java\nindex 5ac510dd524f4..68dc69b626377 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/config/dto/AbstractChannelConfiguration.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/config/dto/AbstractChannelConfiguration.java\n@@ -35,7 +35,7 @@ public abstract class AbstractChannelConfiguration {\n     public static final char PARENT_TOPIC_PLACEHOLDER = '~';\n     private static final String DEFAULT_THING_NAME = \"Home Assistant Device\";\n \n-    protected @Nullable String name;\n+    protected String name;\n \n     protected String icon = \"\";\n     protected int qos; // defaults to 0 according to HA specification\n@@ -136,7 +136,7 @@ public Map<String, Object> appendToProperties(Map<String, Object> properties) {\n         return properties;\n     }\n \n-    public @Nullable String getName() {\n+    public String getName() {\n         return name;\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\nindex 4aecc25a7df47..77286bce64d49 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\n@@ -42,7 +42,6 @@\n import org.openhab.binding.mqtt.homeassistant.internal.HomeAssistantChannelLinkageChecker;\n import org.openhab.binding.mqtt.homeassistant.internal.component.AbstractComponent;\n import org.openhab.binding.mqtt.homeassistant.internal.component.ComponentFactory;\n-import org.openhab.binding.mqtt.homeassistant.internal.component.DeviceTrigger;\n import org.openhab.binding.mqtt.homeassistant.internal.component.Update;\n import org.openhab.binding.mqtt.homeassistant.internal.config.ChannelConfigurationTypeAdapterFactory;\n import org.openhab.binding.mqtt.homeassistant.internal.exception.ConfigurationException;\n@@ -482,33 +481,19 @@ private void releaseStateUpdated(Update.ReleaseState state) {\n     private boolean addComponent(AbstractComponent<?> component) {\n         AbstractComponent<?> existing = haComponents.get(component.getComponentId());\n         if (existing != null) {\n-            // DeviceTriggers that are for the same subtype, topic, and value template\n-            // can be coalesced together\n-            if (component instanceof DeviceTrigger newTrigger && existing instanceof DeviceTrigger oldTrigger\n-                    && newTrigger.getChannelConfiguration().getSubtype()\n-                            .equals(oldTrigger.getChannelConfiguration().getSubtype())\n-                    && newTrigger.getChannelConfiguration().getTopic()\n-                            .equals(oldTrigger.getChannelConfiguration().getTopic())\n-                    && oldTrigger.getHaID().nodeID.equals(newTrigger.getHaID().nodeID)) {\n-                String newTriggerValueTemplate = newTrigger.getChannelConfiguration().getValueTemplate();\n-                String oldTriggerValueTemplate = oldTrigger.getChannelConfiguration().getValueTemplate();\n-                if ((newTriggerValueTemplate == null && oldTriggerValueTemplate == null)\n-                        || (newTriggerValueTemplate != null & oldTriggerValueTemplate != null\n-                                && newTriggerValueTemplate.equals(oldTriggerValueTemplate))) {\n-                    // Adjust the set of valid values\n-                    MqttBrokerConnection connection = this.connection;\n-\n-                    if (oldTrigger.merge(newTrigger) && connection != null) {\n-                        // Make sure to re-start if this did something, and it was stopped\n-                        oldTrigger.start(connection, scheduler, 0).exceptionally(e -> {\n-                            logger.warn(\"Failed to start component {}\", oldTrigger.getHaID(), e);\n-                            return null;\n-                        });\n-                    }\n-                    haComponentsByUniqueId.put(component.getUniqueId(), component);\n-                    haComponentsByHaId.put(component.getHaID(), component);\n-                    return false;\n+            // Check for components that merge together\n+            if (component.mergeable(existing)) {\n+                MqttBrokerConnection connection = this.connection;\n+                if (existing.merge(component) && connection != null) {\n+                    // Make sure to re-start if this did something, and it was stopped\n+                    existing.start(connection, scheduler, 0).exceptionally(e -> {\n+                        logger.warn(\"Failed to start component {}\", existing.getHaID(), e);\n+                        return null;\n+                    });\n                 }\n+                haComponentsByUniqueId.put(component.getUniqueId(), component);\n+                haComponentsByHaId.put(component.getHaID(), component);\n+                return false;\n             }\n \n             // rename the conflict\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SceneTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SceneTests.java\nnew file mode 100644\nindex 0000000000000..72e1329e8c048\n--- /dev/null\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SceneTests.java\n@@ -0,0 +1,165 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.mqtt.homeassistant.internal.component;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.binding.mqtt.generic.values.Value;\n+import org.openhab.binding.mqtt.homeassistant.internal.ComponentChannel;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.library.types.StringType;\n+import org.openhab.core.types.CommandOption;\n+\n+/**\n+ * Tests for {@link DeviceTrigger}\n+ *\n+ * @author Cody Cutrer - Initial contribution\n+ */\n+@NonNullByDefault\n+public class SceneTests extends AbstractComponentTests {\n+    public static final String CONFIG_TOPIC_1 = \"scene/12345_14/scene_1\";\n+    public static final String CONFIG_TOPIC_2 = \"scene/12345_14/scene_2\";\n+\n+    @SuppressWarnings(\"null\")\n+    @Test\n+    public void test() throws InterruptedException {\n+        var component = discoverComponent(configTopicToMqtt(CONFIG_TOPIC_1), \"\"\"\n+                {\n+                  \"command_topic\": \"zigbee2mqtt/Theater Room Lights/set\",\n+                  \"name\": \"House\",\n+                  \"object_id\": \"theater_room_lights_1_house\",\n+                  \"payload_on\": \"{ \\\\\"scene_recall\\\\\": 1 }\",\n+                  \"unique_id\": \"14_scene_1_zigbee2mqtt\"\n+                }\n+                                      \"\"\");\n+\n+        assertThat(component.channels.size(), is(1));\n+        assertThat(component.getName(), is(\"Scene\"));\n+\n+        assertChannel(component, Scene.SCENE_CHANNEL_ID, \"\", \"zigbee2mqtt/Theater Room Lights/set\", \"Scene\",\n+                Scene.SceneValue.class);\n+        linkAllChannels(component);\n+\n+        component.getChannel(Scene.SCENE_CHANNEL_ID).getState().publishValue(new StringType(\"scene_1\"));\n+        assertPublished(\"zigbee2mqtt/Theater Room Lights/set\", \"{ \\\"scene_recall\\\": 1 }\");\n+\n+        component.getChannel(Scene.SCENE_CHANNEL_ID).getState().publishValue(new StringType(\"House\"));\n+        assertPublished(\"zigbee2mqtt/Theater Room Lights/set\", \"{ \\\"scene_recall\\\": 1 }\", 2);\n+    }\n+\n+    @SuppressWarnings(\"null\")\n+    @Test\n+    public void testMerge() throws InterruptedException {\n+        var component1 = (Scene) discoverComponent(configTopicToMqtt(CONFIG_TOPIC_1), \"\"\"\n+                {\n+                  \"command_topic\": \"zigbee2mqtt/Theater Room Lights/set\",\n+                  \"name\": \"House\",\n+                  \"object_id\": \"theater_room_lights_1_house\",\n+                  \"payload_on\": \"{ \\\\\"scene_recall\\\\\": 1 }\",\n+                  \"unique_id\": \"14_scene_1_zigbee2mqtt\"\n+                }\n+                                    \"\"\");\n+        discoverComponent(configTopicToMqtt(CONFIG_TOPIC_2), \"\"\"\n+                {\n+                  \"command_topic\": \"zigbee2mqtt/Theater Room Lights/set\",\n+                  \"name\": \"Menu\",\n+                  \"object_id\": \"theater_room_lights_2_menu\",\n+                  \"payload_on\": \"{ \\\\\"scene_recall\\\\\": 2 }\",\n+                  \"unique_id\": \"14_scene_2_zigbee2mqtt\"\n+                }\n+                                    \"\"\");\n+\n+        assertThat(component1.channels.size(), is(1));\n+\n+        ComponentChannel channel = Objects.requireNonNull(component1.getChannel(Scene.SCENE_CHANNEL_ID));\n+        Value value = channel.getState().getCache();\n+        List<CommandOption> options = value.createCommandDescription().build().getCommandOptions();\n+        assertThat(options.size(), is(2));\n+        assertThat(options.get(0).getCommand(), is(\"scene_1\"));\n+        assertThat(options.get(1).getCommand(), is(\"scene_2\"));\n+        Configuration channelConfig = channel.getChannel().getConfiguration();\n+        Object config = channelConfig.get(\"config\");\n+        assertNotNull(config);\n+        assertThat(config.getClass(), is(ArrayList.class));\n+        List<?> configList = (List<?>) config;\n+        assertThat(configList.size(), is(2));\n+\n+        linkAllChannels(component1);\n+\n+        component1.getChannel(Scene.SCENE_CHANNEL_ID).getState().publishValue(new StringType(\"House\"));\n+        assertPublished(\"zigbee2mqtt/Theater Room Lights/set\", \"{ \\\"scene_recall\\\": 1 }\");\n+\n+        component1.getChannel(Scene.SCENE_CHANNEL_ID).getState().publishValue(new StringType(\"scene_2\"));\n+        assertPublished(\"zigbee2mqtt/Theater Room Lights/set\", \"{ \\\"scene_recall\\\": 2 }\");\n+    }\n+\n+    @SuppressWarnings(\"null\")\n+    @Test\n+    public void testMultipleTopics() throws InterruptedException {\n+        var component1 = (Scene) discoverComponent(configTopicToMqtt(CONFIG_TOPIC_1), \"\"\"\n+                {\n+                  \"command_topic\": \"zigbee2mqtt/Theater Room Lights/set\",\n+                  \"name\": \"House\",\n+                  \"object_id\": \"theater_room_lights_1_house\",\n+                  \"payload_on\": \"{ \\\\\"scene_recall\\\\\": 1 }\",\n+                  \"unique_id\": \"14_scene_1_zigbee2mqtt\"\n+                }\n+                                    \"\"\");\n+        discoverComponent(configTopicToMqtt(CONFIG_TOPIC_2), \"\"\"\n+                {\n+                  \"command_topic\": \"zigbee2mqtt/Theater Room Lights 2/set\",\n+                  \"name\": \"Menu\",\n+                  \"object_id\": \"theater_room_lights_2_menu\",\n+                  \"payload_on\": \"{ \\\\\"scene_recall\\\\\": 2 }\",\n+                  \"unique_id\": \"14_scene_2_zigbee2mqtt\"\n+                }\n+                                    \"\"\");\n+\n+        assertThat(component1.channels.size(), is(1));\n+\n+        ComponentChannel channel = Objects.requireNonNull(component1.getChannel(Scene.SCENE_CHANNEL_ID));\n+        Value value = channel.getState().getCache();\n+        List<CommandOption> options = value.createCommandDescription().build().getCommandOptions();\n+        assertThat(options.size(), is(2));\n+        assertThat(options.get(0).getCommand(), is(\"scene_1\"));\n+        assertThat(options.get(1).getCommand(), is(\"scene_2\"));\n+        Configuration channelConfig = channel.getChannel().getConfiguration();\n+        Object config = channelConfig.get(\"config\");\n+        assertNotNull(config);\n+        assertThat(config.getClass(), is(ArrayList.class));\n+        List<?> configList = (List<?>) config;\n+        assertThat(configList.size(), is(2));\n+\n+        linkAllChannels(component1);\n+\n+        component1.getChannel(Scene.SCENE_CHANNEL_ID).getState().publishValue(new StringType(\"House\"));\n+        assertPublished(\"zigbee2mqtt/Theater Room Lights/set\", \"{ \\\"scene_recall\\\": 1 }\");\n+\n+        component1.getChannel(Scene.SCENE_CHANNEL_ID).getState().publishValue(new StringType(\"scene_2\"));\n+        assertPublished(\"zigbee2mqtt/Theater Room Lights 2/set\", \"{ \\\"scene_recall\\\": 2 }\");\n+    }\n+\n+    @Override\n+    protected Set<String> getConfigTopics() {\n+        return Set.of(CONFIG_TOPIC_1, CONFIG_TOPIC_2);\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18239",
    "pr_id": 18239,
    "issue_id": 17650,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[mqtt.homeassistant] Don't subscribe to topics for unlinked channels\nWe potentially do a lot of processing, including transformations, that will just get ignored.",
    "issue_word_count": 24,
    "test_files_count": 24,
    "non_test_files_count": 5,
    "pr_changed_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelLinkageChecker.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/ComponentFactory.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AlarmControlPanelTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/BinarySensorTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ButtonTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CameraTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CoverTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DefaultSchemaLightTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrackerTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/FanTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/HumidifierTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/LockTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/NumberTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SelectTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SensorTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SwitchTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TemplateSchemaLightTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TextTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/VacuumTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ValveTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/WaterHeaterTests.java",
      "itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/DiscoverComponentsTest.java",
      "itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AlarmControlPanelTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/BinarySensorTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ButtonTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CameraTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CoverTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DefaultSchemaLightTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrackerTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/FanTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/HumidifierTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/LockTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/NumberTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SelectTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SensorTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SwitchTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TemplateSchemaLightTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TextTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/VacuumTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ValveTests.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/WaterHeaterTests.java",
      "itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/DiscoverComponentsTest.java",
      "itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java"
    ],
    "base_commit": "ea978fe953b960dc3afd0ef8e23969b3f12c169d",
    "head_commit": "50b722f3179737ceee5a931a12999059746feacb",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18239",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18239",
    "dockerfile": "",
    "pr_merged_at": "2025-02-13T08:19:32.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java\nindex 46c958a306684..9663e2d22432b 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java\n@@ -52,6 +52,7 @@ public class DiscoverComponents implements MqttMessageSubscriber {\n     private final ThingUID thingUID;\n     private final ScheduledExecutorService scheduler;\n     private final ChannelStateUpdateListener updateListener;\n+    private final HomeAssistantChannelLinkageChecker linkageChecker;\n     private final AvailabilityTracker tracker;\n \n     protected final CompletableFuture<@Nullable Void> discoverFinishedFuture = new CompletableFuture<>();\n@@ -82,11 +83,12 @@ public static interface ComponentDiscovered {\n      * @param channelStateUpdateListener Channel update listener. Usually the handler.\n      */\n     public DiscoverComponents(ThingUID thingUID, ScheduledExecutorService scheduler,\n-            ChannelStateUpdateListener channelStateUpdateListener, AvailabilityTracker tracker, Gson gson,\n-            Jinjava jinjava, UnitProvider unitProvider) {\n+            ChannelStateUpdateListener channelStateUpdateListener, HomeAssistantChannelLinkageChecker linkageChecker,\n+            AvailabilityTracker tracker, Gson gson, Jinjava jinjava, UnitProvider unitProvider) {\n         this.thingUID = thingUID;\n         this.scheduler = scheduler;\n         this.updateListener = channelStateUpdateListener;\n+        this.linkageChecker = linkageChecker;\n         this.gson = gson;\n         this.jinjava = jinjava;\n         this.unitProvider = unitProvider;\n@@ -105,8 +107,8 @@ public void processMessage(String topic, byte[] payload) {\n \n         if (config.length() > 0) {\n             try {\n-                component = ComponentFactory.createComponent(thingUID, haID, config, updateListener, tracker, scheduler,\n-                        gson, jinjava, unitProvider);\n+                component = ComponentFactory.createComponent(thingUID, haID, config, updateListener, linkageChecker,\n+                        tracker, scheduler, gson, jinjava, unitProvider);\n                 component.setConfigSeen();\n \n                 logger.trace(\"Found HomeAssistant component {}\", haID);\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelLinkageChecker.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelLinkageChecker.java\nnew file mode 100644\nindex 0000000000000..358b102c0c1d4\n--- /dev/null\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelLinkageChecker.java\n@@ -0,0 +1,32 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.mqtt.homeassistant.internal;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.thing.ChannelUID;\n+\n+/**\n+ * Allows a Home Assistant component to check if a channel is linked (and thus worth subscribing to)\n+ *\n+ * @author Cody Cutrer - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface HomeAssistantChannelLinkageChecker {\n+    /**\n+     * Returns whether at least one item is linked for the given channel ID.\n+     *\n+     * @param channelId channel ID (must not be null)\n+     * @return true if at least one item is linked, false otherwise\n+     */\n+    boolean isChannelLinked(ChannelUID channelUID);\n+}\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java\nindex 50a4f33fc485c..4bee6d2440561 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java\n@@ -55,6 +55,7 @@\n import org.openhab.core.thing.type.ChannelGroupType;\n import org.openhab.core.thing.type.ChannelGroupTypeBuilder;\n import org.openhab.core.thing.type.ChannelGroupTypeUID;\n+import org.openhab.core.thing.type.ChannelKind;\n import org.openhab.core.types.CommandDescription;\n import org.openhab.core.types.StateDescription;\n \n@@ -232,8 +233,14 @@ public void setConfigSeen() {\n      */\n     public CompletableFuture<@Nullable Void> start(MqttBrokerConnection connection, ScheduledExecutorService scheduler,\n             int timeout) {\n-        return Stream.concat(channels.values().stream(), hiddenChannels.stream())\n-                .map(v -> v.start(connection, scheduler, timeout)) //\n+        // Hidden channels (used by a component to simulate other channels or non-channel behavior),\n+        // triggers channels (which can be used by rules without ever being linked),\n+        // and linked channels are started.\n+        // Therefore, unlinked channels are not started.\n+        return Stream.concat(channels.values().stream().filter(c -> {\n+            return c.getChannel().getKind().equals(ChannelKind.TRIGGER)\n+                    || componentConfiguration.getLinkageChecker().isChannelLinked(c.getChannel().getUID());\n+        }), hiddenChannels.stream()).map(v -> v.start(connection, scheduler, timeout)) //\n                 .reduce(CompletableFuture.completedFuture(null), (f, v) -> f.thenCompose(b -> v));\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/ComponentFactory.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/ComponentFactory.java\nindex f00b0750c2f4c..bf56f2da9c07f 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/ComponentFactory.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/ComponentFactory.java\n@@ -18,6 +18,7 @@\n import org.openhab.binding.mqtt.generic.AvailabilityTracker;\n import org.openhab.binding.mqtt.generic.ChannelStateUpdateListener;\n import org.openhab.binding.mqtt.homeassistant.internal.HaID;\n+import org.openhab.binding.mqtt.homeassistant.internal.HomeAssistantChannelLinkageChecker;\n import org.openhab.binding.mqtt.homeassistant.internal.config.dto.AbstractChannelConfiguration;\n import org.openhab.binding.mqtt.homeassistant.internal.exception.ConfigurationException;\n import org.openhab.binding.mqtt.homeassistant.internal.exception.UnsupportedComponentException;\n@@ -47,10 +48,12 @@ public class ComponentFactory {\n      * @return A HA MQTT Component\n      */\n     public static AbstractComponent<?> createComponent(ThingUID thingUID, HaID haID, String channelConfigurationJSON,\n-            ChannelStateUpdateListener updateListener, AvailabilityTracker tracker, ScheduledExecutorService scheduler,\n-            Gson gson, Jinjava jinjava, UnitProvider unitProvider) throws ConfigurationException {\n+            ChannelStateUpdateListener updateListener, HomeAssistantChannelLinkageChecker linkageChecker,\n+            AvailabilityTracker tracker, ScheduledExecutorService scheduler, Gson gson, Jinjava jinjava,\n+            UnitProvider unitProvider) throws ConfigurationException {\n         ComponentConfiguration componentConfiguration = new ComponentConfiguration(thingUID, haID,\n-                channelConfigurationJSON, gson, jinjava, updateListener, tracker, scheduler, unitProvider);\n+                channelConfigurationJSON, gson, jinjava, updateListener, linkageChecker, tracker, scheduler,\n+                unitProvider);\n         switch (haID.component) {\n             case \"alarm_control_panel\":\n                 return new AlarmControlPanel(componentConfiguration);\n@@ -110,6 +113,7 @@ protected static class ComponentConfiguration {\n         private final HaID haID;\n         private final String configJSON;\n         private final ChannelStateUpdateListener updateListener;\n+        private final HomeAssistantChannelLinkageChecker linkageChecker;\n         private final AvailabilityTracker tracker;\n         private final Gson gson;\n         private final Jinjava jinjava;\n@@ -125,14 +129,15 @@ protected static class ComponentConfiguration {\n          * @param gson A Gson instance\n          */\n         protected ComponentConfiguration(ThingUID thingUID, HaID haID, String configJSON, Gson gson, Jinjava jinjava,\n-                ChannelStateUpdateListener updateListener, AvailabilityTracker tracker,\n-                ScheduledExecutorService scheduler, UnitProvider unitProvider) {\n+                ChannelStateUpdateListener updateListener, HomeAssistantChannelLinkageChecker linkageChecker,\n+                AvailabilityTracker tracker, ScheduledExecutorService scheduler, UnitProvider unitProvider) {\n             this.thingUID = thingUID;\n             this.haID = haID;\n             this.configJSON = configJSON;\n             this.gson = gson;\n             this.jinjava = jinjava;\n             this.updateListener = updateListener;\n+            this.linkageChecker = linkageChecker;\n             this.tracker = tracker;\n             this.scheduler = scheduler;\n             this.unitProvider = unitProvider;\n@@ -154,6 +159,10 @@ public ChannelStateUpdateListener getUpdateListener() {\n             return updateListener;\n         }\n \n+        public HomeAssistantChannelLinkageChecker getLinkageChecker() {\n+            return linkageChecker;\n+        }\n+\n         public Gson getGson() {\n             return gson;\n         }\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\nindex e43e21d80f1ed..4aecc25a7df47 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\n@@ -39,6 +39,7 @@\n import org.openhab.binding.mqtt.homeassistant.internal.DiscoverComponents.ComponentDiscovered;\n import org.openhab.binding.mqtt.homeassistant.internal.HaID;\n import org.openhab.binding.mqtt.homeassistant.internal.HandlerConfiguration;\n+import org.openhab.binding.mqtt.homeassistant.internal.HomeAssistantChannelLinkageChecker;\n import org.openhab.binding.mqtt.homeassistant.internal.component.AbstractComponent;\n import org.openhab.binding.mqtt.homeassistant.internal.component.ComponentFactory;\n import org.openhab.binding.mqtt.homeassistant.internal.component.DeviceTrigger;\n@@ -83,7 +84,7 @@\n  */\n @NonNullByDefault\n public class HomeAssistantThingHandler extends AbstractMQTTThingHandler\n-        implements ComponentDiscovered, Consumer<List<Object>> {\n+        implements ComponentDiscovered, Consumer<List<Object>>, HomeAssistantChannelLinkageChecker {\n     public static final String AVAILABILITY_CHANNEL = \"availability\";\n     private static final Comparator<AbstractComponent<?>> COMPONENT_COMPARATOR = Comparator\n             .comparing((AbstractComponent<?> component) -> component.hasGroup())\n@@ -134,7 +135,7 @@ public HomeAssistantThingHandler(Thing thing, MqttChannelTypeProvider channelTyp\n         this.unitProvider = unitProvider;\n         this.attributeReceiveTimeout = attributeReceiveTimeout;\n         this.delayedProcessing = new DelayedBatchProcessing<>(attributeReceiveTimeout, this, scheduler);\n-        this.discoverComponents = new DiscoverComponents(thing.getUID(), scheduler, this, this, gson, jinjava,\n+        this.discoverComponents = new DiscoverComponents(thing.getUID(), scheduler, this, this, this, gson, jinjava,\n                 unitProvider);\n     }\n \n@@ -183,7 +184,7 @@ public void initialize() {\n                 String channelConfigurationJSON = (String) channelConfig.get(\"config\");\n                 try {\n                     AbstractComponent<?> component = ComponentFactory.createComponent(thingUID, haID,\n-                            channelConfigurationJSON, this, this, scheduler, gson, jinjava, unitProvider);\n+                            channelConfigurationJSON, this, this, this, scheduler, gson, jinjava, unitProvider);\n                     if (typeID.equals(MqttBindingConstants.HOMEASSISTANT_MQTT_THING)) {\n                         typeID = calculateThingTypeUID(component);\n                     }\n@@ -558,4 +559,36 @@ private List<Configuration> flattenChannelConfiguration(Configuration multiCompo\n     Map<@Nullable String, AbstractComponent<?>> getComponents() {\n         return haComponents;\n     }\n+\n+    // For components to check if a channel is linked before starting them\n+    @Override\n+    public boolean isChannelLinked(ChannelUID channelUID) {\n+        return isLinked(channelUID);\n+    }\n+\n+    // A channel is newly linked; make sure it is started\n+    @Override\n+    public void channelLinked(ChannelUID channelUID) {\n+        MqttBrokerConnection connection = this.connection;\n+        // We haven't started at all yet.\n+        if (connection == null) {\n+            return;\n+        }\n+        synchronized (haComponents) {\n+            haComponents.forEach((id, component) -> {\n+                if (component.getChannels().stream().anyMatch(channel -> channel.getUID().equals(channelUID))) {\n+                    component.start(connection, scheduler, attributeReceiveTimeout).exceptionally(e -> {\n+                        updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, e.getMessage());\n+                        return null;\n+                    });\n+                }\n+            });\n+        }\n+        super.channelLinked(channelUID);\n+    }\n+\n+    // Don't bother unsubscribing on unlink; it's a relatively rare operation during normal usage,\n+    // and a decent amount of effort to make sure there aren't other links before stopping them, and\n+    // making sure not to stop other channels that are still linked.\n+    // A disable/re-enable of the thing will clear the subscriptions.\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java\nindex b7cff523613b4..42927f98e4553 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponentTests.java\n@@ -19,6 +19,7 @@\n import static org.mockito.Mockito.*;\n \n import java.nio.charset.StandardCharsets;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Objects;\n import java.util.Set;\n@@ -43,10 +44,12 @@\n import org.openhab.binding.mqtt.homeassistant.internal.handler.HomeAssistantThingHandler;\n import org.openhab.core.i18n.UnitProvider;\n import org.openhab.core.library.types.HSBType;\n+import org.openhab.core.thing.ChannelUID;\n import org.openhab.core.thing.Thing;\n import org.openhab.core.thing.ThingStatusInfo;\n import org.openhab.core.thing.binding.ThingHandlerCallback;\n import org.openhab.core.thing.type.AutoUpdatePolicy;\n+import org.openhab.core.thing.type.ChannelKind;\n import org.openhab.core.thing.type.ChannelTypeRegistry;\n import org.openhab.core.types.Command;\n import org.openhab.core.types.State;\n@@ -137,6 +140,32 @@ public void disposeThingHandler() {\n         return Objects.requireNonNull(thingHandler.getDiscoveredComponent());\n     }\n \n+    /**\n+     * Simulate linking an item to a channel, so that the handler knows it should subscribe to the relevant topics\n+     *\n+     * @param component component\n+     * @param channelId channel\n+     */\n+    protected void linkChannel(AbstractComponent<@NonNull ? extends AbstractChannelConfiguration> component,\n+            String channelId) {\n+        var stateChannel = Objects.requireNonNull(component.getChannel(channelId));\n+        thingHandler.linkChannel(stateChannel.getChannel().getUID());\n+    }\n+\n+    /**\n+     * Simulate linking an item to a all channels of a component, so that the handler knows it should subscribe to the\n+     * relevant topics\n+     *\n+     * @param component component\n+     */\n+    protected void linkAllChannels(AbstractComponent<@NonNull ? extends AbstractChannelConfiguration> component) {\n+        component.getChannels().forEach(c -> {\n+            if (c.getKind().equals(ChannelKind.STATE)) {\n+                thingHandler.linkChannel(c.getUID());\n+            }\n+        });\n+    }\n+\n     /**\n      * Assert channel topics, label and value class\n      *\n@@ -328,6 +357,7 @@ protected void sendCommand(AbstractComponent<@NonNull ? extends AbstractChannelC\n     }\n \n     protected static class LatchThingHandler extends HomeAssistantThingHandler {\n+        private final Set<ChannelUID> linkedChannels = new HashSet<>();\n         private @Nullable CountDownLatch latch;\n         private @Nullable AbstractComponent<@NonNull ? extends AbstractChannelConfiguration> discoveredComponent;\n \n@@ -356,5 +386,15 @@ public CountDownLatch createWaitForComponentDiscoveredLatch(int count) {\n         public @Nullable AbstractComponent<@NonNull ? extends AbstractChannelConfiguration> getDiscoveredComponent() {\n             return discoveredComponent;\n         }\n+\n+        public void linkChannel(ChannelUID channelUID) {\n+            linkedChannels.add(channelUID);\n+            channelLinked(channelUID);\n+        }\n+\n+        @Override\n+        protected boolean isLinked(ChannelUID channelUID) {\n+            return linkedChannels.contains(channelUID);\n+        }\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AlarmControlPanelTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AlarmControlPanelTests.java\nindex 0ec05218278be..19df750601d52 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AlarmControlPanelTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/AlarmControlPanelTests.java\n@@ -71,6 +71,8 @@ public void testAlarmControlPanel() {\n         assertChannel(component, AlarmControlPanel.STATE_CHANNEL_ID, \"zigbee2mqtt/alarm/state\",\n                 \"zigbee2mqtt/alarm/set/state\", \"alarm\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/alarm/state\", \"armed_home\");\n         assertState(component, AlarmControlPanel.STATE_CHANNEL_ID, new StringType(\"armed_home\"));\n         publishMessage(\"zigbee2mqtt/alarm/state\", \"armed_away\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/BinarySensorTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/BinarySensorTests.java\nindex 48d046361157a..94400b58a28c5 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/BinarySensorTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/BinarySensorTests.java\n@@ -70,6 +70,8 @@ public void test() throws InterruptedException {\n         assertChannel(component, BinarySensor.SENSOR_CHANNEL_ID, \"zigbee2mqtt/sensor/state\", \"\", \"onoffsensor\",\n                 OnOffValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/sensor/state\", \"{ \\\"state\\\": \\\"ON_\\\" }\");\n         assertState(component, BinarySensor.SENSOR_CHANNEL_ID, OnOffType.ON);\n         publishMessage(\"zigbee2mqtt/sensor/state\", \"{ \\\"state\\\": \\\"ON_\\\" }\");\n@@ -112,6 +114,8 @@ public void offDelayTest() {\n                 \"\"\");\n         // @formatter:on\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/sensor/state\", \"{ \\\"state\\\": \\\"ON_\\\" }\");\n         assertState(component, BinarySensor.SENSOR_CHANNEL_ID, OnOffType.ON);\n \n@@ -150,6 +154,8 @@ public void expireAfterTest() {\n                 \"\"\");\n         // @formatter:on\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/sensor/state\", \"{ \\\"state\\\": \\\"OFF_\\\" }\");\n         assertState(component, BinarySensor.SENSOR_CHANNEL_ID, OnOffType.OFF);\n \n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ButtonTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ButtonTests.java\nindex 450f0c6e2b32e..f8c1531987314 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ButtonTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ButtonTests.java\n@@ -62,6 +62,8 @@ public void testButton() {\n         assertThat(Objects.requireNonNull(component.getChannel(Button.BUTTON_CHANNEL_ID)).getChannel()\n                 .getAutoUpdatePolicy(), is(AutoUpdatePolicy.VETO));\n \n+        linkAllChannels(component);\n+\n         assertThrows(IllegalArgumentException.class,\n                 () -> component.getChannel(Button.BUTTON_CHANNEL_ID).getState().publishValue(new StringType(\"ON\")));\n         assertNothingPublished(\"esphome/single-car-gdo/button/restart/command\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CameraTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CameraTests.java\nindex 3fcc47b3c98da..82dc28c4243d6 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CameraTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CameraTests.java\n@@ -62,6 +62,8 @@ public void test() throws InterruptedException {\n \n         assertChannel(component, Camera.CAMERA_CHANNEL_ID, \"zigbee2mqtt/cam1/state\", \"\", \"cam1\", ImageValue.class);\n \n+        linkAllChannels(component);\n+\n         var imageBytes = getResourceAsByteArray(\"component/image.png\");\n         publishMessage(\"zigbee2mqtt/cam1/state\", imageBytes);\n         assertState(component, Camera.CAMERA_CHANNEL_ID, new RawType(imageBytes, \"image/png\"));\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java\nindex 297791088fb06..d13054adcb36f 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java\n@@ -88,6 +88,8 @@ public void testTS0601Climate() {\n         assertChannel(component, Climate.JSON_ATTRIBUTES_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"JSON Attributes\",\n                 TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/th1\", \"\"\"\n                 {\"running_state\": \"idle\", \"away_mode\": \"ON\", \\\n                 \"local_temperature\": \"22.2\", \"preset\": \"schedule\", \"system_mode\": \"heat\", \\\n@@ -159,6 +161,8 @@ public void testTS0601ClimateNotSendIfOff() {\n         assertChannel(component, Climate.JSON_ATTRIBUTES_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"JSON Attributes\",\n                 TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/th1\", \"\"\"\n                 {\"running_state\": \"idle\", \"away_mode\": \"ON\", \\\n                 \"local_temperature\": \"22.2\", \"preset\": \"schedule\", \"system_mode\": \"heat\", \\\n@@ -276,6 +280,8 @@ public void testClimate() {\n         assertChannel(component, Climate.JSON_ATTRIBUTES_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"JSON Attributes\",\n                 TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/th1\", \"\"\"\n                 { \"action\": \"fan\",  \"aux\": \"ON\",  \"away_mode\": \"OFF\", \\\n                 \"current_temperature\": \"35.5\",  \"fan_mode\": \"p2\",  \"hold\": \"u2\", \\\n@@ -352,6 +358,8 @@ public void testClimateWithPresetMode() {\n         assertChannel(component, Climate.PRESET_MODE_CH_ID, \"zigbee2mqtt/th2\", \"zigbee2mqtt/th2/set/preset\", \"th2\",\n                 TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/th2\", \"\"\"\n                 {\"running_state\": \"heat\",\n                 \"local_temperature\": \"22.2\", \"preset\": \"manual\", \"system_mode\": \"heat\",\n@@ -386,6 +394,8 @@ public void testClimateHumidity() {\n         assertChannel(component, Climate.TARGET_HUMIDITY_CH_ID, \"zigbee2mqtt/th2\",\n                 \"zigbee2mqtt/th2/set/humidity_setpoint\", \"th2\", NumberValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/th2\", \"\"\"\n                 {\"humidity\": \"55\", \"humidity_setpoint\": \"50\"}\\\n                 \"\"\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CoverTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CoverTests.java\nindex 5996ab504fea5..f7f8eb1400602 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CoverTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/CoverTests.java\n@@ -73,6 +73,8 @@ public void testStateOnly() throws InterruptedException {\n         assertChannel(component, Cover.COVER_CHANNEL_ID, \"zigbee2mqtt/cover/state\", \"zigbee2mqtt/cover/set/state\",\n                 \"Cover\", RollershutterValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/cover/state\", \"closed\");\n         assertState(component, Cover.COVER_CHANNEL_ID, UpDownType.DOWN);\n         assertState(component, Cover.STATE_CHANNEL_ID, new StringType(\"closed\"));\n@@ -121,6 +123,8 @@ public void testPositionAndState() throws InterruptedException {\n         assertChannel(component, Cover.COVER_CHANNEL_ID, \"esphome/single-car-gdo/cover/door/position/state\",\n                 \"esphome/single-car-gdo/cover/door/position/command\", \"Cover\", RollershutterValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"esphome/single-car-gdo/cover/door/state\", \"closed\");\n         assertState(component, Cover.STATE_CHANNEL_ID, new StringType(\"closed\"));\n         publishMessage(\"esphome/single-car-gdo/cover/door/state\", \"open\");\n@@ -178,6 +182,8 @@ public void testPositionOnly() throws InterruptedException {\n         assertChannel(component, Cover.COVER_CHANNEL_ID, \"esphome/single-car-gdo/cover/door/position/state\",\n                 \"esphome/single-car-gdo/cover/door/position/command\", \"Cover\", RollershutterValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"esphome/single-car-gdo/cover/door/position/state\", \"100\");\n         assertState(component, Cover.COVER_CHANNEL_ID, PercentType.ZERO);\n         publishMessage(\"esphome/single-car-gdo/cover/door/position/state\", \"40\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DefaultSchemaLightTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DefaultSchemaLightTests.java\nindex d8136b96f3992..58b76c5c78ffb 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DefaultSchemaLightTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DefaultSchemaLightTests.java\n@@ -100,6 +100,8 @@ public void testRgb() throws InterruptedException {\n                     \"Brightness\", PercentageValue.class);\n         }\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"{\\\"power\\\": \\\"ON_\\\"}\");\n         assertState(component, Light.COLOR_CHANNEL_ID, HSBType.WHITE);\n         publishMessage(\"zigbee2mqtt/light/rgb\", \"{\\\"rgb\\\": \\\"10,20,30\\\"}\");\n@@ -138,6 +140,8 @@ public void testRgbWithoutBrightness() throws InterruptedException {\n                 \"\"\");\n         // @formatter:on\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/rgb\", \"{\\\"rgb\\\": \\\"255,255,255\\\"}\");\n         assertState(component, Light.COLOR_CHANNEL_ID, HSBType.WHITE);\n \n@@ -177,6 +181,8 @@ public void testHsb() throws InterruptedException {\n \n         assertChannel(component, Light.COLOR_CHANNEL_ID, \"\", \"dummy\", \"Color\", ColorValue.class);\n \n+        linkAllChannels(component);\n+\n         @Nullable\n         ComponentChannel onOffChannel = component.onOffChannel;\n         assertThat(onOffChannel, is(notNullValue()));\n@@ -241,6 +247,8 @@ public void testBrightnessAndOnOff() throws InterruptedException {\n                     OnOffValue.class);\n         }\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/brightness\", \"128\");\n         assertState(component, Light.BRIGHTNESS_CHANNEL_ID,\n                 new PercentType(new BigDecimal(128 * 100).divide(new BigDecimal(255), MathContext.DECIMAL128)));\n@@ -278,6 +286,8 @@ public void testOnOffOnly() throws InterruptedException {\n                 \"On/Off State\", OnOffValue.class);\n         assertThat(component.brightnessChannel, is(nullValue()));\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"{\\\"power\\\": \\\"ON_\\\"}\");\n         assertState(component, Light.SWITCH_CHANNEL_ID, OnOffType.ON);\n         publishMessage(\"zigbee2mqtt/light/state\", \"{\\\"power\\\": \\\"OFF_\\\"}\");\n@@ -310,6 +320,8 @@ public void testOnOffWithEffect() throws InterruptedException {\n         assertChannel(component, Light.EFFECT_CHANNEL_ID, \"zigbee2mqtt/light/effect\", \"zigbee2mqtt/light/set/effect\",\n                 \"Lighting Effect\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"{\\\"power\\\": \\\"ON\\\"}\");\n         assertState(component, Light.SWITCH_CHANNEL_ID, OnOffType.ON);\n         publishMessage(\"zigbee2mqtt/light/effect\", \"party\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrackerTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrackerTests.java\nindex 44dc3c9c31c10..f65b2f66e36fd 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrackerTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/DeviceTrackerTests.java\n@@ -67,6 +67,9 @@ public void testIPhone() throws InterruptedException {\n                 \"\", \"Location Name\", TextValue.class);\n         assertChannel(component, DeviceTracker.HOME_CHANNEL_ID, \"\", \"\", \"At Home\", OnOffValue.class);\n         assertChannel(component, DeviceTracker.SOURCE_TYPE_CHANNEL_ID, \"\", \"\", \"Source Type\", TextValue.class);\n+\n+        linkAllChannels(component);\n+\n         assertState(component, DeviceTracker.SOURCE_TYPE_CHANNEL_ID, new StringType(\"bluetooth_le\"));\n \n         publishMessage(\"home/TheengsGateway/BTtoMQTT/112233445566\", \"\"\"\n@@ -105,6 +108,8 @@ public void testGeneric() throws InterruptedException {\n                 TextValue.class);\n         assertChannel(component, DeviceTracker.HOME_CHANNEL_ID, \"\", \"\", \"At Home\", OnOffValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"devices/112233445566\", \"home\");\n         assertState(component, DeviceTracker.LOCATION_NAME_CHANNEL_ID, new StringType(\"home\"));\n         assertState(component, DeviceTracker.HOME_CHANNEL_ID, OnOffType.ON);\n@@ -140,6 +145,8 @@ public void testGPS() throws InterruptedException {\n         assertChannel(component, DeviceTracker.JSON_ATTRIBUTES_CHANNEL_ID, \"devices/112233445566/json\", \"\",\n                 \"JSON Attributes\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"devices/112233445566\", \"home\");\n         assertState(component, DeviceTracker.LOCATION_NAME_CHANNEL_ID, new StringType(\"home\"));\n         assertState(component, DeviceTracker.HOME_CHANNEL_ID, OnOffType.ON);\n@@ -227,6 +234,8 @@ public void testGPSOnly() throws InterruptedException {\n         assertChannel(component, DeviceTracker.JSON_ATTRIBUTES_CHANNEL_ID, \"devices/112233445566/json\", \"\",\n                 \"JSON Attributes\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"devices/112233445566/json\", \"not JSON\");\n         assertState(component, DeviceTracker.LOCATION_CHANNEL_ID, UnDefType.NULL);\n         assertState(component, DeviceTracker.GPS_ACCURACY_CHANNEL_ID, UnDefType.NULL);\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/FanTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/FanTests.java\nindex 1da4cbd5aa4ce..40e74cafa6251 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/FanTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/FanTests.java\n@@ -76,6 +76,8 @@ public void test() throws InterruptedException {\n         assertChannel(component, Fan.SWITCH_CHANNEL_ID, \"zigbee2mqtt/fan/state\", \"zigbee2mqtt/fan/set/state\",\n                 \"On/Off State\", OnOffValue.class, null);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/fan/state\", \"ON_\");\n         assertState(component, Fan.SWITCH_CHANNEL_ID, OnOffType.ON);\n         publishMessage(\"zigbee2mqtt/fan/state\", \"ON_\");\n@@ -130,6 +132,8 @@ public void testPercentageWithTemplates() throws InterruptedException {\n         assertChannel(component, Fan.SPEED_CHANNEL_ID, \"zigbee2mqtt/fan\", \"zigbee2mqtt/fan/set/fan_mode\", \"Speed\",\n                 PercentageValue.class, null);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/fan\", \"{ \\\"fan_state\\\": \\\"OFF\\\", \\\"fan_mode\\\": \\\"high\\\"}\");\n         assertState(component, Fan.SPEED_CHANNEL_ID, PercentType.ZERO);\n         publishMessage(\"zigbee2mqtt/fan\", \"{ \\\"fan_state\\\": \\\"ON\\\", \\\"fan_mode\\\": \\\"high\\\"}\");\n@@ -296,6 +300,8 @@ public void testCommandTemplate() throws InterruptedException {\n \n         assertThat(component.channels.size(), is(1));\n \n+        linkAllChannels(component);\n+\n         component.getChannel(Fan.SWITCH_CHANNEL_ID).getState().publishValue(OnOffType.OFF);\n         assertPublished(\"zigbee2mqtt/fan/set/state\", \"set to OFF_\");\n     }\n@@ -360,6 +366,8 @@ public void testComplex() throws InterruptedException {\n         assertChannel(component, Fan.PRESET_MODE_CHANNEL_ID, \"bedroom_fan/preset/preset_mode_state\",\n                 \"bedroom_fan/preset/preset_mode\", \"Preset Mode\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"bedroom_fan/on/state\", \"true\");\n         assertState(component, Fan.SPEED_CHANNEL_ID, PercentType.HUNDRED);\n         publishMessage(\"bedroom_fan/on/state\", \"false\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/HumidifierTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/HumidifierTests.java\nindex ff2cdf39240b7..6e6f8d79ec6d6 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/HumidifierTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/HumidifierTests.java\n@@ -87,6 +87,8 @@ public void test() {\n         assertChannel(component, Humidifier.TARGET_HUMIDITY_CHANNEL_ID, \"bedroom_humidifier/humidity/state\",\n                 \"bedroom_humidifier/humidity/set\", \"Target Humidity\", NumberValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"bedroom_humidifier/on/state\", \"true\");\n         assertState(component, Humidifier.STATE_CHANNEL_ID, OnOffType.ON);\n         publishMessage(\"bedroom_humidifier/on/state\", \"false\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java\nindex 8a6e9efe1653b..b087cb8068e9f 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java\n@@ -73,6 +73,8 @@ public void testRgb() throws InterruptedException {\n \n         assertChannel(component, Light.COLOR_CHANNEL_ID, \"\", \"dummy\", \"Color\", ColorValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"state\\\": \\\"ON\\\" }\");\n         assertState(component, Light.COLOR_CHANNEL_ID, HSBType.WHITE);\n         publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"color\\\": {\\\"r\\\": 10, \\\"g\\\": 20, \\\"b\\\": 30 } }\");\n@@ -130,6 +132,8 @@ public void testRgbNewStyle() throws InterruptedException {\n \n         assertChannel(component, Light.COLOR_CHANNEL_ID, \"\", \"dummy\", \"Color\", ColorValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"state\\\": \\\"ON\\\" }\");\n         assertState(component, Light.COLOR_CHANNEL_ID, HSBType.WHITE);\n         publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"color\\\": {\\\"r\\\": 10, \\\"g\\\": 20, \\\"b\\\": 30 } }\");\n@@ -172,6 +176,8 @@ public void testBrightnessAndOnOff() throws InterruptedException {\n \n         assertChannel(component, Light.BRIGHTNESS_CHANNEL_ID, \"\", \"dummy\", \"Brightness\", PercentageValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"state\\\": \\\"ON\\\", \\\"brightness\\\": 128 }\");\n         assertState(component, Light.BRIGHTNESS_CHANNEL_ID,\n                 new PercentType(new BigDecimal(128 * 100).divide(new BigDecimal(255), MathContext.DECIMAL128)));\n@@ -205,6 +211,8 @@ public void testOnOffOnly() throws InterruptedException {\n \n         assertChannel(component, Light.SWITCH_CHANNEL_ID, \"\", \"dummy\", \"On/Off State\", OnOffValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"state\\\": \\\"ON\\\" }\");\n         assertState(component, Light.SWITCH_CHANNEL_ID, OnOffType.ON);\n         publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"state\\\": \\\"OFF\\\" }\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/LockTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/LockTests.java\nindex dd8e29aded364..9c9a6aae782db 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/LockTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/LockTests.java\n@@ -72,6 +72,8 @@ public void test() throws InterruptedException {\n         assertChannel(component, Lock.STATE_CHANNEL_ID, \"zigbee2mqtt/lock/state\", \"zigbee2mqtt/lock/set/state\", \"State\",\n                 TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/lock/state\", \"LOCKED_\");\n         assertState(component, Lock.STATE_CHANNEL_ID, new StringType(\"LOCKED_\"));\n         assertState(component, Lock.LOCK_CHANNEL_ID, OnOffType.ON);\n@@ -136,6 +138,8 @@ public void testNoStateTopicIsOptimistic() throws InterruptedException {\n                 \"\"\");\n         // @formatter:on\n \n+        linkAllChannels(component);\n+\n         component.getChannel(Lock.LOCK_CHANNEL_ID).getState().publishValue(OnOffType.OFF);\n         assertPublished(\"zigbee2mqtt/lock/set/state\", \"UNLOCK\");\n         assertState(component, Lock.STATE_CHANNEL_ID, new StringType(\"UNLOCKED\"));\n@@ -186,6 +190,8 @@ public void testOpennable() throws InterruptedException {\n                 }\n                 \"\"\");\n \n+        linkAllChannels(component);\n+\n         component.getChannel(Lock.STATE_CHANNEL_ID).getState().publishValue(new StringType(\"OPEN\"));\n         assertPublished(\"zigbee2mqtt/lock/set/state\", \"OPEN\");\n         assertState(component, Lock.STATE_CHANNEL_ID, new StringType(\"UNLOCKED\"));\n@@ -218,6 +224,8 @@ public void testNonOptimistic() throws InterruptedException {\n                 }\n                 \"\"\");\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/lock/state\", \"LOCKED\");\n         assertState(component, Lock.STATE_CHANNEL_ID, new StringType(\"LOCKED\"));\n         assertState(component, Lock.LOCK_CHANNEL_ID, OnOffType.ON);\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/NumberTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/NumberTests.java\nindex 1578006f00bbc..9483c3bd95912 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/NumberTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/NumberTests.java\n@@ -65,6 +65,8 @@ public void test() throws InterruptedException {\n         assertChannel(component, Number.NUMBER_CHANNEL_ID, \"homie/bwa/spa/pump1\", \"homie/bwa/spa/pump1/set\",\n                 \"BWA Link Hot Tub Pump 1\", NumberValue.class, null);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"homie/bwa/spa/pump1\", \"1\");\n         assertState(component, Number.NUMBER_CHANNEL_ID, new DecimalType(1));\n         publishMessage(\"homie/bwa/spa/pump1\", \"2\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SelectTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SelectTests.java\nindex 1ebb94f3a9d78..a0373aaedbbb6 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SelectTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SelectTests.java\n@@ -71,6 +71,8 @@ public void testSelectWithStateAndCommand() {\n         assertChannel(component, Select.SELECT_CHANNEL_ID, \"zigbee2mqtt/gbos\", \"zigbee2mqtt/gbos/set/approach_distance\",\n                 \"Guest Bathroom Occupancy Sensor approach distance\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/gbos\", \"{\\\"approach_distance\\\": \\\"far\\\"}\");\n         assertState(component, Select.SELECT_CHANNEL_ID, new StringType(\"far\"));\n         publishMessage(\"zigbee2mqtt/gbos\", \"{\\\"approach_distance\\\": \\\"medium\\\"}\");\n@@ -119,6 +121,8 @@ public void testSelectWithCommandTemplate() {\n                     }\n                 \"\"\");\n \n+        linkAllChannels(component);\n+\n         component.getChannel(Select.SELECT_CHANNEL_ID).getState().publishValue(new StringType(\"near\"));\n         assertPublished(\"zigbee2mqtt/gbos/set/approach_distance\", \"set to near\");\n     }\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SensorTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SensorTests.java\nindex 9f511eac3e22a..5590fdedb4378 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SensorTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SensorTests.java\n@@ -70,6 +70,8 @@ public void test() throws InterruptedException {\n         assertChannel(component, Sensor.SENSOR_CHANNEL_ID, \"zigbee2mqtt/sensor/state\", \"\", \"sensor1\",\n                 NumberValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/bridge/state\", \"{ \\\"state\\\": \\\"online\\\" }\");\n         assertThat(haThing.getStatus(), is(ThingStatus.ONLINE));\n         publishMessage(\"zigbee2mqtt/sensor/state\", \"10\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SwitchTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SwitchTests.java\nindex e44a88c4e21cf..e31e85e845c71 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SwitchTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/SwitchTests.java\n@@ -22,6 +22,8 @@\n import org.openhab.binding.mqtt.generic.values.OnOffValue;\n import org.openhab.binding.mqtt.generic.values.TextValue;\n import org.openhab.core.library.types.OnOffType;\n+import org.openhab.core.library.types.StringType;\n+import org.openhab.core.types.UnDefType;\n \n /**\n  * Tests for {@link Switch}\n@@ -72,8 +74,11 @@ public void testSwitchWithStateAndCommand() {\n         assertChannel(component, Switch.JSON_ATTRIBUTES_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"JSON Attributes\",\n                 TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/th1\", \"{\\\"auto_lock\\\": \\\"MANUAL\\\"}\");\n         assertState(component, Switch.SWITCH_CHANNEL_ID, OnOffType.OFF);\n+        assertState(component, Switch.JSON_ATTRIBUTES_CHANNEL_ID, new StringType(\"{\\\"auto_lock\\\": \\\"MANUAL\\\"}\"));\n         publishMessage(\"zigbee2mqtt/th1\", \"{\\\"auto_lock\\\": \\\"AUTO\\\"}\");\n         assertState(component, Switch.SWITCH_CHANNEL_ID, OnOffType.ON);\n \n@@ -113,10 +118,12 @@ public void testSwitchWithState() {\n \n         assertThat(component.channels.size(), is(2));\n         assertThat(component.getName(), is(\"th1 auto lock\"));\n+\n+        assertChannel(component, Switch.SWITCH_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"th1 auto lock\", OnOffValue.class);\n         assertChannel(component, Switch.JSON_ATTRIBUTES_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"JSON Attributes\",\n                 TextValue.class);\n \n-        assertChannel(component, Switch.SWITCH_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"th1 auto lock\", OnOffValue.class);\n+        linkAllChannels(component);\n \n         publishMessage(\"zigbee2mqtt/th1\", \"{\\\"auto_lock\\\": \\\"MANUAL\\\"}\");\n         assertState(component, Switch.SWITCH_CHANNEL_ID, OnOffType.OFF);\n@@ -160,6 +167,8 @@ public void testSwitchWithCommand() {\n         assertChannel(component, Switch.JSON_ATTRIBUTES_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"JSON Attributes\",\n                 TextValue.class);\n \n+        linkAllChannels(component);\n+\n         component.getChannel(Switch.SWITCH_CHANNEL_ID).getState().publishValue(OnOffType.OFF);\n         assertPublished(\"zigbee2mqtt/th1/set/auto_lock\", \"MANUAL\");\n         component.getChannel(Switch.SWITCH_CHANNEL_ID).getState().publishValue(OnOffType.ON);\n@@ -214,6 +223,52 @@ public void testSwitchNoName() {\n                 \"zigbee2mqtt/Master Bedroom Subwoofer/set\", \"Master Bedroom Subwoofer\", OnOffValue.class);\n     }\n \n+    @Test\n+    public void testUnlinkedChannelsDontSubscribe() {\n+        var component = discoverComponent(configTopicToMqtt(CONFIG_TOPIC), \"\"\"\n+                {\n+                  \"availability\": [\n+                    {\n+                      \"topic\": \"zigbee2mqtt/bridge/state\"\n+                    }\n+                  ],\n+                  \"device\": {\n+                    \"identifiers\": [\n+                      \"zigbee2mqtt_0x847127fffe11dd6a\"\n+                    ],\n+                    \"manufacturer\": \"TuYa\",\n+                    \"model\": \"Radiator valve with thermostat (TS0601_thermostat)\",\n+                    \"name\": \"th1\",\n+                    \"sw_version\": \"Zigbee2MQTT 1.18.2\"\n+                  },\n+                  \"json_attributes_topic\": \"zigbee2mqtt/th1\",\n+                  \"name\": \"th1 auto lock\",\n+                  \"state_off\": \"MANUAL\",\n+                  \"state_on\": \"AUTO\",\n+                  \"state_topic\": \"zigbee2mqtt/th1\",\n+                  \"unique_id\": \"0x847127fffe11dd6a_auto_lock_zigbee2mqtt\",\n+                  \"value_template\": \"{{ value_json.auto_lock }}\"\n+                }\\\n+                \"\"\");\n+\n+        assertThat(component.channels.size(), is(2));\n+        assertThat(component.getName(), is(\"th1 auto lock\"));\n+\n+        assertChannel(component, Switch.SWITCH_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"th1 auto lock\", OnOffValue.class);\n+        assertChannel(component, Switch.JSON_ATTRIBUTES_CHANNEL_ID, \"zigbee2mqtt/th1\", \"\", \"JSON Attributes\",\n+                TextValue.class);\n+\n+        publishMessage(\"zigbee2mqtt/th1\", \"{\\\"auto_lock\\\": \\\"MANUAL\\\"}\");\n+        assertState(component, Switch.SWITCH_CHANNEL_ID, UnDefType.UNDEF);\n+        assertState(component, Switch.JSON_ATTRIBUTES_CHANNEL_ID, UnDefType.UNDEF);\n+\n+        linkChannel(component, Switch.SWITCH_CHANNEL_ID);\n+\n+        publishMessage(\"zigbee2mqtt/th1\", \"{\\\"auto_lock\\\": \\\"MANUAL\\\"}\");\n+        assertState(component, Switch.SWITCH_CHANNEL_ID, OnOffType.OFF);\n+        assertState(component, Switch.JSON_ATTRIBUTES_CHANNEL_ID, UnDefType.UNDEF);\n+    }\n+\n     @Override\n     protected Set<String> getConfigTopics() {\n         return Set.of(CONFIG_TOPIC);\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TemplateSchemaLightTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TemplateSchemaLightTests.java\nindex d31e286c042ff..1342bec3d134b 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TemplateSchemaLightTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TemplateSchemaLightTests.java\n@@ -78,6 +78,8 @@ public void testRgb() throws InterruptedException {\n \n         assertChannel(component, Light.COLOR_CHANNEL_ID, \"\", \"dummy\", \"Color\", ColorValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"\"\"\n                 { \"state\": \"on\", \"r\": 255, \"g\": 255, \"b\": 255, \"brightness\": 255 }\n                 \"\"\");\n@@ -111,6 +113,8 @@ public void testBrightnessAndOnOff() throws InterruptedException {\n \n         assertChannel(component, Light.BRIGHTNESS_CHANNEL_ID, \"\", \"dummy\", \"Brightness\", PercentageValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"state\\\": \\\"on\\\", \\\"brightness\\\": 128 }\");\n         assertState(component, Light.BRIGHTNESS_CHANNEL_ID,\n                 new PercentType(new BigDecimal(128 * 100).divide(new BigDecimal(255), MathContext.DECIMAL128)));\n@@ -153,6 +157,8 @@ public void testBrightnessAndCCT() throws InterruptedException {\n         assertChannel(component, Light.BRIGHTNESS_CHANNEL_ID, \"\", \"dummy\", \"Brightness\", PercentageValue.class);\n         assertChannel(component, Light.COLOR_TEMP_CHANNEL_ID, \"\", \"dummy\", \"Color Temperature\", NumberValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"shellies/bulb/color/0/status\", \"{ \\\"state\\\": \\\"on\\\", \\\"brightness\\\": 100 }\");\n         assertState(component, Light.BRIGHTNESS_CHANNEL_ID, PercentType.HUNDRED);\n         assertState(component, Light.COLOR_TEMP_CHANNEL_ID, UnDefType.NULL);\n@@ -186,6 +192,8 @@ public void testOnOffOnly() throws InterruptedException {\n \n         assertChannel(component, Light.SWITCH_CHANNEL_ID, \"\", \"dummy\", \"On/Off State\", OnOffValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"zigbee2mqtt/light/state\", \"{\\\"power\\\": \\\"on\\\"}\");\n         assertState(component, Light.SWITCH_CHANNEL_ID, OnOffType.ON);\n         publishMessage(\"zigbee2mqtt/light/state\", \"{\\\"power\\\": \\\"off\\\"}\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TextTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TextTests.java\nindex 2812c2a2b6293..7e43f195d6100 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TextTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/TextTests.java\n@@ -48,6 +48,8 @@ public void test() {\n \n         assertChannel(component, Text.TEXT_CHANNEL_ID, \"txt/state\", \"txt/cmd\", \"MQTT Text\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"txt/state\", \"stuff\");\n         assertState(component, Text.TEXT_CHANNEL_ID, new StringType(\"stuff\"));\n \n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/VacuumTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/VacuumTests.java\nindex 52614af14ea68..bf25ddcd32f54 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/VacuumTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/VacuumTests.java\n@@ -75,6 +75,8 @@ public void testRoborockValetudo() {\n         assertChannel(component, Vacuum.JSON_ATTRIBUTES_CH_ID, \"valetudo/rockrobo/attributes\", \"\", \"JSON Attributes\",\n                 TextValue.class);\n \n+        linkAllChannels(component);\n+\n         assertState(component, Vacuum.STATE_CH_ID, UnDefType.UNDEF);\n         assertState(component, Vacuum.FAN_SPEED_CH_ID, UnDefType.UNDEF);\n         assertState(component, Vacuum.BATTERY_LEVEL_CH_ID, UnDefType.UNDEF);\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ValveTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ValveTests.java\nindex dbde4cb4fd435..506a2c42c4a11 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ValveTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ValveTests.java\n@@ -70,6 +70,8 @@ public void testSimple() {\n                 OnOffValue.class);\n         assertChannel(component, Valve.STATE_CHANNEL_ID, \"\", \"\", \"State\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"home-assistant/valve/state\", \"{\\\"x\\\": \\\"open\\\"}\");\n         assertState(component, Valve.VALVE_CHANNEL_ID, OnOffType.ON);\n         assertState(component, Valve.STATE_CHANNEL_ID, new StringType(\"open\"));\n@@ -111,6 +113,8 @@ public void testJsonWithSimple() {\n                 OnOffValue.class);\n         assertChannel(component, Valve.STATE_CHANNEL_ID, \"\", \"\", \"State\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"home-assistant/valve/state\", \"{\\\"state\\\": \\\"open\\\"}\");\n         assertState(component, Valve.VALVE_CHANNEL_ID, OnOffType.ON);\n         assertState(component, Valve.STATE_CHANNEL_ID, new StringType(\"open\"));\n@@ -141,6 +145,8 @@ public void testPositional() {\n                 PercentageValue.class);\n         assertChannel(component, Valve.STATE_CHANNEL_ID, \"\", \"\", \"State\", TextValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"home-assistant/valve/state\", \"open\");\n         assertState(component, Valve.VALVE_CHANNEL_ID, PercentType.HUNDRED);\n         assertState(component, Valve.STATE_CHANNEL_ID, new StringType(\"open\"));\n@@ -208,6 +214,8 @@ public void testNoState() {\n         assertChannel(component, Valve.VALVE_CHANNEL_ID, \"\", \"home-assistant/valve/set\", \"MQTT valve\",\n                 OnOffValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"home-assistant/valve/state\", \"open\");\n         assertState(component, Valve.VALVE_CHANNEL_ID, OnOffType.ON);\n         publishMessage(\"home-assistant/valve/state\", \"closed\");\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/WaterHeaterTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/WaterHeaterTests.java\nindex 44c28588101ce..351af981653f4 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/WaterHeaterTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/WaterHeaterTests.java\n@@ -74,6 +74,8 @@ public void test() {\n         assertChannel(component, WaterHeater.TARGET_TEMPERATURE_CHANNEL_ID, \"basement/boiler/temperature\",\n                 \"basement/boiler/temperature/set\", \"Target Temperature\", NumberValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"basement/boiler/mode\", \"eco\");\n         assertState(component, WaterHeater.MODE_CHANNEL_ID, new StringType(\"eco\"));\n         publishMessage(\"basement/boiler/mode\", \"invalid\");\n@@ -131,6 +133,8 @@ public void testSynthesizedPowerState() {\n         assertChannel(component, WaterHeater.TARGET_TEMPERATURE_CHANNEL_ID, \"basement/boiler/temperature\",\n                 \"basement/boiler/temperature/set\", \"Target Temperature\", NumberValue.class);\n \n+        linkAllChannels(component);\n+\n         publishMessage(\"basement/boiler/mode\", \"eco\");\n         assertState(component, WaterHeater.MODE_CHANNEL_ID, new StringType(\"eco\"));\n         assertState(component, WaterHeater.STATE_CHANNEL_ID, OnOffType.ON);\n\ndiff --git a/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/DiscoverComponentsTest.java b/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/DiscoverComponentsTest.java\nindex d5dd4efea1ac8..38f0f47581508 100644\n--- a/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/DiscoverComponentsTest.java\n+++ b/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/DiscoverComponentsTest.java\n@@ -40,6 +40,7 @@\n import org.openhab.binding.mqtt.homeassistant.internal.DiscoverComponents.ComponentDiscovered;\n import org.openhab.binding.mqtt.homeassistant.internal.HaID;\n import org.openhab.binding.mqtt.homeassistant.internal.HandlerConfiguration;\n+import org.openhab.binding.mqtt.homeassistant.internal.HomeAssistantChannelLinkageChecker;\n import org.openhab.binding.mqtt.homeassistant.internal.config.ChannelConfigurationTypeAdapterFactory;\n import org.openhab.core.i18n.UnitProvider;\n import org.openhab.core.io.transport.mqtt.MqttBrokerConnection;\n@@ -62,6 +63,7 @@ public class DiscoverComponentsTest extends JavaOSGiTest {\n     private @Mock @NonNullByDefault({}) MqttBrokerConnection connection;\n     private @Mock @NonNullByDefault({}) ComponentDiscovered discovered;\n     private @Mock @NonNullByDefault({}) ChannelStateUpdateListener channelStateUpdateListener;\n+    private @Mock @NonNullByDefault({}) HomeAssistantChannelLinkageChecker linkageChecker;\n     private @Mock @NonNullByDefault({}) AvailabilityTracker availabilityTracker;\n \n     @BeforeEach\n@@ -84,8 +86,9 @@ public void discoveryTimeTest() throws InterruptedException, ExecutionException,\n         Jinjava jinjava = new Jinjava();\n         UnitProvider unitProvider = mock(UnitProvider.class);\n \n-        DiscoverComponents discover = spy(new DiscoverComponents(ThingChannelConstants.TEST_HOME_ASSISTANT_THING,\n-                scheduler, channelStateUpdateListener, availabilityTracker, gson, jinjava, unitProvider));\n+        DiscoverComponents discover = spy(\n+                new DiscoverComponents(ThingChannelConstants.TEST_HOME_ASSISTANT_THING, scheduler,\n+                        channelStateUpdateListener, linkageChecker, availabilityTracker, gson, jinjava, unitProvider));\n \n         HandlerConfiguration config = new HandlerConfiguration(\"homeassistant\", List.of(\"switch/object\"));\n \n\ndiff --git a/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java b/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java\nindex a2a372ce74a00..53347ae4bf6c4 100644\n--- a/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java\n+++ b/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java\n@@ -45,6 +45,7 @@\n import org.openhab.binding.mqtt.homeassistant.internal.DiscoverComponents;\n import org.openhab.binding.mqtt.homeassistant.internal.DiscoverComponents.ComponentDiscovered;\n import org.openhab.binding.mqtt.homeassistant.internal.HaID;\n+import org.openhab.binding.mqtt.homeassistant.internal.HomeAssistantChannelLinkageChecker;\n import org.openhab.binding.mqtt.homeassistant.internal.component.AbstractComponent;\n import org.openhab.binding.mqtt.homeassistant.internal.component.Switch;\n import org.openhab.binding.mqtt.homeassistant.internal.config.ChannelConfigurationTypeAdapterFactory;\n@@ -76,6 +77,7 @@ public class HomeAssistantMQTTImplementationTest extends MqttOSGiTest {\n     private @Nullable Throwable failure;\n \n     private @Mock @NonNullByDefault({}) ChannelStateUpdateListener channelStateUpdateListener;\n+    private @Mock @NonNullByDefault({}) HomeAssistantChannelLinkageChecker linkageChecker;\n     private @Mock @NonNullByDefault({}) AvailabilityTracker availabilityTracker;\n \n     /**\n@@ -169,8 +171,11 @@ public void parseHATree() throws Exception {\n         Jinjava jinjava = new Jinjava();\n \n         ScheduledExecutorService scheduler = new ScheduledThreadPoolExecutor(4);\n-        DiscoverComponents discover = spy(new DiscoverComponents(ThingChannelConstants.TEST_HOME_ASSISTANT_THING,\n-                scheduler, channelStateUpdateListener, availabilityTracker, gson, jinjava, unitProvider));\n+        DiscoverComponents discover = spy(\n+                new DiscoverComponents(ThingChannelConstants.TEST_HOME_ASSISTANT_THING, scheduler,\n+                        channelStateUpdateListener, linkageChecker, availabilityTracker, gson, jinjava, unitProvider));\n+\n+        when(linkageChecker.isChannelLinked(any())).thenReturn(true);\n \n         // The DiscoverComponents object calls ComponentDiscovered callbacks.\n         // In the following implementation we add the found component to the `haComponents` map\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18214",
    "pr_id": 18214,
    "issue_id": 4584,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[enocean] Add ramping time to central command (dimming)\nEEP A5-38-08 CMD 0x02 has a ramping time, which defines the speed how fast a dimmer is going to the desired value. Add this as config for the channel. Also, add the functionality to EEP D2-01-01.\r\n\r\nSee https://github.com/fruggy83/openocean/issues/42",
    "issue_word_count": 56,
    "test_files_count": 18,
    "non_test_files_count": 3,
    "pr_changed_files": [
      "bundles/org.openhab.binding.amplipi/pom.xml",
      "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/api1/Shelly1CoapServer.java",
      "bundles/org.openhab.binding.tradfri/src/main/java/org/openhab/binding/tradfri/internal/handler/TradfriGatewayHandler.java",
      "itests/org.openhab.automation.groovyscripting.tests/itest.bndrun",
      "itests/org.openhab.automation.jsscriptingnashorn.tests/itest.bndrun",
      "itests/org.openhab.binding.astro.tests/itest.bndrun",
      "itests/org.openhab.binding.avmfritz.tests/itest.bndrun",
      "itests/org.openhab.binding.feed.tests/itest.bndrun",
      "itests/org.openhab.binding.hue.tests/itest.bndrun",
      "itests/org.openhab.binding.max.tests/itest.bndrun",
      "itests/org.openhab.binding.mielecloud.tests/itest.bndrun",
      "itests/org.openhab.binding.modbus.tests/itest.bndrun",
      "itests/org.openhab.binding.modbus.tests/src/main/java/org/openhab/binding/modbus/tests/ModbusPollerThingHandlerTest.java",
      "itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun",
      "itests/org.openhab.binding.mqtt.homie.tests/itest.bndrun",
      "itests/org.openhab.binding.mqtt.ruuvigateway.tests/itest.bndrun",
      "itests/org.openhab.binding.ntp.tests/itest.bndrun",
      "itests/org.openhab.binding.systeminfo.tests/itest.bndrun",
      "itests/org.openhab.binding.tradfri.tests/itest.bndrun",
      "itests/org.openhab.binding.wemo.tests/itest.bndrun",
      "itests/org.openhab.persistence.mapdb.tests/itest.bndrun"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.automation.groovyscripting.tests/itest.bndrun",
      "itests/org.openhab.automation.jsscriptingnashorn.tests/itest.bndrun",
      "itests/org.openhab.binding.astro.tests/itest.bndrun",
      "itests/org.openhab.binding.avmfritz.tests/itest.bndrun",
      "itests/org.openhab.binding.feed.tests/itest.bndrun",
      "itests/org.openhab.binding.hue.tests/itest.bndrun",
      "itests/org.openhab.binding.max.tests/itest.bndrun",
      "itests/org.openhab.binding.mielecloud.tests/itest.bndrun",
      "itests/org.openhab.binding.modbus.tests/itest.bndrun",
      "itests/org.openhab.binding.modbus.tests/src/main/java/org/openhab/binding/modbus/tests/ModbusPollerThingHandlerTest.java",
      "itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun",
      "itests/org.openhab.binding.mqtt.homie.tests/itest.bndrun",
      "itests/org.openhab.binding.mqtt.ruuvigateway.tests/itest.bndrun",
      "itests/org.openhab.binding.ntp.tests/itest.bndrun",
      "itests/org.openhab.binding.systeminfo.tests/itest.bndrun",
      "itests/org.openhab.binding.tradfri.tests/itest.bndrun",
      "itests/org.openhab.binding.wemo.tests/itest.bndrun",
      "itests/org.openhab.persistence.mapdb.tests/itest.bndrun"
    ],
    "base_commit": "039e62942e818b966f3f383e5f9e7a4dffa0a01d",
    "head_commit": "9217891bfa5b86bef196c9f55ca75863b862496a",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18214",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18214",
    "dockerfile": "",
    "pr_merged_at": "2025-02-15T10:29:27.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.amplipi/pom.xml b/bundles/org.openhab.binding.amplipi/pom.xml\nindex f60852efcc92e..37e859d8024ae 100644\n--- a/bundles/org.openhab.binding.amplipi/pom.xml\n+++ b/bundles/org.openhab.binding.amplipi/pom.xml\n@@ -15,7 +15,7 @@\n   <name>openHAB Add-ons :: Bundles :: AmpliPi Binding</name>\n \n   <properties>\n-    <cxf-version>3.6.4</cxf-version>\n+    <cxf-version>3.6.5</cxf-version>\n   </properties>\n \n   <build>\n\ndiff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/api1/Shelly1CoapServer.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/api1/Shelly1CoapServer.java\nindex 2b2d570896897..af1488c404194 100644\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/api1/Shelly1CoapServer.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/api1/Shelly1CoapServer.java\n@@ -29,8 +29,9 @@\n import org.eclipse.californium.core.coap.Response;\n import org.eclipse.californium.core.network.CoapEndpoint;\n import org.eclipse.californium.core.network.Exchange;\n-import org.eclipse.californium.core.network.config.NetworkConfig;\n import org.eclipse.californium.elements.UdpMulticastConnector;\n+import org.eclipse.californium.elements.config.Configuration;\n+import org.eclipse.californium.scandium.config.DtlsConfig;\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.slf4j.Logger;\n@@ -43,12 +44,16 @@\n  */\n @NonNullByDefault\n public class Shelly1CoapServer {\n+    static {\n+        // register configurations before Configuration.getStandard() is used\n+        DtlsConfig.register();\n+    }\n     private final Logger logger = LoggerFactory.getLogger(Shelly1CoapServer.class);\n \n     boolean started = false;\n     private CoapEndpoint statusEndpoint = new CoapEndpoint.Builder().build();\n     private @Nullable UdpMulticastConnector statusConnector;\n-    private CoapServer server = new CoapServer(NetworkConfig.getStandard(), COIOT_PORT);\n+    private CoapServer server = new CoapServer(Configuration.getStandard(), COIOT_PORT);\n     private final Set<Shelly1CoapListener> coapListeners = ConcurrentHashMap.newKeySet();\n \n     protected class ShellyStatusListener extends CoapResource {\n@@ -81,13 +86,13 @@ public synchronized void start(String localIp, int port, Shelly1CoapListener lis\n             throws UnknownHostException, SocketException {\n         if (!started) {\n             logger.debug(\"Initializing CoIoT listener (local IP={}:{})\", localIp, port);\n-            NetworkConfig nc = NetworkConfig.getStandard();\n+            Configuration nc = Configuration.getStandard();\n             InetAddress localAddr = InetAddress.getByName(localIp);\n             // Join the multicast group on the selected network interface, add UDP listener\n             statusConnector = new UdpMulticastConnector.Builder().setLocalAddress(localAddr, port).setLocalPort(port)\n                     .setOutgoingMulticastInterface(localAddr).addMulticastGroup(CoAP.MULTICAST_IPV4).build();\n-            statusEndpoint = new CoapEndpoint.Builder().setNetworkConfig(nc).setConnector(statusConnector).build();\n-            server = new CoapServer(NetworkConfig.getStandard(), port);\n+            statusEndpoint = new CoapEndpoint.Builder().setConfiguration(nc).setConnector(statusConnector).build();\n+            server = new CoapServer(Configuration.getStandard(), port);\n             server.addEndpoint(statusEndpoint);\n             CoapResource cit = new ShellyStatusListener(\"cit\", this);\n             CoapResource s = new ShellyStatusListener(\"s\", this);\n\ndiff --git a/bundles/org.openhab.binding.tradfri/src/main/java/org/openhab/binding/tradfri/internal/handler/TradfriGatewayHandler.java b/bundles/org.openhab.binding.tradfri/src/main/java/org/openhab/binding/tradfri/internal/handler/TradfriGatewayHandler.java\nindex a19fc7b77bc85..a5030e6026368 100644\n--- a/bundles/org.openhab.binding.tradfri/src/main/java/org/openhab/binding/tradfri/internal/handler/TradfriGatewayHandler.java\n+++ b/bundles/org.openhab.binding.tradfri/src/main/java/org/openhab/binding/tradfri/internal/handler/TradfriGatewayHandler.java\n@@ -30,6 +30,7 @@\n import org.eclipse.californium.core.network.CoapEndpoint;\n import org.eclipse.californium.elements.exception.ConnectorException;\n import org.eclipse.californium.scandium.DTLSConnector;\n+import org.eclipse.californium.scandium.config.DtlsConfig;\n import org.eclipse.californium.scandium.config.DtlsConnectorConfig;\n import org.eclipse.californium.scandium.dtls.pskstore.AdvancedSinglePskStore;\n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -70,7 +71,10 @@\n  */\n @NonNullByDefault\n public class TradfriGatewayHandler extends BaseBridgeHandler implements CoapCallback {\n-\n+    static {\n+        // register configurations before Configuration.getStandard() is used\n+        DtlsConfig.register();\n+    }\n     protected final Logger logger = LoggerFactory.getLogger(getClass());\n \n     private static final TradfriVersion MIN_SUPPORTED_VERSION = new TradfriVersion(\"1.2.42\");\n@@ -154,11 +158,12 @@ private void establishConnection() {\n             return;\n         }\n \n-        DtlsConnectorConfig.Builder builder = new DtlsConnectorConfig.Builder();\n+        DtlsConnectorConfig.Builder builder = new DtlsConnectorConfig.Builder(\n+                org.eclipse.californium.elements.config.Configuration.getStandard()\n+                        .set(DtlsConfig.DTLS_MAX_CONNECTIONS, 100)\n+                        .set(DtlsConfig.DTLS_STALE_CONNECTION_THRESHOLD, 60, TimeUnit.SECONDS));\n         builder.setAdvancedPskStore(\n                 new AdvancedSinglePskStore(configuration.identity, configuration.preSharedKey.getBytes()));\n-        builder.setMaxConnections(100);\n-        builder.setStaleConnectionThreshold(60);\n         dtlsConnector = new DTLSConnector(builder.build());\n         endPoint = new CoapEndpoint.Builder().setConnector(dtlsConnector).build();\n         deviceClient.setEndpoint(endPoint);\n@@ -185,7 +190,8 @@ protected boolean obtainIdentityAndPreSharedKey() {\n         String authUrl = null;\n         String responseText = null;\n         try {\n-            DtlsConnectorConfig.Builder builder = new DtlsConnectorConfig.Builder();\n+            DtlsConnectorConfig.Builder builder = new DtlsConnectorConfig.Builder(\n+                    org.eclipse.californium.elements.config.Configuration.getStandard());\n             builder.setAdvancedPskStore(new AdvancedSinglePskStore(\"Client_identity\", configuration.code.getBytes()));\n \n             DTLSConnector dtlsConnector = new DTLSConnector(builder.build());\n",
    "test_patch": "diff --git a/itests/org.openhab.automation.groovyscripting.tests/itest.bndrun b/itests/org.openhab.automation.groovyscripting.tests/itest.bndrun\nindex d1b929f7a769d..9c3406bb7cb47 100644\n--- a/itests/org.openhab.automation.groovyscripting.tests/itest.bndrun\n+++ b/itests/org.openhab.automation.groovyscripting.tests/itest.bndrun\n@@ -22,7 +22,7 @@ Fragment-Host: org.openhab.automation.groovyscripting\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.external.javax.inject;version='[2.4.0,2.4.1)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tsi-units;version='[2.1.0,2.1.1)',\\\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n@@ -41,11 +41,11 @@ Fragment-Host: org.openhab.automation.groovyscripting\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.automation.jsscriptingnashorn.tests/itest.bndrun b/itests/org.openhab.automation.jsscriptingnashorn.tests/itest.bndrun\nindex 9d50abdfab307..844b244431963 100644\n--- a/itests/org.openhab.automation.jsscriptingnashorn.tests/itest.bndrun\n+++ b/itests/org.openhab.automation.jsscriptingnashorn.tests/itest.bndrun\n@@ -16,7 +16,7 @@ Fragment-Host: org.openhab.automation.jsscriptingnashorn\n # done\n #\n -runbundles: \\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -41,11 +41,11 @@ Fragment-Host: org.openhab.automation.jsscriptingnashorn\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n@@ -65,10 +65,10 @@ Fragment-Host: org.openhab.automation.jsscriptingnashorn\n \torg.eclipse.jetty.util;version='[9.4.57,9.4.58)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.57,9.4.58)',\\\n \torg.objectweb.asm;version='[9.7.1,9.7.2)',\\\n-\torg.objectweb.asm.commons;version='[9.6.0,9.6.1)',\\\n-\torg.objectweb.asm.tree;version='[9.6.0,9.6.1)',\\\n-\torg.objectweb.asm.tree.analysis;version='[9.6.0,9.6.1)',\\\n-\torg.objectweb.asm.util;version='[9.6.0,9.6.1)',\\\n+\torg.objectweb.asm.commons;version='[9.7.1,9.7.2)',\\\n+\torg.objectweb.asm.tree;version='[9.7.1,9.7.2)',\\\n+\torg.objectweb.asm.tree.analysis;version='[9.7.1,9.7.2)',\\\n+\torg.objectweb.asm.util;version='[9.7.1,9.7.2)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.8,2.2.9)',\\\n \torg.openhab.automation.jsscriptingnashorn;version='[5.0.0,5.0.1)',\\\n \torg.openhab.automation.jsscriptingnashorn.tests;version='[5.0.0,5.0.1)',\\\n\ndiff --git a/itests/org.openhab.binding.astro.tests/itest.bndrun b/itests/org.openhab.binding.astro.tests/itest.bndrun\nindex 6ce39858fc5a3..c3faaf1f51493 100644\n--- a/itests/org.openhab.binding.astro.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.astro.tests/itest.bndrun\n@@ -36,12 +36,12 @@ Fragment-Host: org.openhab.binding.astro\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-params;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-params;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \torg.osgi.service.component.annotations;version='[1.5.1,1.5.2)',\\\n \tcom.sun.jna;version='[5.16.0,5.16.1)',\\\n@@ -67,7 +67,7 @@ Fragment-Host: org.openhab.binding.astro\n \torg.eclipse.jetty.servlet;version='[9.4.57,9.4.58)',\\\n \torg.eclipse.jetty.util;version='[9.4.57,9.4.58)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.57,9.4.58)',\\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \torg.objectweb.asm;version='[9.7.1,9.7.2)',\\\n \torg.objectweb.asm.commons;version='[9.6.0,9.6.1)',\\\n \torg.objectweb.asm.tree;version='[9.6.0,9.6.1)',\\\n\ndiff --git a/itests/org.openhab.binding.avmfritz.tests/itest.bndrun b/itests/org.openhab.binding.avmfritz.tests/itest.bndrun\nindex 5816b4949de38..e405dd63ad378 100644\n--- a/itests/org.openhab.binding.avmfritz.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.avmfritz.tests/itest.bndrun\n@@ -13,7 +13,7 @@ Fragment-Host: org.openhab.binding.avmfritz\n # done\n #\n -runbundles: \\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -42,11 +42,11 @@ Fragment-Host: org.openhab.binding.avmfritz\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.feed.tests/itest.bndrun b/itests/org.openhab.binding.feed.tests/itest.bndrun\nindex 67b020a8a25a0..c8944d1714a57 100644\n--- a/itests/org.openhab.binding.feed.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.feed.tests/itest.bndrun\n@@ -16,7 +16,7 @@ Fragment-Host: org.openhab.binding.feed\n # done\n #\n -runbundles: \\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -41,11 +41,11 @@ Fragment-Host: org.openhab.binding.feed\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.hue.tests/itest.bndrun b/itests/org.openhab.binding.hue.tests/itest.bndrun\nindex 4cd8af8a6f3ea..feed48c8a08f3 100644\n--- a/itests/org.openhab.binding.hue.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.hue.tests/itest.bndrun\n@@ -15,7 +15,7 @@ Fragment-Host: org.openhab.binding.hue\n # done\n #\n -runbundles: \\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -46,11 +46,11 @@ Fragment-Host: org.openhab.binding.hue\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.max.tests/itest.bndrun b/itests/org.openhab.binding.max.tests/itest.bndrun\nindex 3eabb67dafac1..45332b4b45cc4 100644\n--- a/itests/org.openhab.binding.max.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.max.tests/itest.bndrun\n@@ -14,7 +14,7 @@ Fragment-Host: org.openhab.binding.max\n # done\n #\n -runbundles: \\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -39,11 +39,11 @@ Fragment-Host: org.openhab.binding.max\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.mielecloud.tests/itest.bndrun b/itests/org.openhab.binding.mielecloud.tests/itest.bndrun\nindex 7fa63cf4e0341..fb5c1cdc84eac 100644\n--- a/itests/org.openhab.binding.mielecloud.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.mielecloud.tests/itest.bndrun\n@@ -16,7 +16,7 @@ Fragment-Host: org.openhab.binding.mielecloud\n -runbundles: \\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n \tjakarta.inject.jakarta.inject-api;version='[2.0.0,2.0.1)',\\\n \torg.glassfish.hk2.external.javax.inject;version='[2.4.0,2.4.1)',\\\n@@ -43,11 +43,11 @@ Fragment-Host: org.openhab.binding.mielecloud\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.modbus.tests/itest.bndrun b/itests/org.openhab.binding.modbus.tests/itest.bndrun\nindex 0bf91ec1a6c90..53b72018601a1 100644\n--- a/itests/org.openhab.binding.modbus.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.modbus.tests/itest.bndrun\n@@ -16,7 +16,7 @@ Fragment-Host: org.openhab.binding.modbus\n #\n -runbundles: \\\n \tnrjavaserial;version='[5.2.1,5.2.2)',\\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -46,12 +46,12 @@ Fragment-Host: org.openhab.binding.modbus\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-params;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-params;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.modbus.tests/src/main/java/org/openhab/binding/modbus/tests/ModbusPollerThingHandlerTest.java b/itests/org.openhab.binding.modbus.tests/src/main/java/org/openhab/binding/modbus/tests/ModbusPollerThingHandlerTest.java\nindex e6cd9e52890e4..a9465ba771fff 100644\n--- a/itests/org.openhab.binding.modbus.tests/src/main/java/org/openhab/binding/modbus/tests/ModbusPollerThingHandlerTest.java\n+++ b/itests/org.openhab.binding.modbus.tests/src/main/java/org/openhab/binding/modbus/tests/ModbusPollerThingHandlerTest.java\n@@ -18,13 +18,10 @@\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.mockito.ArgumentMatchers.*;\n import static org.mockito.Mockito.*;\n-import static org.mockito.hamcrest.MockitoHamcrest.argThat;\n \n import java.lang.reflect.Field;\n import java.util.concurrent.atomic.AtomicReference;\n \n-import org.hamcrest.Description;\n-import org.hamcrest.TypeSafeMatcher;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -246,31 +243,36 @@ public void testPollingGeneric(String type, ModbusReadFunctionCode expectedFunct\n         assertThat(poller.getStatusInfo().toString(), poller.getStatus(), is(equalTo(ThingStatus.ONLINE)));\n \n         verifyEndpointBasicInitInteraction();\n-        verify(mockedModbusManager).newModbusCommunicationInterface(argThat(new TypeSafeMatcher<>() {\n-\n-            @Override\n-            public void describeTo(Description description) {\n-                description.appendText(\"correct endpoint (\");\n-            }\n-\n-            @Override\n-            protected boolean matchesSafely(ModbusSlaveEndpoint endpoint) {\n-                return checkEndpoint(endpoint);\n-            }\n-        }), any());\n-\n-        verify(comms).registerRegularPoll(argThat(new TypeSafeMatcher<>() {\n-\n-            @Override\n-            public void describeTo(Description description) {\n-                description.appendText(\"correct request\");\n-            }\n-\n-            @Override\n-            protected boolean matchesSafely(ModbusReadRequestBlueprint request) {\n-                return checkRequest(request, expectedFunctionCode);\n-            }\n-        }), eq(150l), eq(0L), notNull(), notNull());\n+        // this test has been disabled as it fails since openhab/openhab-core#4584\n+        // TODO apadt this test to hamcrest 4\n+        /*\n+         * verify(mockedModbusManager).newModbusCommunicationInterface(argThat(new TypeSafeMatcher<>() {\n+         * \n+         * @Override\n+         * public void describeTo(Description description) {\n+         * description.appendText(\"correct endpoint (\");\n+         * }\n+         * \n+         * @Override\n+         * protected boolean matchesSafely(ModbusSlaveEndpoint endpoint) {\n+         * return checkEndpoint(endpoint);\n+         * }\n+         * }), any());\n+         */\n+        /*\n+         * verify(comms).registerRegularPoll(argThat(new TypeSafeMatcher<>() {\n+         * \n+         * @Override\n+         * public void describeTo(Description description) {\n+         * description.appendText(\"correct request\");\n+         * }\n+         * \n+         * @Override\n+         * protected boolean matchesSafely(ModbusReadRequestBlueprint request) {\n+         * return checkRequest(request, expectedFunctionCode);\n+         * }\n+         * }), eq(150l), eq(0L), notNull(), notNull());\n+         */\n         verifyNoMoreInteractions(mockedModbusManager);\n     }\n \n@@ -326,41 +328,46 @@ public void testPollUnregistrationOnDispose()\n \n         // verify registration\n         final AtomicReference<ModbusReadCallback> callbackRef = new AtomicReference<>();\n-        verify(mockedModbusManager).newModbusCommunicationInterface(argThat(new TypeSafeMatcher<>() {\n-\n-            @Override\n-            public void describeTo(Description description) {\n-                description.appendText(\"correct endpoint\");\n-            }\n-\n-            @Override\n-            protected boolean matchesSafely(ModbusSlaveEndpoint endpoint) {\n-                return checkEndpoint(endpoint);\n-            }\n-        }), any());\n-        verify(comms).registerRegularPoll(argThat(new TypeSafeMatcher<>() {\n-\n-            @Override\n-            public void describeTo(Description description) {\n-            }\n-\n-            @Override\n-            protected boolean matchesSafely(ModbusReadRequestBlueprint request) {\n-                return checkRequest(request, ModbusReadFunctionCode.READ_COILS);\n-            }\n-        }), eq(150l), eq(0L), argThat(new TypeSafeMatcher<>() {\n-\n-            @Override\n-            public void describeTo(Description description) {\n-            }\n-\n-            @Override\n-            protected boolean matchesSafely(ModbusReadCallback callback) {\n-                callbackRef.set(callback);\n-                return true;\n-            }\n-        }), notNull());\n-        verifyNoMoreInteractions(mockedModbusManager);\n+        // this test has been disabled as it fails since openhab/openhab-core#4584\n+        // TODO apadt this test to hamcrest 4\n+        /*\n+         * verify(mockedModbusManager).newModbusCommunicationInterface(argThat(new TypeSafeMatcher<>() {\n+         * \n+         * @Override\n+         * public void describeTo(Description description) {\n+         * description.appendText(\"correct endpoint\");\n+         * }\n+         * \n+         * @Override\n+         * protected boolean matchesSafely(ModbusSlaveEndpoint endpoint) {\n+         * return checkEndpoint(endpoint);\n+         * }\n+         * }), any());\n+         */\n+        /*\n+         * verify(comms).registerRegularPoll(argThat(new TypeSafeMatcher<>() {\n+         * \n+         * @Override\n+         * public void describeTo(Description description) {\n+         * }\n+         * \n+         * @Override\n+         * protected boolean matchesSafely(ModbusReadRequestBlueprint request) {\n+         * return checkRequest(request, ModbusReadFunctionCode.READ_COILS);\n+         * }\n+         * }), eq(150l), eq(0L), argThat(new TypeSafeMatcher<>() {\n+         * \n+         * @Override\n+         * public void describeTo(Description description) {\n+         * }\n+         * \n+         * @Override\n+         * protected boolean matchesSafely(ModbusReadCallback callback) {\n+         * callbackRef.set(callback);\n+         * return true;\n+         * }\n+         * }), notNull());\n+         */ verifyNoMoreInteractions(mockedModbusManager);\n \n         // reset call counts for easy assertions\n         reset(mockedModbusManager);\n\ndiff --git a/itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun b/itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun\nindex b7539329ce331..9d421c61c7f87 100644\n--- a/itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun\n@@ -27,7 +27,7 @@ Import-Package: \\\n #\n -runbundles: \\\n \torg.glassfish.hk2.external.javax.inject;version='[2.4.0,2.4.1)',\\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \torg.jctools.core;version='[2.1.2,2.1.3)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n@@ -68,11 +68,11 @@ Import-Package: \\\n \tcom.hivemq.client.mqtt;version='[1.3.3,1.3.4)',\\\n \tio.reactivex.rxjava2.rxjava;version='[2.2.21,2.2.22)',\\\n \treactive-streams;version='[1.0.4,1.0.5)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n@@ -122,7 +122,7 @@ Import-Package: \\\n \tcom.google.guava.failureaccess;version='[1.0.2,1.0.3)',\\\n \tcom.google.re2j.re2j;version='[1.2.0,1.2.1)',\\\n \tcom.hubspot.jinjava.jinjava;version='[2.7.4,2.7.5)',\\\n-\tjavassist;version='[3.29.2,3.29.3)',\\\n+\tjavassist;version='[3.30.2,3.30.3)',\\\n \torg.apache.commons.commons-net;version='[3.9.0,3.9.1)',\\\n \torg.apache.commons.lang3;version='[3.17.0,3.17.1)',\\\n \torg.yaml.snakeyaml;version='[2.3.0,2.3.1)',\\\n\ndiff --git a/itests/org.openhab.binding.mqtt.homie.tests/itest.bndrun b/itests/org.openhab.binding.mqtt.homie.tests/itest.bndrun\nindex db580baa54bb5..98459fb52869b 100644\n--- a/itests/org.openhab.binding.mqtt.homie.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.mqtt.homie.tests/itest.bndrun\n@@ -27,7 +27,7 @@ Import-Package: \\\n #\n -runbundles: \\\n \torg.glassfish.hk2.external.javax.inject;version='[2.4.0,2.4.1)',\\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \torg.jctools.core;version='[2.1.2,2.1.3)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n@@ -68,11 +68,11 @@ Import-Package: \\\n \tcom.hivemq.client.mqtt;version='[1.3.3,1.3.4)',\\\n \tio.reactivex.rxjava2.rxjava;version='[2.2.21,2.2.22)',\\\n \treactive-streams;version='[1.0.4,1.0.5)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.mqtt.ruuvigateway.tests/itest.bndrun b/itests/org.openhab.binding.mqtt.ruuvigateway.tests/itest.bndrun\nindex d8282393a3190..dc31dc79a4969 100644\n--- a/itests/org.openhab.binding.mqtt.ruuvigateway.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.mqtt.ruuvigateway.tests/itest.bndrun\n@@ -40,7 +40,7 @@ Import-Package: \\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.external.javax.inject;version='[2.4.0,2.4.1)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \torg.jctools.core;version='[2.1.2,2.1.3)',\\\n \torg.jsr-305;version='[3.0.2,3.0.3)',\\\n \torg.osgi.service.component;version='[1.5.1,1.5.2)',\\\n@@ -68,12 +68,12 @@ Import-Package: \\\n \tcom.hivemq.client.mqtt;version='[1.3.3,1.3.4)',\\\n \tio.reactivex.rxjava2.rxjava;version='[2.2.21,2.2.22)',\\\n \treactive-streams;version='[1.0.4,1.0.5)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-params;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-params;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.ntp.tests/itest.bndrun b/itests/org.openhab.binding.ntp.tests/itest.bndrun\nindex 7f355237631f7..7b538c93a99ca 100644\n--- a/itests/org.openhab.binding.ntp.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.ntp.tests/itest.bndrun\n@@ -14,7 +14,7 @@ Fragment-Host: org.openhab.binding.ntp\n # done\n #\n -runbundles: \\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -44,11 +44,11 @@ Fragment-Host: org.openhab.binding.ntp\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.systeminfo.tests/itest.bndrun b/itests/org.openhab.binding.systeminfo.tests/itest.bndrun\nindex 441d91b18fbdb..f35338da0c73e 100644\n--- a/itests/org.openhab.binding.systeminfo.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.systeminfo.tests/itest.bndrun\n@@ -16,7 +16,7 @@ Fragment-Host: org.openhab.binding.systeminfo\n # done\n #\n -runbundles: \\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -46,11 +46,11 @@ Fragment-Host: org.openhab.binding.systeminfo\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.binding.tradfri.tests/itest.bndrun b/itests/org.openhab.binding.tradfri.tests/itest.bndrun\nindex 807944c3f0e47..aa8db34530ba1 100644\n--- a/itests/org.openhab.binding.tradfri.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.tradfri.tests/itest.bndrun\n@@ -15,7 +15,7 @@ Fragment-Host: org.openhab.binding.tradfri\n #\n -runbundles: \\\n \tjavax.jmdns;version='[3.5.12,3.5.13)',\\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -25,10 +25,10 @@ Fragment-Host: org.openhab.binding.tradfri\n \tsi-units;version='[2.1.0,2.1.1)',\\\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n-\tnet.i2p.crypto.eddsa;version='[0.3.0,0.3.1)',\\\n-\torg.eclipse.californium.core;version='[2.7.4,2.7.5)',\\\n-\torg.eclipse.californium.element-connector;version='[2.7.4,2.7.5)',\\\n-\torg.eclipse.californium.scandium;version='[2.7.4,2.7.5)',\\\n+\tbcprov;version='[1.78.1,1.78.2)',\\\n+\torg.eclipse.californium.core;version='[4.0.0,4.0.1)',\\\n+\torg.eclipse.californium.element-connector;version='[4.0.0,4.0.1)',\\\n+\torg.eclipse.californium.scandium;version='[4.0.0,4.0.1)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.1,1.5.2)',\\\n@@ -49,11 +49,11 @@ Fragment-Host: org.openhab.binding.tradfri\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n@@ -86,4 +86,5 @@ Fragment-Host: org.openhab.binding.tradfri\n \torg.openhab.core.thing;version='[5.0.0,5.0.1)',\\\n \torg.openhab.core.transform;version='[5.0.0,5.0.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[7.1.0,7.1.1)',\\\n-\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)',\\\n+\tjul.to.slf4j;version='[2.0.16,2.0.17)'\n\\ No newline at end of file\n\ndiff --git a/itests/org.openhab.binding.wemo.tests/itest.bndrun b/itests/org.openhab.binding.wemo.tests/itest.bndrun\nindex 34e933cda122f..a9dc578566b75 100644\n--- a/itests/org.openhab.binding.wemo.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.wemo.tests/itest.bndrun\n@@ -17,7 +17,7 @@ Fragment-Host: org.openhab.binding.wemo\n # done\n #\n -runbundles: \\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -46,11 +46,11 @@ Fragment-Host: org.openhab.binding.wemo\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n\ndiff --git a/itests/org.openhab.persistence.mapdb.tests/itest.bndrun b/itests/org.openhab.persistence.mapdb.tests/itest.bndrun\nindex 5dc270aed321d..f6ee343c17afc 100644\n--- a/itests/org.openhab.persistence.mapdb.tests/itest.bndrun\n+++ b/itests/org.openhab.persistence.mapdb.tests/itest.bndrun\n@@ -16,7 +16,7 @@ Fragment-Host: org.openhab.persistence.mapdb\n # done\n #\n -runbundles: \\\n-\torg.hamcrest;version='[2.2.0,2.2.1)',\\\n+\torg.hamcrest;version='[3.0.0,3.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n@@ -41,11 +41,11 @@ Fragment-Host: org.openhab.persistence.mapdb\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n \torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n \tcom.google.gson;version='[2.11.0,2.11.1)',\\\n-\tjunit-jupiter-api;version='[5.10.0,5.10.1)',\\\n-\tjunit-jupiter-engine;version='[5.10.0,5.10.1)',\\\n-\tjunit-platform-commons;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-engine;version='[1.10.0,1.10.1)',\\\n-\tjunit-platform-launcher;version='[1.10.0,1.10.1)',\\\n+\tjunit-jupiter-api;version='[5.11.4,5.11.5)',\\\n+\tjunit-jupiter-engine;version='[5.11.4,5.11.5)',\\\n+\tjunit-platform-commons;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-engine;version='[1.11.4,1.11.5)',\\\n+\tjunit-platform-launcher;version='[1.11.4,1.11.5)',\\\n \torg.opentest4j;version='[1.3.0,1.3.1)',\\\n \tch.qos.logback.classic;version='[1.3.14,1.3.15)',\\\n \tch.qos.logback.core;version='[1.3.14,1.3.15)',\\\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18201",
    "pr_id": 18201,
    "issue_id": 18162,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[boschshc] Support for device Door/Window Contact II Plus\nThe Bosch binding does not support the device Door/Window Contact II Plus. Compared to sensor Door/Window Contact II, the device has the information about vibration alarm.\nI would be very grateful for an extension.\n\n- The console command `boschshc showBindingInfo` returns:\n```\nBosch SHC Binding\n  SymbolicName org.openhab.binding.boschshc\n  Version 4.3.2\n```\n\n- The command `boschshc showDevices` returns:\n```\n...\n - SWD = boschshc:window-contact\n...\n - SWD2 = boschshc:window-contact-2\n```\n\n- The console command `boschshc deviceInfo` returns:\n```\n  deviceID: hdm:ZigBee:30e8e40000d36404\n      type: SWD2_PLUS -> !UNSUPPORTED!\n            service: CommunicationQuality -> communicationquality\n            service: ShutterContact -> shuttercontact\n            service: BatteryLevel -> batterylevel\n            service: Bypass -> bypass\n            service: VibrationSensor -> !UNSUPPORTED!\n```\n\n",
    "issue_word_count": 105,
    "test_files_count": 1,
    "non_test_files_count": 13,
    "pr_changed_files": [
      "bundles/org.openhab.binding.boschshc/DEVELOPERS.md",
      "bundles/org.openhab.binding.boschshc/README.md",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCHandlerFactory.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/windowcontact/WindowContact2PlusHandler.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/VibrationSensorService.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorSensitivity.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorServiceState.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorState.java",
      "bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties",
      "bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/windowcontact/WindowContact2PlusHandlerTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/windowcontact/WindowContact2PlusHandlerTest.java"
    ],
    "base_commit": "ea978fe953b960dc3afd0ef8e23969b3f12c169d",
    "head_commit": "1f9609d629bebc102350ebe0eef330881d0071d3",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18201",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18201",
    "dockerfile": "",
    "pr_merged_at": "2025-02-19T15:35:13.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.boschshc/DEVELOPERS.md b/bundles/org.openhab.binding.boschshc/DEVELOPERS.md\nindex 75a4c9561bf99..b5e901d852017 100644\n--- a/bundles/org.openhab.binding.boschshc/DEVELOPERS.md\n+++ b/bundles/org.openhab.binding.boschshc/DEVELOPERS.md\n@@ -1,5 +1,22 @@\n # For Developers\n \n+## Typical Workflow for Supporting new Devices / Services / Channels\n+\n+1. Define new thing types and channel types in `src/main/resources/OH-INF/thing/thing-types.xml`\n+1. If `thing-types.xml` was modified, re-generate the i18n properties file by running Maven with the goal `i18n:generate-default-translations`\n+1. Define constants for new thing/channel types in `BoschSHCBindingConstants`\n+1. Create new packages for services that are not implemented yet and create service classes\n+1. Create new DTO packages for new services and implement data transfer model classes / enums according to the JSON structure of the service requests\n+1. Create a new handler or extend existing handlers to update channel states according to what was received, and/or to send new states to the Bosch Smart Home Controller in case of writable channels\n+1. Register new handlers in `BoschSHCHandlerFactory`, if applicable\n+1. Register new thing types in `ThingDiscoveryService`, if applicable\n+1. Implement unit tests for new handlers / services / model classes\n+\n+1. If channels were added to existing devices/things, add a migration instruction set to `src/main/resources/update/binding.xml`\n+1. Add documentation for new things/channels to `README.md`\n+1. Apply automatic code formatting by running a Maven build with goal `spotless:apply`\n+1. Build the binding by running a Maven build with goals `clean install`\n+\n ## Build\n \n To only build the Bosch Smart Home binding code execute\n\ndiff --git a/bundles/org.openhab.binding.boschshc/README.md b/bundles/org.openhab.binding.boschshc/README.md\nindex c20608b9e6415..532bff63e4c89 100644\n--- a/bundles/org.openhab.binding.boschshc/README.md\n+++ b/bundles/org.openhab.binding.boschshc/README.md\n@@ -121,7 +121,7 @@ Detects open windows and doors.\n \n Detects open windows and doors and features an additional button.\n \n-**Thing Type ID**: `window-contact`\n+**Thing Type ID**: `window-contact-2`\n \n | Channel Type ID | Item Type | Writable | Description                  |\n | ----------------| --------- | :------: | ---------------------------- |\n@@ -131,6 +131,23 @@ Detects open windows and doors and features an additional button.\n | bypass          | Switch    | &#9744;  | Indicates whether the device is currently bypassed. Possible values are `ON`,`OFF` and `UNDEF` if the bypass state cannot be determined. |\n | signal-strength | Number    | &#9744;  | Communication quality between the device and the Smart Home Controller. Possible values range between 0 (unknown) and 4 (best signal strength). |\n \n+### Door/Window Contact II Plus\n+\n+Detects open windows and doors, provides a configurable button and a vibration sensor.\n+\n+**Thing Type ID**: `window-contact-2-plus`\n+\n+| Channel Type ID              | Item Type | Writable | Description                                                                                                                                                                                                                 |\n+| -----------------------------| --------- | :------: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| contact                      | Contact   | &#9744;  | Contact state of the device.                                                                                                                                                                                                |\n+| battery-level                | Number    | &#9744;  | Current battery level percentage as integer number. Bosch-specific battery levels are mapped to numbers as follows: `OK`: 100, `LOW_BATTERY`: 10, `CRITICAL_LOW`: 1, `CRITICALLY_LOW_BATTERY`: 1, `NOT_AVAILABLE`: `UNDEF`. |\n+| low-battery                  | Switch    | &#9744;  | Indicates whether the battery is low (`ON`) or OK (`OFF`).                                                                                                                                                                  |\n+| bypass                       | Switch    | &#9744;  | Indicates whether the device is currently bypassed. Possible values are `ON`,`OFF` and `UNDEF` if the bypass state cannot be determined.                                                                                    |\n+| signal-strength              | Number    | &#9744;  | Communication quality between the device and the Smart Home Controller. Possible values range between 0 (unknown) and 4 (best signal strength).                                                                             |\n+| vibration-sensor-enabled     | Switch    | &#9745;  | Channel to enable or disable the vibration sensor.                                                                                                                                                                          |\n+| vibration-sensor-sensitivity | String    | &#9745;  | The sensitivity of the vibration sensor. Possible values are `VERY_HIGH`, `HIGH`, `MEDIUM`, `LOW` and `VERY_LOW`.                                                                                                           |\n+| vibration-sensor-state       | String    | &#9744;  | Indicates whether vibrations were detected by the sensor. Possible values are `NO_VIBRATION`, `VIBRATION_DETECTED` and `UNKNOWN`.                                                                                           |\n+\n ### Light Control II\n \n This thing type is used if Light/Shutter Control II devices are configured as light controls.\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java\nindex 9916f45e5ea46..0edfe22dc1a26 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java\n@@ -85,8 +85,8 @@ List<String> getAllBoschShcServices() {\n                 \"childlock\", \"childprotection\", \"communicationquality\", \"hsbcoloractuator\", \"humiditylevel\",\n                 \"illuminance\", \"impulseswitch\", \"intrusion\", \"keypad\", \"latestmotion\", \"multilevelswitch\", \"powermeter\",\n                 \"powerswitch\", \"privacymode\", \"roomclimatecontrol\", \"shuttercontact\", \"shuttercontrol\", \"silentmode\",\n-                \"smokedetectorcheck\", \"temperaturelevel\", \"userstate\", \"valvetappet\", \"waterleakagesensor\",\n-                \"waterleakagesensorcheck\", \"waterleakagesensortilt\");\n+                \"smokedetectorcheck\", \"temperaturelevel\", \"userstate\", \"valvetappet\", \"vibrationsensor\",\n+                \"waterleakagesensor\", \"waterleakagesensorcheck\", \"waterleakagesensortilt\");\n     }\n \n     @Override\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java\nindex 4a01184b7cd06..7ce6cf44f0cd5 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java\n@@ -41,6 +41,8 @@ private BoschSHCBindingConstants() {\n     public static final ThingTypeUID THING_TYPE_TWINGUARD = new ThingTypeUID(BINDING_ID, \"twinguard\");\n     public static final ThingTypeUID THING_TYPE_WINDOW_CONTACT = new ThingTypeUID(BINDING_ID, \"window-contact\");\n     public static final ThingTypeUID THING_TYPE_WINDOW_CONTACT_2 = new ThingTypeUID(BINDING_ID, \"window-contact-2\");\n+    public static final ThingTypeUID THING_TYPE_WINDOW_CONTACT_2_PLUS = new ThingTypeUID(BINDING_ID,\n+            \"window-contact-2-plus\");\n     public static final ThingTypeUID THING_TYPE_MOTION_DETECTOR = new ThingTypeUID(BINDING_ID, \"motion-detector\");\n     public static final ThingTypeUID THING_TYPE_SHUTTER_CONTROL = new ThingTypeUID(BINDING_ID, \"shutter-control\");\n     public static final ThingTypeUID THING_TYPE_SHUTTER_CONTROL_2 = new ThingTypeUID(BINDING_ID, \"shutter-control-2\");\n@@ -117,6 +119,9 @@ private BoschSHCBindingConstants() {\n     public static final String CHANNEL_IMPULSE_LENGTH = \"impulse-length\";\n     public static final String CHANNEL_INSTANT_OF_LAST_IMPULSE = \"instant-of-last-impulse\";\n     public static final String CHANNEL_ALARM = \"alarm\";\n+    public static final String CHANNEL_VIBRATION_SENSOR_ENABLED = \"vibration-sensor-enabled\";\n+    public static final String CHANNEL_VIBRATION_SENSOR_SENSITIVITY = \"vibration-sensor-sensitivity\";\n+    public static final String CHANNEL_VIBRATION_SENSOR_STATE = \"vibration-sensor-state\";\n     // numbered channels\n     // the rationale for introducing numbered channels was discussed in\n     // https://github.com/openhab/openhab-addons/pull/16400\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCHandlerFactory.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCHandlerFactory.java\nindex 87b011422e304..2c4c1e887f863 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCHandlerFactory.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCHandlerFactory.java\n@@ -12,31 +12,7 @@\n  */\n package org.openhab.binding.boschshc.internal.devices;\n \n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_CAMERA_360;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_CAMERA_EYES;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_CLIMATE_CONTROL;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_DIMMER;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_INTRUSION_DETECTION_SYSTEM;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_INWALL_SWITCH;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_LIGHT_CONTROL_2;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_MOTION_DETECTOR;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_RELAY;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_SHC;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_SHUTTER_CONTROL;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_SHUTTER_CONTROL_2;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_SMART_BULB;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_SMART_PLUG_COMPACT;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_SMOKE_DETECTOR;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_SMOKE_DETECTOR_2;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_THERMOSTAT;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_TWINGUARD;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_UNIVERSAL_SWITCH;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_UNIVERSAL_SWITCH_2;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_USER_DEFINED_STATE;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_WALL_THERMOSTAT;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_WATER_DETECTOR;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_WINDOW_CONTACT;\n-import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.THING_TYPE_WINDOW_CONTACT_2;\n+import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.*;\n \n import java.util.Collection;\n import java.util.List;\n@@ -67,6 +43,7 @@\n import org.openhab.binding.boschshc.internal.devices.wallthermostat.WallThermostatHandler;\n import org.openhab.binding.boschshc.internal.devices.waterleakage.WaterLeakageSensorHandler;\n import org.openhab.binding.boschshc.internal.devices.windowcontact.WindowContact2Handler;\n+import org.openhab.binding.boschshc.internal.devices.windowcontact.WindowContact2PlusHandler;\n import org.openhab.binding.boschshc.internal.devices.windowcontact.WindowContactHandler;\n import org.openhab.core.thing.Bridge;\n import org.openhab.core.thing.Thing;\n@@ -107,6 +84,7 @@ public ThingTypeHandlerMapping(ThingTypeUID thingTypeUID, Function<Thing, BaseTh\n             new ThingTypeHandlerMapping(THING_TYPE_TWINGUARD, TwinguardHandler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_WINDOW_CONTACT, WindowContactHandler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_WINDOW_CONTACT_2, WindowContact2Handler::new),\n+            new ThingTypeHandlerMapping(THING_TYPE_WINDOW_CONTACT_2_PLUS, WindowContact2PlusHandler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_MOTION_DETECTOR, MotionDetectorHandler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_SHUTTER_CONTROL, ShutterControlHandler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_SHUTTER_CONTROL_2, ShutterControl2Handler::new),\n@@ -120,8 +98,8 @@ public ThingTypeHandlerMapping(ThingTypeUID thingTypeUID, Function<Thing, BaseTh\n             new ThingTypeHandlerMapping(THING_TYPE_SMART_BULB, SmartBulbHandler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_SMOKE_DETECTOR, SmokeDetectorHandler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_USER_DEFINED_STATE, UserStateHandler::new),\n-            new ThingTypeHandlerMapping(THING_TYPE_UNIVERSAL_SWITCH, thing -> new UniversalSwitchHandler(thing)),\n-            new ThingTypeHandlerMapping(THING_TYPE_UNIVERSAL_SWITCH_2, thing -> new UniversalSwitch2Handler(thing)),\n+            new ThingTypeHandlerMapping(THING_TYPE_UNIVERSAL_SWITCH, UniversalSwitchHandler::new),\n+            new ThingTypeHandlerMapping(THING_TYPE_UNIVERSAL_SWITCH_2, UniversalSwitch2Handler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_SMOKE_DETECTOR_2, SmokeDetector2Handler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_LIGHT_CONTROL_2, LightControl2Handler::new),\n             new ThingTypeHandlerMapping(THING_TYPE_DIMMER, DimmerHandler::new),\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/windowcontact/WindowContact2PlusHandler.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/windowcontact/WindowContact2PlusHandler.java\nnew file mode 100644\nindex 0000000000000..4120e69841536\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/windowcontact/WindowContact2PlusHandler.java\n@@ -0,0 +1,127 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.devices.windowcontact;\n+\n+import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.*;\n+\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.boschshc.internal.exceptions.BoschSHCException;\n+import org.openhab.binding.boschshc.internal.services.vibrationsensor.VibrationSensorService;\n+import org.openhab.binding.boschshc.internal.services.vibrationsensor.dto.VibrationSensorSensitivity;\n+import org.openhab.binding.boschshc.internal.services.vibrationsensor.dto.VibrationSensorServiceState;\n+import org.openhab.core.library.types.OnOffType;\n+import org.openhab.core.library.types.StringType;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.types.Command;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Handler for Door/Window Contact II Plus.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class WindowContact2PlusHandler extends WindowContact2Handler {\n+\n+    private final Logger logger = LoggerFactory.getLogger(WindowContact2PlusHandler.class);\n+\n+    private final VibrationSensorService vibrationSensorService;\n+\n+    @Nullable\n+    private VibrationSensorServiceState currentVibrationSensorState;\n+\n+    public WindowContact2PlusHandler(Thing thing) {\n+        super(thing);\n+        this.vibrationSensorService = new VibrationSensorService();\n+    }\n+\n+    @Override\n+    protected void initializeServices() throws BoschSHCException {\n+        super.initializeServices();\n+\n+        this.registerService(vibrationSensorService, this::updateChannels, List.of(CHANNEL_VIBRATION_SENSOR_ENABLED,\n+                CHANNEL_VIBRATION_SENSOR_STATE, CHANNEL_VIBRATION_SENSOR_SENSITIVITY), true);\n+    }\n+\n+    private void updateChannels(VibrationSensorServiceState state) {\n+        this.currentVibrationSensorState = state;\n+        updateState(CHANNEL_VIBRATION_SENSOR_ENABLED, OnOffType.from(state.enabled));\n+        updateState(CHANNEL_VIBRATION_SENSOR_STATE, new StringType(state.value.toString()));\n+        updateState(CHANNEL_VIBRATION_SENSOR_SENSITIVITY, new StringType(state.sensitivity.toString()));\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        super.handleCommand(channelUID, command);\n+\n+        switch (channelUID.getId()) {\n+            case CHANNEL_VIBRATION_SENSOR_ENABLED:\n+                if (command instanceof OnOffType onOffCommand) {\n+                    updateVibrationSensorEnabled(onOffCommand);\n+                }\n+                break;\n+            case CHANNEL_VIBRATION_SENSOR_SENSITIVITY:\n+                if (command instanceof StringType stringCommand) {\n+                    updateVibrationSensorSensitivity(stringCommand.toFullString());\n+                }\n+                break;\n+        }\n+    }\n+\n+    private void updateVibrationSensorSensitivity(String sensitivityValue) {\n+        VibrationSensorSensitivity newSensitivity = VibrationSensorSensitivity.from(sensitivityValue);\n+\n+        if (newSensitivity == null) {\n+            logger.warn(\"Unsupported vibration sensor sensitivity value: {}\", sensitivityValue);\n+            return;\n+        }\n+\n+        VibrationSensorServiceState copy = copyCurrentState();\n+        if (copy == null) {\n+            return;\n+        }\n+\n+        copy.sensitivity = newSensitivity;\n+\n+        this.currentVibrationSensorState = copy;\n+        updateServiceState(vibrationSensorService, copy);\n+    }\n+\n+    private void updateVibrationSensorEnabled(OnOffType enabled) {\n+        VibrationSensorServiceState copy = copyCurrentState();\n+        if (copy == null) {\n+            return;\n+        }\n+\n+        copy.enabled = enabled == OnOffType.ON;\n+\n+        this.currentVibrationSensorState = copy;\n+        updateServiceState(vibrationSensorService, copy);\n+    }\n+\n+    @Nullable\n+    private VibrationSensorServiceState copyCurrentState() {\n+        if (currentVibrationSensorState != null) {\n+            return currentVibrationSensorState.copy();\n+        }\n+\n+        logger.warn(\"Could not obtain current vibration sensor service state, command will not be processed.\");\n+        return null;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java\nindex b12aeadcc7e6b..0833c96ddb853 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java\n@@ -92,6 +92,7 @@ public class ThingDiscoveryService extends AbstractThingHandlerDiscoveryService<\n             new AbstractMap.SimpleEntry<>(\"LEDVANCE_LIGHT\", BoschSHCBindingConstants.THING_TYPE_SMART_BULB),\n             new AbstractMap.SimpleEntry<>(\"SWD\", BoschSHCBindingConstants.THING_TYPE_WINDOW_CONTACT),\n             new AbstractMap.SimpleEntry<>(\"SWD2\", BoschSHCBindingConstants.THING_TYPE_WINDOW_CONTACT_2),\n+            new AbstractMap.SimpleEntry<>(\"SWD2_PLUS\", BoschSHCBindingConstants.THING_TYPE_WINDOW_CONTACT_2_PLUS),\n             new AbstractMap.SimpleEntry<>(\"TRV\", BoschSHCBindingConstants.THING_TYPE_THERMOSTAT),\n             new AbstractMap.SimpleEntry<>(\"WRC2\", BoschSHCBindingConstants.THING_TYPE_UNIVERSAL_SWITCH),\n             new AbstractMap.SimpleEntry<>(\"SWITCH2\", BoschSHCBindingConstants.THING_TYPE_UNIVERSAL_SWITCH_2),\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/VibrationSensorService.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/VibrationSensorService.java\nnew file mode 100644\nindex 0000000000000..e77892166f42f\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/VibrationSensorService.java\n@@ -0,0 +1,31 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.services.vibrationsensor;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.binding.boschshc.internal.services.BoschSHCService;\n+import org.openhab.binding.boschshc.internal.services.vibrationsensor.dto.VibrationSensorServiceState;\n+\n+/**\n+ * Service implementation for vibration sensors of door/window contacts.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class VibrationSensorService extends BoschSHCService<VibrationSensorServiceState> {\n+\n+    public VibrationSensorService() {\n+        super(\"VibrationSensor\", VibrationSensorServiceState.class);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorSensitivity.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorSensitivity.java\nnew file mode 100644\nindex 0000000000000..6aeb7d319460f\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorSensitivity.java\n@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.services.vibrationsensor.dto;\n+\n+/**\n+ * Possible vibration sensor sensitivity settings.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+public enum VibrationSensorSensitivity {\n+    VERY_HIGH,\n+    HIGH,\n+    MEDIUM,\n+    LOW,\n+    VERY_LOW;\n+\n+    /**\n+     * Returns the sensitivity matching the given string or <code>null</code> if no match was found.\n+     * \n+     * @param identifier the string identifier of a vibration sensor sensitivity\n+     * @return the matching sensitivity enum value or <code>null</code>\n+     */\n+    public static VibrationSensorSensitivity from(String identifier) {\n+        try {\n+            return VibrationSensorSensitivity.valueOf(identifier);\n+        } catch (IllegalArgumentException e) {\n+            return null;\n+        }\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorServiceState.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorServiceState.java\nnew file mode 100644\nindex 0000000000000..ce867c1293064\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorServiceState.java\n@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.services.vibrationsensor.dto;\n+\n+import org.openhab.binding.boschshc.internal.services.dto.BoschSHCServiceState;\n+\n+/**\n+ * State for the vibration sensor service.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+public class VibrationSensorServiceState extends BoschSHCServiceState {\n+\n+    public VibrationSensorServiceState() {\n+        super(\"vibrationSensorState\");\n+    }\n+\n+    public boolean enabled;\n+\n+    public VibrationSensorState value;\n+\n+    public VibrationSensorSensitivity sensitivity;\n+\n+    public VibrationSensorServiceState copy() {\n+        VibrationSensorServiceState copy = new VibrationSensorServiceState();\n+        copy.enabled = enabled;\n+        copy.value = value;\n+        copy.sensitivity = sensitivity;\n+        return copy;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorState.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorState.java\nnew file mode 100644\nindex 0000000000000..8334b08eeb06c\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/vibrationsensor/dto/VibrationSensorState.java\n@@ -0,0 +1,25 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.services.vibrationsensor.dto;\n+\n+/**\n+ * Possible vibration sensor states.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+public enum VibrationSensorState {\n+    NO_VIBRATION,\n+    VIBRATION_DETECTED,\n+    UNKNOWN\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties\nindex 51fa34f936e0b..11cb658e673fc 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties\n+++ b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties\n@@ -51,6 +51,8 @@ thing-type.boschshc.wall-thermostat.label = Wall Thermostat\n thing-type.boschshc.wall-thermostat.description = Display of the current room temperature as well as the relative humidity in the room.\n thing-type.boschshc.water-detector.label = Water Detector\n thing-type.boschshc.water-detector.description = Smart sensor to detect water leakage.\n+thing-type.boschshc.window-contact-2-plus.label = Door/Window Contact II Plus\n+thing-type.boschshc.window-contact-2-plus.description = Detects open windows and doors, provides a configurable button and a vibration sensor.\n thing-type.boschshc.window-contact-2.label = Door/Window Contact II\n thing-type.boschshc.window-contact-2.description = Detects open windows and doors and features an additional button.\n thing-type.boschshc.window-contact.label = Door/Window Contact\n@@ -205,6 +207,22 @@ channel-type.boschshc.user-state.label = State\n channel-type.boschshc.user-state.description = State of user-defined state\n channel-type.boschshc.valve-tappet-position.label = Valve Tappet Position\n channel-type.boschshc.valve-tappet-position.description = Current open ratio (0 to 100).\n+channel-type.boschshc.vibration-sensor-enabled.label = Vibration Sensor Switch\n+channel-type.boschshc.vibration-sensor-enabled.description = Channel to enable or disable the vibration sensor.\n+channel-type.boschshc.vibration-sensor-enabled.state.option.ON = Enabled\n+channel-type.boschshc.vibration-sensor-enabled.state.option.OFF = Disabled\n+channel-type.boschshc.vibration-sensor-sensitivity.label = Vibration Sensor Sensitivity\n+channel-type.boschshc.vibration-sensor-sensitivity.description = The sensitivity of the vibration sensor.\n+channel-type.boschshc.vibration-sensor-sensitivity.state.option.VERY_HIGH = Very high\n+channel-type.boschshc.vibration-sensor-sensitivity.state.option.HIGH = High\n+channel-type.boschshc.vibration-sensor-sensitivity.state.option.MEDIUM = Medium\n+channel-type.boschshc.vibration-sensor-sensitivity.state.option.LOW = Low\n+channel-type.boschshc.vibration-sensor-sensitivity.state.option.VERY_LOW = Very Low\n+channel-type.boschshc.vibration-sensor-state.label = Vibration Sensor State\n+channel-type.boschshc.vibration-sensor-state.description = Indicates whether vibrations were detected by the sensor.\n+channel-type.boschshc.vibration-sensor-state.state.option.NO_VIBRATION = No vibration\n+channel-type.boschshc.vibration-sensor-state.state.option.VIBRATION_DETECTED = Vibration detected\n+channel-type.boschshc.vibration-sensor-state.state.option.UNKNOWN = Unknown\n channel-type.boschshc.water-leakage-sensor-check.label = Water Leakage Sensor Check\n channel-type.boschshc.water-leakage-sensor-check.description = Provides the result of the last water leakage sensor check.\n channel-type.boschshc.water-leakage.label = Water Leakage\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml\nindex 7aef9df110091..f61ce3cc00a90 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml\n+++ b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml\n@@ -123,6 +123,29 @@\n \n \t</thing-type>\n \n+\t<thing-type id=\"window-contact-2-plus\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"shc\"/>\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Door/Window Contact II Plus</label>\n+\t\t<description>Detects open windows and doors, provides a configurable button and a vibration sensor.</description>\n+\n+\t\t<channels>\n+\t\t\t<channel id=\"contact\" typeId=\"contact\"/>\n+\t\t\t<channel id=\"battery-level\" typeId=\"system.battery-level\"/>\n+\t\t\t<channel id=\"low-battery\" typeId=\"system.low-battery\"/>\n+\t\t\t<channel id=\"bypass-state\" typeId=\"bypass-state\"/>\n+\t\t\t<channel id=\"signal-strength\" typeId=\"system.signal-strength\"/>\n+\t\t\t<channel id=\"vibration-sensor-enabled\" typeId=\"vibration-sensor-enabled\"/>\n+\t\t\t<channel id=\"vibration-sensor-sensitivity\" typeId=\"vibration-sensor-sensitivity\"/>\n+\t\t\t<channel id=\"vibration-sensor-state\" typeId=\"vibration-sensor-state\"/>\n+\t\t</channels>\n+\n+\t\t<config-description-ref uri=\"thing-type:boschshc:device\"/>\n+\n+\t</thing-type>\n+\n \t<thing-type id=\"motion-detector\">\n \t\t<supported-bridge-type-refs>\n \t\t\t<bridge-type-ref id=\"shc\"/>\n@@ -914,4 +937,45 @@\n \t\t</state>\n \t</channel-type>\n \n+\t<channel-type id=\"vibration-sensor-enabled\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Vibration Sensor Switch</label>\n+\t\t<description>Channel to enable or disable the vibration sensor.</description>\n+\t\t<state readOnly=\"false\">\n+\t\t\t<options>\n+\t\t\t\t<option value=\"ON\">Enabled</option>\n+\t\t\t\t<option value=\"OFF\">Disabled</option>\n+\t\t\t</options>\n+\t\t</state>\n+\t</channel-type>\n+\n+\t<channel-type id=\"vibration-sensor-sensitivity\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Vibration Sensor Sensitivity</label>\n+\t\t<description>The sensitivity of the vibration sensor.</description>\n+\t\t<state readOnly=\"false\">\n+\t\t\t<options>\n+\t\t\t\t<option value=\"VERY_HIGH\">Very high</option>\n+\t\t\t\t<option value=\"HIGH\">High</option>\n+\t\t\t\t<option value=\"MEDIUM\">Medium</option>\n+\t\t\t\t<option value=\"LOW\">Low</option>\n+\t\t\t\t<option value=\"VERY_LOW\">Very Low</option>\n+\t\t\t</options>\n+\t\t</state>\n+\t</channel-type>\n+\n+\t<channel-type id=\"vibration-sensor-state\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Vibration Sensor State</label>\n+\t\t<description>Indicates whether vibrations were detected by the sensor.</description>\n+\t\t<category>Alarm</category>\n+\t\t<state readOnly=\"true\">\n+\t\t\t<options>\n+\t\t\t\t<option value=\"NO_VIBRATION\">No vibration</option>\n+\t\t\t\t<option value=\"VIBRATION_DETECTED\">Vibration detected</option>\n+\t\t\t\t<option value=\"UNKNOWN\">Unknown</option>\n+\t\t\t</options>\n+\t\t</state>\n+\t</channel-type>\n+\n </thing:thing-descriptions>\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/windowcontact/WindowContact2PlusHandlerTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/windowcontact/WindowContact2PlusHandlerTest.java\nnew file mode 100644\nindex 0000000000000..6ad273f242166\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/windowcontact/WindowContact2PlusHandlerTest.java\n@@ -0,0 +1,172 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.devices.windowcontact;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.ArgumentMatchers.*;\n+import static org.mockito.Mockito.*;\n+import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.*;\n+\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInfo;\n+import org.mockito.ArgumentCaptor;\n+import org.openhab.binding.boschshc.internal.services.dto.BoschSHCServiceState;\n+import org.openhab.binding.boschshc.internal.services.vibrationsensor.dto.VibrationSensorSensitivity;\n+import org.openhab.binding.boschshc.internal.services.vibrationsensor.dto.VibrationSensorServiceState;\n+import org.openhab.core.library.types.DecimalType;\n+import org.openhab.core.library.types.OnOffType;\n+import org.openhab.core.library.types.StringType;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.ThingTypeUID;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonParser;\n+\n+/**\n+ * Unit tests for {@link WindowContact2PlusHandler}.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+class WindowContact2PlusHandlerTest extends WindowContact2HandlerTest {\n+\n+    private static final String NO_INITIAL_VIBRATION_SENSOR_STATE = \"noInitialVibrationSensorState\";\n+\n+    @Override\n+    protected WindowContactHandler createFixture() {\n+        return new WindowContact2PlusHandler(getThing());\n+    }\n+\n+    @Override\n+    protected ThingTypeUID getThingTypeUID() {\n+        return THING_TYPE_WINDOW_CONTACT_2_PLUS;\n+    }\n+\n+    @Override\n+    protected void afterHandlerInitialization(TestInfo testInfo) {\n+        super.afterHandlerInitialization(testInfo);\n+\n+        if (!testInfo.getTags().contains(NO_INITIAL_VIBRATION_SENSOR_STATE)) {\n+            String json = \"\"\"\n+                    {\n+                        \"@type\": \"vibrationSensorState\",\n+                        \"enabled\": true,\n+                        \"value\": \"VIBRATION_DETECTED\",\n+                        \"sensitivity\": \"LOW\"\n+                    }\n+                    \"\"\";\n+            JsonElement jsonObject = JsonParser.parseString(json);\n+\n+            getFixture().processUpdate(\"VibrationSensor\", jsonObject);\n+        }\n+    }\n+\n+    @Test\n+    void testUpdateChannelsVibrationSensorService() {\n+        verify(getCallback()).stateUpdated(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_ENABLED),\n+                OnOffType.ON);\n+        verify(getCallback()).stateUpdated(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_STATE),\n+                new StringType(\"VIBRATION_DETECTED\"));\n+        verify(getCallback()).stateUpdated(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_SENSITIVITY),\n+                new StringType(\"LOW\"));\n+    }\n+\n+    @Test\n+    void testHandleCommandVibrationSensorOn() throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_ENABLED), OnOffType.ON);\n+        ArgumentCaptor<BoschSHCServiceState> serviceStateCaptor = ArgumentCaptor.forClass(BoschSHCServiceState.class);\n+        verify(getBridgeHandler()).putState(eq(getDeviceID()), eq(\"VibrationSensor\"), serviceStateCaptor.capture());\n+\n+        BoschSHCServiceState state = serviceStateCaptor.getValue();\n+        assertTrue(state instanceof VibrationSensorServiceState);\n+        VibrationSensorServiceState vibrationSensorServiceState = (VibrationSensorServiceState) state;\n+\n+        assertTrue(vibrationSensorServiceState.enabled);\n+    }\n+\n+    @Test\n+    void testHandleCommandVibrationSensorOff() throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_ENABLED),\n+                OnOffType.OFF);\n+        ArgumentCaptor<BoschSHCServiceState> serviceStateCaptor = ArgumentCaptor.forClass(BoschSHCServiceState.class);\n+        verify(getBridgeHandler()).putState(eq(getDeviceID()), eq(\"VibrationSensor\"), serviceStateCaptor.capture());\n+\n+        BoschSHCServiceState state = serviceStateCaptor.getValue();\n+        assertTrue(state instanceof VibrationSensorServiceState);\n+        VibrationSensorServiceState vibrationSensorServiceState = (VibrationSensorServiceState) state;\n+\n+        assertFalse(vibrationSensorServiceState.enabled);\n+    }\n+\n+    @Test\n+    void testHandleCommandVibrationSensorInvalidCommand()\n+            throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_ENABLED),\n+                new DecimalType(1));\n+        verify(getBridgeHandler(), times(0)).putState(eq(getDeviceID()), eq(\"VibrationSensor\"), any());\n+    }\n+\n+    @Tag(NO_INITIAL_VIBRATION_SENSOR_STATE)\n+    @Test\n+    void testHandleCommandVibrationSensorNoStateAvailable()\n+            throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_ENABLED), OnOffType.ON);\n+        verify(getBridgeHandler(), times(0)).putState(eq(getDeviceID()), eq(\"VibrationSensor\"), any());\n+    }\n+\n+    @Test\n+    void testHandleCommandVibrationSensorSensitivity()\n+            throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_SENSITIVITY),\n+                new StringType(\"VERY_HIGH\"));\n+        ArgumentCaptor<BoschSHCServiceState> serviceStateCaptor = ArgumentCaptor.forClass(BoschSHCServiceState.class);\n+        verify(getBridgeHandler()).putState(eq(getDeviceID()), eq(\"VibrationSensor\"), serviceStateCaptor.capture());\n+\n+        BoschSHCServiceState state = serviceStateCaptor.getValue();\n+        assertTrue(state instanceof VibrationSensorServiceState);\n+        VibrationSensorServiceState vibrationSensorServiceState = (VibrationSensorServiceState) state;\n+\n+        assertSame(VibrationSensorSensitivity.VERY_HIGH, vibrationSensorServiceState.sensitivity);\n+    }\n+\n+    @Test\n+    void testHandleCommandVibrationSensorSensitivityInvalidCommand()\n+            throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_SENSITIVITY),\n+                new DecimalType(1));\n+        verify(getBridgeHandler(), times(0)).putState(eq(getDeviceID()), eq(\"VibrationSensor\"), any());\n+    }\n+\n+    @Test\n+    void testHandleCommandVibrationSensorSensitivityInvalidSensitivityValue()\n+            throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_SENSITIVITY),\n+                new StringType(\"INVALID\"));\n+        verify(getBridgeHandler(), times(0)).putState(eq(getDeviceID()), eq(\"VibrationSensor\"), any());\n+    }\n+\n+    @Tag(NO_INITIAL_VIBRATION_SENSOR_STATE)\n+    @Test\n+    void testHandleCommandVibrationSensorSensitivityNoStateAvailable()\n+            throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_VIBRATION_SENSOR_SENSITIVITY),\n+                new StringType(\"MEDIUM\"));\n+        verify(getBridgeHandler(), times(0)).putState(eq(getDeviceID()), eq(\"VibrationSensor\"), any());\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18194",
    "pr_id": 18194,
    "issue_id": 18161,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[boschshc] Support for Smoke Alarm II channel `Alarm`\nThe Bosch smoke detector II seems to support the read/write channel `Alarm`, but I am missing this channel in the Bosch binding.\nI would expect the sensor to show an alarm in the event of fire.\nAlso it would be good if the siren could go on in the event of, for example, a water alarm. I use water detectors from Bosch, but also from other manufacturers.\nI would be very grateful for an extension.\n\n- The console command `boschshc showBindingInfo` returns:\n```\nBosch SHC Binding\n  SymbolicName org.openhab.binding.boschshc\n  Version 4.3.2\n```\n\n- The command `boschshc showDevices` returns:\n```\n...\n - SD = boschshc:smoke-detector\n...\n - SMOKE_DETECTOR2 = boschshc:smoke-detector-2\n```\n\n- The console command `boschshc deviceInfo` returns:\n```\n  deviceID: hdm:ZigBee:b43a31fffefd4473\n      type: SMOKE_DETECTOR2 -> smoke-detector-2\n            service: CommunicationQuality -> communicationquality\n            service: BatteryLevel -> batterylevel\n            service: Alarm -> !UNSUPPORTED!\n            service: SmokeDetectorCheck -> smokedetectorcheck\n```\n",
    "issue_word_count": 143,
    "test_files_count": 6,
    "non_test_files_count": 13,
    "pr_changed_files": [
      "bundles/org.openhab.binding.boschshc/README.md",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandler.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/AbstractSmokeDetectorHandlerWithAlarmService.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2Handler.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandler.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/AlarmService.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmServiceState.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmState.java",
      "bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties",
      "bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml",
      "bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/update/binding.xml",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/AbstractSmokeDetectorHandlerWithAlarmServiceTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2HandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/AlarmServiceTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmStateTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/AbstractSmokeDetectorHandlerWithAlarmServiceTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2HandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/AlarmServiceTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmStateTest.java"
    ],
    "base_commit": "90da7b9d83cba01f52e4a5b14bf86be6fc1602e3",
    "head_commit": "a50c9c8be4148f9c88dc6041827e819d0598b5e1",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18194",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18194",
    "dockerfile": "",
    "pr_merged_at": "2025-02-06T21:46:54.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.boschshc/README.md b/bundles/org.openhab.binding.boschshc/README.md\nindex 9ebf88009e39c..c20608b9e6415 100644\n--- a/bundles/org.openhab.binding.boschshc/README.md\n+++ b/bundles/org.openhab.binding.boschshc/README.md\n@@ -284,11 +284,11 @@ A smart bulb connected to the bridge via Zigbee such as a Ledvance Smart+ bulb.\n \n **Thing Type ID**: `smart-bulb`\n \n-| Channel Type ID | Item Type | Writable | Description                                                    |\n-| ----------------| --------- | :------: | -------------------------------------------------------------- |\n-| power-switch    | Switch    | &#9745;  | Switches the light on or off.                                  |\n-| brightness      | Dimmer    | &#9745;  | Regulates the brightness on a percentage scale from 0 to 100%. |\n-| color           | Color     | &#9745;  | The color of the emitted light.                                |\n+| Channel Type ID  | Item Type | Writable | Description                                                    |\n+| ---------------- | --------- | :------: | -------------------------------------------------------------- |\n+| power-switch     | Switch    | &#9745;  | Switches the light on or off.                                  |\n+| brightness       | Dimmer    | &#9745;  | Regulates the brightness on a percentage scale from 0 to 100%. |\n+| color            | Color     | &#9745;  | The color of the emitted light.                                |\n \n ### Smoke Detector\n \n@@ -296,22 +296,26 @@ The smoke detector warns you in case of fire.\n \n **Thing Type ID**: `smoke-detector`\n \n-| Channel Type ID    | Item Type            | Writable | Description                                                                                       |\n-| ------------------ | -------------------- | :------: | ------------------------------------------------------------------------------------------------- |\n-| smoke-check        | String               | &#9745;  | State of the smoke check. Also used to request a new smoke check.                                 |\n+| Channel Type ID  | Item Type | Writable | Description                                                                                                                                                                                                                             |\n+| ---------------- | --------- | :------: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| alarm            | String    | &#9745;  | Alarm state of the smoke detector. Possible values to read are: `IDLE_OFF`, `PRIMARY_ALARM`, `SECONDARY_ALARM` and `INTRUSION_ALARM`. Possible values to write are: `INTRUSION_ALARM_ON_REQUESTED` and `INTRUSION_ALARM_OFF_REQUESTED`. |\n+| smoke-check      | String    | &#9745;  | State of the smoke check. Also used to request a new smoke check.                                                                                                                                                                       |\n+| battery-level    | Number    | &#9744;  | Current battery level percentage as integer number. Bosch-specific battery levels are mapped to numbers as follows: `OK`: 100, `LOW_BATTERY`: 10, `CRITICAL_LOW`: 1, `CRITICALLY_LOW_BATTERY`: 1, `NOT_AVAILABLE`: `UNDEF`.             |\n+| low-battery      | Switch    | &#9744;  | Indicates whether the battery is low (`ON`) or OK (`OFF`).                                                                                                                                                                              |\n \n ### Smoke Detector II\n \n The smoke detector warns you in case of fire.\n \n-**Thing Type ID**: `smoke-detector`\n+**Thing Type ID**: `smoke-detector-2`\n \n-| Channel Type ID   | Item Type   | Writable | Description                                                                                                                                                                                                                 |\n-|-------------------|-------------| :------: |-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n-| smoke-check       | String      | &#9745;  | State of the smoke check. Also used to request a new smoke check.                                                                                                                                                           |\n-| battery-level     | Number      | &#9744;  | Current battery level percentage as integer number. Bosch-specific battery levels are mapped to numbers as follows: `OK`: 100, `LOW_BATTERY`: 10, `CRITICAL_LOW`: 1, `CRITICALLY_LOW_BATTERY`: 1, `NOT_AVAILABLE`: `UNDEF`. |\n-| low-battery       | Switch      | &#9744;  | Indicates whether the battery is low (`ON`) or OK (`OFF`).                                                                                                                                                                  |\n-| signal-strength   | Number      | &#9744;  | Communication quality between the device and the Smart Home Controller. Possible values range between 0 (unknown) and 4 (best signal strength).                                                                             |\n+| Channel Type ID | Item Type | Writable | Description                                                                                                                                                                                                                             |\n+| --------------- | --------- | :------: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| alarm           | String    | &#9745;  | Alarm state of the smoke detector. Possible values to read are: `IDLE_OFF`, `PRIMARY_ALARM`, `SECONDARY_ALARM` and `INTRUSION_ALARM`. Possible values to write are: `INTRUSION_ALARM_ON_REQUESTED` and `INTRUSION_ALARM_OFF_REQUESTED`. |\n+| smoke-check     | String    | &#9745;  | State of the smoke check. Also used to request a new smoke check.                                                                                                                                                                       |\n+| battery-level   | Number    | &#9744;  | Current battery level percentage as integer number. Bosch-specific battery levels are mapped to numbers as follows: `OK`: 100, `LOW_BATTERY`: 10, `CRITICAL_LOW`: 1, `CRITICALLY_LOW_BATTERY`: 1, `NOT_AVAILABLE`: `UNDEF`.             |\n+| low-battery     | Switch    | &#9744;  | Indicates whether the battery is low (`ON`) or OK (`OFF`).                                                                                                                                                                              |\n+| signal-strength | Number    | &#9744;  | Communication quality between the device and the Smart Home Controller. Possible values range between 0 (unknown) and 4 (best signal strength).                                                                                         |\n \n ### User-defined States\n \n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java\nindex 9bbc9e4310709..9916f45e5ea46 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/console/BoschShcCommandExtension.java\n@@ -81,10 +81,10 @@ public BoschShcCommandExtension(final @Reference ThingRegistry thingRegistry) {\n      * <code>src/main/java/org/openhab/binding/boschshc/internal/services</code>.\n      */\n     List<String> getAllBoschShcServices() {\n-        return List.of(\"airqualitylevel\", \"batterylevel\", \"binaryswitch\", \"bypass\", \"cameranotification\", \"childlock\",\n-                \"childprotection\", \"communicationquality\", \"hsbcoloractuator\", \"humiditylevel\", \"illuminance\",\n-                \"impulseswitch\", \"intrusion\", \"keypad\", \"latestmotion\", \"multilevelswitch\", \"powermeter\", \"powerswitch\",\n-                \"privacymode\", \"roomclimatecontrol\", \"shuttercontact\", \"shuttercontrol\", \"silentmode\",\n+        return List.of(\"airqualitylevel\", \"alarm\", \"batterylevel\", \"binaryswitch\", \"bypass\", \"cameranotification\",\n+                \"childlock\", \"childprotection\", \"communicationquality\", \"hsbcoloractuator\", \"humiditylevel\",\n+                \"illuminance\", \"impulseswitch\", \"intrusion\", \"keypad\", \"latestmotion\", \"multilevelswitch\", \"powermeter\",\n+                \"powerswitch\", \"privacymode\", \"roomclimatecontrol\", \"shuttercontact\", \"shuttercontrol\", \"silentmode\",\n                 \"smokedetectorcheck\", \"temperaturelevel\", \"userstate\", \"valvetappet\", \"waterleakagesensor\",\n                 \"waterleakagesensorcheck\", \"waterleakagesensortilt\");\n     }\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandler.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandler.java\nindex 75ee078ad042b..a880b51d1e1e5 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandler.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandler.java\n@@ -52,10 +52,8 @@ protected void initializeServices() throws BoschSHCException {\n     public void handleCommand(ChannelUID channelUID, Command command) {\n         super.handleCommand(channelUID, command);\n \n-        switch (channelUID.getId()) {\n-            case CHANNEL_SMOKE_CHECK:\n-                this.handleServiceCommand(this.smokeDetectorCheckService, command);\n-                break;\n+        if (CHANNEL_SMOKE_CHECK.equals(channelUID.getId())) {\n+            this.handleServiceCommand(this.smokeDetectorCheckService, command);\n         }\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java\nindex 1f157431d6094..4a01184b7cd06 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java\n@@ -116,6 +116,7 @@ private BoschSHCBindingConstants() {\n     public static final String CHANNEL_IMPULSE_SWITCH = \"impulse-switch\";\n     public static final String CHANNEL_IMPULSE_LENGTH = \"impulse-length\";\n     public static final String CHANNEL_INSTANT_OF_LAST_IMPULSE = \"instant-of-last-impulse\";\n+    public static final String CHANNEL_ALARM = \"alarm\";\n     // numbered channels\n     // the rationale for introducing numbered channels was discussed in\n     // https://github.com/openhab/openhab-addons/pull/16400\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/AbstractSmokeDetectorHandlerWithAlarmService.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/AbstractSmokeDetectorHandlerWithAlarmService.java\nnew file mode 100644\nindex 0000000000000..180ed66eed60c\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/AbstractSmokeDetectorHandlerWithAlarmService.java\n@@ -0,0 +1,66 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.devices.smokedetector;\n+\n+import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.CHANNEL_ALARM;\n+\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.binding.boschshc.internal.devices.AbstractSmokeDetectorHandler;\n+import org.openhab.binding.boschshc.internal.exceptions.BoschSHCException;\n+import org.openhab.binding.boschshc.internal.services.alarm.AlarmService;\n+import org.openhab.binding.boschshc.internal.services.alarm.dto.AlarmServiceState;\n+import org.openhab.core.library.types.StringType;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.types.Command;\n+\n+/**\n+ * Abstract handler for smoke detectors that have an <code>Alarm</code> service.\n+ * <p>\n+ * Note that this includes Smoke Detector and Smoke Detector II, but not Twinguard.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public abstract class AbstractSmokeDetectorHandlerWithAlarmService extends AbstractSmokeDetectorHandler {\n+\n+    private AlarmService alarmService;\n+\n+    protected AbstractSmokeDetectorHandlerWithAlarmService(Thing thing) {\n+        super(thing);\n+        this.alarmService = new AlarmService();\n+    }\n+\n+    @Override\n+    protected void initializeServices() throws BoschSHCException {\n+        super.initializeServices();\n+\n+        this.registerService(alarmService, this::updateChannels, List.of(CHANNEL_ALARM));\n+    }\n+\n+    private void updateChannels(AlarmServiceState state) {\n+        updateState(CHANNEL_ALARM, new StringType(state.value.toString()));\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        super.handleCommand(channelUID, command);\n+\n+        if (CHANNEL_ALARM.equals(channelUID.getId())) {\n+            this.handleServiceCommand(this.alarmService, command);\n+        }\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2Handler.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2Handler.java\nindex e8c0b5eab686d..c240c3032cb8f 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2Handler.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2Handler.java\n@@ -17,7 +17,6 @@\n import java.util.List;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.binding.boschshc.internal.devices.AbstractSmokeDetectorHandler;\n import org.openhab.binding.boschshc.internal.exceptions.BoschSHCException;\n import org.openhab.binding.boschshc.internal.services.communicationquality.CommunicationQualityService;\n import org.openhab.binding.boschshc.internal.services.communicationquality.dto.CommunicationQualityServiceState;\n@@ -29,7 +28,7 @@\n  * @author Patrick Gell - Initial contribution\n  */\n @NonNullByDefault\n-public class SmokeDetector2Handler extends AbstractSmokeDetectorHandler {\n+public class SmokeDetector2Handler extends AbstractSmokeDetectorHandlerWithAlarmService {\n \n     public SmokeDetector2Handler(Thing thing) {\n         super(thing);\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandler.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandler.java\nindex bb111e8efeeef..be52ba139739d 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandler.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandler.java\n@@ -13,7 +13,6 @@\n package org.openhab.binding.boschshc.internal.devices.smokedetector;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.binding.boschshc.internal.devices.AbstractSmokeDetectorHandler;\n import org.openhab.core.thing.Thing;\n \n /**\n@@ -23,7 +22,7 @@\n  * @author Gerd Zanker - AbstractSmokeDetectorHandler refactoring for reuse\n  */\n @NonNullByDefault\n-public class SmokeDetectorHandler extends AbstractSmokeDetectorHandler {\n+public class SmokeDetectorHandler extends AbstractSmokeDetectorHandlerWithAlarmService {\n \n     public SmokeDetectorHandler(Thing thing) {\n         super(thing);\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/AlarmService.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/AlarmService.java\nnew file mode 100644\nindex 0000000000000..02ac03048b43d\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/AlarmService.java\n@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.services.alarm;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.binding.boschshc.internal.exceptions.BoschSHCException;\n+import org.openhab.binding.boschshc.internal.services.BoschSHCService;\n+import org.openhab.binding.boschshc.internal.services.alarm.dto.AlarmServiceState;\n+import org.openhab.binding.boschshc.internal.services.alarm.dto.AlarmState;\n+import org.openhab.core.library.types.StringType;\n+import org.openhab.core.types.Command;\n+\n+/**\n+ * Alarm service for smoke detectors.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class AlarmService extends BoschSHCService<AlarmServiceState> {\n+    public AlarmService() {\n+        super(\"Alarm\", AlarmServiceState.class);\n+    }\n+\n+    @Override\n+    public AlarmServiceState handleCommand(Command command) throws BoschSHCException {\n+        if (command instanceof StringType stringCommand) {\n+            AlarmServiceState state = new AlarmServiceState();\n+            state.value = AlarmState.from(stringCommand.toFullString());\n+            return state;\n+        }\n+        return super.handleCommand(command);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmServiceState.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmServiceState.java\nnew file mode 100644\nindex 0000000000000..fe462c638f6a7\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmServiceState.java\n@@ -0,0 +1,29 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.services.alarm.dto;\n+\n+import org.openhab.binding.boschshc.internal.services.dto.BoschSHCServiceState;\n+\n+/**\n+ * State for alarm services of smoke detectors.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+public class AlarmServiceState extends BoschSHCServiceState {\n+    public AlarmServiceState() {\n+        super(\"alarmState\");\n+    }\n+\n+    public AlarmState value;\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmState.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmState.java\nnew file mode 100644\nindex 0000000000000..be1d140cfa03b\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmState.java\n@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.services.alarm.dto;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Possible states of smoke detector alarms.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+public enum AlarmState {\n+    IDLE_OFF,\n+    PRIMARY_ALARM,\n+    SECONDARY_ALARM,\n+    INTRUSION_ALARM,\n+    INTRUSION_ALARM_ON_REQUESTED,\n+    INTRUSION_ALARM_OFF_REQUESTED;\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AlarmState.class);\n+\n+    public static AlarmState from(String identifier) {\n+        try {\n+            return valueOf(identifier);\n+        } catch (IllegalArgumentException e) {\n+            LOGGER.warn(\"Unsupported alarm state: {}\", identifier);\n+            return IDLE_OFF;\n+        }\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties\nindex d66c4e8de47f5..51fa34f936e0b 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties\n+++ b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/i18n/boschshc.properties\n@@ -84,6 +84,14 @@ channel-type.boschshc.alarm-state.state.option.PRE_ALARM = Alarm is about to go\n channel-type.boschshc.alarm-state.state.option.ALARM_ON = Alarm was triggered\n channel-type.boschshc.alarm-state.state.option.ALARM_MUTED = Alarm is muted\n channel-type.boschshc.alarm-state.state.option.UNKNOWN = Alarm status is unknown\n+channel-type.boschshc.alarm.label = Alarm\n+channel-type.boschshc.alarm.description = Alarm state of the smoke detector.\n+channel-type.boschshc.alarm.state.option.IDLE_OFF = Alarm off\n+channel-type.boschshc.alarm.state.option.PRIMARY_ALARM = Primary alarm\n+channel-type.boschshc.alarm.state.option.SECONDARY_ALARM = Secondary alarm\n+channel-type.boschshc.alarm.state.option.INTRUSION_ALARM = Intrusion alarm\n+channel-type.boschshc.alarm.state.option.INTRUSION_ALARM_ON_REQUESTED = Intrusion alarm on requested\n+channel-type.boschshc.alarm.state.option.INTRUSION_ALARM_OFF_REQUESTED = Intrusion alarm off requested\n channel-type.boschshc.arm-action.label = Arm Action\n channel-type.boschshc.arm-action.description = Arms the intrusion detection system using the given profile ID.\n channel-type.boschshc.arming-state.label = Arming State\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml\nindex 1bb020940eb8b..7aef9df110091 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml\n+++ b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/thing/thing-types.xml\n@@ -344,11 +344,16 @@\n \t\t<description>The smoke detector warns you in case of fire.</description>\n \n \t\t<channels>\n+\t\t\t<channel id=\"alarm\" typeId=\"alarm\"/>\n \t\t\t<channel id=\"smoke-check\" typeId=\"smoke-check\"/>\n \t\t\t<channel id=\"battery-level\" typeId=\"system.battery-level\"/>\n \t\t\t<channel id=\"low-battery\" typeId=\"system.low-battery\"/>\n \t\t</channels>\n \n+\t\t<properties>\n+\t\t\t<property name=\"thingTypeVersion\">1</property>\n+\t\t</properties>\n+\n \t\t<config-description-ref uri=\"thing-type:boschshc:device\"/>\n \t</thing-type>\n \n@@ -412,12 +417,17 @@\n \t\t<description>The smoke detector warns you in case of fire.</description>\n \n \t\t<channels>\n+\t\t\t<channel id=\"alarm\" typeId=\"alarm\"/>\n \t\t\t<channel id=\"smoke-check\" typeId=\"smoke-check\"/>\n \t\t\t<channel id=\"battery-level\" typeId=\"system.battery-level\"/>\n \t\t\t<channel id=\"low-battery\" typeId=\"system.low-battery\"/>\n \t\t\t<channel id=\"signal-strength\" typeId=\"system.signal-strength\"/>\n \t\t</channels>\n \n+\t\t<properties>\n+\t\t\t<property name=\"thingTypeVersion\">1</property>\n+\t\t</properties>\n+\n \t\t<config-description-ref uri=\"thing-type:boschshc:device\"/>\n \t</thing-type>\n \n@@ -887,4 +897,21 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"alarm\">\n+\t\t<item-type>String</item-type>\n+\t\t<label>Alarm</label>\n+\t\t<description>Alarm state of the smoke detector.</description>\n+\t\t<category>Alarm</category>\n+\t\t<state readOnly=\"false\">\n+\t\t\t<options>\n+\t\t\t\t<option value=\"IDLE_OFF\">Alarm off</option>\n+\t\t\t\t<option value=\"PRIMARY_ALARM\">Primary alarm</option>\n+\t\t\t\t<option value=\"SECONDARY_ALARM\">Secondary alarm</option>\n+\t\t\t\t<option value=\"INTRUSION_ALARM\">Intrusion alarm</option>\n+\t\t\t\t<option value=\"INTRUSION_ALARM_ON_REQUESTED\">Intrusion alarm on requested</option>\n+\t\t\t\t<option value=\"INTRUSION_ALARM_OFF_REQUESTED\">Intrusion alarm off requested</option>\n+\t\t\t</options>\n+\t\t</state>\n+\t</channel-type>\n+\n </thing:thing-descriptions>\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/update/binding.xml b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/update/binding.xml\nindex 78bdc3fac3b1a..5d440641c3377 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/update/binding.xml\n+++ b/bundles/org.openhab.binding.boschshc/src/main/resources/OH-INF/update/binding.xml\n@@ -22,4 +22,20 @@\n \t\t</instruction-set>\n \t</thing-type>\n \n+\t<thing-type uid=\"boschshc:smoke-detector\">\n+\t\t<instruction-set targetVersion=\"1\">\n+\t\t\t<add-channel id=\"alarm\">\n+\t\t\t\t<type>boschshc:alarm</type>\n+\t\t\t</add-channel>\n+\t\t</instruction-set>\n+\t</thing-type>\n+\n+\t<thing-type uid=\"boschshc:smoke-detector-2\">\n+\t\t<instruction-set targetVersion=\"1\">\n+\t\t\t<add-channel id=\"alarm\">\n+\t\t\t\t<type>boschshc:alarm</type>\n+\t\t\t</add-channel>\n+\t\t</instruction-set>\n+\t</thing-type>\n+\n </update:update-descriptions>\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandlerTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandlerTest.java\nindex 935626f6bdeb2..7025e802196e7 100644\n--- a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandlerTest.java\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractSmokeDetectorHandlerTest.java\n@@ -14,7 +14,9 @@\n \n import static org.junit.jupiter.api.Assertions.assertSame;\n import static org.mockito.ArgumentMatchers.eq;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.CHANNEL_SMOKE_CHECK;\n \n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.TimeoutException;\n@@ -24,7 +26,6 @@\n import org.mockito.ArgumentCaptor;\n import org.mockito.Captor;\n import org.openhab.binding.boschshc.internal.devices.smokedetector.SmokeDetectorHandler;\n-import org.openhab.binding.boschshc.internal.exceptions.BoschSHCException;\n import org.openhab.binding.boschshc.internal.services.smokedetectorcheck.SmokeDetectorCheckState;\n import org.openhab.binding.boschshc.internal.services.smokedetectorcheck.dto.SmokeDetectorCheckServiceState;\n import org.openhab.core.library.types.OnOffType;\n@@ -53,31 +54,30 @@ public abstract class AbstractSmokeDetectorHandlerTest<T extends AbstractSmokeDe\n     private @NonNullByDefault({}) ArgumentCaptor<SmokeDetectorCheckServiceState> smokeDetectorCheckStateCaptor;\n \n     @Test\n-    public void testHandleCommand()\n-            throws InterruptedException, TimeoutException, ExecutionException, BoschSHCException {\n+    public void testHandleCommandSmokeTest() throws InterruptedException, TimeoutException, ExecutionException {\n         // valid commands with valid thing & channel\n-        getFixture().handleCommand(new ChannelUID(getThing().getUID(), BoschSHCBindingConstants.CHANNEL_SMOKE_CHECK),\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_SMOKE_CHECK),\n                 new StringType(SmokeDetectorCheckState.SMOKE_TEST_REQUESTED.toString()));\n         verify(getBridgeHandler()).putState(eq(getDeviceID()), eq(\"SmokeDetectorCheck\"),\n                 smokeDetectorCheckStateCaptor.capture());\n         SmokeDetectorCheckServiceState state = smokeDetectorCheckStateCaptor.getValue();\n         assertSame(SmokeDetectorCheckState.SMOKE_TEST_REQUESTED, state.value);\n \n-        getFixture().handleCommand(new ChannelUID(getThing().getUID(), BoschSHCBindingConstants.CHANNEL_SMOKE_CHECK),\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_SMOKE_CHECK),\n                 new StringType(SmokeDetectorCheckState.NONE.toString()));\n         verify(getBridgeHandler(), times(2)).putState(eq(getDeviceID()), eq(\"SmokeDetectorCheck\"),\n                 smokeDetectorCheckStateCaptor.capture());\n         state = smokeDetectorCheckStateCaptor.getValue();\n         assertSame(SmokeDetectorCheckState.NONE, state.value);\n \n-        getFixture().handleCommand(new ChannelUID(getThing().getUID(), BoschSHCBindingConstants.CHANNEL_SMOKE_CHECK),\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_SMOKE_CHECK),\n                 new StringType(SmokeDetectorCheckState.SMOKE_TEST_OK.toString()));\n         verify(getBridgeHandler(), times(3)).putState(eq(getDeviceID()), eq(\"SmokeDetectorCheck\"),\n                 smokeDetectorCheckStateCaptor.capture());\n         state = smokeDetectorCheckStateCaptor.getValue();\n         assertSame(SmokeDetectorCheckState.SMOKE_TEST_OK, state.value);\n \n-        getFixture().handleCommand(new ChannelUID(getThing().getUID(), BoschSHCBindingConstants.CHANNEL_SMOKE_CHECK),\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_SMOKE_CHECK),\n                 new StringType(SmokeDetectorCheckState.SMOKE_TEST_FAILED.toString()));\n         verify(getBridgeHandler(), times(4)).putState(eq(getDeviceID()), eq(\"SmokeDetectorCheck\"),\n                 smokeDetectorCheckStateCaptor.capture());\n@@ -86,10 +86,8 @@ public void testHandleCommand()\n     }\n \n     @Test\n-    public void testHandleCommandPlayPauseType()\n-            throws InterruptedException, TimeoutException, ExecutionException, BoschSHCException {\n-        getFixture().handleCommand(new ChannelUID(getThing().getUID(), BoschSHCBindingConstants.CHANNEL_SMOKE_CHECK),\n-                PlayPauseType.PLAY);\n+    public void testHandleCommandPlayPauseType() throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_SMOKE_CHECK), PlayPauseType.PLAY);\n         verify(getBridgeHandler()).putState(eq(getDeviceID()), eq(\"SmokeDetectorCheck\"),\n                 smokeDetectorCheckStateCaptor.capture());\n         SmokeDetectorCheckServiceState state = smokeDetectorCheckStateCaptor.getValue();\n@@ -97,10 +95,8 @@ public void testHandleCommandPlayPauseType()\n     }\n \n     @Test\n-    public void testHandleCommandUnknownCommand()\n-            throws InterruptedException, TimeoutException, ExecutionException, BoschSHCException {\n-        getFixture().handleCommand(new ChannelUID(getThing().getUID(), BoschSHCBindingConstants.CHANNEL_SMOKE_CHECK),\n-                OnOffType.ON);\n+    public void testHandleCommandUnknownCommand() {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_SMOKE_CHECK), OnOffType.ON);\n         ThingStatusInfo expectedThingStatusInfo = ThingStatusInfoBuilder\n                 .create(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR)\n                 .withDescription(\n@@ -113,8 +109,7 @@ public void testHandleCommandUnknownCommand()\n     public void testUpdateChannelSmokeDetectorCheckServiceStateNone() {\n         JsonElement jsonObject = JsonParser.parseString(\"{\\\"@type\\\":\\\"smokeDetectorCheckState\\\",\\\"value\\\":NONE}\");\n         getFixture().processUpdate(\"SmokeDetectorCheck\", jsonObject);\n-        verify(getCallback()).stateUpdated(\n-                new ChannelUID(getThing().getUID(), BoschSHCBindingConstants.CHANNEL_SMOKE_CHECK),\n+        verify(getCallback()).stateUpdated(new ChannelUID(getThing().getUID(), CHANNEL_SMOKE_CHECK),\n                 new StringType(\"NONE\"));\n     }\n \n@@ -123,8 +118,7 @@ public void testUpdateChannelSmokeDetectorCheckServiceStateRequests() {\n         JsonElement jsonObject = JsonParser\n                 .parseString(\"{\\\"@type\\\":\\\"smokeDetectorCheckState\\\",\\\"value\\\":SMOKE_TEST_REQUESTED}\");\n         getFixture().processUpdate(\"SmokeDetectorCheck\", jsonObject);\n-        verify(getCallback()).stateUpdated(\n-                new ChannelUID(getThing().getUID(), BoschSHCBindingConstants.CHANNEL_SMOKE_CHECK),\n+        verify(getCallback()).stateUpdated(new ChannelUID(getThing().getUID(), CHANNEL_SMOKE_CHECK),\n                 new StringType(\"SMOKE_TEST_REQUESTED\"));\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/AbstractSmokeDetectorHandlerWithAlarmServiceTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/AbstractSmokeDetectorHandlerWithAlarmServiceTest.java\nnew file mode 100644\nindex 0000000000000..7e156435f16d5\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/AbstractSmokeDetectorHandlerWithAlarmServiceTest.java\n@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.devices.smokedetector;\n+\n+import static org.junit.jupiter.api.Assertions.assertSame;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.verify;\n+import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.CHANNEL_ALARM;\n+\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.openhab.binding.boschshc.internal.devices.AbstractSmokeDetectorHandlerTest;\n+import org.openhab.binding.boschshc.internal.services.alarm.dto.AlarmServiceState;\n+import org.openhab.binding.boschshc.internal.services.alarm.dto.AlarmState;\n+import org.openhab.core.library.types.StringType;\n+import org.openhab.core.thing.ChannelUID;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonParser;\n+\n+/**\n+ * Unit tests for {@link AbstractSmokeDetectorHandlerWithAlarmService}.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ * @param <T> type of the smoke detector\n+ */\n+@NonNullByDefault\n+public abstract class AbstractSmokeDetectorHandlerWithAlarmServiceTest<T extends AbstractSmokeDetectorHandlerWithAlarmService>\n+        extends AbstractSmokeDetectorHandlerTest<T> {\n+\n+    @Captor\n+    private @NonNullByDefault({}) ArgumentCaptor<AlarmServiceState> alarmStateCaptor;\n+\n+    @Test\n+    public void testUpdateChannelsAlarm() {\n+        String json = \"\"\"\n+                {\n+                    \"@type\": \"alarmState\",\n+                    \"value\": IDLE_OFF\n+                }\n+                \"\"\";\n+        JsonElement jsonObject = JsonParser.parseString(json);\n+        getFixture().processUpdate(\"Alarm\", jsonObject);\n+        verify(getCallback()).stateUpdated(new ChannelUID(getThing().getUID(), CHANNEL_ALARM),\n+                new StringType(\"IDLE_OFF\"));\n+    }\n+\n+    @Test\n+    public void testHandleCommandAlarm() throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_ALARM),\n+                new StringType(\"INTRUSION_ALARM_ON_REQUESTED\"));\n+        verify(getBridgeHandler()).putState(eq(getDeviceID()), eq(\"Alarm\"), alarmStateCaptor.capture());\n+        AlarmServiceState state = alarmStateCaptor.getValue();\n+        assertSame(AlarmState.INTRUSION_ALARM_ON_REQUESTED, state.value);\n+    }\n+\n+    @Test\n+    public void testHandleCommandAlarmUnknownAlarmState()\n+            throws InterruptedException, TimeoutException, ExecutionException {\n+        getFixture().handleCommand(new ChannelUID(getThing().getUID(), CHANNEL_ALARM), new StringType(\"INVALID\"));\n+        verify(getBridgeHandler()).putState(eq(getDeviceID()), eq(\"Alarm\"), alarmStateCaptor.capture());\n+        AlarmServiceState state = alarmStateCaptor.getValue();\n+        assertSame(AlarmState.IDLE_OFF, state.value);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2HandlerTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2HandlerTest.java\nindex eb26d36c05bf8..59c6bc918b09e 100644\n--- a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2HandlerTest.java\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetector2HandlerTest.java\n@@ -16,7 +16,6 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.Test;\n-import org.openhab.binding.boschshc.internal.devices.AbstractSmokeDetectorHandlerTest;\n import org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants;\n import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.thing.ChannelUID;\n@@ -32,7 +31,7 @@\n  *\n  */\n @NonNullByDefault\n-public class SmokeDetector2HandlerTest extends AbstractSmokeDetectorHandlerTest<SmokeDetector2Handler> {\n+class SmokeDetector2HandlerTest extends AbstractSmokeDetectorHandlerWithAlarmServiceTest<SmokeDetector2Handler> {\n \n     @Override\n     protected SmokeDetector2Handler createFixture() {\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandlerTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandlerTest.java\nindex c9dfc4f77c782..5830af7359f09 100644\n--- a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandlerTest.java\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/smokedetector/SmokeDetectorHandlerTest.java\n@@ -13,7 +13,6 @@\n package org.openhab.binding.boschshc.internal.devices.smokedetector;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.binding.boschshc.internal.devices.AbstractSmokeDetectorHandlerTest;\n import org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants;\n import org.openhab.core.thing.ThingTypeUID;\n \n@@ -24,7 +23,7 @@\n  *\n  */\n @NonNullByDefault\n-public class SmokeDetectorHandlerTest extends AbstractSmokeDetectorHandlerTest<SmokeDetectorHandler> {\n+public class SmokeDetectorHandlerTest extends AbstractSmokeDetectorHandlerWithAlarmServiceTest<SmokeDetectorHandler> {\n \n     @Override\n     protected SmokeDetectorHandler createFixture() {\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/AlarmServiceTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/AlarmServiceTest.java\nnew file mode 100644\nindex 0000000000000..7475215a64815\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/AlarmServiceTest.java\n@@ -0,0 +1,54 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.services.alarm;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertSame;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.binding.boschshc.internal.exceptions.BoschSHCException;\n+import org.openhab.binding.boschshc.internal.services.alarm.dto.AlarmServiceState;\n+import org.openhab.binding.boschshc.internal.services.alarm.dto.AlarmState;\n+import org.openhab.core.library.types.DecimalType;\n+import org.openhab.core.library.types.StringType;\n+\n+/**\n+ * Unit tests for {@link AlarmService}.\n+ * \n+ * @author David Pace - Initial contribution\n+ */\n+@NonNullByDefault\n+class AlarmServiceTest {\n+\n+    private @NonNullByDefault({}) AlarmService fixture;\n+\n+    @BeforeEach\n+    public void beforeEach() {\n+        fixture = new AlarmService();\n+    }\n+\n+    @Test\n+    void testHandleCommandValidCommand() throws BoschSHCException {\n+        AlarmServiceState state = fixture.handleCommand(new StringType(\"IDLE_OFF\"));\n+        assertNotNull(state);\n+        assertSame(AlarmState.IDLE_OFF, state.value);\n+    }\n+\n+    @Test\n+    void testHandleCommandInvalidCommand() {\n+        assertThrows(BoschSHCException.class, () -> fixture.handleCommand(new DecimalType(0)));\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmStateTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmStateTest.java\nnew file mode 100644\nindex 0000000000000..a272984e43b2d\n--- /dev/null\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/services/alarm/dto/AlarmStateTest.java\n@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2010-2025 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.boschshc.internal.services.alarm.dto;\n+\n+import static org.junit.jupiter.api.Assertions.assertSame;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Unit tests for {@link AlarmState}.\n+ * \n+ * @author David Pace - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+class AlarmStateTest {\n+    @Test\n+    void testFromValidIdentifier() {\n+        assertSame(AlarmState.PRIMARY_ALARM, AlarmState.from(\"PRIMARY_ALARM\"));\n+    }\n+\n+    @Test\n+    void testFromInvalidIdentifier() {\n+        assertSame(AlarmState.IDLE_OFF, AlarmState.from(\"INVALID\"));\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18144",
    "pr_id": 18144,
    "issue_id": 18122,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[basicprofiles] Calculations over series of QuantityType are based on the wrong Unit\nThe `StateFilterProfile` explicitly uses `toInvertibleUnit` in `calculateMedian` below, but it is notable that other calculation methods use QuantityType.add() for summation instead, so it is not obvious why this one method requires `toInvertibleUnit`. \r\n\r\nGeneral comment: this calculation use case looks to be similar to the calculation use case that you cite in OH Core, so we should try to follow similar logic in resolving any potential issues.\r\n\r\nThe good news: for the case of `StateFilterProfile` there is probably no problem. Reason is that calculation are done over a time series set of values for the SAME Item, and the Item will not flip its unit over that time series, so all calculations will remain self consistent over that series.\r\n\r\nThe bad news: I am beginning to think that there may be bigger issues in other cases that calculate over sets of QuantityType. I think it is not just a question of `toInvertibleUnit`, and specifically not something where this PR would have an impact.\r\n\r\nhttps://github.com/openhab/openhab-addons/blob/0b3383b95ccb5035532a5d54b4b4e208348807b6/bundles/org.openhab.transform.basicprofiles/src/main/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfile.java#L604\r\n\r\n_Originally posted by @andrewfg in https://github.com/openhab/openhab-core/issues/4561#issuecomment-2599733946_\r\n            ",
    "issue_word_count": 215,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.transform.basicprofiles/README.md",
      "bundles/org.openhab.transform.basicprofiles/src/main/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfile.java",
      "bundles/org.openhab.transform.basicprofiles/src/test/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfileTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.transform.basicprofiles/src/test/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfileTest.java"
    ],
    "base_commit": "0b13f65580e453ad0eb13acf97e88b5fa950de46",
    "head_commit": "bcb1445492944ddbeea9d9ba5149f49d3a433752",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18144",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18144",
    "dockerfile": "",
    "pr_merged_at": "2025-02-12T20:52:18.000Z",
    "patch": "diff --git a/bundles/org.openhab.transform.basicprofiles/README.md b/bundles/org.openhab.transform.basicprofiles/README.md\nindex 433c193072c61..ca201ef0af95b 100644\n--- a/bundles/org.openhab.transform.basicprofiles/README.md\n+++ b/bundles/org.openhab.transform.basicprofiles/README.md\n@@ -242,6 +242,10 @@ The `LHS_OPERAND` and the `RHS_OPERAND` can be either one of these:\n   This can be customized by specifying the \"window size\" or sample count applicable to the function, e.g. `$MEDIAN(10)` will return the median of the last 10 values.\n   All the functions except `$DELTA` support a custom window size.\n \n+In the case of comparisons and calculations involving `QuantityType` values, all the values are converted to the Unit of the linked Item before the calculation and/or comparison is done.\n+Note: if the binding sends a value that cannot be converted to the Unit of the linked Item, then that value is excluded.\n+e.g. if the linked item has a Unit of `Units.METRE` and the binding sends a value of `Units.CELSIUS` then the value is ignored.\n+\n The state of one item can be compared against the state of another item by having item names on both sides of the comparison, e.g.: `Item1 > Item2`.\n When `LHS_OPERAND` is omitted, e.g. `> 10, < 100`, the comparisons are applied against the input data from the binding.\n The `RHS_OPERAND` can be any of the valid values listed above.\n\ndiff --git a/bundles/org.openhab.transform.basicprofiles/src/main/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfile.java b/bundles/org.openhab.transform.basicprofiles/src/main/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfile.java\nindex d717b25271064..3cc0068eaf23f 100644\n--- a/bundles/org.openhab.transform.basicprofiles/src/main/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfile.java\n+++ b/bundles/org.openhab.transform.basicprofiles/src/main/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfile.java\n@@ -37,6 +37,7 @@\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.library.items.NumberItem;\n import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.library.types.QuantityType;\n import org.openhab.core.library.types.StringType;\n@@ -53,6 +54,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import tech.units.indriya.AbstractUnit;\n+\n /**\n  * Accepts updates to state as long as conditions are met. Support for sending fixed state if conditions are *not*\n  * met.\n@@ -60,6 +63,7 @@\n  * @author Arne Seime - Initial contribution\n  * @author Jimmy Tanagra - Expanded the comparison types\n  * @author Jimmy Tanagra - Added support for functions\n+ * @author Andrew Fiddian-Green - Normalise calculations based on the Unit of the linked Item\n  */\n @NonNullByDefault\n public class StateFilterProfile implements StateProfile {\n@@ -103,48 +107,50 @@ public class StateFilterProfile implements StateProfile {\n     private @Nullable Item linkedItem = null;\n \n     private State newState = UnDefType.UNDEF;\n+\n+    // single cached numeric state for use in conjunction with DELTA and DELTA_PERCENT functions\n     private Optional<State> acceptedState = Optional.empty();\n-    private LinkedList<State> previousStates = new LinkedList<>();\n+\n+    // cached list of prior numeric states for use in conjunction with AVG, MEDIAN, STDDEV, MIN, MAX functions\n+    private final List<State> previousStates = new LinkedList<>();\n \n     private final int windowSize;\n \n+    // reference (zero based) system unit for conversions\n+    private @Nullable Unit<?> systemUnit = null;\n+    private boolean systemUnitInitialized = false;\n+\n     public StateFilterProfile(ProfileCallback callback, ProfileContext context, ItemRegistry itemRegistry) {\n         this.callback = callback;\n         this.itemRegistry = itemRegistry;\n \n         StateFilterProfileConfig config = context.getConfiguration().as(StateFilterProfileConfig.class);\n-        if (config != null) {\n-            conditions = parseConditions(config.conditions, config.separator);\n-            int maxWindowSize = 0;\n-\n-            if (conditions.isEmpty()) {\n-                logger.warn(\"No valid conditions defined for StateFilterProfile. Link: {}. Conditions: {}\",\n-                        callback.getItemChannelLink(), config.conditions);\n-            } else {\n-                for (StateCondition condition : conditions) {\n-                    if (condition.lhsState instanceof FunctionType function) {\n-                        int windowSize = function.getWindowSize();\n-                        if (windowSize > maxWindowSize) {\n-                            maxWindowSize = windowSize;\n-                        }\n+\n+        conditions = parseConditions(config.conditions, config.separator);\n+        int maxWindowSize = 0;\n+\n+        if (conditions.isEmpty()) {\n+            logger.warn(\"No valid conditions defined for StateFilterProfile. Link: {}. Conditions: {}\",\n+                    callback.getItemChannelLink(), config.conditions);\n+        } else {\n+            for (StateCondition condition : conditions) {\n+                if (condition.lhsState instanceof FunctionType function) {\n+                    int windowSize = function.getWindowSize();\n+                    if (windowSize > maxWindowSize) {\n+                        maxWindowSize = windowSize;\n                     }\n-                    if (condition.rhsState instanceof FunctionType function) {\n-                        int windowSize = function.getWindowSize();\n-                        if (windowSize > maxWindowSize) {\n-                            maxWindowSize = windowSize;\n-                        }\n+                }\n+                if (condition.rhsState instanceof FunctionType function) {\n+                    int windowSize = function.getWindowSize();\n+                    if (windowSize > maxWindowSize) {\n+                        maxWindowSize = windowSize;\n                     }\n                 }\n             }\n-\n-            windowSize = maxWindowSize;\n-\n-            configMismatchState = parseState(config.mismatchState, context.getAcceptedDataTypes());\n-        } else {\n-            conditions = List.of();\n-            configMismatchState = null;\n-            windowSize = 0;\n         }\n+\n+        windowSize = maxWindowSize;\n+        configMismatchState = parseState(config.mismatchState, context.getAcceptedDataTypes());\n     }\n \n     private List<StateCondition> parseConditions(List<String> conditions, String separator) {\n@@ -204,6 +210,10 @@ public void onCommandFromHandler(Command command) {\n \n     @Override\n     public void onStateUpdateFromHandler(State state) {\n+        if (!isAllowed(state)) {\n+            logger.debug(\"Received non allowed state update from handler: {}, ignored\", state);\n+            return;\n+        }\n         newState = state;\n         State resultState = checkCondition(state);\n         if (resultState != null) {\n@@ -212,7 +222,7 @@ public void onStateUpdateFromHandler(State state) {\n         } else {\n             logger.debug(\"Received state update from handler: {}, not forwarded to item\", state);\n         }\n-        if (windowSize > 0 && (state instanceof DecimalType || state instanceof QuantityType)) {\n+        if (windowSize > 0 && isCacheable(state)) {\n             previousStates.add(state);\n             if (previousStates.size() > windowSize) {\n                 previousStates.removeFirst();\n@@ -230,7 +240,9 @@ private State checkCondition(State state) {\n         }\n \n         if (conditions.stream().allMatch(c -> c.check(state))) {\n-            acceptedState = Optional.of(state);\n+            if (isCacheable(state)) {\n+                acceptedState = Optional.of(state);\n+            }\n             return state;\n         } else {\n             return configMismatchState;\n@@ -316,7 +328,7 @@ public StateCondition(String lhs, ComparisonType comparisonType, String rhs) {\n \n         /**\n          * Check if the condition is met.\n-         * \n+         *\n          * If the lhs is empty, the condition is checked against the input state.\n          *\n          * @param input the state to check against\n@@ -342,6 +354,9 @@ public boolean check(State input) {\n                     if (rhsFunction.alwaysAccept()) {\n                         return true;\n                     }\n+                    if (rhsFunction.getType() == FunctionType.Function.DELTA) {\n+                        isDeltaCheck = true;\n+                    }\n                     rhsItem = getLinkedItem();\n                 }\n \n@@ -397,10 +412,6 @@ public boolean check(State input) {\n \n                 // Don't convert QuantityType to other types, so that 1500 != 1500 W\n                 if (rhsState != null && !(rhsState instanceof QuantityType)) {\n-                    if (rhsState instanceof FunctionType rhsFunction\n-                            && rhsFunction.getType() == FunctionType.Function.DELTA) {\n-                        isDeltaCheck = true;\n-                    }\n                     // Try to convert it to the same type as the lhs\n                     // This allows comparing compatible types, e.g. PercentType vs OnOffType\n                     rhsState = rhsState.as(lhsState.getClass());\n@@ -438,9 +449,14 @@ public boolean check(State input) {\n \n                 rhs = Objects.requireNonNull(rhsState instanceof StringType ? rhsState.toString() : rhsState);\n \n-                if (isDeltaCheck && rhs instanceof QuantityType rhsQty && lhs instanceof QuantityType lhsQty) {\n-                    if (rhsQty.toUnitRelative(lhsQty.getUnit()) instanceof QuantityType relativeRhs) {\n-                        rhs = relativeRhs;\n+                if ((rhs instanceof QuantityType rhsQty) && (lhs instanceof QuantityType lhsQty)) {\n+                    if (isDeltaCheck) {\n+                        if (rhsQty.toUnitRelative(lhsQty.getUnit()) instanceof QuantityType relativeRhs) {\n+                            rhs = relativeRhs;\n+                        }\n+                    } else if (hasSystemUnit()) {\n+                        lhs = toSystemUnitQuantityType(lhsQty) instanceof QuantityType lhsSU ? lhsSU : lhs;\n+                        rhs = toSystemUnitQuantityType(rhsQty) instanceof QuantityType rhsSU ? rhsSU : rhs;\n                     }\n                 }\n \n@@ -454,13 +470,14 @@ public boolean check(State input) {\n                     }\n                 }\n \n+                @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n                 boolean result = switch (comparisonType) {\n                     case EQ -> lhs.equals(rhs);\n                     case NEQ, NEQ_ALT -> !lhs.equals(rhs);\n-                    case GT -> ((Comparable) lhs).compareTo(rhs) > 0;\n-                    case GTE -> ((Comparable) lhs).compareTo(rhs) >= 0;\n-                    case LT -> ((Comparable) lhs).compareTo(rhs) < 0;\n-                    case LTE -> ((Comparable) lhs).compareTo(rhs) <= 0;\n+                    case GT -> ((Comparable<Object>) lhs).compareTo(rhs) > 0;\n+                    case GTE -> ((Comparable<Object>) lhs).compareTo(rhs) >= 0;\n+                    case LT -> ((Comparable<Object>) lhs).compareTo(rhs) < 0;\n+                    case LTE -> ((Comparable<Object>) lhs).compareTo(rhs) <= 0;\n                 };\n \n                 return result;\n@@ -551,18 +568,31 @@ public FunctionType(Function type, Optional<Integer> windowSize) {\n \n         public @Nullable State calculate() {\n             logger.debug(\"Calculating function: {}\", this);\n-            int size = previousStates.size();\n-            int start = windowSize.map(w -> size - w).orElse(0);\n-            List<State> states = start <= 0 ? previousStates : previousStates.subList(start, size);\n-            return switch (type) {\n-                case DELTA -> calculateDelta();\n-                case DELTA_PERCENT -> calculateDeltaPercent();\n-                case AVG, AVERAGE -> calculateAverage(states);\n-                case MEDIAN -> calculateMedian(states);\n-                case STDDEV -> calculateStdDev(states);\n-                case MIN -> calculateMin(states);\n-                case MAX -> calculateMax(states);\n-            };\n+            State result;\n+            switch (type) {\n+                case DELTA -> result = calculateDelta();\n+                case DELTA_PERCENT -> result = calculateDeltaPercent();\n+                default -> {\n+                    int size = previousStates.size();\n+                    Integer start = windowSize.map(w -> size - w).orElse(0);\n+                    List<BigDecimal> values = toBigDecimals(\n+                            start == null || start <= 0 ? previousStates : previousStates.subList(start, size));\n+                    if (values.isEmpty()) {\n+                        logger.debug(\"Not enough states to calculate {}\", type);\n+                        result = null;\n+                    } else {\n+                        switch (type) {\n+                            case AVG, AVERAGE -> result = calculateAverage(values);\n+                            case MEDIAN -> result = calculateMedian(values);\n+                            case STDDEV -> result = calculateStdDev(values);\n+                            case MIN -> result = calculateMin(values);\n+                            case MAX -> result = calculateMax(values);\n+                            default -> result = null;\n+                        }\n+                    }\n+                }\n+            }\n+            return result;\n         }\n \n         /**\n@@ -579,11 +609,8 @@ public boolean alwaysAccept() {\n             }\n             if (type == Function.DELTA_PERCENT) {\n                 // avoid division by zero\n-                if (acceptedState.get() instanceof QuantityType base) {\n-                    return base.toBigDecimal().compareTo(BigDecimal.ZERO) == 0;\n-                }\n-                if (acceptedState.get() instanceof DecimalType base) {\n-                    return base.toBigDecimal().compareTo(BigDecimal.ZERO) == 0;\n+                if (toBigDecimal(acceptedState.get()) instanceof BigDecimal base) {\n+                    return base.compareTo(BigDecimal.ZERO) == 0;\n                 }\n             }\n             return false;\n@@ -591,6 +618,7 @@ public boolean alwaysAccept() {\n \n         @Override\n         public <T extends State> @Nullable T as(@Nullable Class<T> target) {\n+            // TODO @andrewfg: do we need to change this ??\n             if (target == DecimalType.class || target == QuantityType.class) {\n                 return target.cast(calculate());\n             }\n@@ -603,7 +631,7 @@ public int getWindowSize() {\n                 // the previous state is kept in the acceptedState variable\n                 return 0;\n             }\n-            return windowSize.orElse(DEFAULT_WINDOW_SIZE);\n+            return windowSize.isPresent() ? windowSize.get() : DEFAULT_WINDOW_SIZE;\n         }\n \n         public Function getType() {\n@@ -625,126 +653,179 @@ public String toString() {\n             return toFullString();\n         }\n \n-        private @Nullable State calculateAverage(List<State> states) {\n-            if (states.isEmpty()) {\n-                logger.debug(\"Not enough states to calculate sum\");\n-                return null;\n-            }\n-            if (newState instanceof QuantityType newStateQuantity) {\n-                QuantityType zero = new QuantityType(0, newStateQuantity.getUnit());\n-                QuantityType sum = states.stream().map(s -> (QuantityType) s).reduce(zero, QuantityType::add);\n-                return sum.divide(BigDecimal.valueOf(states.size()));\n-            }\n-            BigDecimal sum = states.stream().map(s -> ((DecimalType) s).toBigDecimal()).reduce(BigDecimal.ZERO,\n-                    BigDecimal::add);\n-            return new DecimalType(sum.divide(BigDecimal.valueOf(states.size()), 2, RoundingMode.HALF_EVEN));\n+        private @Nullable State calculateAverage(List<BigDecimal> values) {\n+            return Optional\n+                    .ofNullable(values.stream().reduce(BigDecimal.ZERO, BigDecimal::add)\n+                            .divide(BigDecimal.valueOf(values.size()), MathContext.DECIMAL32))\n+                    .map(o -> toState(o)).orElse(null);\n         }\n \n-        private @Nullable State calculateMedian(List<State> states) {\n-            if (states.isEmpty()) {\n-                logger.debug(\"Not enough states to calculate median\");\n-                return null;\n-            }\n-            if (newState instanceof QuantityType newStateQuantity) {\n-                Unit<?> unit = newStateQuantity.getUnit();\n-                List<BigDecimal> bdStates = states.stream()\n-                        .map(s -> ((QuantityType) s).toInvertibleUnit(unit).toBigDecimal()).toList();\n-                return Optional.ofNullable(Statistics.median(bdStates)).map(median -> new QuantityType(median, unit))\n-                        .orElse(null);\n-            }\n-            List<BigDecimal> bdStates = states.stream().map(s -> ((DecimalType) s).toBigDecimal()).toList();\n-            return Optional.ofNullable(Statistics.median(bdStates)).map(median -> new DecimalType(median)).orElse(null);\n+        private @Nullable State calculateMedian(List<BigDecimal> values) {\n+            return Optional.ofNullable(Statistics.median(values)).map(o -> toState(o)).orElse(null);\n         }\n \n-        private @Nullable State calculateStdDev(List<State> states) {\n-            if (states.isEmpty()) {\n-                logger.debug(\"Not enough states to calculate standard deviation\");\n-                return null;\n-            }\n-            if (newState instanceof QuantityType newStateQuantity) {\n-                QuantityType average = (QuantityType) calculateAverage(states);\n-                if (average == null) {\n-                    return null;\n-                }\n-                QuantityType zero = new QuantityType(0, newStateQuantity.getUnit());\n-                QuantityType variance = states.stream() //\n-                        .map(s -> {\n-                            QuantityType delta = ((QuantityType) s).subtract(average);\n-                            return (QuantityType) delta.multiply(delta.toBigDecimal()); // don't square the unit\n-                        }) //\n-                        .reduce(zero, QuantityType::add) // This reduced into a QuantityType\n-                        .divide(BigDecimal.valueOf(states.size()));\n-                return new QuantityType(variance.toBigDecimal().sqrt(MathContext.DECIMAL32), variance.getUnit());\n-            }\n-            BigDecimal average = Optional.ofNullable((DecimalType) calculateAverage(states))\n-                    .map(DecimalType::toBigDecimal).orElse(null);\n-            if (average == null) {\n-                return null;\n-            }\n-            BigDecimal variance = states.stream().map(s -> {\n-                BigDecimal delta = ((DecimalType) s).toBigDecimal().subtract(average);\n+        private @Nullable State calculateStdDev(List<BigDecimal> values) {\n+            BigDecimal average = values.stream().reduce(BigDecimal.ZERO, BigDecimal::add)\n+                    .divide(BigDecimal.valueOf(values.size()), 2, RoundingMode.HALF_EVEN);\n+\n+            BigDecimal variance = values.stream().map(value -> {\n+                BigDecimal delta = value.subtract(average);\n                 return delta.multiply(delta);\n-            }).reduce(BigDecimal.ZERO, BigDecimal::add).divide(BigDecimal.valueOf(states.size()),\n+            }).reduce(BigDecimal.ZERO, BigDecimal::add).divide(BigDecimal.valueOf(values.size()),\n                     MathContext.DECIMAL32);\n-            return new DecimalType(variance.sqrt(MathContext.DECIMAL32));\n+\n+            return toState(variance.sqrt(MathContext.DECIMAL32));\n         }\n \n-        private @Nullable State calculateMin(List<State> states) {\n-            if (states.isEmpty()) {\n-                logger.debug(\"Not enough states to calculate min\");\n-                return null;\n-            }\n-            if (newState instanceof QuantityType newStateQuantity) {\n-                return states.stream().map(s -> (QuantityType) s).min(QuantityType::compareTo).orElse(null);\n-            }\n-            return states.stream().map(s -> ((DecimalType) s).toBigDecimal()).min(BigDecimal::compareTo)\n-                    .map(DecimalType::new).orElse(null);\n+        private @Nullable State calculateMin(List<BigDecimal> values) {\n+            return Optional.ofNullable(values.stream().min(BigDecimal::compareTo).orElse(null)).map(o -> toState(o))\n+                    .orElse(null);\n         }\n \n-        private @Nullable State calculateMax(List<State> states) {\n-            if (states.isEmpty()) {\n-                logger.debug(\"Not enough states to calculate max\");\n-                return null;\n-            }\n-            if (newState instanceof QuantityType newStateQuantity) {\n-                return states.stream().map(s -> (QuantityType) s).max(QuantityType::compareTo).orElse(null);\n-            }\n-            return states.stream().map(s -> ((DecimalType) s).toBigDecimal()).max(BigDecimal::compareTo)\n-                    .map(DecimalType::new).orElse(null);\n+        private @Nullable State calculateMax(List<BigDecimal> values) {\n+            return Optional.ofNullable(values.stream().max(BigDecimal::compareTo).orElse(null)).map(o -> toState(o))\n+                    .orElse(null);\n         }\n \n         private @Nullable State calculateDelta() {\n-            if (acceptedState.isEmpty()) {\n-                return null;\n-            }\n-            if (newState instanceof QuantityType newStateQuantity) {\n-                QuantityType result = newStateQuantity.subtract((QuantityType) acceptedState.get());\n-                return result.toBigDecimal().compareTo(BigDecimal.ZERO) < 0 ? result.negate() : result;\n-            }\n-            BigDecimal result = ((DecimalType) newState).toBigDecimal()\n-                    .subtract(((DecimalType) acceptedState.get()).toBigDecimal()) //\n-                    .abs();\n-            return new DecimalType(result);\n+            return acceptedState.isPresent() //\n+                    && toBigDecimal(acceptedState.get()) instanceof BigDecimal acceptedValue\n+                    && toBigDecimal(newState) instanceof BigDecimal newValue //\n+                            ? toState(newValue.subtract(acceptedValue).abs())\n+                            : null;\n         }\n \n         private @Nullable State calculateDeltaPercent() {\n-            if (acceptedState.isEmpty()) {\n-                return null;\n-            }\n-            State calculatedDelta = calculateDelta();\n-            BigDecimal bdDelta;\n-            BigDecimal bdBase;\n-            if (acceptedState.get() instanceof QuantityType acceptedStateQuantity) {\n-                // Assume that delta and base are in the same unit\n-                bdDelta = ((QuantityType) calculatedDelta).toBigDecimal();\n-                bdBase = acceptedStateQuantity.toBigDecimal();\n-            } else {\n-                bdDelta = ((DecimalType) calculatedDelta).toBigDecimal();\n-                bdBase = ((DecimalType) acceptedState.get()).toBigDecimal();\n-            }\n-            bdBase = bdBase.abs();\n-            BigDecimal percent = bdDelta.multiply(BigDecimal.valueOf(100)).divide(bdBase, 2, RoundingMode.HALF_EVEN);\n-            return new DecimalType(percent);\n+            return acceptedState.isPresent() //\n+                    && toBigDecimal(acceptedState.get()) instanceof BigDecimal acceptedValue\n+                    && toBigDecimal(newState) instanceof BigDecimal newValue\n+                            // percent is dimension-less; we must return DecimalType\n+                            ? new DecimalType(newValue.subtract(acceptedValue).multiply(BigDecimal.valueOf(100))\n+                                    .divide(acceptedValue, MathContext.DECIMAL32).abs())\n+                            : null;\n         }\n     }\n+\n+    /**\n+     * Return true if 'systemUnit' is defined. The first call to this method initialises 'systemUnit' to its\n+     * (effectively) final value, so if this method returns 'true' we can safely use 'Objects.requireNonNull()'\n+     * thereafter to assert that 'systemUnit' is indeed non- null. The {@link Unit} is initialized based on the\n+     * system unit of the linked {@link Item}. If there is no linked Item, or it is not a {@link NumberItem} or\n+     * if the Item does not have a {@link Unit}, then 'systemUnit' is null and this method returns false.\n+     */\n+    protected synchronized boolean hasSystemUnit() {\n+        if (!systemUnitInitialized) {\n+            systemUnitInitialized = true;\n+            systemUnit = getLinkedItem() instanceof NumberItem item && item.getUnit() instanceof Unit<?> unit\n+                    ? unit.getSystemUnit()\n+                    : null;\n+        }\n+        return systemUnit != null;\n+    }\n+\n+    /**\n+     * Convert a {@link State} to a {@link BigDecimal}. If it is a {@link QuantityType} and there is a 'systemUnit' its\n+     * value is converted (if possible) to the 'systemUnit' before converting it to a {@link BigDecimal}. Returns null\n+     * if the {@link State} does not have a numeric value, or if the conversion to 'systemUnit' fails.\n+     *\n+     * @return a {@link BigDecimal} or null.\n+     */\n+    protected @Nullable BigDecimal toBigDecimal(State state) {\n+        if (state instanceof DecimalType decimalType) {\n+            return decimalType.toBigDecimal();\n+        }\n+        if (state instanceof QuantityType<?> quantityType) {\n+            return hasSystemUnit() //\n+                    ? toSystemUnitQuantityType(state) instanceof QuantityType<?> suQuantityType\n+                            ? suQuantityType.toBigDecimal()\n+                            : null\n+                    : quantityType.toBigDecimal();\n+        }\n+        return state.as(DecimalType.class) instanceof DecimalType decimalType //\n+                ? decimalType.toBigDecimal()\n+                : null;\n+    }\n+\n+    /**\n+     * Convert a list of {@link State} to a list of {@link BigDecimal} values.\n+     *\n+     * @param states list of {@link State} values.\n+     * @return list of {@link BigDecimal} values.\n+     */\n+    protected List<BigDecimal> toBigDecimals(List<? extends State> states) {\n+        return states.stream().map(s -> toBigDecimal(s)).filter(Objects::nonNull).toList();\n+    }\n+\n+    /**\n+     * Create a new {@link State} from the given {@link BigDecimal} value. If there is a 'systemUnit' it creates a\n+     * {@link QuantityType} based on that unit. Otherwise it creates a {@link DecimalType}.\n+     *\n+     * @return a {@link QuantityType} or a {@link DecimalType}\n+     */\n+    protected State toState(BigDecimal value) {\n+        return hasSystemUnit() //\n+                ? new QuantityType<>(value, Objects.requireNonNull(systemUnit))\n+                : new DecimalType(value);\n+    }\n+\n+    /**\n+     * Convert a {@link State} to a {@link QuantityType} with its value converted to the 'systemUnit'.\n+     * Returns null if the state is not a {@link QuantityType} or it does not convert to 'systemUnit'.\n+     *\n+     * @return a {@link QuantityType} based on 'systemUnit'.\n+     */\n+    protected @Nullable QuantityType<?> toSystemUnitQuantityType(State state) {\n+        return state instanceof QuantityType<?> quantityType && hasSystemUnit() //\n+                ? toInvertibleUnit(quantityType, Objects.requireNonNull(systemUnit))\n+                : null;\n+    }\n+\n+    /**\n+     * Convert the given {@link QuantityType} to an equivalent based on the target {@link Unit}. The conversion can be\n+     * made to both inverted and non-inverted units, so invertible type conversions (e.g. Mirek <=> Kelvin) are\n+     * supported.\n+     * <p>\n+     * Note: we can use {@link QuantityType.toInvertibleUnit()} if OH Core PR #4561 is merged.\n+     *\n+     * @param source the {@link QuantityType} to be converted.\n+     * @param targetUnit the {@link Unit} to convert to.\n+     *\n+     * @return a new {@link QuantityType} based on 'systemUnit' or null.\n+     */\n+    protected @Nullable QuantityType<?> toInvertibleUnit(QuantityType<?> source, Unit<?> targetUnit) {\n+        Unit<?> sourceSystemUnit = source.getUnit().getSystemUnit();\n+        if (!targetUnit.equals(sourceSystemUnit) && !targetUnit.isCompatible(AbstractUnit.ONE)\n+                && sourceSystemUnit.inverse().isCompatible(targetUnit)) {\n+            QuantityType<?> sourceInItsSystemUnit = source.toUnit(sourceSystemUnit);\n+            return sourceInItsSystemUnit != null ? sourceInItsSystemUnit.inverse().toUnit(targetUnit) : null;\n+        }\n+        return source.toUnit(targetUnit);\n+    }\n+\n+    /**\n+     * Check if the given {@link State} is allowed. Non -allowed states are those which are a {@link QuantityType}\n+     * and if there is a 'systemUnit' not compatible with that.\n+     *\n+     * @param state the incoming state.\n+     * @return true if allowed.\n+     */\n+    protected boolean isAllowed(State state) {\n+        return hasSystemUnit() //\n+                ? toSystemUnitQuantityType(state) != null\n+                : true;\n+    }\n+\n+    /**\n+     * Check if the given {@link State} is suitable to be cached. This means it is suitable to add to the\n+     * 'previousStates' list and/or to set to the 'acceptedState' field. This means that either there is a\n+     * 'systemUnit' with which 'state' is compatible, or it can provide a {@link DecimalType} value.\n+     *\n+     * @param state the {@link State} to be tested.\n+     * @return true if the 'state' is suitable to be cached.\n+     */\n+    protected boolean isCacheable(State state) {\n+        return hasSystemUnit() //\n+                ? toSystemUnitQuantityType(state) != null\n+                : state.as(DecimalType.class) != null;\n+    }\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.transform.basicprofiles/src/test/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfileTest.java b/bundles/org.openhab.transform.basicprofiles/src/test/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfileTest.java\nindex 3fc2468217406..f62a97a7e1e21 100644\n--- a/bundles/org.openhab.transform.basicprofiles/src/test/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfileTest.java\n+++ b/bundles/org.openhab.transform.basicprofiles/src/test/java/org/openhab/transform/basicprofiles/internal/profiles/StateFilterProfileTest.java\n@@ -12,24 +12,24 @@\n  */\n package org.openhab.transform.basicprofiles.internal.profiles;\n \n-import static org.hamcrest.Matchers.*;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.mockito.ArgumentMatchers.*;\n-import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.*;\n-import static org.mockito.Mockito.reset;\n-import static org.mockito.Mockito.times;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.Mockito.when;\n \n+import java.util.Collection;\n import java.util.Hashtable;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.stream.Stream;\n \n+import javax.measure.MetricPrefix;\n+import javax.measure.Quantity;\n+import javax.measure.Unit;\n import javax.measure.quantity.Dimensionless;\n import javax.measure.quantity.Power;\n+import javax.measure.quantity.Time;\n+import javax.measure.spi.SystemOfUnits;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.BeforeEach;\n@@ -63,6 +63,7 @@\n import org.openhab.core.library.types.PercentType;\n import org.openhab.core.library.types.QuantityType;\n import org.openhab.core.library.types.StringType;\n+import org.openhab.core.library.unit.ImperialUnits;\n import org.openhab.core.library.unit.SIUnits;\n import org.openhab.core.library.unit.Units;\n import org.openhab.core.thing.link.ItemChannelLink;\n@@ -106,7 +107,7 @@ public void setup() throws ItemNotFoundException {\n         reset(mockCallback);\n         reset(mockItemChannelLink);\n         when(mockCallback.getItemChannelLink()).thenReturn(mockItemChannelLink);\n-        when(mockItemRegistry.getItem(\"\")).thenThrow(ItemNotFoundException.class);\n+        // when(mockItemRegistry.getItem(\"\")).thenThrow(ItemNotFoundException.class);\n     }\n \n     @Test\n@@ -291,7 +292,7 @@ public static Stream<Arguments> testComparingItemWithValue() {\n         ContactItem contactItem = new ContactItem(\"contactItem\");\n         RollershutterItem rollershutterItem = new RollershutterItem(\"rollershutterItem\");\n \n-        QuantityType q_1500W = QuantityType.valueOf(\"1500 W\");\n+        QuantityType<?> q_1500W = QuantityType.valueOf(\"1500 W\");\n         DecimalType d_1500 = DecimalType.valueOf(\"1500\");\n         StringType s_foo = StringType.valueOf(\"foo\");\n         StringType s_NULL = StringType.valueOf(\"NULL\");\n@@ -497,9 +498,9 @@ public static Stream<Arguments> testComparingItemWithOtherItem() {\n         ContactItem contactItem = new ContactItem(\"contactItem\");\n         ContactItem contactItem2 = new ContactItem(\"contactItem2\");\n \n-        QuantityType q_1500W = QuantityType.valueOf(\"1500 W\");\n-        QuantityType q_1_5kW = QuantityType.valueOf(\"1.5 kW\");\n-        QuantityType q_10kW = QuantityType.valueOf(\"10 kW\");\n+        QuantityType<?> q_1500W = QuantityType.valueOf(\"1500 W\");\n+        QuantityType<?> q_1_5kW = QuantityType.valueOf(\"1.5 kW\");\n+        QuantityType<?> q_10kW = QuantityType.valueOf(\"10 kW\");\n \n         DecimalType d_1500 = DecimalType.valueOf(\"1500\");\n         DecimalType d_2000 = DecimalType.valueOf(\"2000\");\n@@ -575,7 +576,7 @@ public static Stream<Arguments> testComparingInputStateWithValue() {\n         StringItem stringItem = new StringItem(\"ItemName\");\n         DimmerItem dimmerItem = new DimmerItem(\"ItemName\");\n \n-        QuantityType q_1500W = QuantityType.valueOf(\"1500 W\");\n+        QuantityType<?> q_1500W = QuantityType.valueOf(\"1500 W\");\n         DecimalType d_1500 = DecimalType.valueOf(\"1500\");\n         StringType s_foo = StringType.valueOf(\"foo\");\n \n@@ -664,7 +665,6 @@ public void testComparingInputStateWithItem(GenericItem linkedItem, State inputS\n \n         profile.onStateUpdateFromHandler(inputState);\n         reset(mockCallback);\n-        when(mockCallback.getItemChannelLink()).thenReturn(mockItemChannelLink);\n \n         item.setState(state);\n         profile.onStateUpdateFromHandler(inputState);\n@@ -721,8 +721,8 @@ public static Stream<Arguments> testFunctions() {\n                 Arguments.of(decimalItem, \"$DELTA_PERCENT < 10\", decimals, DecimalType.valueOf(\"0.91\"), true), //\n                 Arguments.of(decimalItem, \"$DELTA_PERCENT < 10\", decimals, DecimalType.valueOf(\"0.89\"), false), //\n \n-                Arguments.of(decimalItem, \"$DELTA_PERCENT < 10\", negativeDecimals, DecimalType.valueOf(\"0\"), false),\n-                Arguments.of(decimalItem, \"10 > $DELTA_PERCENT\", negativeDecimals, DecimalType.valueOf(\"0\"), false),\n+                Arguments.of(decimalItem, \"$DELTA_PERCENT < 10\", negativeDecimals, DecimalType.valueOf(\"0\"), false), //\n+                Arguments.of(decimalItem, \"10 > $DELTA_PERCENT\", negativeDecimals, DecimalType.valueOf(\"0\"), false), //\n \n                 Arguments.of(decimalItem, \"< 10%\", decimals, DecimalType.valueOf(\"1.09\"), true), //\n                 Arguments.of(decimalItem, \"< 10%\", decimals, DecimalType.valueOf(\"1.11\"), false), //\n@@ -868,7 +868,6 @@ private void internalTestFunctions(Item item, String condition, List<State> stat\n         }\n \n         reset(mockCallback);\n-        when(mockCallback.getItemChannelLink()).thenReturn(mockItemChannelLink);\n \n         profile.onStateUpdateFromHandler(input);\n         verify(mockCallback, times(expected ? 1 : 0)).sendUpdate(input);\n@@ -899,4 +898,178 @@ public void testFirstDataIsAcceptedForDeltaFunctions(String conditions) throws I\n         profile.onStateUpdateFromHandler(DecimalType.valueOf(\"1\"));\n         verify(mockCallback, times(1)).sendUpdate(DecimalType.valueOf(\"1\"));\n     }\n+\n+    public static Stream<Arguments> testMixedStates() {\n+        NumberItem powerItem = new NumberItem(\"Number:Power\", \"powerItem\", UNIT_PROVIDER);\n+\n+        List<State> states = List.of( //\n+                UnDefType.UNDEF, //\n+                QuantityType.valueOf(99, SIUnits.METRE), //\n+                QuantityType.valueOf(1, Units.WATT), //\n+                DecimalType.valueOf(\"2\"), //\n+                QuantityType.valueOf(2000, MetricPrefix.MILLI(Units.WATT)), //\n+                QuantityType.valueOf(3, Units.WATT)); //\n+\n+        return Stream.of(\n+                // average function (true)\n+                Arguments.of(powerItem, \"== $AVG\", states, QuantityType.valueOf(\"2 W\"), true),\n+                Arguments.of(powerItem, \"== $AVG\", states, QuantityType.valueOf(\"2000 mW\"), true),\n+                Arguments.of(powerItem, \"== $AVERAGE\", states, QuantityType.valueOf(\"0.002 kW\"), true),\n+                Arguments.of(powerItem, \"> $AVERAGE\", states, QuantityType.valueOf(\"3 W\"), true),\n+\n+                // average function (false)\n+                Arguments.of(powerItem, \"> $AVERAGE\", states, QuantityType.valueOf(\"2 W\"), false),\n+                Arguments.of(powerItem, \"== $AVERAGE\", states, DecimalType.valueOf(\"2\"), false),\n+\n+                // min function (true)\n+                Arguments.of(powerItem, \"== $MIN\", states, QuantityType.valueOf(\"1 W\"), true),\n+                Arguments.of(powerItem, \"== $MIN\", states, QuantityType.valueOf(\"1000 mW\"), true),\n+\n+                // min function (false)\n+                Arguments.of(powerItem, \"== $MIN\", states, DecimalType.valueOf(\"1\"), false),\n+\n+                // max function (true)\n+                Arguments.of(powerItem, \"== $MAX\", states, QuantityType.valueOf(\"3 W\"), true),\n+                Arguments.of(powerItem, \"== $MAX\", states, QuantityType.valueOf(\"0.003 kW\"), true),\n+\n+                // max function (false)\n+                Arguments.of(powerItem, \"== $MAX\", states, DecimalType.valueOf(\"1\"), false),\n+\n+                // delta function (true)\n+                Arguments.of(powerItem, \"$DELTA <= 1 W\", states, QuantityType.valueOf(\"4 W\"), true),\n+                Arguments.of(powerItem, \"$DELTA > 0.5 W\", states, QuantityType.valueOf(\"4 W\"), true),\n+                Arguments.of(powerItem, \"$DELTA > 0.0005 kW\", states, QuantityType.valueOf(\"4 W\"), true),\n+                Arguments.of(powerItem, \"0.5 W < $DELTA\", states, QuantityType.valueOf(\"4 W\"), true),\n+                Arguments.of(powerItem, \"500 mW < $DELTA\", states, QuantityType.valueOf(\"4 W\"), true),\n+\n+                // delta function (false)\n+                Arguments.of(powerItem, \"$DELTA > 0.5 W\", states, QuantityType.valueOf(\"3.4 W\"), false),\n+                Arguments.of(powerItem, \"$DELTA > 0.5\", states, QuantityType.valueOf(\"4 W\"), false),\n+\n+                // delta percent function (true)\n+                Arguments.of(powerItem, \"$DELTA_PERCENT > 30\", states, QuantityType.valueOf(\"4 W\"), true),\n+                Arguments.of(powerItem, \"30 < $DELTA_PERCENT\", states, QuantityType.valueOf(\"4 W\"), true),\n+\n+                // delta percent function (false)\n+                Arguments.of(powerItem, \"$DELTA_PERCENT > 310\", states, QuantityType.valueOf(\"4 W\"), false),\n+                Arguments.of(powerItem, \"310 < $DELTA_PERCENT\", states, QuantityType.valueOf(\"4 W\"), false),\n+\n+                // unit based comparisons (true)\n+                Arguments.of(powerItem, \"> 0.5 W\", states, QuantityType.valueOf(\"4 W\"), true),\n+                Arguments.of(powerItem, \"> 500 mW\", states, QuantityType.valueOf(\"4 W\"), true),\n+                Arguments.of(powerItem, \"> 0.0005 kW\", states, QuantityType.valueOf(\"4 W\"), true),\n+\n+                // unit based comparisons (false)\n+                Arguments.of(powerItem, \"> 0.5 W\", states, QuantityType.valueOf(\"0.4 W\"), false),\n+                Arguments.of(powerItem, \"> 500 mW\", states, QuantityType.valueOf(\"0.4 W\"), false),\n+                Arguments.of(powerItem, \"> 0.0005 kW\", states, QuantityType.valueOf(\"0.4 W\"), false),\n+\n+                // percent comparisons (true)\n+                Arguments.of(powerItem, \"> 30 %\", states, QuantityType.valueOf(\"4 W\"), true),\n+\n+                // percent comparisons (false)\n+                Arguments.of(powerItem, \"> 310 %\", states, QuantityType.valueOf(\"4 W\"), false) //\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testMixedStates(Item item, String condition, List<State> states, State input, boolean expected)\n+            throws ItemNotFoundException {\n+        internalTestFunctions(item, condition, states, input, expected);\n+    }\n+\n+    /**\n+     * A {@link UnitProvider} that provides Units.MIRED\n+     */\n+    protected static class MirekUnitProvider implements UnitProvider {\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public <T extends Quantity<T>> Unit<T> getUnit(Class<T> dimension) throws IllegalArgumentException {\n+            return (Unit<T>) Units.MIRED;\n+        }\n+\n+        @Override\n+        public SystemOfUnits getMeasurementSystem() {\n+            return SIUnits.getInstance();\n+        }\n+\n+        @Override\n+        public Collection<Class<? extends Quantity<?>>> getAllDimensions() {\n+            return Set.of();\n+        }\n+    }\n+\n+    public static Stream<Arguments> testColorTemperatureValues() {\n+        NumberItem kelvinItem = new NumberItem(\"Number:Temperature\", \"kelvinItem\", UNIT_PROVIDER);\n+        NumberItem mirekItem = new NumberItem(\"Number:Temperature\", \"mirekItem\", new MirekUnitProvider());\n+\n+        List<State> states = List.of( //\n+                QuantityType.valueOf(500, Units.MIRED), //\n+                QuantityType.valueOf(2000 + (1 * 100), Units.KELVIN), //\n+                QuantityType.valueOf(1726.85 + (2 * 100), SIUnits.CELSIUS), //\n+                QuantityType.valueOf(3140.33 + (3 * 180), ImperialUnits.FAHRENHEIT));\n+\n+        return Stream.of( //\n+                // kelvin based item\n+                Arguments.of(kelvinItem, \"== $MIN\", states, QuantityType.valueOf(\"2000 K\"), true),\n+                Arguments.of(kelvinItem, \"== $MAX\", states, QuantityType.valueOf(\"2300 K\"), true),\n+                Arguments.of(kelvinItem, \"== $MIN\", states, QuantityType.valueOf(500, Units.MIRED), true),\n+                Arguments.of(kelvinItem, \"== $MIN\", states, QuantityType.valueOf(1726.85, SIUnits.CELSIUS), true),\n+                Arguments.of(kelvinItem, \"== $MIN\", states, QuantityType.valueOf(3140.33, ImperialUnits.FAHRENHEIT),\n+                        true),\n+\n+                // kelvin based item average (note: actual is 2150)\n+                Arguments.of(kelvinItem, \"<= $AVG\", states, QuantityType.valueOf(\"2149 K\"), true),\n+                Arguments.of(kelvinItem, \">= $AVG\", states, QuantityType.valueOf(\"2151 K\"), true),\n+\n+                // mirek based item (note: min and max are reversed\n+                Arguments.of(mirekItem, \"== $MAX\", states, QuantityType.valueOf(\"2000 K\"), true),\n+                Arguments.of(mirekItem, \"== $MIN\", states, QuantityType.valueOf(\"2300 K\"), true),\n+                Arguments.of(mirekItem, \"== $MAX\", states, QuantityType.valueOf(500, Units.MIRED), true),\n+                Arguments.of(mirekItem, \"== $MAX\", states, QuantityType.valueOf(1726.85, SIUnits.CELSIUS), true),\n+                Arguments.of(mirekItem, \"== $MAX\", states, QuantityType.valueOf(3140.33, ImperialUnits.FAHRENHEIT),\n+                        true),\n+\n+                // mirek based item average (note: actual is 466.37)\n+                Arguments.of(mirekItem, \"<= $AVG\", states, QuantityType.valueOf(466, Units.MIRED), true),\n+                Arguments.of(mirekItem, \">= $AVG\", states, QuantityType.valueOf(468, Units.MIRED), true) //\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testColorTemperatureValues(Item item, String condition, List<State> states, State input,\n+            boolean expected) throws ItemNotFoundException {\n+        internalTestFunctions(item, condition, states, input, expected);\n+    }\n+\n+    public static Stream<Arguments> testTimeValues() {\n+        NumberItem timeItem = new NumberItem(\"Number:Time\", \"timeItem\", UNIT_PROVIDER);\n+\n+        QuantityType<Time> microSec = QuantityType.valueOf(1, MetricPrefix.MICRO(Units.SECOND));\n+        QuantityType<Time> milliSec = QuantityType.valueOf(1, MetricPrefix.MILLI(Units.SECOND));\n+        QuantityType<Time> second = QuantityType.valueOf(1000, MetricPrefix.MILLI(Units.SECOND));\n+        QuantityType<Time> minute = QuantityType.valueOf(60000, MetricPrefix.MILLI(Units.SECOND));\n+        QuantityType<Time> hour = QuantityType.valueOf(3600000, MetricPrefix.MILLI(Units.SECOND));\n+\n+        return Stream.of( //\n+                Arguments.of(timeItem, \"== $MIN\", List.of(second, minute), QuantityType.valueOf(\"1 s\"), true),\n+                Arguments.of(timeItem, \"== $MAX\", List.of(second, minute), QuantityType.valueOf(\"1 min\"), true), //\n+\n+                Arguments.of(timeItem, \"== $MIN\", List.of(microSec, milliSec), QuantityType.valueOf(\"1 µs\"), true),\n+                Arguments.of(timeItem, \"== $MAX\", List.of(microSec, milliSec), QuantityType.valueOf(\"1 ms\"), true), //\n+\n+                Arguments.of(timeItem, \"== $MIN\", List.of(microSec, hour), QuantityType.valueOf(\"1 µs\"), true),\n+                Arguments.of(timeItem, \"== $MAX\", List.of(microSec, hour), QuantityType.valueOf(\"1 h\"), true) //\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testTimeValues(Item item, String condition, List<State> states, State input, boolean expected)\n+            throws ItemNotFoundException {\n+        internalTestFunctions(item, condition, states, input, expected);\n+    }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18069",
    "pr_id": 18069,
    "issue_id": 12474,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[wemo] WemoHandlerOSGiTest unstable\nThis test failed in: https://github.com/openhab/openhab-addons/runs/5533265679\r\n\r\n```\r\nTEST org.openhab.binding.wemo.internal.handler.test.WemoHandlerOSGiTest#assertThatThingHandlesOnOffCommandCorrectly() <<< ERROR: \r\nExpected: is <UNKNOWN>\r\n     but: was <OFFLINE>\r\njava.lang.AssertionError: \r\nExpected: is <UNKNOWN>\r\n     but: was <OFFLINE>\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\r\n\tat org.openhab.binding.wemo.internal.handler.test.WemoHandlerOSGiTest.lambda$0(WemoHandlerOSGiTest.java:78)\r\n\tat org.openhab.core.test.java.JavaTest.waitForAssert(JavaTest.java:152)\r\n\tat org.openhab.core.test.java.JavaTest.waitForAssert(JavaTest.java:120)\r\n\tat org.openhab.core.test.java.JavaTest.waitForAssert(JavaTest.java:73)\r\n\tat org.openhab.binding.wemo.internal.handler.test.WemoHandlerOSGiTest.assertThatThingHandlesOnOffCommandCorrectly(WemoHandlerOSGiTest.java:77)\r\n```",
    "issue_word_count": 117,
    "test_files_count": 1,
    "non_test_files_count": 0,
    "pr_changed_files": [
      "itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java"
    ],
    "base_commit": "d36b2a8d825da2410e6c4a7bb293b86986a01c7d",
    "head_commit": "d0e5a915fe701871d977bce351f54346e1850c6c",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18069",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18069",
    "dockerfile": "",
    "pr_merged_at": "2025-01-09T11:07:01.000Z",
    "patch": "",
    "test_patch": "diff --git a/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java b/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java\nindex ad70658c02959..013b3c688eafa 100644\n--- a/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java\n+++ b/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java\n@@ -107,6 +107,7 @@ public void assertThatThingHandlesOnOffCommandCorrectly()\n     }\n \n     @Test\n+    @Disabled(\"https://github.com/openhab/openhab-addons/issues/12474\")\n     public void assertThatThingHandlesREFRESHCommand()\n             throws MalformedURLException, URISyntaxException, ValidationException, IOException {\n         Command command = RefreshType.REFRESH;\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18068",
    "pr_id": 18068,
    "issue_id": 12667,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[mqtt.homie] HomieImplementationTest unstable\nhttps://github.com/openhab/openhab-addons/runs/6230228701?check_suite_focus=true\r\nhttps://github.com/openhab/openhab-addons/runs/6231105334?check_suite_focus=true\r\n\r\n```\r\n2022-04-29T15:51:48.5276685Z TEST org.openhab.binding.mqtt.homie.HomieImplementationTest#parseHomieTree() <<< ERROR: \r\n2022-04-29T15:51:48.5276771Z Expected: is \"false\"\r\n2022-04-29T15:51:48.5276852Z      but: was null\r\n2022-04-29T15:51:48.5276954Z java.lang.AssertionError: \r\n2022-04-29T15:51:48.5277038Z Expected: is \"false\"\r\n2022-04-29T15:51:48.5277113Z      but: was null\r\n2022-04-29T15:51:48.5277292Z \tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n2022-04-29T15:51:48.5277451Z \tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\r\n2022-04-29T15:51:48.5277752Z \tat org.openhab.binding.mqtt.homie.HomieImplementationTest.parseHomieTree(HomieImplementationTest.java:303)\r\n2022-04-29T15:51:48.5278027Z \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n2022-04-29T15:51:48.5278298Z \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n2022-04-29T15:51:48.5278577Z \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n2022-04-29T15:51:48.5278733Z \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n2022-04-29T15:51:48.5278984Z \tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)\r\n2022-04-29T15:51:48.5279228Z \tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n2022-04-29T15:51:48.5279554Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n2022-04-29T15:51:48.5279800Z \tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\r\n2022-04-29T15:51:48.5280108Z \tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\r\n2022-04-29T15:51:48.5280393Z \tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\r\n2022-04-29T15:51:48.5280695Z \tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\r\n2022-04-29T15:51:48.5280952Z \tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\r\n2022-04-29T15:51:48.5281282Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n2022-04-29T15:51:48.5281587Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n2022-04-29T15:51:48.5281919Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n2022-04-29T15:51:48.5282219Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n2022-04-29T15:51:48.5282464Z \tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\r\n2022-04-29T15:51:48.5282706Z \tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\r\n2022-04-29T15:51:48.5283027Z \tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)\r\n2022-04-29T15:51:48.5283359Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-04-29T15:51:48.5283696Z \tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)\r\n2022-04-29T15:51:48.5283996Z \tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)\r\n2022-04-29T15:51:48.5284290Z \tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)\r\n2022-04-29T15:51:48.5284581Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n2022-04-29T15:51:48.5284877Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-04-29T15:51:48.5285163Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n2022-04-29T15:51:48.5285380Z \tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n2022-04-29T15:51:48.5285664Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n2022-04-29T15:51:48.5285956Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-04-29T15:51:48.5286257Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n2022-04-29T15:51:48.5286571Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n2022-04-29T15:51:48.5286724Z \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n2022-04-29T15:51:48.5287203Z \tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n2022-04-29T15:51:48.5287496Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n2022-04-29T15:51:48.5287801Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-04-29T15:51:48.5288088Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n2022-04-29T15:51:48.5288307Z \tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n2022-04-29T15:51:48.5288594Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n2022-04-29T15:51:48.5288895Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-04-29T15:51:48.5289198Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n2022-04-29T15:51:48.5289460Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n2022-04-29T15:51:48.5289613Z \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n2022-04-29T15:51:48.5290075Z \tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n2022-04-29T15:51:48.5290361Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n2022-04-29T15:51:48.5290651Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-04-29T15:51:48.5290930Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n2022-04-29T15:51:48.5291149Z \tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n2022-04-29T15:51:48.5291430Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n2022-04-29T15:51:48.5291718Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-04-29T15:51:48.5292063Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n2022-04-29T15:51:48.5292321Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n2022-04-29T15:51:48.5292775Z \tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n2022-04-29T15:51:48.5293112Z \tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n2022-04-29T15:51:48.5293435Z \tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n2022-04-29T15:51:48.5293662Z \tat aQute.tester.bundle.engine.BundleDescriptor.executeChild(BundleDescriptor.java:49)\r\n2022-04-29T15:51:48.5293869Z \tat aQute.tester.bundle.engine.BundleEngine.lambda$executeBundle$7(BundleEngine.java:120)\r\n2022-04-29T15:51:48.5294050Z \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n2022-04-29T15:51:48.5294243Z \tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n2022-04-29T15:51:48.5294407Z \tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\r\n2022-04-29T15:51:48.5294625Z \tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)\r\n2022-04-29T15:51:48.5294825Z \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n2022-04-29T15:51:48.5295043Z \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n2022-04-29T15:51:48.5295288Z \tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n2022-04-29T15:51:48.5295492Z \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n2022-04-29T15:51:48.5295682Z \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n2022-04-29T15:51:48.5295885Z \tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n2022-04-29T15:51:48.5296102Z \tat aQute.tester.bundle.engine.BundleEngine.executeBundle(BundleEngine.java:120)\r\n2022-04-29T15:51:48.5296309Z \tat aQute.tester.bundle.engine.BundleEngine.lambda$executeBundle$8(BundleEngine.java:133)\r\n2022-04-29T15:51:48.5296485Z \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n2022-04-29T15:51:48.5296680Z \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n2022-04-29T15:51:48.5296870Z \tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n2022-04-29T15:51:48.5297032Z \tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\r\n2022-04-29T15:51:48.5297244Z \tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)\r\n2022-04-29T15:51:48.5297447Z \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n2022-04-29T15:51:48.5297665Z \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n2022-04-29T15:51:48.5297861Z \tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n2022-04-29T15:51:48.5298059Z \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n2022-04-29T15:51:48.5298261Z \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n2022-04-29T15:51:48.5298466Z \tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n2022-04-29T15:51:48.5298682Z \tat aQute.tester.bundle.engine.BundleEngine.executeBundle(BundleEngine.java:133)\r\n2022-04-29T15:51:48.5298890Z \tat aQute.tester.bundle.engine.BundleEngine.lambda$execute$5(BundleEngine.java:100)\r\n2022-04-29T15:51:48.5299072Z \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n2022-04-29T15:51:48.5299259Z \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n2022-04-29T15:51:48.5299482Z \tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n2022-04-29T15:51:48.5299651Z \tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\r\n2022-04-29T15:51:48.5299866Z \tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)\r\n2022-04-29T15:51:48.5300067Z \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n2022-04-29T15:51:48.5300284Z \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n2022-04-29T15:51:48.5300482Z \tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n2022-04-29T15:51:48.5300681Z \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n2022-04-29T15:51:48.5300880Z \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n2022-04-29T15:51:48.5301079Z \tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n2022-04-29T15:51:48.5301274Z \tat aQute.tester.bundle.engine.BundleEngine.execute(BundleEngine.java:100)\r\n2022-04-29T15:51:48.5301571Z \tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)\r\n2022-04-29T15:51:48.5301869Z \tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\r\n2022-04-29T15:51:48.5302172Z \tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\r\n2022-04-29T15:51:48.5302616Z \tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\r\n2022-04-29T15:51:48.5302908Z \tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\r\n2022-04-29T15:51:48.5303131Z \tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)\r\n2022-04-29T15:51:48.5303352Z \tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)\r\n2022-04-29T15:51:48.5303635Z \tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)\r\n2022-04-29T15:51:48.5303928Z \tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)\r\n2022-04-29T15:51:48.5304110Z \tat aQute.tester.junit.platform.Activator.test(Activator.java:439)\r\n2022-04-29T15:51:48.5304288Z \tat aQute.tester.junit.platform.Activator.automatic(Activator.java:344)\r\n2022-04-29T15:51:48.5304464Z \tat aQute.tester.junit.platform.Activator.run(Activator.java:216)\r\n2022-04-29T15:51:48.5304656Z \tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n2022-04-29T15:51:48.5304796Z \tat aQute.launcher.Launcher.launch(Launcher.java:450)\r\n2022-04-29T15:51:48.5304924Z \tat aQute.launcher.Launcher.run(Launcher.java:184)\r\n2022-04-29T15:51:48.5305054Z \tat aQute.launcher.Launcher.main(Launcher.java:160)\r\n2022-04-29T15:51:48.5305285Z \tat aQute.launcher.pre.EmbeddedLauncher.executeWithRunPath(EmbeddedLauncher.java:170)\r\n2022-04-29T15:51:48.5305507Z \tat aQute.launcher.pre.EmbeddedLauncher.findAndExecute(EmbeddedLauncher.java:135)\r\n2022-04-29T15:51:48.5305704Z \tat aQute.launcher.pre.EmbeddedLauncher.main(EmbeddedLauncher.java:52)\r\n```",
    "issue_word_count": 2094,
    "test_files_count": 1,
    "non_test_files_count": 0,
    "pr_changed_files": [
      "itests/org.openhab.binding.mqtt.homie.tests/src/main/java/org/openhab/binding/mqtt/homie/HomieImplementationTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.binding.mqtt.homie.tests/src/main/java/org/openhab/binding/mqtt/homie/HomieImplementationTest.java"
    ],
    "base_commit": "d36b2a8d825da2410e6c4a7bb293b86986a01c7d",
    "head_commit": "35c9311856e1c309cb2853c32938ff6d5d17d973",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18068",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18068",
    "dockerfile": "",
    "pr_merged_at": "2025-01-09T11:06:31.000Z",
    "patch": "",
    "test_patch": "diff --git a/itests/org.openhab.binding.mqtt.homie.tests/src/main/java/org/openhab/binding/mqtt/homie/HomieImplementationTest.java b/itests/org.openhab.binding.mqtt.homie.tests/src/main/java/org/openhab/binding/mqtt/homie/HomieImplementationTest.java\nindex 6ebd0d72a8a93..bc40af56e0170 100644\n--- a/itests/org.openhab.binding.mqtt.homie.tests/src/main/java/org/openhab/binding/mqtt/homie/HomieImplementationTest.java\n+++ b/itests/org.openhab.binding.mqtt.homie.tests/src/main/java/org/openhab/binding/mqtt/homie/HomieImplementationTest.java\n@@ -165,6 +165,7 @@ public void retrieveAllTopics() throws Exception {\n                 \"Connection \" + homieConnection.getClientId() + \" not retrieving all topics \");\n     }\n \n+    @Disabled(\"https://github.com/openhab/openhab-addons/issues/12667\")\n     @Test\n     public void retrieveOneAttribute() throws Exception {\n         WaitForTopicValue watcher = new WaitForTopicValue(homieConnection, DEVICE_TOPIC + \"/$homie\");\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-18016",
    "pr_id": 18016,
    "issue_id": 17959,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[solarman] \"Add Channel\" WebUI not loading\nHello all,\r\n\r\nsince the solarman addon for \"Deye-SUN-2000G3-EU - deye_4mppt\" lacks the individual daily and total production metrics per channel (since it has been officially included in OpenHAB 4.3.0), I tried to add those channels back manually as suggested here:\r\nhttps://github.com/catalinsanda/org.openhab.binding.solarman/issues/37#issuecomment-2557851723\r\n\r\nThe problem is, that the \"Add Channel\" WebUI panel gets stuck loading:\r\n![397886827-8da58553-bead-4dd5-870a-51eb0a3b06bb](https://github.com/user-attachments/assets/45235741-ca9e-43cd-8167-209edd613ff8)\r\n\r\nCould someone please take a look what prevents the \"Add Channel\" WebUI from loading?\r\n\r\nThanks a lot,\r\nBjoern",
    "issue_word_count": 109,
    "test_files_count": 1,
    "non_test_files_count": 9,
    "pr_changed_files": [
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerMode.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocolFactory.java",
      "bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/datetime-channel-config.xml",
      "bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/dynamic-channel-config.xml",
      "bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/number-channel-config.xml",
      "bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/string-channel-config.xml",
      "bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/i18n/solarman.properties",
      "bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/channels.xml",
      "bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml",
      "bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/DefinitionParserTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/DefinitionParserTest.java"
    ],
    "base_commit": "6978b9978b337454b815b48937a6b7c294985bd3",
    "head_commit": "b7ec8c9f4b683df8688c68af3e8e0ce352c8dfaa",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/18016",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/18016",
    "dockerfile": "",
    "pr_merged_at": "2025-01-04T20:05:43.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerMode.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerMode.java\nindex 85e6008de98ab..e86f7ea7a6e80 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerMode.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerMode.java\n@@ -12,9 +12,12 @@\n  */\n package org.openhab.binding.solarman.internal;\n \n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n /**\n  * @author Peter Kretz - Initial contribution\n  */\n+@NonNullByDefault\n public enum SolarmanLoggerMode {\n     V5MODBUS,\n     RAWMODBUS\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocolFactory.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocolFactory.java\nindex addeb4cea9e4a..1ec92984a6e0e 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocolFactory.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocolFactory.java\n@@ -16,7 +16,7 @@\n import org.openhab.binding.solarman.internal.SolarmanLoggerConfiguration;\n \n /**\n- * @author Peter Kretz - Added RAW Modbus for LAN Stick\n+ * @author Peter Kretz - Initial contribution\n  */\n @NonNullByDefault\n public class SolarmanProtocolFactory {\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/datetime-channel-config.xml b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/datetime-channel-config.xml\ndeleted file mode 100644\nindex 435e457bf8e4e..0000000000000\n--- a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/datetime-channel-config.xml\n+++ /dev/null\n@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<config-description:config-descriptions\n-\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-\txmlns:config-description=\"https://openhab.org/schemas/config-description/v1.0.0\"\n-\txsi:schemaLocation=\"https://openhab.org/schemas/config-description/v1.0.0 https://openhab.org/schemas/config-description-1.0.0.xsd\">\n-\n-\t<config-description uri=\"channel-type-config:solarman:datetime-channel\">\n-\t\t<parameter name=\"uom\" type=\"text\">\n-\t\t\t<label>Unit of Measurement</label>\n-\t\t\t<description>The unit of measurement used for this channel</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t\t<parameter name=\"scale\" type=\"decimal\">\n-\t\t\t<label>Scale</label>\n-\t\t\t<description>The scaling factor, the final value will be scaled by this</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t\t<parameter name=\"rule\" type=\"integer\">\n-\t\t\t<label>Rule</label>\n-\t\t\t<description>The type of measurement. See explanation for possible values</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t\t<options>\n-\t\t\t\t<option value=\"1\">Unsigned Short</option>\n-\t\t\t\t<option value=\"2\">Signed Short</option>\n-\t\t\t\t<option value=\"3\">Unsigned Integer</option>\n-\t\t\t\t<option value=\"4\">Signed Integer</option>\n-\t\t\t\t<option value=\"5\">Text</option>\n-\t\t\t\t<option value=\"6\">Bytes</option>\n-\t\t\t\t<option value=\"7\">Version</option>\n-\t\t\t\t<option value=\"8\">Date Time</option>\n-\t\t\t\t<option value=\"9\">Time</option>\n-\t\t\t</options>\n-\t\t</parameter>\n-\t\t<parameter name=\"offset\" type=\"decimal\">\n-\t\t\t<label>Offset</label>\n-\t\t\t<description>The offset subtracted from the measurement</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t\t<parameter name=\"registers\" type=\"text\">\n-\t\t\t<label>Registers</label>\n-\t\t\t<description>Comma separated list of registers to read for the measurement</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t</config-description>\n-\n-</config-description:config-descriptions>\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/dynamic-channel-config.xml b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/dynamic-channel-config.xml\nindex 326437b10c8fb..2d5dd0734d00a 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/dynamic-channel-config.xml\n+++ b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/dynamic-channel-config.xml\n@@ -8,38 +8,38 @@\n \t\t<parameter name=\"uom\" type=\"text\">\n \t\t\t<label>Unit of Measurement</label>\n \t\t\t<description>The unit of measurement used for this channel</description>\n-\t\t\t<advanced>true</advanced>\n+\t\t\t<advanced>false</advanced>\n \t\t</parameter>\n \t\t<parameter name=\"scale\" type=\"decimal\">\n \t\t\t<label>Scale</label>\n \t\t\t<description>The scaling factor, the final value will be scaled by this</description>\n-\t\t\t<advanced>true</advanced>\n+\t\t\t<advanced>false</advanced>\n \t\t</parameter>\n-\t\t<parameter name=\"rule\" type=\"integer\">\n+\t\t<parameter name=\"rule\" type=\"integer\" required=\"true\">\n \t\t\t<label>Rule</label>\n \t\t\t<description>The type of measurement. See explanation for possible values</description>\n-\t\t\t<advanced>true</advanced>\n+\t\t\t<advanced>false</advanced>\n \t\t\t<options>\n-\t\t\t\t<option value=\"1\">Unsigned Short</option>\n-\t\t\t\t<option value=\"2\">Signed Short</option>\n-\t\t\t\t<option value=\"3\">Unsigned Integer</option>\n-\t\t\t\t<option value=\"4\">Signed Integer</option>\n-\t\t\t\t<option value=\"5\">Text</option>\n-\t\t\t\t<option value=\"6\">Bytes</option>\n-\t\t\t\t<option value=\"7\">Version</option>\n-\t\t\t\t<option value=\"8\">Date Time</option>\n-\t\t\t\t<option value=\"9\">Time</option>\n+\t\t\t\t<option value=\"1\">Unsigned Short (Rule 1)</option>\n+\t\t\t\t<option value=\"2\">Signed Short (Rule 2)</option>\n+\t\t\t\t<option value=\"3\">Unsigned Integer (Rule 3)</option>\n+\t\t\t\t<option value=\"4\">Signed Integer (Rule 4)</option>\n+\t\t\t\t<option value=\"5\">Text (Rule 5)</option>\n+\t\t\t\t<option value=\"6\">Bytes (Rule 6)</option>\n+\t\t\t\t<option value=\"7\">Version (Rule 7)</option>\n+\t\t\t\t<option value=\"8\">Date Time (Rule 8)</option>\n+\t\t\t\t<option value=\"9\">Time (Rule 9)</option>\n \t\t\t</options>\n \t\t</parameter>\n \t\t<parameter name=\"offset\" type=\"decimal\">\n \t\t\t<label>Offset</label>\n \t\t\t<description>The offset subtracted from the measurement</description>\n-\t\t\t<advanced>true</advanced>\n+\t\t\t<advanced>false</advanced>\n \t\t</parameter>\n-\t\t<parameter name=\"registers\" type=\"text\">\n+\t\t<parameter name=\"registers\" type=\"text\" required=\"true\">\n \t\t\t<label>Registers</label>\n \t\t\t<description>Comma separated list of registers to read for the measurement</description>\n-\t\t\t<advanced>true</advanced>\n+\t\t\t<advanced>false</advanced>\n \t\t</parameter>\n \t</config-description>\n \n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/number-channel-config.xml b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/number-channel-config.xml\ndeleted file mode 100644\nindex 593853d90a577..0000000000000\n--- a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/number-channel-config.xml\n+++ /dev/null\n@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<config-description:config-descriptions\n-\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-\txmlns:config-description=\"https://openhab.org/schemas/config-description/v1.0.0\"\n-\txsi:schemaLocation=\"https://openhab.org/schemas/config-description/v1.0.0 https://openhab.org/schemas/config-description-1.0.0.xsd\">\n-\n-\t<config-description uri=\"channel-type-config:solarman:number-channel\">\n-\t\t<parameter name=\"uom\" type=\"text\">\n-\t\t\t<label>Unit of Measurement</label>\n-\t\t\t<description>The unit of measurement used for this channel</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t\t<parameter name=\"scale\" type=\"decimal\">\n-\t\t\t<label>Scale</label>\n-\t\t\t<description>The scaling factor, the final value will be scaled by this</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t\t<parameter name=\"rule\" type=\"integer\">\n-\t\t\t<label>Rule</label>\n-\t\t\t<description>The type of measurement. See explanation for possible values</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t\t<options>\n-\t\t\t\t<option value=\"1\">Unsigned Short</option>\n-\t\t\t\t<option value=\"2\">Signed Short</option>\n-\t\t\t\t<option value=\"3\">Unsigned Integer</option>\n-\t\t\t\t<option value=\"4\">Signed Integer</option>\n-\t\t\t\t<option value=\"5\">Text</option>\n-\t\t\t\t<option value=\"6\">Bytes</option>\n-\t\t\t\t<option value=\"7\">Version</option>\n-\t\t\t\t<option value=\"8\">Date Time</option>\n-\t\t\t\t<option value=\"9\">Time</option>\n-\t\t\t</options>\n-\t\t</parameter>\n-\t\t<parameter name=\"offset\" type=\"decimal\">\n-\t\t\t<label>Offset</label>\n-\t\t\t<description>The offset subtracted from the measurement</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t\t<parameter name=\"registers\" type=\"text\">\n-\t\t\t<label>Registers</label>\n-\t\t\t<description>Comma separated list of registers to read for the measurement</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t</config-description>\n-\n-</config-description:config-descriptions>\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/string-channel-config.xml b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/string-channel-config.xml\ndeleted file mode 100644\nindex 92ba342efe1c8..0000000000000\n--- a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/config/string-channel-config.xml\n+++ /dev/null\n@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<config-description:config-descriptions\n-\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-\txmlns:config-description=\"https://openhab.org/schemas/config-description/v1.0.0\"\n-\txsi:schemaLocation=\"https://openhab.org/schemas/config-description/v1.0.0 https://openhab.org/schemas/config-description-1.0.0.xsd\">\n-\n-\t<config-description uri=\"channel-type-config:solarman:string-channel\">\n-\t\t<parameter name=\"uom\" type=\"text\">\n-\t\t\t<label>Unit of Measurement</label>\n-\t\t\t<description>The unit of measurement used for this channel</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t\t<parameter name=\"scale\" type=\"decimal\">\n-\t\t\t<label>Scale</label>\n-\t\t\t<description>The scaling factor, the final value will be scaled by this</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t\t<parameter name=\"rule\" type=\"integer\">\n-\t\t\t<label>Rule</label>\n-\t\t\t<description>The type of measurement. See explanation for possible values</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t\t<options>\n-\t\t\t\t<option value=\"1\">Unsigned Short</option>\n-\t\t\t\t<option value=\"2\">Signed Short</option>\n-\t\t\t\t<option value=\"3\">Unsigned Integer</option>\n-\t\t\t\t<option value=\"4\">Signed Integer</option>\n-\t\t\t\t<option value=\"5\">Text</option>\n-\t\t\t\t<option value=\"6\">Bytes</option>\n-\t\t\t\t<option value=\"7\">Version</option>\n-\t\t\t\t<option value=\"8\">Date Time</option>\n-\t\t\t\t<option value=\"9\">Time</option>\n-\t\t\t</options>\n-\t\t</parameter>\n-\t\t<parameter name=\"offset\" type=\"decimal\">\n-\t\t\t<label>Offset</label>\n-\t\t\t<description>The offset subtracted from the measurement</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t\t<parameter name=\"registers\" type=\"text\">\n-\t\t\t<label>Registers</label>\n-\t\t\t<description>Comma separated list of registers to read for the measurement</description>\n-\t\t\t<advanced>true</advanced>\n-\t\t</parameter>\n-\t</config-description>\n-\n-</config-description:config-descriptions>\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/i18n/solarman.properties b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/i18n/solarman.properties\nindex 58f7dfd6e4105..4a10aee7f2d62 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/i18n/solarman.properties\n+++ b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/i18n/solarman.properties\n@@ -27,7 +27,10 @@ thing-type.config.solarman.logger.inverterType.option.sofar_hyd3k-6k-es = SOFAR\n thing-type.config.solarman.logger.inverterType.option.sofar_lsw3 = SOFAR Inverters (sofar_lsw3)\n thing-type.config.solarman.logger.inverterType.option.sofar_wifikit = SOFAR WifiKit (sofar_wifikit)\n thing-type.config.solarman.logger.inverterType.option.solis_1p8k-5g = SOLIS 1P8K-5G (solis_1p8k-5g)\n+thing-type.config.solarman.logger.inverterType.option.solis_3p-4g = SOLIS Three-Phase Inverter 4G Series (solis_3p-4g)\n+thing-type.config.solarman.logger.inverterType.option.solis_s6-gr1p = SOLIS Single-Phase Inverter S6-GR1P (solis_s6-gr1p)\n thing-type.config.solarman.logger.inverterType.option.solis_hybrid = SOLIS Hybrid Inverter (solis_hybrid)\n+thing-type.config.solarman.logger.inverterType.option.hyd-zss-hp-3k-6k = ZCS Azzurro Hybrid HP 3K-6K Inverters (hyd-zss-hp-3k-6k)\n thing-type.config.solarman.logger.inverterType.option.zcs_azzurro-ktl-v3 = ZCS Azzurro KTL-V3 Inverters (zcs_azzurro-ktl-v3)\n thing-type.config.solarman.logger.port.label = Port\n thing-type.config.solarman.logger.port.description = Port of the Solarman logger (default 8899).\n@@ -35,13 +38,43 @@ thing-type.config.solarman.logger.refreshInterval.label = Refresh Interval\n thing-type.config.solarman.logger.refreshInterval.description = Interval to query the logger (default 60).\n thing-type.config.solarman.logger.serialNumber.label = Serial Number\n thing-type.config.solarman.logger.serialNumber.description = Serial number of the Solarman logger.\n+thing-type.config.solarman.logger.solarmanLoggerMode.label = Logger Mode\n+thing-type.config.solarman.logger.solarmanLoggerMode.description = Use RAW Modbus for LAN Stick LSE-3 and V5 NODBUS for most Wifi Sticks. If your Wifi stick uses Raw Modbus choose RAW. If you do not use this advanced option, V5 MODBUS will be the default.\n+thing-type.config.solarman.logger.solarmanLoggerMode.option.V5MODBUS = V5 Modbus\n+thing-type.config.solarman.logger.solarmanLoggerMode.option.RAWMODBUS = RAW Modbus\n \n # channel types\n \n channel-type.solarman.datetime.label = Datetime Value\n+channel-type.solarman.datetime.description = Channel used to represent a datetime value\n channel-type.solarman.dynamic.label = Dynamic Channel\n+channel-type.solarman.dynamic.description = Channel used to represent a dynamic value\n channel-type.solarman.number.label = Number Value\n+channel-type.solarman.number.description = Channel used to represent a numeric value\n channel-type.solarman.string.label = Text Value\n+channel-type.solarman.string.description = Channel used to represent a string value\n+\n+# channel types config\n+\n+channel-type-config.config.solarman.dynamic-channel.offset.label = Offset\n+channel-type-config.config.solarman.dynamic-channel.offset.description = The offset subtracted from the measurement\n+channel-type-config.config.solarman.dynamic-channel.registers.label = Registers\n+channel-type-config.config.solarman.dynamic-channel.registers.description = Comma separated list of registers to read for the measurement\n+channel-type-config.config.solarman.dynamic-channel.rule.label = Rule\n+channel-type-config.config.solarman.dynamic-channel.rule.description = The type of measurement. See explanation for possible values\n+channel-type-config.config.solarman.dynamic-channel.rule.option.1 = Unsigned Short (Rule 1)\n+channel-type-config.config.solarman.dynamic-channel.rule.option.2 = Signed Short (Rule 2)\n+channel-type-config.config.solarman.dynamic-channel.rule.option.3 = Unsigned Integer (Rule 3)\n+channel-type-config.config.solarman.dynamic-channel.rule.option.4 = Signed Integer (Rule 4)\n+channel-type-config.config.solarman.dynamic-channel.rule.option.5 = Text (Rule 5)\n+channel-type-config.config.solarman.dynamic-channel.rule.option.6 = Bytes (Rule 6)\n+channel-type-config.config.solarman.dynamic-channel.rule.option.7 = Version (Rule 7)\n+channel-type-config.config.solarman.dynamic-channel.rule.option.8 = Date Time (Rule 8)\n+channel-type-config.config.solarman.dynamic-channel.rule.option.9 = Time (Rule 9)\n+channel-type-config.config.solarman.dynamic-channel.scale.label = Scale\n+channel-type-config.config.solarman.dynamic-channel.scale.description = The scaling factor, the final value will be scaled by this\n+channel-type-config.config.solarman.dynamic-channel.uom.label = Unit of Measurement\n+channel-type-config.config.solarman.dynamic-channel.uom.description = The unit of measurement used for this channel\n \n # channel types config\n \n@@ -64,25 +97,6 @@ channel-type-config.config.solarman.datetime-channel.scale.label = Scale\n channel-type-config.config.solarman.datetime-channel.scale.description = The scaling factor, the final value will be scaled by this\n channel-type-config.config.solarman.datetime-channel.uom.label = Unit of Measurement\n channel-type-config.config.solarman.datetime-channel.uom.description = The unit of measurement used for this channel\n-channel-type-config.config.solarman.dynamic-channel.offset.label = Offset\n-channel-type-config.config.solarman.dynamic-channel.offset.description = The offset subtracted from the measurement\n-channel-type-config.config.solarman.dynamic-channel.registers.label = Registers\n-channel-type-config.config.solarman.dynamic-channel.registers.description = Comma separated list of registers to read for the measurement\n-channel-type-config.config.solarman.dynamic-channel.rule.label = Rule\n-channel-type-config.config.solarman.dynamic-channel.rule.description = The type of measurement. See explanation for possible values\n-channel-type-config.config.solarman.dynamic-channel.rule.option.1 = Unsigned Short\n-channel-type-config.config.solarman.dynamic-channel.rule.option.2 = Signed Short\n-channel-type-config.config.solarman.dynamic-channel.rule.option.3 = Unsigned Integer\n-channel-type-config.config.solarman.dynamic-channel.rule.option.4 = Signed Integer\n-channel-type-config.config.solarman.dynamic-channel.rule.option.5 = Text\n-channel-type-config.config.solarman.dynamic-channel.rule.option.6 = Bytes\n-channel-type-config.config.solarman.dynamic-channel.rule.option.7 = Version\n-channel-type-config.config.solarman.dynamic-channel.rule.option.8 = Date Time\n-channel-type-config.config.solarman.dynamic-channel.rule.option.9 = Time\n-channel-type-config.config.solarman.dynamic-channel.scale.label = Scale\n-channel-type-config.config.solarman.dynamic-channel.scale.description = The scaling factor, the final value will be scaled by this\n-channel-type-config.config.solarman.dynamic-channel.uom.label = Unit of Measurement\n-channel-type-config.config.solarman.dynamic-channel.uom.description = The unit of measurement used for this channel\n channel-type-config.config.solarman.number-channel.offset.label = Offset\n channel-type-config.config.solarman.number-channel.offset.description = The offset subtracted from the measurement\n channel-type-config.config.solarman.number-channel.registers.label = Registers\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/channels.xml b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/channels.xml\nindex b8e1d752fe75f..7a2af4f270174 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/channels.xml\n+++ b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/channels.xml\n@@ -7,24 +7,28 @@\n \t<channel-type id=\"string\">\n \t\t<item-type>String</item-type>\n \t\t<label>Text Value</label>\n-\t\t<config-description-ref uri=\"channel-type-config:solarman:string-channel\"/>\n+\t\t<description>Channel used to represent a string value</description>\n+\t\t<config-description-ref uri=\"channel-type-config:solarman:dynamic-channel\"/>\n \t</channel-type>\n \n \t<channel-type id=\"number\">\n \t\t<item-type>Number</item-type>\n \t\t<label>Number Value</label>\n-\t\t<config-description-ref uri=\"channel-type-config:solarman:number-channel\"/>\n+\t\t<description>Channel used to represent a numeric value</description>\n+\t\t<config-description-ref uri=\"channel-type-config:solarman:dynamic-channel\"/>\n \t</channel-type>\n \n \t<channel-type id=\"datetime\">\n \t\t<item-type>DateTime</item-type>\n \t\t<label>Datetime Value</label>\n-\t\t<config-description-ref uri=\"channel-type-config:solarman:datetime-channel\"/>\n+\t\t<description>Channel used to represent a datetime value</description>\n+\t\t<config-description-ref uri=\"channel-type-config:solarman:dynamic-channel\"/>\n \t</channel-type>\n \n \t<channel-type id=\"dynamic\">\n \t\t<item-type>String</item-type>\n \t\t<label>Dynamic Channel</label>\n+\t\t<description>Channel used to represent a dynamic value</description>\n \t\t<config-description-ref uri=\"channel-type-config:solarman:dynamic-channel\"/>\n \t</channel-type>\n \n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml\nindex 57046c17c7f5b..c2134ebd93cba 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml\n+++ b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml\n@@ -5,7 +5,7 @@\n \txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n \n \t<!-- Sample Thing Type -->\n-\t<thing-type id=\"logger\" extensible=\"true\">\n+\t<thing-type id=\"logger\" extensible=\"string,number,datetime\">\n \t\t<label>Solarman Logger</label>\n \t\t<description>This thing allows communication with Solarman (IGEN-Tech) v5 based solar inverter data loggers over the\n \t\t\tlocal network. Compatible with inverters from manufacturers such as Deye, Sofar, Solis, ZCS Azzurro, and KStar.</description>\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/DefinitionParserTest.java b/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/DefinitionParserTest.java\nindex 8dbbf3e927667..814156a20951c 100644\n--- a/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/DefinitionParserTest.java\n+++ b/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/DefinitionParserTest.java\n@@ -98,7 +98,8 @@ public List<String> scanForYamlFiles(String directoryPath) throws IOException {\n     }\n \n     private static List<String> scanDirectory(String directoryPath) throws IOException, URISyntaxException {\n-        URL url = Objects.requireNonNull(DefinitionParserTest.class.getClassLoader()).getResource(directoryPath);\n+        URL url = Objects.requireNonNull(\n+                Objects.requireNonNull(DefinitionParserTest.class.getClassLoader()).getResource(directoryPath));\n         Path directory = Paths.get(url.toURI());\n \n         if (!Files.isDirectory(directory)) {\n@@ -106,9 +107,8 @@ private static List<String> scanDirectory(String directoryPath) throws IOExcepti\n         }\n \n         try (Stream<Path> stream = Files.list(directory)) {\n-            List<String> files = stream.filter(file -> file.getFileName().toString().endsWith(YAML_EXTENSION))\n-                    .map(file -> directoryPath + \"/\" + file.getFileName().toString()).toList();\n-            return files;\n+            return stream.filter(file -> file.getFileName().toString().endsWith(YAML_EXTENSION))\n+                    .map(file -> directoryPath + \"/\" + file.getFileName()).toList();\n         }\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17980",
    "pr_id": 17980,
    "issue_id": 17968,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[MQTT] dimmer channel throws error when receiving ON or OFF\nDimmer channels used to be able to send ON and OFF, and *receive* ON and OFF messages. Versions 4.2 and earlier.\r\n\r\nNow, on upgrading to OH 4.3, although dimmer channels can still *send* ON and OFF (for 100% and 0%), the channel throws an error if it *receives* an ON or OFF event.\r\n\r\nThis breaks existing configurations.\r\n\r\n## Expected Behavior\r\nDimmer channels should be able to *receive* as well as send ON and OFF.\r\n\r\n## Current Behavior\r\nIf a Dimmer channel receives an ON or OFF message the following errors are thrown, and the channel stops working.\r\n\r\nWith on and off defined in the channel:\r\n```\r\nType dimmer : kitchenPots                   \"kitchen pots\"                  [ commandTopic=\"/isy_command/kitchenPots\", stateTopic=\"/isy_status/kitchenPots\", on=“ON”, off=“OFF” ]\r\n```\r\nWhen ON or OFF is received:\r\n```\r\n2024-12-23 14:32:45.937 [DEBUG] [nternal.profiles.ProfileCallbackImpl] - Delegating command '59' for item 'kitchenPots' to handler for channel 'mqtt:topic:insteon:kitchenPots'\r\n2024-12-23 14:32:45.937 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.binding.ThingHandler\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:32:45.937 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.ChannelUID\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:32:45.938 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.Thing\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:32:45.938 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.binding.ThingHandlerCallback\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:32:45.938 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.ThingStatusInfo\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:32:45.940 [DEBUG] [nternal.common.InvocationHandlerSync] - Already in a safe-call context, executing 'ThingHandler.handleCommand()' directly on 'org.openhab.binding.mqtt.generic.internal.handler.GenericMQTTThingHandler@4b898af5'.\r\n2024-12-23 14:32:45.940 [ERROR] [nal.common.AbstractInvocationHandler] - An error occurred while calling method 'ThingHandler.handleCommand()' on 'org.openhab.binding.mqtt.generic.internal.handler.GenericMQTTThingHandler@4b898af5': class org.openhab.core.library.types.OnOffType cannot be cast to class org.openhab.core.library.types.PercentType (org.openhab.core.library.types.OnOffType and org.openhab.core.library.types.PercentType are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4b76e427)\r\njava.lang.ClassCastException: class org.openhab.core.library.types.OnOffType cannot be cast to class org.openhab.core.library.types.PercentType (org.openhab.core.library.types.OnOffType and org.openhab.core.library.types.PercentType are in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @4b76e427)\r\n        at org.openhab.binding.mqtt.generic.values.PercentageValue.parseCommand(PercentageValue.java:78) ~[?:?]\r\n        at org.openhab.binding.mqtt.generic.ChannelState.publishValue(ChannelState.java:363) ~[?:?]\r\n        at org.openhab.binding.mqtt.generic.AbstractMQTTThingHandler.handleCommand(AbstractMQTTThingHandler.java:154) ~[?:?]\r\n        at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source) ~[?:?]\r\n        at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\r\n        at java.lang.reflect.Method.invoke(Method.java:569) ~[?:?]\r\n        at org.openhab.core.internal.common.AbstractInvocationHandler.invokeDirect(AbstractInvocationHandler.java:147) [bundleFile:?]\r\n        at org.openhab.core.internal.common.InvocationHandlerSync.invoke(InvocationHandlerSync.java:59) [bundleFile:?]\r\n        at jdk.proxy1706.$Proxy1843.handleCommand(Unknown Source) [?:?]\r\n        at org.openhab.core.thing.internal.profiles.ProfileCallbackImpl.handleCommand(ProfileCallbackImpl.java:95) [bundleFile:?]\r\n        at org.openhab.core.thing.internal.profiles.SystemDefaultProfile.onCommandFromItem(SystemDefaultProfile.java:49) [bundleFile:?]\r\n        at jdk.internal.reflect.GeneratedMethodAccessor96.invoke(Unknown Source) ~[?:?]\r\n```\r\nWithout on or off defined:\r\n```\r\nType dimmer : kitchenPots                   \"kitchen pots\"                  [ commandTopic=\"/isy_command/kitchenPots\", stateTopic=\"/isy_status/kitchenPots\" ]\r\n```\r\nI get the following error:\r\n```\r\n\r\n2024-12-23 14:54:35.067 [DEBUG] [nternal.profiles.ProfileCallbackImpl] - Delegating command '100' for item 'kitchenPots' to handler for channel 'mqtt:topic:insteon:kitchenPots'\r\n2024-12-23 14:54:35.068 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.binding.ThingHandler\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:54:35.068 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.ChannelUID\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:54:35.068 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.Thing\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:54:35.068 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.binding.ThingHandlerCallback\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:54:35.068 [DEBUG] [.internal.common.CombinedClassLoader] - Loaded class \"org.openhab.core.thing.ThingStatusInfo\" by classloader \"org.eclipse.osgi.internal.loader.EquinoxClassLoader@6e96f620[org.openhab.core.thing:4.3.0(id=221)]\" for \"[interface org.openhab.core.thing.binding.ThingHandler]\"\r\n2024-12-23 14:54:35.070 [DEBUG] [nternal.common.InvocationHandlerSync] - Already in a safe-call context, executing 'ThingHandler.handleCommand()' directly on 'org.openhab.binding.mqtt.generic.internal.handler.GenericMQTTThingHandler@879ea9e'.\r\n2024-12-23 14:54:35.070 [ERROR] [nal.common.AbstractInvocationHandler] - An error occurred while calling method 'ThingHandler.handleCommand()' on 'org.openhab.binding.mqtt.generic.internal.handler.GenericMQTTThingHandler@879ea9e': null\r\njava.lang.ClassCastException: null\r\n```\r\n\r\n## Possible Solution\r\nRestore the previous functionality by allowing dimmer channels to receive ON and OFF\r\n\r\n## Steps to Reproduce (for Bugs)\r\nDefine a channel:\r\n```\r\nThing mqtt:topic:insteon \"Insteon\"  (mqtt:broker:proliant) {\r\n    Channels:\r\n   Type dimmer : kitchenPots                   \"kitchen pots\"                  [ commandTopic=\"/isy_command/kitchenPots\", stateTopic=\"/isy_command/kitchenPots\", on=\"ON\", off=\"OFF\" ]\r\n}\r\n```\r\nAnd an item:\r\n```\r\n\r\nDimmer  kitchenPots              \"Kitchen Pots [%d%%]\"                                      (GF_Kitchen, Lights, movie, bedtime)    { channel=\"mqtt:topic:insteon:kitchenPots\" }\r\n```\r\nThen try moving the dimmer item to 100% or 0%\r\n\r\n## Context\r\nMQTT is totally unusable, had to revert to 4.2\r\n\r\n## Your Environment\r\nUbuntu 22.04, on upgrade from OH 4.2 to 4.3, MQTT became unusable and throws the above errors.\r\n",
    "issue_word_count": 1099,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/values/PercentageValue.java",
      "bundles/org.openhab.binding.mqtt.generic/src/test/java/org/openhab/binding/mqtt/generic/values/ValueTests.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.mqtt.generic/src/test/java/org/openhab/binding/mqtt/generic/values/ValueTests.java"
    ],
    "base_commit": "2f2cf22332d70d00b822fb611858a94172105aee",
    "head_commit": "6887224c29dca4058bbc94d7be3a021d06fb9fad",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17980",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17980",
    "dockerfile": "",
    "pr_merged_at": "2024-12-25T15:32:27.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/values/PercentageValue.java b/bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/values/PercentageValue.java\nindex 6a521fbe54752..eb4bfb280be6e 100644\n--- a/bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/values/PercentageValue.java\n+++ b/bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/values/PercentageValue.java\n@@ -75,7 +75,7 @@ public PercentageValue(@Nullable BigDecimal min, @Nullable BigDecimal max, @Null\n \n     @Override\n     public Command parseCommand(Command command) throws IllegalArgumentException {\n-        PercentType oldvalue = (state instanceof UnDefType) ? new PercentType() : (PercentType) state;\n+        PercentType oldvalue = (state instanceof UnDefType) ? new PercentType() : state.as(PercentType.class);\n         // Nothing do to -> We have received a percentage\n         if (command instanceof PercentType percent) {\n             return percent;\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.mqtt.generic/src/test/java/org/openhab/binding/mqtt/generic/values/ValueTests.java b/bundles/org.openhab.binding.mqtt.generic/src/test/java/org/openhab/binding/mqtt/generic/values/ValueTests.java\nindex b602e16897c4a..c79a0c8834abb 100644\n--- a/bundles/org.openhab.binding.mqtt.generic/src/test/java/org/openhab/binding/mqtt/generic/values/ValueTests.java\n+++ b/bundles/org.openhab.binding.mqtt.generic/src/test/java/org/openhab/binding/mqtt/generic/values/ValueTests.java\n@@ -313,6 +313,8 @@ public void percentCalc() {\n         assertThat(v.parseCommand(new DecimalType(10.0)), is(PercentType.ZERO));\n         assertThat(v.getMQTTpublishValue(PercentType.ZERO, null), is(\"10\"));\n \n+        v.update(OnOffType.OFF);\n+\n         assertThat(v.parseCommand(OnOffType.ON), is(OnOffType.ON));\n         assertThat(v.getMQTTpublishValue(OnOffType.ON, null), is(\"110\"));\n         assertThat(v.parseCommand(OnOffType.OFF), is(OnOffType.OFF));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17933",
    "pr_id": 17933,
    "issue_id": 17920,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[mqtt.homeassistant] Device with an empty component name has no channels after upgrading to OH 4.3.0\nI have an ESPHome powered device that produces the following discovery [payload](https://github.com/user-attachments/files/18169505/payload.json) in the topic: `homeassistant/climate/living-room-tion-3s/living-room-tion-3s/config`.\r\n\r\n## Expected Behavior\r\n\r\nThing for this device is created with channels based on the discovery payload.\r\n\r\n## Current Behavior\r\n\r\nCurrently, a Thing is created without channels.\r\n\r\nThere's an [exception in logs](https://github.com/user-attachments/files/18169533/exception.log) in logs.  \r\nI've found that the exception is caused by this entry `\"name\": \"\"` in the discovery payload.  \r\nAfter I've set a non-empty value for this entry, an exception is gone and all the expected channels appeared.\r\n\r\nWhile adding non-empty value is a workaround, there should be no errors when the `name` entry is empty. It wasn't an issue in OH 4.2.<latest> and not an issue in Home Assistant.\r\n\r\n## Possible Solution\r\n\r\nMaybe we can use some constant instead of empty value.\r\n\r\nAnother way to solve the issue can be to reuse some upper level component name as ESPHome firmware itself does.  \r\nAs I stated earlier discovery topic with an empty `name` value looks like: `homeassistant/climate/living-room-tion-3s/living-room-tion-3s/config`, wile this topic with the `name` value set to `Tion Climate` will look like `homeassistant/climate/living-room-tion-3s/tion-climate/config` so `living-room-tion-3s` is used instead of an empty name.",
    "issue_word_count": 258,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java"
    ],
    "base_commit": "7a3380a020f97ab895716f234988a6ee52eab1da",
    "head_commit": "3de99595c10c4d0c10ea55baa0682e8ab02c3e41",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17933",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17933",
    "dockerfile": "",
    "pr_merged_at": "2024-12-20T21:02:28.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java\nindex 80fbb958a7d35..1aef48287da3c 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/AbstractComponent.java\n@@ -225,7 +225,7 @@ public void resolveConflict() {\n \n     protected ComponentChannel.Builder buildChannel(String channelID, ComponentChannelType channelType,\n             Value valueState, String label, ChannelStateUpdateListener channelStateUpdateListener) {\n-        if (groupId == null) {\n+        if (groupId == null && newStyleChannels) {\n             channelID = componentId;\n         }\n         return new ComponentChannel.Builder(this, channelID, channelType.getChannelTypeUID(), valueState, label,\n@@ -304,12 +304,15 @@ public String getUniqueId() {\n      */\n     public String getName() {\n         String result = channelConfiguration.getName();\n+        if (result.isBlank()) {\n+            result = null;\n+        }\n \n         Device device = channelConfiguration.getDevice();\n         if (result == null && device != null) {\n             result = device.getName();\n         }\n-        if (result == null) {\n+        if (result == null || result.isBlank()) {\n             result = haID.objectID;\n         }\n         return result;\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java\nindex 44117740821b2..abed25174bcfb 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/ClimateTests.java\n@@ -38,6 +38,7 @@\n @NonNullByDefault\n public class ClimateTests extends AbstractComponentTests {\n     public static final String CONFIG_TOPIC = \"climate/0x847127fffe11dd6a_climate_zigbee2mqtt\";\n+    public static final String TION_CONFIG_TOPIC = \"climate/living-room-tion-3s/living-room-tion-3s\";\n \n     @SuppressWarnings(\"null\")\n     @Test\n@@ -397,8 +398,82 @@ public void testClimateHumidity() {\n         assertState(component, Climate.TARGET_HUMIDITY_CH_ID, new QuantityType<>(50, Units.PERCENT));\n     }\n \n+    @SuppressWarnings(\"null\")\n+    @Test\n+    public void testClimateWithEmptyName() {\n+        var component = discoverComponent(configTopicToMqtt(TION_CONFIG_TOPIC), \"\"\"\n+                {\n+                  \"curr_temp_t\": \"living-room-tion-3s/climate/living-room-tion-3s/current_temperature/state\",\n+                  \"mode_cmd_t\": \"living-room-tion-3s/climate/living-room-tion-3s/mode/command\",\n+                  \"mode_stat_t\": \"living-room-tion-3s/climate/living-room-tion-3s/mode/state\",\n+                  \"modes\": [\n+                    \"off\",\n+                    \"heat\",\n+                    \"fan_only\",\n+                    \"heat_cool\"\n+                  ],\n+                  \"temp_cmd_t\": \"living-room-tion-3s/climate/living-room-tion-3s/target_temperature/command\",\n+                  \"temp_stat_t\": \"living-room-tion-3s/climate/living-room-tion-3s/target_temperature/state\",\n+                  \"min_temp\": 1,\n+                  \"max_temp\": 25,\n+                  \"temp_step\": 1,\n+                  \"precision\": 1,\n+                  \"temp_unit\": \"C\",\n+                  \"min_hum\": 30,\n+                  \"max_hum\": 99,\n+                  \"act_t\": \"living-room-tion-3s/climate/living-room-tion-3s/action/state\",\n+                  \"fan_mode_cmd_t\": \"living-room-tion-3s/climate/living-room-tion-3s/fan_mode/command\",\n+                  \"fan_mode_stat_t\": \"living-room-tion-3s/climate/living-room-tion-3s/fan_mode/state\",\n+                  \"fan_modes\": [\n+                    \"1\",\n+                    \"2\",\n+                    \"3\",\n+                    \"4\",\n+                    \"5\",\n+                    \"6\"\n+                  ],\n+                  \"name\": \"\",\n+                  \"ic\": \"mdi:air-filter\",\n+                  \"avty_t\": \"living-room-tion-3s/status\",\n+                  \"uniq_id\": \"ESPclimateliving-room-tion-3s\",\n+                  \"dev\": {\n+                    \"ids\": \"f09e9e213ab0\",\n+                    \"name\": \"living-room-tion-3s\",\n+                    \"sw\": \"2024.8.0 (ESPHome 2024.11.3)\",\n+                    \"mdl\": \"tion\",\n+                    \"mf\": \"dentra\",\n+                    \"cns\": [\n+                      [\n+                        \"mac\",\n+                        \"f09e9e213ab0\"\n+                      ]\n+                    ]\n+                  }\n+                }\n+                \"\"\");\n+\n+        assertThat(component.channels.size(), is(5));\n+        assertThat(component.getName(), is(\"living-room-tion-3s\"));\n+\n+        assertChannel(component, Climate.ACTION_CH_ID, \"living-room-tion-3s/climate/living-room-tion-3s/action/state\",\n+                \"\", \"living-room-tion-3s\", TextValue.class);\n+        assertChannel(component, Climate.CURRENT_TEMPERATURE_CH_ID_DEPRECATED,\n+                \"living-room-tion-3s/climate/living-room-tion-3s/current_temperature/state\", \"\", \"living-room-tion-3s\",\n+                NumberValue.class);\n+        assertChannel(component, Climate.FAN_MODE_CH_ID_DEPRECATED,\n+                \"living-room-tion-3s/climate/living-room-tion-3s/fan_mode/state\",\n+                \"living-room-tion-3s/climate/living-room-tion-3s/fan_mode/command\", \"living-room-tion-3s\",\n+                TextValue.class);\n+        assertChannel(component, Climate.MODE_CH_ID, \"living-room-tion-3s/climate/living-room-tion-3s/mode/state\",\n+                \"living-room-tion-3s/climate/living-room-tion-3s/mode/command\", \"living-room-tion-3s\", TextValue.class);\n+        assertChannel(component, Climate.TEMPERATURE_CH_ID,\n+                \"living-room-tion-3s/climate/living-room-tion-3s/target_temperature/state\",\n+                \"living-room-tion-3s/climate/living-room-tion-3s/target_temperature/command\", \"living-room-tion-3s\",\n+                NumberValue.class);\n+    }\n+\n     @Override\n     protected Set<String> getConfigTopics() {\n-        return Set.of(CONFIG_TOPIC);\n+        return Set.of(CONFIG_TOPIC, TION_CONFIG_TOPIC);\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17895",
    "pr_id": 17895,
    "issue_id": 17374,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[mqtt.homeassistant] Bring Jinja template processing into compliance with Home Assistant Docs\nRight now the Home Assistant binding relies on the Jinja transformation being installed (it does not install automatically! See #6875), and can only pass `value_json`, not any of the additional variables documented at https://www.home-assistant.io/docs/configuration/templating/#using-templates-with-the-mqtt-integration, nor the Home Assistant specific extensions documented at https://www.home-assistant.io/docs/configuration/templating/#home-assistant-template-extensions (see #15382). Since #17356 (and #17358), we've gotten past the problem of having direct access to Jinjava in order to provide a richer \"transformation\" experience than the `value_json` of the basic Jinja transformation service, and can thus get on to addressing these issues.\r\n\r\nThe gameplan to accomplish this:\r\n\r\nInside of mqtt.homeassistant, implement our own internal `TransformationService` and `TransformationServiceProvider`. It will be based on the `JinjaTransformationService`, but will have a unique instance per component, so that the other variables can also be populated and made available to the template, and the Home Assistant extensions can be registered. And `value` will be populated (and `value_json` will only be populated if it's valid JSON) so that it will work for command templates.\r\n\r\nFor more complex components like template schema lights, I'll subclass the internal `TransformationService` to provide the additional variables.\r\n",
    "issue_word_count": 220,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformation.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantJinjaFunctionLibrary.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformationTests.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformationTests.java"
    ],
    "base_commit": "2a58b8ed9bc82b7416e72e4ca3f518ae96856803",
    "head_commit": "a6ca3b1c86f6464042da972d9783a6adf6c0162f",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17895",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17895",
    "dockerfile": "",
    "pr_merged_at": "2024-12-18T19:33:12.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformation.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformation.java\nindex 75e4e71a5a212..4bd53696772c6 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformation.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformation.java\n@@ -53,11 +53,11 @@ public UndefinedException(JinjavaInterpreter interpreter) {\n     private final Logger logger = LoggerFactory.getLogger(HomeAssistantChannelTransformation.class);\n \n     private final Jinjava jinjava;\n-    private final AbstractComponent component;\n+    private final AbstractComponent<?> component;\n     private final String template;\n     private final ObjectMapper objectMapper = new ObjectMapper();\n \n-    public HomeAssistantChannelTransformation(Jinjava jinjava, AbstractComponent component, String template) {\n+    public HomeAssistantChannelTransformation(Jinjava jinjava, AbstractComponent<?> component, String template) {\n         super((String) null);\n         this.jinjava = jinjava;\n         this.component = component;\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantJinjaFunctionLibrary.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantJinjaFunctionLibrary.java\nindex e3dad0683785e..84d4d0acc1deb 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantJinjaFunctionLibrary.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantJinjaFunctionLibrary.java\n@@ -14,15 +14,24 @@\n \n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n+import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.List;\n import java.util.Map;\n import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n \n+import com.google.re2j.Matcher;\n+import com.google.re2j.Pattern;\n+import com.google.re2j.PatternSyntaxException;\n import com.hubspot.jinjava.interpret.Context;\n import com.hubspot.jinjava.interpret.InterpretException;\n+import com.hubspot.jinjava.interpret.InvalidArgumentException;\n+import com.hubspot.jinjava.interpret.InvalidReason;\n import com.hubspot.jinjava.interpret.JinjavaInterpreter;\n+import com.hubspot.jinjava.interpret.TemplateSyntaxException;\n import com.hubspot.jinjava.lib.filter.Filter;\n import com.hubspot.jinjava.lib.fn.ELFunctionDefinition;\n import com.hubspot.jinjava.util.ObjectTruthValue;\n@@ -39,15 +48,17 @@ public static void register(Context context) {\n                 new ELFunctionDefinition(\"\", \"iif\", Functions.class, \"iif\", Object.class, Object[].class));\n         context.registerFilter(new SimpleFilter(\"iif\", Functions.class, \"iif\", Object.class, Object[].class));\n         context.registerFilter(new IsDefinedFilter());\n+        context.registerFilter(new RegexFindAllFilter());\n+        context.registerFilter(new RegexFindAllIndexFilter());\n     }\n \n     @NonNullByDefault({})\n     private static class SimpleFilter implements Filter {\n         private final String name;\n         private final Method method;\n-        private final Class klass;\n+        private final Class<?> klass;\n \n-        public SimpleFilter(String name, Class klass, String methodName, Class... args) {\n+        public SimpleFilter(String name, Class<?> klass, String methodName, Class<?>... args) {\n             this.name = name;\n             this.klass = klass;\n             try {\n@@ -110,9 +121,135 @@ public Object filter(Object var, JinjavaInterpreter interpreter, String... args)\n         }\n     }\n \n+    // https://www.home-assistant.io/docs/configuration/templating/#regular-expressions\n+    // https://github.com/home-assistant/core/blob/2024.12.2/homeassistant/helpers/template.py#L2453\n+    @NonNullByDefault({})\n+    private static class RegexFindAllFilter implements Filter {\n+        @Override\n+        public String getName() {\n+            return \"regex_findall\";\n+        }\n+\n+        @Override\n+        public Object filter(Object var, JinjavaInterpreter interpreter, String... args) {\n+            if (args.length > 2) {\n+                throw new TemplateSyntaxException(interpreter, getName(),\n+                        \"requires at most 2 arguments (regex string, ignore case)\");\n+            }\n+\n+            String find = null;\n+            if (args.length >= 1) {\n+                find = args[0];\n+            }\n+            String ignoreCase = null;\n+            if (args.length == 2) {\n+                ignoreCase = args[1];\n+            }\n+\n+            Matcher m = regexFindAll(var, interpreter, find, ignoreCase);\n+\n+            List<Object> result = new ArrayList<>();\n+            while (m.find()) {\n+                result.add(resultForMatcher(m));\n+            }\n+\n+            return result;\n+        }\n+\n+        protected Object resultForMatcher(Matcher m) {\n+            if (m.groupCount() == 0) {\n+                return m.group();\n+            } else if (m.groupCount() == 1) {\n+                return m.group(1);\n+            } else {\n+                List<String> groups = new ArrayList<>(m.groupCount());\n+                for (int i = 1; i <= m.groupCount(); ++i) {\n+                    groups.add(m.group(i));\n+                }\n+                return groups;\n+            }\n+        }\n+\n+        protected Matcher regexFindAll(Object var, JinjavaInterpreter interpreter, String find, String ignoreCaseStr) {\n+            String s;\n+            if (var == null) {\n+                s = \"None\";\n+            } else {\n+                s = var.toString();\n+            }\n+\n+            boolean ignoreCase = ObjectTruthValue.evaluate(ignoreCaseStr);\n+            int flags = 0;\n+            if (ignoreCase) {\n+                flags = Pattern.CASE_INSENSITIVE;\n+            }\n+\n+            Pattern p;\n+            try {\n+                if (find instanceof String findString) {\n+                    p = Pattern.compile(findString, flags);\n+                } else if (find == null) {\n+                    p = Pattern.compile(\"\", flags);\n+                } else {\n+                    throw new InvalidArgumentException(interpreter, this, InvalidReason.REGEX, 0, find);\n+                }\n+\n+                return p.matcher(s);\n+            } catch (PatternSyntaxException e) {\n+                throw new InvalidArgumentException(interpreter, this, InvalidReason.REGEX, 0, find);\n+            }\n+        }\n+    }\n+\n+    // https://www.home-assistant.io/docs/configuration/templating/#regular-expressions\n+    // https://github.com/home-assistant/core/blob/2024.12.2/homeassistant/helpers/template.py#L2448\n+    @NonNullByDefault({})\n+    private static class RegexFindAllIndexFilter extends RegexFindAllFilter {\n+        @Override\n+        public String getName() {\n+            return \"regex_findall_index\";\n+        }\n+\n+        @Override\n+        public Object filter(Object var, JinjavaInterpreter interpreter, String... args) {\n+            if (args.length > 3) {\n+                throw new TemplateSyntaxException(interpreter, getName(),\n+                        \"requires at most 3 arguments (regex string, index, ignore case)\");\n+            }\n+\n+            String find = null;\n+            if (args.length >= 1) {\n+                find = args[0];\n+            }\n+            int index = 0;\n+            if (args.length >= 2) {\n+                index = Integer.valueOf(args[1]);\n+                if (index < 0) {\n+                    throw new InvalidArgumentException(interpreter, this, InvalidReason.POSITIVE_NUMBER, 1, args[1]);\n+                }\n+            }\n+\n+            String ignoreCase = null;\n+            if (args.length == 3) {\n+                ignoreCase = args[2];\n+            }\n+\n+            Matcher m = regexFindAll(var, interpreter, find, ignoreCase);\n+            int i = 0;\n+            while (i <= index) {\n+                if (!m.find()) {\n+                    break;\n+                }\n+                i += 1;\n+            }\n+\n+            return resultForMatcher(m);\n+        }\n+    }\n+\n     private static class Functions {\n         // https://www.home-assistant.io/docs/configuration/templating/#immediate-if-iif\n-        public static Object iif(Object value, Object... results) {\n+        public static @Nullable Object iif(@Nullable Object value, @Nullable Object... results) {\n             if (results.length > 3) {\n                 throw new IllegalArgumentException(\"Parameters for function 'iff' do not match\");\n             }\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformationTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformationTests.java\nindex f8341fbb1c6c9..ea172e2c2a1bb 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformationTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/HomeAssistantChannelTransformationTests.java\n@@ -100,6 +100,24 @@ public void testIsDefined() {\n         assertThat(transform(\"{{ 'hi' | is_defined }}\", \"{}\"), is(\"hi\"));\n     }\n \n+    @Test\n+    public void testRegexFindall() {\n+        assertThat(transform(\"{{ 'Flight from JFK to LHR' | regex_findall('([A-Z]{3})') }}\", \"\"), is(\"[JFK, LHR]\"));\n+        assertThat(transform(\n+                \"{{ 'button_up_press' | regex_findall('^(?P<button>(?:button_)?[a-z0-9]+)_(?P<action>(?:press|hold)(?:_release)?)$') }}\",\n+                \"\"), is(\"[[button_up, press]]\"));\n+    }\n+\n+    @Test\n+    public void testRegexFindallIndex() {\n+        assertThat(transform(\"{{ 'Flight from JFK to LHR' | regex_findall_index('([A-Z]{3})', 0) }}\", \"\"), is(\"JFK\"));\n+        assertThat(transform(\"{{ 'Flight from JFK to LHR' | regex_findall_index('([A-Z]{3})', 1) }}\", \"\"), is(\"LHR\"));\n+        assertThat(transform(\"{{ ['JFK', 'LHR'] | regex_findall_index('([A-Z]{3})', 1) }}\", \"\"), is(\"LHR\"));\n+        assertThat(transform(\n+                \"{{ 'button_up_press' | regex_findall_index('^(?P<button>(?:button_)?[a-z0-9]+)_(?P<action>(?:press|hold)(?:_release)?)$') }}\",\n+                \"\"), is(\"[button_up, press]\"));\n+    }\n+\n     protected @Nullable String transform(String template, String value) {\n         return transformation.apply(template, value).orElse(null);\n     }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17893",
    "pr_id": 17893,
    "issue_id": 16599,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[boschshc] Location properties are not updated\nIf devices are moved to a different room in the Bosch Smart Home app, the location change is not reflected in the corresponding thing properties. This was originally reported [here](https://github.com/openhab/openhab-addons/issues/16241#issuecomment-2029566111) by @mike-bike:\r\n\r\n> Minor observation: Dimmer Device shows the Bosch Room as Location property in the thing. Seems to be a new feature. However, it does not get any updates. In the Bosch app I have moved the device into a new room, but the change is not reflected in the Thing - even a OpenHAB restart does not force an update... I'd suggest removing that property if updates are not coming through.\r\n\r\n## Expected Behavior\r\nWhenever a device location is changed in the Bosch Smart Home app, the corresponding thing property should be changed as well.\r\n\r\n## Current Behavior\r\nOnce a thing is added, the location property does not change anymore.\r\n\r\n## Steps to Reproduce (for Bugs)\r\n1. Create a thing (bug was reported for a dimmer device)\r\n2. Inspect the location property of the thing\r\n3. Move the device to a different room using the Bosch Smart Home app\r\n4. Inspect the location property again. It did not change accordingly.\r\n\r\n## Context\r\nMinor issue, does not affect the actual thing / channel logics.",
    "issue_word_count": 216,
    "test_files_count": 4,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCDeviceHandler.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java",
      "bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractBoschSHCDeviceHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/relay/RelayHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryServiceTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractBoschSHCDeviceHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/relay/RelayHandlerTest.java",
      "bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryServiceTest.java"
    ],
    "base_commit": "d7abc08cfd6d7bb60a4ffc558341746d395e631b",
    "head_commit": "a21e15bb35966f246d205968e6e29856a70d29da",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17893",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17893",
    "dockerfile": "",
    "pr_merged_at": "2025-02-20T21:01:19.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java\nindex 7ce6cf44f0cd5..de8f267172361 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCBindingConstants.java\n@@ -134,4 +134,8 @@ private BoschSHCBindingConstants() {\n \n     // static device/service names\n     public static final String SERVICE_INTRUSION_DETECTION = \"intrusionDetectionSystem\";\n+\n+    // thing properties\n+    public static final String PROPERTY_LOCATION_LEGACY = \"Location\";\n+    public static final String PROPERTY_LOCATION = \"location\";\n }\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCDeviceHandler.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCDeviceHandler.java\nindex e06f48aa17f68..d8d49ac19ebce 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCDeviceHandler.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/BoschSHCDeviceHandler.java\n@@ -12,6 +12,10 @@\n  */\n package org.openhab.binding.boschshc.internal.devices;\n \n+import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.PROPERTY_LOCATION;\n+import static org.openhab.binding.boschshc.internal.devices.BoschSHCBindingConstants.PROPERTY_LOCATION_LEGACY;\n+\n+import java.util.Map;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.TimeoutException;\n \n@@ -83,9 +87,42 @@ public void initialize() {\n      *         otherwise\n      */\n     protected boolean processDeviceInfo(Device deviceInfo) {\n+        try {\n+            updateLocationPropertiesIfApplicable(deviceInfo);\n+        } catch (BoschSHCException e) {\n+            logger.warn(\"Error while updating location properties for thing {}.\", getThing().getUID(), e);\n+        }\n+        // do not cancel thing initialization if location properties cannot be updated\n         return true;\n     }\n \n+    private void updateLocationPropertiesIfApplicable(Device deviceInfo) throws BoschSHCException {\n+        Map<String, String> thingProperties = getThing().getProperties();\n+        removeLegacyLocationPropertyIfApplicable(thingProperties);\n+        updateLocationPropertyIfApplicable(thingProperties, deviceInfo);\n+    }\n+\n+    private void updateLocationPropertyIfApplicable(Map<String, String> thingProperties, Device deviceInfo)\n+            throws BoschSHCException {\n+        String roomName = getBridgeHandler().resolveRoomId(deviceInfo.roomId);\n+        if (roomName != null) {\n+            String currentLocation = thingProperties.get(PROPERTY_LOCATION);\n+            if (!roomName.equals(currentLocation)) {\n+                logger.debug(\"Updating property '{}' of thing {} to '{}'.\", PROPERTY_LOCATION, getThing().getUID(),\n+                        roomName);\n+                updateProperty(PROPERTY_LOCATION, roomName);\n+            }\n+        }\n+    }\n+\n+    private void removeLegacyLocationPropertyIfApplicable(Map<String, String> thingProperties) {\n+        if (thingProperties.containsKey(PROPERTY_LOCATION_LEGACY)) {\n+            logger.debug(\"Removing legacy property '{}' from thing {}.\", PROPERTY_LOCATION_LEGACY, getThing().getUID());\n+            // null value indicates that the property should be removed\n+            updateProperty(PROPERTY_LOCATION_LEGACY, null);\n+        }\n+    }\n+\n     /**\n      * Attempts to obtain information about the device with the specified ID via a REST call.\n      * <p>\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java\nindex 1fc7e0ce27635..d3fef358fcba0 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandler.java\n@@ -17,6 +17,7 @@\n import static org.eclipse.jetty.http.HttpMethod.PUT;\n \n import java.lang.reflect.Type;\n+import java.time.Duration;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -54,6 +55,7 @@\n import org.openhab.binding.boschshc.internal.serialization.GsonUtils;\n import org.openhab.binding.boschshc.internal.services.dto.BoschSHCServiceState;\n import org.openhab.binding.boschshc.internal.services.dto.JsonRestExceptionResponse;\n+import org.openhab.core.cache.ExpiringCache;\n import org.openhab.core.library.types.StringType;\n import org.openhab.core.thing.Bridge;\n import org.openhab.core.thing.Channel;\n@@ -88,6 +90,8 @@ public class BridgeHandler extends BaseBridgeHandler {\n \n     private static final String HTTP_CLIENT_NOT_INITIALIZED = \"HttpClient not initialized\";\n \n+    private static final Duration ROOM_CACHE_DURATION = Duration.ofMinutes(2);\n+\n     private final Logger logger = LoggerFactory.getLogger(BridgeHandler.class);\n \n     /**\n@@ -107,13 +111,22 @@ public class BridgeHandler extends BaseBridgeHandler {\n \n     /**\n      * SHC thing/device discovery service instance.\n-     * Registered and unregistered if service is actived/deactived.\n+     * Registered and unregistered if service is activated/deactivated.\n      * Used to scan for things after bridge is paired with SHC.\n      */\n     private @Nullable ThingDiscoveryService thingDiscoveryService;\n \n     private final ScenarioHandler scenarioHandler;\n \n+    private ExpiringCache<List<Room>> roomCache = new ExpiringCache<>(ROOM_CACHE_DURATION, () -> {\n+        try {\n+            return getRooms();\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            return null;\n+        }\n+    });\n+\n     public BridgeHandler(Bridge bridge) {\n         super(bridge);\n         scenarioHandler = new ScenarioHandler();\n@@ -437,6 +450,24 @@ public List<Room> getRooms() throws InterruptedException {\n         }\n     }\n \n+    public @Nullable List<Room> getRoomsWithCache() {\n+        return roomCache.getValue();\n+    }\n+\n+    public @Nullable String resolveRoomId(@Nullable String roomId) {\n+        if (roomId == null) {\n+            return null;\n+        }\n+\n+        @Nullable\n+        List<Room> rooms = getRoomsWithCache();\n+        if (rooms != null) {\n+            return rooms.stream().filter(r -> r.id.equals(roomId)).map(r -> r.name).findAny().orElse(null);\n+        }\n+\n+        return null;\n+    }\n+\n     /**\n      * Get public information from Bosch SHC.\n      */\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java\nindex 0833c96ddb853..d1a1dd6a4c0c4 100644\n--- a/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java\n+++ b/bundles/org.openhab.binding.boschshc/src/main/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryService.java\n@@ -243,7 +243,7 @@ protected void addDevice(Device device, String roomName) {\n         discoveryResult.withBridge(thingHandler.getThing().getUID());\n \n         if (!roomName.isEmpty()) {\n-            discoveryResult.withProperty(\"Location\", roomName);\n+            discoveryResult.withProperty(BoschSHCBindingConstants.PROPERTY_LOCATION, roomName);\n         }\n         thingDiscovered(discoveryResult.build());\n \n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractBoschSHCDeviceHandlerTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractBoschSHCDeviceHandlerTest.java\nindex a9a527c825cdd..198efdae0ab14 100644\n--- a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractBoschSHCDeviceHandlerTest.java\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/AbstractBoschSHCDeviceHandlerTest.java\n@@ -14,14 +14,20 @@\n \n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.argThat;\n+import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.TimeoutException;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Tag;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInfo;\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.MethodSource;\n import org.openhab.binding.boschshc.internal.devices.bridge.dto.Device;\n@@ -42,11 +48,34 @@\n public abstract class AbstractBoschSHCDeviceHandlerTest<T extends BoschSHCDeviceHandler>\n         extends AbstractBoschSHCHandlerTest<T> {\n \n+    protected static final String TAG_LEGACY_LOCATION_PROPERTY = \"LegacyLocationProperty\";\n+    protected static final String TAG_LOCATION_PROPERTY = \"LocationProperty\";\n+    protected static final String DEFAULT_ROOM_ID = \"hz_1\";\n+\n     @Override\n     protected void configureDevice(Device device) {\n         super.configureDevice(device);\n \n         device.id = getDeviceID();\n+        device.roomId = DEFAULT_ROOM_ID;\n+    }\n+\n+    @Override\n+    protected void beforeHandlerInitialization(TestInfo testInfo) {\n+        super.beforeHandlerInitialization(testInfo);\n+        Set<String> tags = testInfo.getTags();\n+        if (tags.contains(TAG_LEGACY_LOCATION_PROPERTY) || tags.contains(TAG_LOCATION_PROPERTY)) {\n+            Map<String, String> properties = new HashMap<>();\n+            when(getThing().getProperties()).thenReturn(properties);\n+\n+            if (tags.contains(TAG_LEGACY_LOCATION_PROPERTY)) {\n+                properties.put(BoschSHCBindingConstants.PROPERTY_LOCATION_LEGACY, \"Living Room\");\n+            }\n+\n+            if (tags.contains(TAG_LOCATION_PROPERTY)) {\n+                when(getBridgeHandler().resolveRoomId(DEFAULT_ROOM_ID)).thenReturn(\"Kitchen\");\n+            }\n+        }\n     }\n \n     @Override\n@@ -80,4 +109,44 @@ void initializeHandleExceptionDuringDeviceInfoRestCall(Exception exception)\n                 argThat(status -> status.getStatus().equals(ThingStatus.OFFLINE)\n                         && status.getStatusDetail().equals(ThingStatusDetail.CONFIGURATION_ERROR)));\n     }\n+\n+    @Tag(TAG_LEGACY_LOCATION_PROPERTY)\n+    @Test\n+    protected void deleteLegacyLocationProperty() {\n+        verify(getThing()).setProperty(BoschSHCBindingConstants.PROPERTY_LOCATION_LEGACY, null);\n+        verify(getCallback()).thingUpdated(getThing());\n+    }\n+\n+    @Tag(TAG_LOCATION_PROPERTY)\n+    @Test\n+    protected void locationPropertyDidNotChange() {\n+        verify(getThing()).setProperty(BoschSHCBindingConstants.PROPERTY_LOCATION, \"Kitchen\");\n+        verify(getCallback()).thingUpdated(getThing());\n+\n+        getThing().getProperties().put(BoschSHCBindingConstants.PROPERTY_LOCATION, \"Kitchen\");\n+\n+        // re-initialize\n+        getFixture().initialize();\n+\n+        verify(getThing()).setProperty(BoschSHCBindingConstants.PROPERTY_LOCATION, \"Kitchen\");\n+        verify(getCallback()).thingUpdated(getThing());\n+    }\n+\n+    @Tag(TAG_LOCATION_PROPERTY)\n+    @Test\n+    protected void locationPropertyDidChange() {\n+        verify(getThing()).setProperty(BoschSHCBindingConstants.PROPERTY_LOCATION, \"Kitchen\");\n+        verify(getCallback()).thingUpdated(getThing());\n+\n+        getThing().getProperties().put(BoschSHCBindingConstants.PROPERTY_LOCATION, \"Kitchen\");\n+\n+        getDevice().roomId = \"hz_2\";\n+        when(getBridgeHandler().resolveRoomId(\"hz_2\")).thenReturn(\"Dining Room\");\n+\n+        // re-initialize\n+        getFixture().initialize();\n+\n+        verify(getThing()).setProperty(BoschSHCBindingConstants.PROPERTY_LOCATION, \"Dining Room\");\n+        verify(getCallback(), times(2)).thingUpdated(getThing());\n+    }\n }\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java\nindex aa3597ddda429..4e8d7a2b8c2ca 100644\n--- a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/bridge/BridgeHandlerTest.java\n@@ -12,6 +12,8 @@\n  */\n package org.openhab.binding.boschshc.internal.devices.bridge;\n \n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.nullValue;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.collection.IsCollectionWithSize.hasSize;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n@@ -1126,4 +1128,33 @@ void getPublicInformation() throws InterruptedException, BoschSHCException, Exec\n         verify(httpClient).createRequest(any(), same(HttpMethod.GET));\n         verify(httpClient).sendRequest(any(), same(PublicInformation.class), any(), isNull());\n     }\n+\n+    @Test\n+    void resolveRoomId() throws InterruptedException, TimeoutException, ExecutionException {\n+        Request request = mock(Request.class);\n+        when(httpClient.createRequest(any(), eq(HttpMethod.GET))).thenReturn(request);\n+        ContentResponse contentResponse = mock(ContentResponse.class);\n+        when(request.send()).thenReturn(contentResponse);\n+        when(contentResponse.getStatus()).thenReturn(200);\n+        String roomsJson = \"\"\"\n+                [\n+                    {\n+                        \"@type\": \"room\",\n+                        \"id\": \"hz_1\",\n+                        \"iconId\": \"icon_room_living_room\",\n+                        \"name\": \"Living Room\"\n+                    },\n+                    {\n+                        \"@type\": \"room\",\n+                        \"id\": \"hz_2\",\n+                        \"iconId\": \"icon_room_dining_room\",\n+                        \"name\": \"Dining Room\"\n+                    }\n+                ]\n+                \"\"\";\n+        when(contentResponse.getContentAsString()).thenReturn(roomsJson);\n+        assertThat(fixture.resolveRoomId(\"hz_1\"), is(\"Living Room\"));\n+        assertThat(fixture.resolveRoomId(\"hz_2\"), is(\"Dining Room\"));\n+        assertThat(fixture.resolveRoomId(null), is(nullValue()));\n+    }\n }\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/relay/RelayHandlerTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/relay/RelayHandlerTest.java\nindex fe60dcbacb122..644e38c7c4493 100644\n--- a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/relay/RelayHandlerTest.java\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/devices/relay/RelayHandlerTest.java\n@@ -12,8 +12,11 @@\n  */\n package org.openhab.binding.boschshc.internal.devices.relay;\n \n+import static org.hamcrest.CoreMatchers.not;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.collection.IsCollectionWithSize.hasSize;\n+import static org.hamcrest.collection.IsMapContaining.hasKey;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.argThat;\n import static org.mockito.ArgumentMatchers.eq;\n@@ -376,4 +379,55 @@ void testUpdateModePropertyIfApplicableImpulseSwitchMode() {\n         verify(getCallback(), times(2)).thingUpdated(argThat(t -> ImpulseSwitchService.IMPULSE_SWITCH_SERVICE_NAME\n                 .equals(t.getProperties().get(RelayHandler.PROPERTY_MODE))));\n     }\n+\n+    /**\n+     * This has to be tested differently for the RelayHandler because the thing mock\n+     * will be replaced by a real thing during the first initialization, which\n+     * modifies the channels.\n+     */\n+    @Test\n+    @Tag(TAG_LEGACY_LOCATION_PROPERTY)\n+    @Override\n+    protected void deleteLegacyLocationProperty() {\n+        ArgumentCaptor<Thing> thingCaptor = ArgumentCaptor.forClass(Thing.class);\n+        verify(getCallback(), times(3)).thingUpdated(thingCaptor.capture());\n+        List<Thing> allValues = thingCaptor.getAllValues();\n+        assertThat(allValues, hasSize(3));\n+        assertThat(allValues.get(2).getProperties(), not(hasKey(BoschSHCBindingConstants.PROPERTY_LOCATION_LEGACY)));\n+    }\n+\n+    /**\n+     * This has to be tested differently for the RelayHandler because the thing mock\n+     * will be replaced by a real thing during the first initialization, which\n+     * modifies the channels.\n+     */\n+    @Test\n+    @Tag(TAG_LOCATION_PROPERTY)\n+    @Override\n+    protected void locationPropertyDidNotChange() {\n+        // re-initialize\n+        getFixture().initialize();\n+\n+        verify(getCallback(), times(3)).thingUpdated(\n+                argThat(t -> t.getProperties().get(BoschSHCBindingConstants.PROPERTY_LOCATION).equals(\"Kitchen\")));\n+    }\n+\n+    /**\n+     * This has to be tested differently for the RelayHandler because the thing mock\n+     * will be replaced by a real thing during the first initialization, which\n+     * modifies the channels.\n+     */\n+    @Test\n+    @Tag(TAG_LOCATION_PROPERTY)\n+    @Override\n+    protected void locationPropertyDidChange() {\n+        getDevice().roomId = \"hz_2\";\n+        when(getBridgeHandler().resolveRoomId(\"hz_2\")).thenReturn(\"Dining Room\");\n+\n+        // re-initialize\n+        getFixture().initialize();\n+\n+        verify(getCallback(), times(4)).thingUpdated(\n+                argThat(t -> t.getProperties().get(BoschSHCBindingConstants.PROPERTY_LOCATION).equals(\"Dining Room\")));\n+    }\n }\n\ndiff --git a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryServiceTest.java b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryServiceTest.java\nindex 3c2e7cc8b0765..4ba5425818fd5 100644\n--- a/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryServiceTest.java\n+++ b/bundles/org.openhab.binding.boschshc/src/test/java/org/openhab/binding/boschshc/internal/discovery/ThingDiscoveryServiceTest.java\n@@ -194,7 +194,8 @@ void testAddDevice() {\n         assertThat(result.getThingUID().getId(), is(\"testDevice_ID\"));\n         assertThat(result.getBridgeUID().getId(), is(\"testSHC\"));\n         assertThat(result.getLabel(), is(\"Test Name\"));\n-        assertThat(String.valueOf(result.getProperties().get(\"Location\")), is(\"TestRoom\"));\n+        assertThat(String.valueOf(result.getProperties().get(BoschSHCBindingConstants.PROPERTY_LOCATION)),\n+                is(\"TestRoom\"));\n     }\n \n     @Test\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17851",
    "pr_id": 17851,
    "issue_id": 17182,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[mqtt.homeassistant] When a component disappears from MQTT, the channels remain on the Thing in openHAB\n## Expected Behavior\r\n\r\nIf I remove something in MQTT from Home Assistant discovery, I expect the channels for that component to disappear in openHAB, otherwise I'm left with cruft, especially if I'm say designing a new device in ESPHome and adding and removing components from it often. It should happen right away if the discovery topic receives a message explicitly deleting it (as opposed just not sending the discovery message again in the future, when not using retained discovery messages).\r\n\r\n## Current Behavior\r\nI believe the configuration topic gets removed from the Thing configuration, but the channels remain.\r\n\r\n## Possible Solution\r\nProbably set a time after a thing initializes, and go through all the channels to ensure their component still exists. Can be triggered right away if a topic is removed from the thing config.\r\n\r\n## Steps to Reproduce (for Bugs)\r\n1. Have a Home Assistant MQTT Device with multiple components\r\n2. Add the discovered thing from the Inbox\r\n3. Delete the discovery config for one of those components\r\n4. Observe that the channels still exist on the thing\r\n\r\n## Your Environment\r\n* Version used: openHAB 4.3.0-SNAPSHOT\r\n* Operating System and version (desktop or mobile, Windows 10, Raspbian Buster, ...): Ubuntu 22.04 jammy\r\n",
    "issue_word_count": 217,
    "test_files_count": 2,
    "non_test_files_count": 3,
    "pr_changed_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscovery.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscoveryTests.java",
      "itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscoveryTests.java",
      "itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java"
    ],
    "base_commit": "044e9a33882a54d5b8098ba79a2e7fffa414df36",
    "head_commit": "b6df526fb9772c2c6a7f33e2cb24f0af4bed2e57",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17851",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17851",
    "dockerfile": "",
    "pr_merged_at": "2024-12-05T21:31:58.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java\nindex 810d99d988d78..b88b596489a6b 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/DiscoverComponents.java\n@@ -69,6 +69,8 @@ public class DiscoverComponents implements MqttMessageSubscriber {\n      */\n     public static interface ComponentDiscovered {\n         void componentDiscovered(HaID homeAssistantTopicID, AbstractComponent<?> component);\n+\n+        void componentRemoved(HaID homeAssistantTopicID);\n     }\n \n     /**\n@@ -121,7 +123,9 @@ public void processMessage(String topic, byte[] payload) {\n                 logger.warn(\"HomeAssistant discover error: {}\", e.getMessage());\n             }\n         } else {\n-            logger.warn(\"Configuration of HomeAssistant thing {} is empty\", haID.objectID);\n+            if (discoveredListener != null) {\n+                discoveredListener.componentRemoved(haID);\n+            }\n         }\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscovery.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscovery.java\nindex ca675d346f8a1..0d8d99b29ff77 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscovery.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscovery.java\n@@ -18,18 +18,14 @@\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n import java.util.Set;\n-import java.util.TreeMap;\n-import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.TimeUnit;\n-import java.util.function.Function;\n-import java.util.stream.Collector;\n import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -76,27 +72,14 @@\n public class HomeAssistantDiscovery extends AbstractMQTTDiscovery {\n     private final Logger logger = LoggerFactory.getLogger(HomeAssistantDiscovery.class);\n     private HomeAssistantConfiguration configuration;\n-    protected final Map<String, Set<HaID>> componentsPerThingID = new TreeMap<>();\n-    protected final Map<String, ThingUID> thingIDPerTopic = new TreeMap<>();\n-    protected final Map<String, DiscoveryResult> results = new ConcurrentHashMap<>();\n+    protected final Map<String, Set<HaID>> componentsPerThingID = new HashMap<>();\n+    protected final Map<String, ThingUID> thingIDPerTopic = new HashMap<>();\n+    protected final Map<String, DiscoveryResult> results = new HashMap<>();\n+    protected final Map<String, DiscoveryResult> allResults = new HashMap<>();\n \n     private @Nullable ScheduledFuture<?> future;\n     private final Gson gson;\n \n-    public static final Map<String, String> HA_COMP_TO_NAME = new TreeMap<>();\n-    {\n-        HA_COMP_TO_NAME.put(\"alarm_control_panel\", \"Alarm Control Panel\");\n-        HA_COMP_TO_NAME.put(\"binary_sensor\", \"Sensor\");\n-        HA_COMP_TO_NAME.put(\"camera\", \"Camera\");\n-        HA_COMP_TO_NAME.put(\"cover\", \"Blind\");\n-        HA_COMP_TO_NAME.put(\"fan\", \"Fan\");\n-        HA_COMP_TO_NAME.put(\"climate\", \"Climate Control\");\n-        HA_COMP_TO_NAME.put(\"light\", \"Light\");\n-        HA_COMP_TO_NAME.put(\"lock\", \"Lock\");\n-        HA_COMP_TO_NAME.put(\"sensor\", \"Sensor\");\n-        HA_COMP_TO_NAME.put(\"switch\", \"Switch\");\n-    }\n-\n     static final String BASE_TOPIC = \"homeassistant\";\n     static final String BIRTH_TOPIC = \"homeassistant/status\";\n     static final String ONLINE_STATUS = \"online\";\n@@ -148,36 +131,8 @@ public Set<ThingTypeUID> getSupportedThingTypes() {\n         return typeProvider.getThingTypes(null).stream().map(ThingType::getUID).collect(Collectors.toSet());\n     }\n \n-    /**\n-     * Summarize components such as {Switch, Switch, Sensor} into string \"Sensor, 2x Switch\"\n-     *\n-     * @param componentNames stream of component names\n-     * @return summary string of component names and their counts\n-     */\n-    static String getComponentNamesSummary(Stream<String> componentNames) {\n-        StringBuilder summary = new StringBuilder();\n-        Collector<String, ?, Long> countingCollector = Collectors.counting();\n-        Map<String, Long> componentCounts = componentNames\n-                .collect(Collectors.groupingBy(Function.identity(), countingCollector));\n-        componentCounts.entrySet().stream().sorted(Map.Entry.comparingByKey()).forEach(entry -> {\n-            String componentName = entry.getKey();\n-            long count = entry.getValue();\n-            if (summary.length() > 0) {\n-                // not the first entry, so let's add the separating comma\n-                summary.append(\", \");\n-            }\n-            if (count > 1) {\n-                summary.append(count);\n-                summary.append(\"x \");\n-            }\n-            summary.append(componentName);\n-        });\n-        return summary.toString();\n-    }\n-\n     @Override\n-    public void receivedMessage(ThingUID connectionBridge, MqttBrokerConnection connection, String topic,\n-            byte[] payload) {\n+    public void receivedMessage(ThingUID bridgeUID, MqttBrokerConnection connection, String topic, byte[] payload) {\n         resetTimeout();\n \n         // For HomeAssistant we need to subscribe to a wildcard topic, because topics can either be:\n@@ -188,13 +143,7 @@ public void receivedMessage(ThingUID connectionBridge, MqttBrokerConnection conn\n             return;\n         }\n \n-        // Reset the found-component timer.\n-        // We will collect components for the thing label description for another 2 seconds.\n-        final ScheduledFuture<?> future = this.future;\n-        if (future != null) {\n-            future.cancel(false);\n-        }\n-        this.future = scheduler.schedule(this::publishResults, 2, TimeUnit.SECONDS);\n+        resetPublishTimer();\n \n         // We will of course find multiple of the same unique Thing IDs, for each different component another one.\n         // Therefore the components are assembled into a list and given to the DiscoveryResult label for the user to\n@@ -206,45 +155,18 @@ public void receivedMessage(ThingUID connectionBridge, MqttBrokerConnection conn\n                     .fromString(new String(payload, StandardCharsets.UTF_8), gson);\n \n             final String thingID = config.getThingId(haID.objectID);\n-            final ThingUID thingUID = new ThingUID(MqttBindingConstants.HOMEASSISTANT_MQTT_THING, connectionBridge,\n-                    thingID);\n-\n-            thingIDPerTopic.put(topic, thingUID);\n-\n-            // We need to keep track of already found component topics for a specific thing\n-            final List<HaID> components;\n-            {\n-                Set<HaID> componentsUnordered = componentsPerThingID.computeIfAbsent(thingID,\n-                        key -> ConcurrentHashMap.newKeySet());\n-\n-                // Invariant. For compiler, computeIfAbsent above returns always\n-                // non-null\n-                Objects.requireNonNull(componentsUnordered);\n-                componentsUnordered.add(haID);\n-\n-                components = componentsUnordered.stream().collect(Collectors.toList());\n-                // We sort the components for consistent jsondb serialization order of 'topics' thing property\n-                // Sorting key is HaID::toString, i.e. using the full topic string\n-                components.sort(Comparator.comparing(HaID::toString));\n-            }\n+            final ThingUID thingUID = new ThingUID(MqttBindingConstants.HOMEASSISTANT_MQTT_THING, bridgeUID, thingID);\n \n-            final String componentNames = getComponentNamesSummary(\n-                    components.stream().map(id -> id.component).map(c -> HA_COMP_TO_NAME.getOrDefault(c, c)));\n+            synchronized (results) {\n+                thingIDPerTopic.put(topic, thingUID);\n \n-            final List<String> topics = components.stream().map(HaID::toShortTopic).collect(Collectors.toList());\n+                Map<String, Object> properties = new HashMap<>();\n+                properties = config.appendToProperties(properties);\n+                properties.put(\"deviceId\", thingID);\n+                properties.put(\"newStyleChannels\", \"true\");\n \n-            Map<String, Object> properties = new HashMap<>();\n-            HandlerConfiguration handlerConfig = new HandlerConfiguration(haID.baseTopic, topics);\n-            properties = handlerConfig.appendToProperties(properties);\n-            properties = config.appendToProperties(properties);\n-            properties.put(\"deviceId\", thingID);\n-            properties.put(\"newStyleChannels\", \"true\");\n-\n-            // Because we need the new properties map with the updated \"components\" list\n-            results.put(thingUID.getAsString(),\n-                    DiscoveryResultBuilder.create(thingUID).withProperties(properties)\n-                            .withRepresentationProperty(\"deviceId\").withBridge(connectionBridge)\n-                            .withLabel(config.getThingName() + \" (\" + componentNames + \")\").build());\n+                buildResult(thingID, thingUID, config.getThingName(), haID, properties, bridgeUID);\n+            }\n         } catch (ConfigurationException e) {\n             logger.warn(\"HomeAssistant discover error: invalid configuration of thing {} component {}: {}\",\n                     haID.objectID, haID.component, e.getMessage());\n@@ -273,23 +195,64 @@ private void triggerDeviceDiscovery() {\n         getDiscoveryService().publish(BIRTH_TOPIC, ONLINE_STATUS.getBytes(), 1, false);\n     }\n \n+    private void resetPublishTimer() {\n+        // Reset the found-component timer.\n+        // We will collect components for the thing label description for another 2 seconds.\n+        final ScheduledFuture<?> future = this.future;\n+        if (future != null) {\n+            future.cancel(false);\n+        }\n+        this.future = scheduler.schedule(this::publishResults, 2, TimeUnit.SECONDS);\n+    }\n+\n+    private void buildResult(String thingID, ThingUID thingUID, String thingName, HaID haID,\n+            Map<String, Object> properties, ThingUID bridgeUID) {\n+        // We need to keep track of already found component topics for a specific thing\n+        final List<HaID> components;\n+        {\n+            Set<HaID> componentsUnordered = componentsPerThingID.computeIfAbsent(thingID, key -> new HashSet<>());\n+\n+            // Invariant. For compiler, computeIfAbsent above returns always\n+            // non-null\n+            Objects.requireNonNull(componentsUnordered);\n+            componentsUnordered.add(haID);\n+\n+            components = componentsUnordered.stream().collect(Collectors.toList());\n+            // We sort the components for consistent jsondb serialization order of 'topics' thing property\n+            // Sorting key is HaID::toString, i.e. using the full topic string\n+            components.sort(Comparator.comparing(HaID::toString));\n+        }\n+\n+        final List<String> topics = components.stream().map(HaID::toShortTopic).collect(Collectors.toList());\n+\n+        HandlerConfiguration handlerConfig = new HandlerConfiguration(haID.baseTopic, topics);\n+        properties = handlerConfig.appendToProperties(properties);\n+\n+        DiscoveryResult result = DiscoveryResultBuilder.create(thingUID).withProperties(properties)\n+                .withRepresentationProperty(\"deviceId\").withBridge(bridgeUID).withLabel(thingName).build();\n+        // Because we need the new properties map with the updated \"components\" list\n+        results.put(thingUID.toString(), result);\n+        allResults.put(thingUID.toString(), result);\n+    }\n+\n     protected void publishResults() {\n         Collection<DiscoveryResult> localResults;\n \n-        localResults = new ArrayList<>(results.values());\n-        results.clear();\n-        componentsPerThingID.clear();\n+        synchronized (results) {\n+            localResults = new ArrayList<>(results.values());\n+            results.clear();\n+        }\n         for (DiscoveryResult result : localResults) {\n             thingDiscovered(result);\n         }\n     }\n \n     @Override\n-    public void topicVanished(ThingUID connectionBridge, MqttBrokerConnection connection, String topic) {\n+    public void topicVanished(ThingUID bridgeUID, MqttBrokerConnection connection, String topic) {\n         if (!topic.endsWith(\"/config\")) {\n             return;\n         }\n-        if (thingIDPerTopic.containsKey(topic)) {\n+        synchronized (results) {\n             ThingUID thingUID = thingIDPerTopic.remove(topic);\n             if (thingUID != null) {\n                 final String thingID = thingUID.getId();\n@@ -299,7 +262,20 @@ public void topicVanished(ThingUID connectionBridge, MqttBrokerConnection connec\n                 Set<HaID> components = componentsPerThingID.getOrDefault(thingID, Collections.emptySet());\n                 components.remove(haID);\n                 if (components.isEmpty()) {\n+                    allResults.remove(thingUID.toString());\n+                    results.remove(thingUID.toString());\n                     thingRemoved(thingUID);\n+                } else {\n+                    resetPublishTimer();\n+\n+                    DiscoveryResult existingThing = allResults.get(thingUID.toString());\n+                    if (existingThing == null) {\n+                        logger.warn(\"Could not find discovery result for removed component {}; this is a bug\",\n+                                thingUID);\n+                        return;\n+                    }\n+                    Map<String, Object> properties = new HashMap<>(existingThing.getProperties());\n+                    buildResult(thingID, thingUID, existingThing.getLabel(), haID, properties, bridgeUID);\n                 }\n             }\n         }\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\nindex 11ce67c84f7ae..739c834d7ee67 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/handler/HomeAssistantThingHandler.java\n@@ -82,7 +82,7 @@\n  */\n @NonNullByDefault\n public class HomeAssistantThingHandler extends AbstractMQTTThingHandler\n-        implements ComponentDiscovered, Consumer<List<AbstractComponent<?>>> {\n+        implements ComponentDiscovered, Consumer<List<Object>> {\n     public static final String AVAILABILITY_CHANNEL = \"availability\";\n     private static final Comparator<AbstractComponent<?>> COMPONENT_COMPARATOR = Comparator\n             .comparing((AbstractComponent<?> component) -> component.hasGroup())\n@@ -96,12 +96,13 @@ public class HomeAssistantThingHandler extends AbstractMQTTThingHandler\n     protected final ChannelTypeRegistry channelTypeRegistry;\n     protected final Jinjava jinjava;\n     public final int attributeReceiveTimeout;\n-    protected final DelayedBatchProcessing<AbstractComponent<?>> delayedProcessing;\n+    protected final DelayedBatchProcessing<Object> delayedProcessing;\n     protected final DiscoverComponents discoverComponents;\n \n     private final Gson gson;\n     protected final Map<@Nullable String, AbstractComponent<?>> haComponents = new HashMap<>();\n     protected final Map<@Nullable String, AbstractComponent<?>> haComponentsByUniqueId = new HashMap<>();\n+    protected final Map<HaID, AbstractComponent<?>> haComponentsByHaId = new HashMap<>();\n     protected final Map<ChannelUID, ChannelState> channelStates = new HashMap<>();\n \n     protected HandlerConfiguration config = new HandlerConfiguration();\n@@ -267,12 +268,38 @@ public void componentDiscovered(HaID homeAssistantTopicID, AbstractComponent<?>\n         delayedProcessing.accept(component);\n     }\n \n+    @Override\n+    public void componentRemoved(HaID haID) {\n+        delayedProcessing.accept(haID);\n+    }\n+\n     /**\n      * Callback of {@link DelayedBatchProcessing}.\n-     * Add all newly discovered components to the Thing and start the components.\n+     * Add all newly discovered and removed components to the Thing and start the components.\n      */\n     @Override\n-    public void accept(List<AbstractComponent<?>> discoveredComponentsList) {\n+    public void accept(List<Object> actions) {\n+        List<AbstractComponent<?>> discoveredComponents = new ArrayList<>();\n+        List<HaID> removedComponents = new ArrayList<>();\n+        for (Object item : actions) {\n+            if (item instanceof AbstractComponent<?> component) {\n+                discoveredComponents.add(component);\n+            } else if (item instanceof HaID removedComponent) {\n+                removedComponents.add(removedComponent);\n+            }\n+        }\n+        if (!discoveredComponents.isEmpty()) {\n+            addComponents(discoveredComponents);\n+        }\n+        if (!removedComponents.isEmpty()) {\n+            removeComponents(removedComponents);\n+        }\n+    }\n+\n+    /**\n+     * Add all newly discovered components to the Thing and start the components.\n+     */\n+    private void addComponents(List<AbstractComponent<?>> discoveredComponentsList) {\n         MqttBrokerConnection connection = this.connection;\n         if (connection == null) {\n             return;\n@@ -293,6 +320,7 @@ public void accept(List<AbstractComponent<?>> discoveredComponentsList) {\n                         // The component will be replaced in a moment.\n                         known.stop();\n                         haComponentsByUniqueId.remove(discovered.getUniqueId());\n+                        haComponentsByHaId.remove(known.getHaID());\n                         haComponents.remove(known.getComponentId());\n                         if (!known.getComponentId().equals(discovered.getComponentId())) {\n                             discovered.resolveConflict();\n@@ -321,6 +349,29 @@ public void accept(List<AbstractComponent<?>> discoveredComponentsList) {\n         }\n     }\n \n+    /**\n+     * Remove all matching deleted components.\n+     */\n+    private void removeComponents(List<HaID> removedComponentsList) {\n+        synchronized (haComponents) {\n+            boolean componentActuallyRemoved = false;\n+            for (HaID removed : removedComponentsList) {\n+                AbstractComponent<?> known = haComponentsByHaId.get(removed);\n+                if (known != null) {\n+                    // Don't wait for the future to complete. We are also not interested in failures.\n+                    known.stop();\n+                    haComponentsByUniqueId.remove(known.getUniqueId());\n+                    haComponents.remove(known.getComponentId());\n+                    haComponentsByHaId.remove(removed);\n+                    componentActuallyRemoved = true;\n+                }\n+            }\n+            if (componentActuallyRemoved) {\n+                updateThingType(getThing().getThingTypeUID());\n+            }\n+        }\n+    }\n+\n     @Override\n     protected void updateThingStatus(boolean messageReceived, Optional<Boolean> availabilityTopicsSeen) {\n         if (availabilityTopicsSeen.orElse(messageReceived)) {\n@@ -402,7 +453,7 @@ private boolean updateThingType(ThingTypeUID typeID) {\n         return true;\n     }\n \n-    private ThingTypeUID calculateThingTypeUID(AbstractComponent component) {\n+    private ThingTypeUID calculateThingTypeUID(AbstractComponent<?> component) {\n         return new ThingTypeUID(MqttBindingConstants.BINDING_ID, MqttBindingConstants.HOMEASSISTANT_MQTT_THING.getId()\n                 + \"_\" + component.getChannelConfiguration().getThingId(component.getHaID().objectID));\n     }\n@@ -428,8 +479,8 @@ private void releaseStateUpdated(Update.ReleaseState state) {\n     }\n \n     // should only be called when it's safe to access haComponents\n-    private boolean addComponent(AbstractComponent component) {\n-        AbstractComponent existing = haComponents.get(component.getComponentId());\n+    private boolean addComponent(AbstractComponent<?> component) {\n+        AbstractComponent<?> existing = haComponents.get(component.getComponentId());\n         if (existing != null) {\n             // DeviceTriggers that are for the same subtype, topic, and value template\n             // can be coalesced together\n@@ -455,6 +506,7 @@ private boolean addComponent(AbstractComponent component) {\n                         });\n                     }\n                     haComponentsByUniqueId.put(component.getUniqueId(), component);\n+                    haComponentsByHaId.put(component.getHaID(), component);\n                     return false;\n                 }\n             }\n@@ -467,6 +519,7 @@ private boolean addComponent(AbstractComponent component) {\n         }\n         haComponents.put(component.getComponentId(), component);\n         haComponentsByUniqueId.put(component.getUniqueId(), component);\n+        haComponentsByHaId.put(component.getHaID(), component);\n         return true;\n     }\n \n@@ -478,16 +531,16 @@ private List<Configuration> flattenChannelConfiguration(Configuration multiCompo\n             ChannelUID channelUID) {\n         Object component = multiComponentChannelConfig.get(\"component\");\n         Object nodeid = multiComponentChannelConfig.get(\"nodeid\");\n-        if ((multiComponentChannelConfig.get(\"objectid\") instanceof List objectIds)\n-                && (multiComponentChannelConfig.get(\"config\") instanceof List configurations)) {\n+        if ((multiComponentChannelConfig.get(\"objectid\") instanceof List<?> objectIds)\n+                && (multiComponentChannelConfig.get(\"config\") instanceof List<?> configurations)) {\n             if (objectIds.size() != configurations.size()) {\n                 logger.warn(\"objectid and config for channel {} do not have the same number of items; ignoring\",\n                         channelUID);\n                 return List.of();\n             }\n-            List<Configuration> result = new ArrayList();\n-            Iterator<Object> objectIdIterator = objectIds.iterator();\n-            Iterator<Object> configIterator = configurations.iterator();\n+            List<Configuration> result = new ArrayList<>();\n+            Iterator<?> objectIdIterator = objectIds.iterator();\n+            Iterator<?> configIterator = configurations.iterator();\n             while (objectIdIterator.hasNext()) {\n                 Configuration componentConfiguration = new Configuration();\n                 componentConfiguration.put(\"component\", component);\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscoveryTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscoveryTests.java\nindex 15999087f4bef..d44e5a9763f53 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscoveryTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/discovery/HomeAssistantDiscoveryTests.java\n@@ -15,13 +15,13 @@\n import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n \n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n-import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -56,15 +56,84 @@ public void beforeEach() {\n     }\n \n     @Test\n-    public void testComponentNameSummary() {\n-        assertThat(\n-                HomeAssistantDiscovery.getComponentNamesSummary(\n-                        Stream.of(\"Sensor\", \"Switch\", \"Sensor\", \"Foobar\", \"Foobar\", \"Foobar\")), //\n-                is(\"3x Foobar, 2x Sensor, Switch\"));\n+    public void testOneThingDiscovery() throws Exception {\n+        var discoveryListener = new LatchDiscoveryListener();\n+        var latch = discoveryListener.createWaitForThingsDiscoveredLatch(1);\n+\n+        // When discover one thing with two channels\n+        discovery.addDiscoveryListener(discoveryListener);\n+        discovery.receivedMessage(HA_UID, bridgeConnection,\n+                \"homeassistant/climate/0x847127fffe11dd6a_climate_zigbee2mqtt/config\",\n+                getResourceAsByteArray(\"component/configTS0601ClimateThermostat.json\"));\n+        discovery.receivedMessage(HA_UID, bridgeConnection,\n+                \"homeassistant/switch/0x847127fffe11dd6a_auto_lock_zigbee2mqtt/config\",\n+                getResourceAsByteArray(\"component/configTS0601AutoLock.json\"));\n+\n+        // Then one thing found\n+        assert latch.await(3, TimeUnit.SECONDS);\n+        var discoveryResults = discoveryListener.getDiscoveryResults();\n+        assertThat(discoveryResults.size(), is(1));\n+        var result = discoveryResults.get(0);\n+        assertThat(result.getBridgeUID(), is(HA_UID));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_MODEL_ID),\n+                is(\"Radiator valve with thermostat (TS0601_thermostat)\"));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_VENDOR), is(\"TuYa\"));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_FIRMWARE_VERSION), is(\"Zigbee2MQTT 1.18.2\"));\n+        assertThat(result.getProperties().get(HandlerConfiguration.PROPERTY_BASETOPIC), is(\"homeassistant\"));\n+        assertThat(result.getLabel(), is(\"th1\"));\n+        assertThat((List<String>) result.getProperties().get(HandlerConfiguration.PROPERTY_TOPICS), hasItems(\n+                \"climate/0x847127fffe11dd6a_climate_zigbee2mqtt\", \"switch/0x847127fffe11dd6a_auto_lock_zigbee2mqtt\"));\n     }\n \n     @Test\n-    public void testOneThingDiscovery() throws Exception {\n+    public void testComponentAddedToExistingThing() throws Exception {\n+        var discoveryListener = new LatchDiscoveryListener();\n+        var latch = discoveryListener.createWaitForThingsDiscoveredLatch(1);\n+\n+        // When discover one thing with two channels\n+        discovery.addDiscoveryListener(discoveryListener);\n+        discovery.receivedMessage(HA_UID, bridgeConnection,\n+                \"homeassistant/climate/0x847127fffe11dd6a_climate_zigbee2mqtt/config\",\n+                getResourceAsByteArray(\"component/configTS0601ClimateThermostat.json\"));\n+\n+        // Then one thing found\n+        assert latch.await(3, TimeUnit.SECONDS);\n+        var discoveryResults = discoveryListener.getDiscoveryResults();\n+        assertThat(discoveryResults.size(), is(1));\n+        var result = discoveryResults.get(0);\n+        assertThat(result.getBridgeUID(), is(HA_UID));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_MODEL_ID),\n+                is(\"Radiator valve with thermostat (TS0601_thermostat)\"));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_VENDOR), is(\"TuYa\"));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_FIRMWARE_VERSION), is(\"Zigbee2MQTT 1.18.2\"));\n+        assertThat(result.getProperties().get(HandlerConfiguration.PROPERTY_BASETOPIC), is(\"homeassistant\"));\n+        assertThat(result.getLabel(), is(\"th1\"));\n+        assertThat((List<String>) result.getProperties().get(HandlerConfiguration.PROPERTY_TOPICS),\n+                hasItems(\"climate/0x847127fffe11dd6a_climate_zigbee2mqtt\"));\n+\n+        // Now another component added to the same thing\n+        latch = discoveryListener.createWaitForThingsDiscoveredLatch(1);\n+        discovery.receivedMessage(HA_UID, bridgeConnection,\n+                \"homeassistant/switch/0x847127fffe11dd6a_auto_lock_zigbee2mqtt/config\",\n+                getResourceAsByteArray(\"component/configTS0601AutoLock.json\"));\n+\n+        assert latch.await(3, TimeUnit.SECONDS);\n+        discoveryResults = discoveryListener.getDiscoveryResults();\n+        assertThat(discoveryResults.size(), is(1));\n+        result = discoveryResults.get(0);\n+        assertThat(result.getBridgeUID(), is(HA_UID));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_MODEL_ID),\n+                is(\"Radiator valve with thermostat (TS0601_thermostat)\"));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_VENDOR), is(\"TuYa\"));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_FIRMWARE_VERSION), is(\"Zigbee2MQTT 1.18.2\"));\n+        assertThat(result.getProperties().get(HandlerConfiguration.PROPERTY_BASETOPIC), is(\"homeassistant\"));\n+        assertThat(result.getLabel(), is(\"th1\"));\n+        assertThat((List<String>) result.getProperties().get(HandlerConfiguration.PROPERTY_TOPICS), hasItems(\n+                \"climate/0x847127fffe11dd6a_climate_zigbee2mqtt\", \"switch/0x847127fffe11dd6a_auto_lock_zigbee2mqtt\"));\n+    }\n+\n+    @Test\n+    public void testComponentRemovedFromExistingThing() throws Exception {\n         var discoveryListener = new LatchDiscoveryListener();\n         var latch = discoveryListener.createWaitForThingsDiscoveredLatch(1);\n \n@@ -88,9 +157,28 @@ public void testOneThingDiscovery() throws Exception {\n         assertThat(result.getProperties().get(Thing.PROPERTY_VENDOR), is(\"TuYa\"));\n         assertThat(result.getProperties().get(Thing.PROPERTY_FIRMWARE_VERSION), is(\"Zigbee2MQTT 1.18.2\"));\n         assertThat(result.getProperties().get(HandlerConfiguration.PROPERTY_BASETOPIC), is(\"homeassistant\"));\n-        assertThat(result.getLabel(), is(\"th1 (Climate Control, Switch)\"));\n+        assertThat(result.getLabel(), is(\"th1\"));\n         assertThat((List<String>) result.getProperties().get(HandlerConfiguration.PROPERTY_TOPICS), hasItems(\n                 \"climate/0x847127fffe11dd6a_climate_zigbee2mqtt\", \"switch/0x847127fffe11dd6a_auto_lock_zigbee2mqtt\"));\n+\n+        // Now remove the second component\n+        latch = discoveryListener.createWaitForThingsDiscoveredLatch(1);\n+        discovery.topicVanished(HA_UID, bridgeConnection,\n+                \"homeassistant/switch/0x847127fffe11dd6a_auto_lock_zigbee2mqtt/config\");\n+\n+        assert latch.await(3, TimeUnit.SECONDS);\n+        discoveryResults = discoveryListener.getDiscoveryResults();\n+        assertThat(discoveryResults.size(), is(1));\n+        result = discoveryResults.get(0);\n+        assertThat(result.getBridgeUID(), is(HA_UID));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_MODEL_ID),\n+                is(\"Radiator valve with thermostat (TS0601_thermostat)\"));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_VENDOR), is(\"TuYa\"));\n+        assertThat(result.getProperties().get(Thing.PROPERTY_FIRMWARE_VERSION), is(\"Zigbee2MQTT 1.18.2\"));\n+        assertThat(result.getProperties().get(HandlerConfiguration.PROPERTY_BASETOPIC), is(\"homeassistant\"));\n+        assertThat(result.getLabel(), is(\"th1\"));\n+        assertThat((List<String>) result.getProperties().get(HandlerConfiguration.PROPERTY_TOPICS),\n+                hasItems(\"climate/0x847127fffe11dd6a_climate_zigbee2mqtt\"));\n     }\n \n     private static class TestHomeAssistantDiscovery extends HomeAssistantDiscovery {\n@@ -122,8 +210,10 @@ public void thingRemoved(DiscoveryService source, ThingUID thingUID) {\n             return Collections.emptyList();\n         }\n \n-        public CopyOnWriteArrayList<DiscoveryResult> getDiscoveryResults() {\n-            return discoveryResults;\n+        public List<DiscoveryResult> getDiscoveryResults() {\n+            ArrayList<DiscoveryResult> localResults = new ArrayList<>(discoveryResults);\n+            discoveryResults.clear();\n+            return localResults;\n         }\n \n         public CountDownLatch createWaitForThingsDiscoveredLatch(int count) {\n\ndiff --git a/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java b/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java\nindex 64781741ea182..d001274eb6033 100644\n--- a/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java\n+++ b/itests/org.openhab.binding.mqtt.homeassistant.tests/src/main/java/org/openhab/binding/mqtt/homeassistant/HomeAssistantMQTTImplementationTest.java\n@@ -138,6 +138,26 @@ public void retrieveAllTopics() throws Exception {\n                 \"Connection \" + haConnection.getClientId() + \" not retrieving all topics\");\n     }\n \n+    private static class ComponentDiscoveredProxy implements ComponentDiscovered {\n+        private final Map<String, AbstractComponent<?>> haComponents;\n+        private final CountDownLatch latch;\n+\n+        public ComponentDiscoveredProxy(Map<String, AbstractComponent<?>> haComponents, CountDownLatch latch) {\n+            this.haComponents = haComponents;\n+            this.latch = latch;\n+        }\n+\n+        @Override\n+        public void componentDiscovered(HaID homeAssistantTopicID, AbstractComponent<?> component) {\n+            haComponents.put(component.getComponentId(), component);\n+            latch.countDown();\n+        }\n+\n+        @Override\n+        public void componentRemoved(HaID homeAssistantTopicID) {\n+        }\n+    }\n+\n     @Test\n     public void parseHATree() throws Exception {\n         MqttChannelTypeProvider channelTypeProvider = mock(MqttChannelTypeProvider.class);\n@@ -154,10 +174,7 @@ public void parseHATree() throws Exception {\n         // In the following implementation we add the found component to the `haComponents` map\n         // and add the types to the channelTypeProvider, like in the real Thing handler.\n         final CountDownLatch latch = new CountDownLatch(1);\n-        ComponentDiscovered cd = (haID, c) -> {\n-            haComponents.put(c.getComponentId(), c);\n-            latch.countDown();\n-        };\n+        ComponentDiscovered cd = new ComponentDiscoveredProxy(haComponents, latch);\n \n         // Start the discovery for 2000ms. Forced timeout after 4000ms.\n         HaID haID = new HaID(testObjectTopic + \"/config\");\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17810",
    "pr_id": 17810,
    "issue_id": 17799,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[growatt] Add missing channels for MID inverter and Smart Meter\nThe MID Inverter and Smart Meter device data values contain Json fields that are currently a) not mapped to fields in the binding DTO, and (therefore) b) not mapped to channels in the binding, as listed below:\r\n\r\n### MID Inverter\r\n\r\nPV strings 3 and 4 fields (the binding currently only reports two PV strings):\r\n- pv3voltage\r\n- pv3current\r\n- pv3watt\r\n- pv4voltage\r\n- pv4current\r\n- pv4watt\r\n\r\nPV phase output fields (NB check why phase #2 is mapped):\r\n- epvtotal \r\n- epv1today \r\n- epv3today\r\n- epv3total\r\n\r\nMiscellaneous fields:\r\n- deratingmode\r\n- iso\r\n- dcir\r\n- dcis\r\n- dcit\r\n- gfci\r\n- ipf\r\n- realoppercent\r\n- opfullwatt\r\n- standbyflag\r\n- warningcode\r\n- invstartdelaytime\r\n- bdconoffstate\r\n- drycontactstate\r\n- priority\r\n- pf\r\n- dcv\r\n\r\nEmergency power supply fields:\r\n- epsfac\r\n- epsvac1\r\n- epsiac1\r\n- epspac1\r\n- epsvac2\r\n- epsiac2\r\n- epspac2\r\n- epsvac3\r\n- epsiac3\r\n- epspac3\r\n- epspac\r\n\r\nBattery Management Unit fields:\r\n- bdc1_sysstatemode\r\n- bdc1_faultcode\r\n- bdc1_warncode\r\n- bdc1_vbat\r\n- bdc1_ibat\r\n- bdc1_soc\r\n- bdc1_vbus1\r\n- bdc1_vbus2\r\n- bdc1_ibb\r\n- bdc1_illc\r\n- bdc1_tempb\r\n- bdc1_edischrtotal\r\n- bdc1_echrtotal\r\n- bdc1_flag\r\n- bdc2_sysstatemode\r\n- bdc2_faultcode\r\n- bdc2_warncode\r\n- bdc2_vbat\r\n- bdc2_ibat\r\n- bdc2_soc\r\n- bdc2_vbus1\r\n- bdc2_vbus2\r\n- bdc2_ibb\r\n- bdc2_illc\r\n- bdc2_tempa\r\n- bdc2_tempb\r\n- bdc2_pdischr\r\n- bdc2_pchr\r\n- bdc2_edischrtotal\r\n- bdc2_echrtotal\r\n- bdc2_flag\r\n- bms_status\r\n- bms_error\r\n- bms_warninfo\r\n- bms_batterycurr\r\n- bms_batterytemp\r\n- bms_maxcurr\r\n- bms_deltavolt\r\n- bms_cyclecnt\r\n- bms_soh\r\n- bms_constantvolt\r\n- bms_bms_info\r\n- bms_packinfo\r\n- bms_usingcap\r\n- bms_fw\r\n- bms_mcuversion\r\n- bms_commtype\r\n\r\n### Smart Meter\r\nPhase power, va, and power factor:\r\n- app_power_l1\r\n- app_power_l2\r\n- app_power_l3\r\n- react_power_l1\r\n- react_power_l2\r\n- react_power_l3\r\n- powerfactor_l1\r\n- powerfactor_l2\r\n- powerfactor_l3\r\n\r\nMiscellaneous fields:\r\n- pos_act_power\r\n- rev_act_power\r\n- app_power\r\n- powerfactor\r\n- frequency\r\n\r\nSigned-off-by: AndrewFG <software@whitebear.ch>",
    "issue_word_count": 200,
    "test_files_count": 1,
    "non_test_files_count": 6,
    "pr_changed_files": [
      "bundles/org.openhab.binding.growatt/README.md",
      "bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/GrowattChannels.java",
      "bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/dto/GrottValues.java",
      "bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/i18n/growatt.properties",
      "bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/thing/thing-types.xml",
      "bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/update/instructions.xml",
      "bundles/org.openhab.binding.growatt/src/test/java/org/openhab/binding/growatt/test/GrowattTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.growatt/src/test/java/org/openhab/binding/growatt/test/GrowattTest.java"
    ],
    "base_commit": "81e488d65fc422c75566c427f923dceac9811a1a",
    "head_commit": "d97eb6cf00c49b055db0b95b65aa6bde64fa19cd",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17810",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17810",
    "dockerfile": "",
    "pr_merged_at": "2024-11-30T19:05:03.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.growatt/README.md b/bundles/org.openhab.binding.growatt/README.md\nindex 2ff4e17136d88..ecfb0adb0e96e 100644\n--- a/bundles/org.openhab.binding.growatt/README.md\n+++ b/bundles/org.openhab.binding.growatt/README.md\n@@ -142,6 +142,25 @@ The list of all possible channels is as follows:\n | charge-va                      | Number:Power              | Charging reactive power.                             | yes      |\n | inverter-clock-offset          | Number:Time               | Time offset of inverter clock vs. OH system clock.   | yes      |\n | inverter-fan-speed             | Number:Dimensionless      | Inverter fan speed percent.                          | yes      |\n+| pv3-voltage                    | Number:ElectricPotential  | Voltage from solar panel string #3.                  | yes      |\n+| pv3-current                    | Number:ElectricCurrent    | Current from solar panel string #3.                  | yes      |\n+| pv3-power                      | Number:Power              | Power from solar panel string #3.                    | yes      |\n+| pv4-voltage                    | Number:ElectricPotential  | Voltage from solar panel string #4.                  | yes      |\n+| pv4-current                    | Number:ElectricCurrent    | Current from solar panel string #4.                  | yes      |\n+| pv4-power                      | Number:Power              | Power from solar panel string #4.                    | yes      |\n+| pv3-energy-today               | Number:Energy             | Solar DC energy collected by string #3 today.        | yes      |\n+| pv3-energy-total               | Number:Energy             | Total solar DC energy collected by string #3.        | yes      |\n+| power-factor                   | Number:Percent            | Electrical power factor                              | yes      |\n+| eps-voltage-r                  | Number:ElectricPotential  | Emergency Power Supply voltage (phase #R).           | yes      |\n+| eps-voltage-s                  | Number:ElectricPotential  | Emergency Power Supply voltage (phase #S).           | yes      |\n+| eps-voltage-t                  | Number:ElectricPotential  | Emergency Power Supply voltage (phase #T).           | yes      |\n+| eps-current-r                  | Number:ElectricCurrent    | Emergency Power Supply current (phase #R).           | yes      |\n+| eps-current-s                  | Number:ElectricCurrent    | Emergency Power Supply current (phase #S).           | yes      |\n+| eps-current-t                  | Number:ElectricCurrent    | Emergency Power Supply current (phase #T).           | yes      |\n+| eps-power                      | Number:Power              | Total Emergency Power Supply power.                  | yes      |\n+| eps-power-r                    | Number:Power              | Emergency Power Supply power (phase #R).             | yes      |\n+| eps-power-s                    | Number:Power              | Emergency Power Supply power (phase #S).             | yes      |\n+| eps-power-t                    | Number:Power              | Emergency Power Supply power (phase #T).             | yes      |\n \n ## Rule Actions\n \n\ndiff --git a/bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/GrowattChannels.java b/bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/GrowattChannels.java\nindex 09ad616fe35d0..ec20af235c3de 100644\n--- a/bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/GrowattChannels.java\n+++ b/bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/GrowattChannels.java\n@@ -14,6 +14,9 @@\n \n import java.util.AbstractMap;\n import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n import javax.measure.Unit;\n \n@@ -206,11 +209,158 @@ public UoM(Unit<?> units, float divisor) {\n \n             // inverter\n             new AbstractMap.SimpleEntry<String, UoM>(\"inverter-current\", new UoM(Units.AMPERE, 10)),\n-            new AbstractMap.SimpleEntry<String, UoM>(\"inverter-fan-speed\", new UoM(Units.PERCENT, 1))\n+            new AbstractMap.SimpleEntry<String, UoM>(\"inverter-fan-speed\", new UoM(Units.PERCENT, 1)),\n+\n+            /*\n+             * ============== CHANNELS ADDED IN PR #17810 ==============\n+             */\n+\n+            // DC electric data for strings #3 and #4\n+            new AbstractMap.SimpleEntry<String, UoM>(\"pv3-voltage\", new UoM(Units.VOLT, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"pv3-current\", new UoM(Units.AMPERE, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"pv3-power\", new UoM(Units.WATT, 10)),\n+\n+            new AbstractMap.SimpleEntry<String, UoM>(\"pv4-voltage\", new UoM(Units.VOLT, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"pv4-current\", new UoM(Units.AMPERE, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"pv4-power\", new UoM(Units.WATT, 10)),\n+\n+            // solar DC pv energy\n+            new AbstractMap.SimpleEntry<String, UoM>(\"pv3-energy-today\", new UoM(Units.KILOWATT_HOUR, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"pv3-energy-total\", new UoM(Units.KILOWATT_HOUR, 10)),\n+\n+            // power factor\n+            new AbstractMap.SimpleEntry<String, UoM>(\"power-factor\", new UoM(Units.PERCENT, 10)),\n+\n+            // emergency power supply (eps)\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-voltage-r\", new UoM(Units.VOLT, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-voltage-s\", new UoM(Units.VOLT, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-voltage-t\", new UoM(Units.VOLT, 10)),\n+\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-current-r\", new UoM(Units.AMPERE, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-current-s\", new UoM(Units.AMPERE, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-current-t\", new UoM(Units.AMPERE, 10)),\n+\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-power\", new UoM(Units.WATT, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-power-r\", new UoM(Units.WATT, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-power-s\", new UoM(Units.WATT, 10)),\n+            new AbstractMap.SimpleEntry<String, UoM>(\"eps-power-t\", new UoM(Units.WATT, 10))\n+\n     //\n     );\n \n     public static Map<String, UoM> getMap() {\n         return GrowattChannels.CHANNEL_ID_UOM_MAP;\n     }\n+\n+    /**\n+     * Map of Growatt JSON field names that are not used in the creation of device Channels.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static final Map<String, Set<String>> UNUSED_FIELDS = Stream.of(new Object[][] {\n+        // @formatter:off\n+\n+            // simple inverter\n+            { \"simple\", Set.of(\n+                    \"datalogserial\",\n+                    \"pvserial\") },\n+\n+            // sph inverter\n+            { \"sph\", Set.of(\n+                    \"datalogserial\",\n+                    \"pvserial\") },\n+\n+            // spf inverter\n+            { \"spf\", Set.of(\n+                    \"datalogserial\",\n+                    \"pvserial\") },\n+\n+            // mid inverter\n+            { \"mid\", Set.of(\n+                    \"datalogserial\",\n+                    \"pvserial\",\n+                    \"deratingmode\",\n+                    \"iso\",\n+                    \"dcir\",\n+                    \"dcis\",\n+                    \"dcit\",\n+                    \"gfci\",\n+                    \"ipf\",\n+                    \"realoppercent\",\n+                    \"opfullwatt\",\n+                    \"standbyflag\",\n+                    \"warningcode\",\n+                    \"invstartdelaytime\",\n+                    \"bdconoffstate\",\n+                    \"drycontactstate\",\n+                    \"priority\",\n+                    \"epsfac\",\n+                    \"dcv\",\n+                    \"bdc1_sysstatemode\",\n+                    \"bdc1_faultcode\",\n+                    \"bdc1_warncode\",\n+                    \"bdc1_vbat\",\n+                    \"bdc1_ibat\",\n+                    \"bdc1_soc\",\n+                    \"bdc1_vbus1\",\n+                    \"bdc1_vbus2\",\n+                    \"bdc1_ibb\",\n+                    \"bdc1_illc\",\n+                    \"bdc1_tempb\",\n+                    \"bdc1_edischrtotal\",\n+                    \"bdc1_echrtotal\",\n+                    \"bdc1_flag\",\n+                    \"bdc2_sysstatemode\",\n+                    \"bdc2_faultcode\",\n+                    \"bdc2_warncode\",\n+                    \"bdc2_vbat\",\n+                    \"bdc2_ibat\",\n+                    \"bdc2_soc\",\n+                    \"bdc2_vbus1\",\n+                    \"bdc2_vbus2\",\n+                    \"bdc2_ibb\",\n+                    \"bdc2_illc\",\n+                    \"bdc2_tempa\",\n+                    \"bdc2_tempb\",\n+                    \"bdc2_pdischr\",\n+                    \"bdc2_pchr\",\n+                    \"bdc2_edischrtotal\",\n+                    \"bdc2_echrtotal\",\n+                    \"bdc2_flag\",\n+                    \"bms_status\",\n+                    \"bms_error\",\n+                    \"bms_warninfo\",\n+                    \"bms_batterycurr\",\n+                    \"bms_batterytemp\",\n+                    \"bms_maxcurr\",\n+                    \"bms_deltavolt\",\n+                    \"bms_cyclecnt\",\n+                    \"bms_soh\",\n+                    \"bms_constantvolt\",\n+                    \"bms_bms_info\",\n+                    \"bms_packinfo\",\n+                    \"bms_usingcap\",\n+                    \"bms_fw\",\n+                    \"bms_mcuversion\",\n+                    \"bms_commtype\") },\n+\n+            // smart meter\n+            { \"meter\", Set.of(\n+                    \"datalogserial\",\n+                    \"pvserial\",\n+                    \"pvstatus\",\n+                    \"app_power_l1\",\n+                    \"app_power_l2\",\n+                    \"app_power_l3\",\n+                    \"react_power_l1\",\n+                    \"react_power_l2\",\n+                    \"react_power_l3\",\n+                    \"powerfactor_l1\",\n+                    \"powerfactor_l2\",\n+                    \"powerfactor_l3\",\n+                    \"pos_act_power\",\n+                    \"rev_act_power\",\n+                    \"app_power\") },\n+\n+        // @formatter:on\n+    }).collect(Collectors.toMap(objects -> (String) objects[0], objects -> (Set<String>) objects[1]));\n }\n\ndiff --git a/bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/dto/GrottValues.java b/bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/dto/GrottValues.java\nindex ad419e269145d..ef1f17be19521 100644\n--- a/bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/dto/GrottValues.java\n+++ b/bundles/org.openhab.binding.growatt/src/main/java/org/openhab/binding/growatt/internal/dto/GrottValues.java\n@@ -58,7 +58,7 @@ public static String getFieldName(String channelId) {\n     public @Nullable @SerializedName(value = \"pv2watt\", alternate = { \"ppv2\" }) Integer pv2_power;\n \n     // AC mains electric data (1-phase resp. 3-phase)\n-    public @Nullable @SerializedName(value = \"pvfrequentie\", alternate = { \"line_freq\", \"outputfreq\" }) Integer grid_frequency;\n+    public @Nullable @SerializedName(value = \"pvfrequentie\", alternate = { \"line_freq\", \"outputfreq\", \"frequency\" }) Integer grid_frequency;\n     public @Nullable @SerializedName(value = \"pvgridvoltage\", alternate = { \"grid_volt\", \"outputvolt\", \"voltage_l1\" }) Integer grid_voltage_r;\n     public @Nullable @SerializedName(value = \"pvgridvoltage2\", alternate = { \"voltage_l2\" }) Integer grid_voltage_s;\n     public @Nullable @SerializedName(value = \"pvgridvoltage3\", alternate = { \"voltage_l3\" }) Integer grid_voltage_t;\n@@ -110,10 +110,10 @@ public static String getFieldName(String channelId) {\n \n     // solar DC pv energy\n     public @Nullable @SerializedName(value = \"epvtoday\") Integer pv_energy_today;\n-    public @Nullable @SerializedName(value = \"epv1today\", alternate = { \"epv1tod\" }) Integer pv1_energy_today;\n+    public @Nullable @SerializedName(value = \"epv1today\", alternate = { \"epv1tod\", \"epv1today \" }) Integer pv1_energy_today; // alternate intentionally has trailing space\n     public @Nullable @SerializedName(value = \"epv2today\", alternate = { \"epv2tod\" }) Integer pv2_energy_today;\n \n-    public @Nullable @SerializedName(value = \"epvtotal\") Integer pv_energy_total;\n+    public @Nullable @SerializedName(value = \"epvtotal\", alternate = { \"epvtotal \" }) Integer pv_energy_total; // alternate intentionally has trailing space\n     public @Nullable @SerializedName(value = \"epv1total\", alternate = { \"epv1tot\" }) Integer pv1_energy_total;\n     public @Nullable @SerializedName(value = \"epv2total\", alternate = { \"epv2tot\" }) Integer pv2_energy_total;\n \n@@ -202,5 +202,39 @@ public static String getFieldName(String channelId) {\n     public @Nullable @SerializedName(value = \"Inv_Curr\") Integer inverter_current;\n     public @Nullable @SerializedName(value = \"invfanspeed\") Integer inverter_fan_speed;\n \n+    /*\n+     * ============== CHANNELS ADDED IN PR #17810 ==============\n+     */\n+\n+    // DC electric data for strings #3 and #4\n+    public @Nullable @SerializedName(value = \"pv3voltage\") Integer pv3_voltage;\n+    public @Nullable @SerializedName(value = \"pv3current\") Integer pv3_current;\n+    public @Nullable @SerializedName(value = \"pv3watt\") Integer pv3_power;\n+\n+    public @Nullable @SerializedName(value = \"pv4voltage\") Integer pv4_voltage;\n+    public @Nullable @SerializedName(value = \"pv4current\") Integer pv4_current;\n+    public @Nullable @SerializedName(value = \"pv4watt\") Integer pv4_power;\n+\n+    // solar DC pv energy\n+    public @Nullable @SerializedName(value = \"epv3today\") Integer pv3_energy_today;\n+    public @Nullable @SerializedName(value = \"epv3total\") Integer pv3_energy_total;\n+\n+    // power factor\n+    public @Nullable @SerializedName(value = \"pf\", alternate = { \"powerfactor\" }) Integer power_factor;\n+\n+    // emergency power supply (eps)\n+    public @Nullable @SerializedName(value = \"epsvac1\") Integer eps_voltage_r;\n+    public @Nullable @SerializedName(value = \"epsvac2\") Integer eps_voltage_s;\n+    public @Nullable @SerializedName(value = \"epsvac3\") Integer eps_voltage_t;\n+\n+    public @Nullable @SerializedName(value = \"epsiac1\") Integer eps_current_r;\n+    public @Nullable @SerializedName(value = \"epsiac2\") Integer eps_current_s;\n+    public @Nullable @SerializedName(value = \"epsiac3\") Integer eps_current_t;\n+\n+    public @Nullable @SerializedName(value = \"epspac\") Integer eps_power;\n+    public @Nullable @SerializedName(value = \"epspac1\") Integer eps_power_r;\n+    public @Nullable @SerializedName(value = \"epspac2\") Integer eps_power_s;\n+    public @Nullable @SerializedName(value = \"epspac3\") Integer eps_power_t;\n+\n     // @formatter:on\n }\n\ndiff --git a/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/i18n/growatt.properties b/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/i18n/growatt.properties\nindex 055bf3b1cccb6..585ab4e7c7a8d 100644\n--- a/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/i18n/growatt.properties\n+++ b/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/i18n/growatt.properties\n@@ -45,6 +45,26 @@ thing-type.growatt.inverter.channel.discharge-power.label = Discharge Power\n thing-type.growatt.inverter.channel.discharge-power.description = Discharge power from battery.\n thing-type.growatt.inverter.channel.discharge-va.label = Discharge VA\n thing-type.growatt.inverter.channel.discharge-va.description = Discharge VA from battery.\n+thing-type.growatt.inverter.channel.eps-current-r.label = EPS Current #R\n+thing-type.growatt.inverter.channel.eps-current-r.description = Emergency Power Supply current (phase #R).\n+thing-type.growatt.inverter.channel.eps-current-s.label = EPS Current #S\n+thing-type.growatt.inverter.channel.eps-current-s.description = Emergency Power Supply current (phase #S).\n+thing-type.growatt.inverter.channel.eps-current-t.label = EPS Current #T\n+thing-type.growatt.inverter.channel.eps-current-t.description = Emergency Power Supply current (phase #T).\n+thing-type.growatt.inverter.channel.eps-power.label = EPS Power\n+thing-type.growatt.inverter.channel.eps-power.description = Total Emergency Power Supply power.\n+thing-type.growatt.inverter.channel.eps-power-r.label = EPS Power #R\n+thing-type.growatt.inverter.channel.eps-power-r.description = Emergency Power Supply power (phase #R).\n+thing-type.growatt.inverter.channel.eps-power-s.label = EPS Power #S\n+thing-type.growatt.inverter.channel.eps-power-s.description = Emergency Power Supply power (phase #S).\n+thing-type.growatt.inverter.channel.eps-power-t.label = EPS Power #T\n+thing-type.growatt.inverter.channel.eps-power-t.description = Emergency Power Supply power (phase #T).\n+thing-type.growatt.inverter.channel.eps-voltage-r.label = EPS Voltage #R\n+thing-type.growatt.inverter.channel.eps-voltage-r.description = Emergency Power Supply voltage (phase #R).\n+thing-type.growatt.inverter.channel.eps-voltage-s.label = EPS Voltage #S\n+thing-type.growatt.inverter.channel.eps-voltage-s.description = Emergency Power Supply voltage (phase #S).\n+thing-type.growatt.inverter.channel.eps-voltage-t.label = EPS Voltage #T\n+thing-type.growatt.inverter.channel.eps-voltage-t.description = Emergency Power Supply voltage (phase #T).\n thing-type.growatt.inverter.channel.erac-today.label = Reactive Energy Today\n thing-type.growatt.inverter.channel.erac-today.description = Reactive energy supplied today.\n thing-type.growatt.inverter.channel.erac-total.label = Total Reactive Energy\n@@ -137,6 +157,8 @@ thing-type.growatt.inverter.channel.n-bus-voltage.label = N Bus Voltage\n thing-type.growatt.inverter.channel.n-bus-voltage.description = N Bus voltage.\n thing-type.growatt.inverter.channel.p-bus-voltage.label = P Bus Voltage\n thing-type.growatt.inverter.channel.p-bus-voltage.description = P Bus voltage.\n+thing-type.growatt.inverter.channel.power-factor.label = Power Factor\n+thing-type.growatt.inverter.channel.power-factor.description = Electrical power factor\n thing-type.growatt.inverter.channel.pv-boost-temperature.label = Boost Temperature\n thing-type.growatt.inverter.channel.pv-boost-temperature.description = Boost temperature.\n thing-type.growatt.inverter.channel.pv-energy-today.label = DC Energy Today\n@@ -171,6 +193,22 @@ thing-type.growatt.inverter.channel.pv2-temperature.label = Solar Panel Temperat\n thing-type.growatt.inverter.channel.pv2-temperature.description = Temperature of the solar panels (string #2).\n thing-type.growatt.inverter.channel.pv2-voltage.label = String #2 Voltage\n thing-type.growatt.inverter.channel.pv2-voltage.description = Voltage from solar panel string #2.\n+thing-type.growatt.inverter.channel.pv3-current.label = String #3 Current\n+thing-type.growatt.inverter.channel.pv3-current.description = Current from solar panel string #3.\n+thing-type.growatt.inverter.channel.pv3-energy-today.label = DC Energy #3 Today\n+thing-type.growatt.inverter.channel.pv3-energy-today.description = Solar DC energy collected by string #3.\n+thing-type.growatt.inverter.channel.pv3-energy-total.label = DC Energy #3 Total\n+thing-type.growatt.inverter.channel.pv3-energy-total.description = Total solar DC energy collected by string #3.\n+thing-type.growatt.inverter.channel.pv3-power.label = String #3 Power\n+thing-type.growatt.inverter.channel.pv3-power.description = Power from solar panel string #3.\n+thing-type.growatt.inverter.channel.pv3-voltage.label = String #3 Voltage\n+thing-type.growatt.inverter.channel.pv3-voltage.description = Voltage from solar panel string #3.\n+thing-type.growatt.inverter.channel.pv4-current.label = String #4 Current\n+thing-type.growatt.inverter.channel.pv4-current.description = Current from solar panel string #4.\n+thing-type.growatt.inverter.channel.pv4-power.label = String #4 Power\n+thing-type.growatt.inverter.channel.pv4-power.description = Power from solar panel string #4.\n+thing-type.growatt.inverter.channel.pv4-voltage.label = String #4 Voltage\n+thing-type.growatt.inverter.channel.pv4-voltage.description = Voltage from solar panel string #4.\n thing-type.growatt.inverter.channel.rac.label = Reactive Power\n thing-type.growatt.inverter.channel.rac.description = Reactive power output.\n thing-type.growatt.inverter.channel.sp-bus-voltage.label = SP Bus Voltage\n\ndiff --git a/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/thing/thing-types.xml b/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/thing/thing-types.xml\nindex 5b99ab7f49546..c5c5f53111093 100644\n--- a/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/thing/thing-types.xml\n+++ b/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/thing/thing-types.xml\n@@ -480,10 +480,99 @@\n \t\t\t\t<description>Inverter fan speed.</description>\n \t\t\t</channel>\n \n+\t\t\t<!-- ============== CHANNELS ADDED IN PR #17810 ============== -->\n+\n+\t\t\t<!-- DC electric data for strings #3 and #4 -->\n+\t\t\t<channel id=\"pv3-voltage\" typeId=\"advanced-electric-voltage\">\n+\t\t\t\t<label>String #3 Voltage</label>\n+\t\t\t\t<description>Voltage from solar panel string #3.</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"pv3-current\" typeId=\"advanced-electric-current\">\n+\t\t\t\t<label>String #3 Current</label>\n+\t\t\t\t<description>Current from solar panel string #3.</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"pv3-power\" typeId=\"advanced-electric-power\">\n+\t\t\t\t<label>String #3 Power</label>\n+\t\t\t\t<description>Power from solar panel string #3.</description>\n+\t\t\t</channel>\n+\n+\t\t\t<channel id=\"pv4-voltage\" typeId=\"advanced-electric-voltage\">\n+\t\t\t\t<label>String #4 Voltage </label>\n+\t\t\t\t<description>Voltage from solar panel string #4.</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"pv4-current\" typeId=\"advanced-electric-current\">\n+\t\t\t\t<label>String #4 Current</label>\n+\t\t\t\t<description>Current from solar panel string #4.</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"pv4-power\" typeId=\"advanced-electric-power\">\n+\t\t\t\t<label>String #4 Power</label>\n+\t\t\t\t<description>Power from solar panel string #4.</description>\n+\t\t\t</channel>\n+\n+\t\t\t<!-- solar DC pv energy -->\n+\t\t\t<channel id=\"pv3-energy-today\" typeId=\"advanced-electric-energy\">\n+\t\t\t\t<label>DC Energy #3 Today</label>\n+\t\t\t\t<description>Solar DC energy collected by string #3 today.</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"pv3-energy-total\" typeId=\"advanced-electric-energy\">\n+\t\t\t\t<label>DC Energy #3 Total</label>\n+\t\t\t\t<description>Total solar DC energy collected by string #3.</description>\n+\t\t\t</channel>\n+\n+\t\t\t<!-- power factor -->\n+\t\t\t<channel id=\"power-factor\" typeId=\"advanced-percent\">\n+\t\t\t\t<label>Power Factor</label>\n+\t\t\t\t<description>Electrical power factor</description>\n+\t\t\t</channel>\n+\n+\t\t\t<!-- emergency power supply (eps) -->\n+\t\t\t<channel id=\"eps-voltage-r\" typeId=\"advanced-electric-voltage\">\n+\t\t\t\t<label>EPS Voltage #R</label>\n+\t\t\t\t<description>Emergency Power Supply voltage (phase #R).</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"eps-voltage-s\" typeId=\"advanced-electric-voltage\">\n+\t\t\t\t<label>EPS Voltage #S</label>\n+\t\t\t\t<description>Emergency Power Supply voltage (phase #S).</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"eps-voltage-t\" typeId=\"advanced-electric-voltage\">\n+\t\t\t\t<label>EPS Voltage #T</label>\n+\t\t\t\t<description>Emergency Power Supply voltage (phase #T).</description>\n+\t\t\t</channel>\n+\n+\t\t\t<channel id=\"eps-current-r\" typeId=\"advanced-electric-current\">\n+\t\t\t\t<label>EPS Current #R</label>\n+\t\t\t\t<description>Emergency Power Supply current (phase #R).</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"eps-current-s\" typeId=\"advanced-electric-current\">\n+\t\t\t\t<label>EPS Current #S</label>\n+\t\t\t\t<description>Emergency Power Supply current (phase #S).</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"eps-current-t\" typeId=\"advanced-electric-current\">\n+\t\t\t\t<label>EPS Current #T</label>\n+\t\t\t\t<description>Emergency Power Supply current (phase #T).</description>\n+\t\t\t</channel>\n+\n+\t\t\t<channel id=\"eps-power\" typeId=\"advanced-electric-power\">\n+\t\t\t\t<label>EPS Power</label>\n+\t\t\t\t<description>Total Emergency Power Supply power.</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"eps-power-r\" typeId=\"advanced-electric-power\">\n+\t\t\t\t<label>EPS Power #R</label>\n+\t\t\t\t<description>Emergency Power Supply power (phase #R).</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"eps-power-s\" typeId=\"advanced-electric-power\">\n+\t\t\t\t<label>EPS Power #S</label>\n+\t\t\t\t<description>Emergency Power Supply power (phase #S).</description>\n+\t\t\t</channel>\n+\t\t\t<channel id=\"eps-power-t\" typeId=\"advanced-electric-power\">\n+\t\t\t\t<label>EPS Power #T</label>\n+\t\t\t\t<description>Emergency Power Supply power (phase #T).</description>\n+\t\t\t</channel>\n+\n \t\t</channels>\n \n \t\t<properties>\n-\t\t\t<property name=\"thingTypeVersion\">1</property>\n+\t\t\t<property name=\"thingTypeVersion\">2</property>\n \t\t</properties>\n \n \t\t<config-description>\n\ndiff --git a/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/update/instructions.xml b/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/update/instructions.xml\nindex 3856eed4cd46c..36fec77301257 100644\n--- a/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/update/instructions.xml\n+++ b/bundles/org.openhab.binding.growatt/src/main/resources/OH-INF/update/instructions.xml\n@@ -49,6 +49,107 @@\n \t\t\t\t<description>Inverter fan speed.</description>\n \t\t\t</add-channel>\n \t\t</instruction-set>\n+\n+\t\t<!-- ============== CHANNELS ADDED IN PR #17810 ============== -->\n+\t\t<instruction-set targetVersion=\"2\">\n+\t\t\t<!-- DC electric data for strings #3 and #4 -->\n+\t\t\t<add-channel id=\"pv3-voltage\">\n+\t\t\t\t<type>growatt:advanced-electric-voltage</type>\n+\t\t\t\t<label>String #3 Voltage</label>\n+\t\t\t\t<description>Voltage from solar panel string #3.</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"pv3-current\">\n+\t\t\t\t<type>growatt:advanced-electric-current</type>\n+\t\t\t\t<label>String #3 Current</label>\n+\t\t\t\t<description>Current from solar panel string #3.</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"pv3-power\">\n+\t\t\t\t<type>growatt:advanced-electric-power</type>\n+\t\t\t\t<label>String #3 Power</label>\n+\t\t\t\t<description>Power from solar panel string #3.</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"pv4-voltage\">\n+\t\t\t\t<type>growatt:advanced-electric-voltage</type>\n+\t\t\t\t<label>String #4 Voltage </label>\n+\t\t\t\t<description>Voltage from solar panel string #4.</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"pv4-current\">\n+\t\t\t\t<type>growatt:advanced-electric-current</type>\n+\t\t\t\t<label>String #4 Current</label>\n+\t\t\t\t<description>Current from solar panel string #4.</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"pv4-power\">\n+\t\t\t\t<type>growatt:advanced-electric-power</type>\n+\t\t\t\t<label>String #4 Power</label>\n+\t\t\t\t<description>Power from solar panel string #4.</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"pv3-energy-today\">\n+\t\t\t\t<type>growatt:advanced-electric-energy</type>\n+\t\t\t\t<label>DC Energy #3 Today</label>\n+\t\t\t\t<description>Solar DC energy collected by string #3 today.</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"pv3-energy-total\">\n+\t\t\t\t<type>growatt:advanced-electric-energy</type>\n+\t\t\t\t<label>DC Energy #3 Total</label>\n+\t\t\t\t<description>Total solar DC energy collected by string #3.</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"power-factor\">\n+\t\t\t\t<type>growatt:advanced-percent</type>\n+\t\t\t\t<label>Power Factor</label>\n+\t\t\t\t<description>Electrical power factor</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-voltage-r\">\n+\t\t\t\t<type>growatt:advanced-electric-voltage</type>\n+\t\t\t\t<label>EPS Voltage #R</label>\n+\t\t\t\t<description>Emergency Power Supply voltage (phase #R).</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-voltage-s\">\n+\t\t\t\t<type>growatt:advanced-electric-voltage</type>\n+\t\t\t\t<label>EPS Voltage #S</label>\n+\t\t\t\t<description>Emergency Power Supply voltage (phase #S).</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-voltage-t\">\n+\t\t\t\t<type>growatt:advanced-electric-voltage</type>\n+\t\t\t\t<label>EPS Voltage #T</label>\n+\t\t\t\t<description>Emergency Power Supply voltage (phase #T).</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-current-r\">\n+\t\t\t\t<type>growatt:advanced-electric-current</type>\n+\t\t\t\t<label>EPS Current #R</label>\n+\t\t\t\t<description>Emergency Power Supply current (phase #R).</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-current-s\">\n+\t\t\t\t<type>growatt:advanced-electric-current</type>\n+\t\t\t\t<label>EPS Current #S</label>\n+\t\t\t\t<description>Emergency Power Supply current (phase #S).</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-current-t\">\n+\t\t\t\t<type>growatt:advanced-electric-current</type>\n+\t\t\t\t<label>EPS Current #T</label>\n+\t\t\t\t<description>Emergency Power Supply current (phase #T).</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-power\">\n+\t\t\t\t<type>growatt:advanced-electric-power</type>\n+\t\t\t\t<label>EPS Power</label>\n+\t\t\t\t<description>Total Emergency Power Supply power.</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-power-r\">\n+\t\t\t\t<type>growatt:advanced-electric-power</type>\n+\t\t\t\t<label>EPS Power #R</label>\n+\t\t\t\t<description>Emergency Power Supply power (phase #R).</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-power-s\">\n+\t\t\t\t<type>growatt:advanced-electric-power</type>\n+\t\t\t\t<label>EPS Power #S</label>\n+\t\t\t\t<description>Emergency Power Supply power (phase #S).</description>\n+\t\t\t</add-channel>\n+\t\t\t<add-channel id=\"eps-power-t\">\n+\t\t\t\t<type>growatt:advanced-electric-power</type>\n+\t\t\t\t<label>EPS Power #T</label>\n+\t\t\t\t<description>Emergency Power Supply power (phase #T).</description>\n+\t\t\t</add-channel>\n+\t\t</instruction-set>\n+\n \t</thing-type>\n \n </update:update-descriptions>\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.growatt/src/test/java/org/openhab/binding/growatt/test/GrowattTest.java b/bundles/org.openhab.binding.growatt/src/test/java/org/openhab/binding/growatt/test/GrowattTest.java\nindex 45f790c614e55..528c9ce2c59ca 100644\n--- a/bundles/org.openhab.binding.growatt/src/test/java/org/openhab/binding/growatt/test/GrowattTest.java\n+++ b/bundles/org.openhab.binding.growatt/src/test/java/org/openhab/binding/growatt/test/GrowattTest.java\n@@ -26,6 +26,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Objects;\n import java.util.stream.Collectors;\n \n import javax.net.ssl.SSLSession;\n@@ -240,6 +241,8 @@ void testJsonFieldsMappedToDto() throws FileNotFoundException, IOException {\n         testJsonFieldsMappedToDto(\"simple\");\n         testJsonFieldsMappedToDto(\"sph\");\n         testJsonFieldsMappedToDto(\"spf\");\n+        testJsonFieldsMappedToDto(\"meter\");\n+        testJsonFieldsMappedToDto(\"mid\");\n     }\n \n     /**\n@@ -255,7 +258,8 @@ private void testJsonFieldsMappedToDto(String fileName) throws FileNotFoundExcep\n         String json = load(fileName);\n         JsonParser.parseString(json).getAsJsonObject().get(\"values\").getAsJsonObject().entrySet().forEach(e -> {\n             String key = e.getKey();\n-            if (!\"datalogserial\".equals(key) && !\"pvserial\".equals(key)) {\n+            assertTrue(GrowattChannels.UNUSED_FIELDS.containsKey(fileName));\n+            if (!Objects.requireNonNull(GrowattChannels.UNUSED_FIELDS.get(fileName)).contains(key)) {\n                 JsonObject testJsonObject = new JsonObject();\n                 testJsonObject.add(key, e.getValue());\n                 GrottValues testDto = gson.fromJson(testJsonObject, GrottValues.class);\n@@ -362,7 +366,7 @@ void testThreePhaseGrottValuesContents() throws FileNotFoundException, IOExcepti\n \n         Map<String, QuantityType<?>> channelStates = GrottValuesHelper.getChannelStates(grottValues);\n         assertNotNull(channelStates);\n-        assertEquals(64, channelStates.size());\n+        assertEquals(85, channelStates.size());\n \n         assertEquals(QuantityType.valueOf(-36.5, Units.WATT), channelStates.get(\"inverter-power\"));\n         assertEquals(QuantityType.valueOf(11, Units.PERCENT), channelStates.get(\"battery-soc\"));\n@@ -379,7 +383,7 @@ void testMeterGrottValuesContents() throws FileNotFoundException, IOException, N\n \n         Map<String, QuantityType<?>> channelStates = GrottValuesHelper.getChannelStates(grottValues);\n         assertNotNull(channelStates);\n-        assertEquals(16, channelStates.size());\n+        assertEquals(18, channelStates.size());\n \n         assertEquals(QuantityType.valueOf(809.8, Units.WATT), channelStates.get(\"import-power\"));\n         assertEquals(QuantityType.valueOf(171.0, Units.WATT), channelStates.get(\"import-power-s\"));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17804",
    "pr_id": 17804,
    "issue_id": 8216,
    "repo": "openhab/openhab-addons",
    "problem_statement": "Normalize thread naming of threads in add-ons\nA number of add-ons start there own threads. To track threads better I propose these threads should all name their thread using a specific name convention. My proposal is to use:\r\n* If there is 1 thread::`OH-binding-<thingUID>`,\r\n* If there are multiple threads: `OH-binding-<thingUID>-<custom>`. Where `custom` is a developer defined word that suggest which specific thread it is.\r\n\r\nSome bindings use `Executors`. My suggested would be to either standardize to all use the `org.eclipse.smarthome.core.common. ThreadPoolManager` or another option to allow a generic `Executors`, but initialize with the openHAB `NamedThreadFactory`. The named thread factory/pool manager should than be initialized with `binding-<thingUID>`. Note that using the ThreadPoolManager` will add an incremental number to the thread name for each thread started. \r\n",
    "issue_word_count": 137,
    "test_files_count": 1,
    "non_test_files_count": 29,
    "pr_changed_files": [
      "bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/googletv/GoogleTVConnectionManager.java",
      "bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/shieldtv/ShieldTVConnectionManager.java",
      "bundles/org.openhab.binding.anthem/src/main/java/org/openhab/binding/anthem/internal/handler/AnthemHandler.java",
      "bundles/org.openhab.binding.argoclima/src/main/java/org/openhab/binding/argoclima/internal/device/passthrough/RemoteArgoApiServerStub.java",
      "bundles/org.openhab.binding.echonetlite/src/main/java/org/openhab/binding/echonetlite/internal/EchonetLiteBridgeHandler.java",
      "bundles/org.openhab.binding.ekey/src/main/java/org/openhab/binding/ekey/internal/handler/EkeyHandler.java",
      "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/connection/Clip2Bridge.java",
      "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/transport/LegacyPort.java",
      "bundles/org.openhab.binding.intesis/src/main/java/org/openhab/binding/intesis/internal/handler/IntesisBoxHandler.java",
      "bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java",
      "bundles/org.openhab.binding.loxone/src/main/java/org/openhab/binding/loxone/internal/security/LxWsSecurity.java",
      "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/IPBridgeHandler.java",
      "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/LeapBridgeHandler.java",
      "bundles/org.openhab.binding.luxom/src/main/java/org/openhab/binding/luxom/internal/handler/LuxomBridgeHandler.java",
      "bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/handler/MaxCubeBridgeHandler.java",
      "bundles/org.openhab.binding.mihome/src/main/java/org/openhab/binding/mihome/internal/socket/XiaomiSocket.java",
      "bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/MilightV6SessionManager.java",
      "bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/QueuedSend.java",
      "bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/test/EmulatedV6Bridge.java",
      "bundles/org.openhab.binding.pentair/src/main/java/org/openhab/binding/pentair/internal/handler/PentairBaseBridgeHandler.java",
      "bundles/org.openhab.binding.russound/src/main/java/org/openhab/binding/russound/internal/net/SocketChannelSession.java",
      "bundles/org.openhab.binding.satel/src/main/java/org/openhab/binding/satel/internal/protocol/SatelModule.java",
      "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerActionPage.java",
      "bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerOtaPage.java",
      "bundles/org.openhab.binding.silvercrestwifisocket/src/main/java/org/openhab/binding/silvercrestwifisocket/internal/handler/SilvercrestWifiSocketMediatorImpl.java",
      "bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreBridgeHandler.java",
      "bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreDeviceController.java",
      "bundles/org.openhab.binding.vitotronic/src/main/java/org/openhab/binding/vitotronic/internal/handler/VitotronicBridgeHandler.java",
      "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/device/connection/WifiConnection.java",
      "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/services/DeviceManager.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/test/EmulatedV6Bridge.java"
    ],
    "base_commit": "388dc6bde3df043acc55c1fc8bcbcea0fd188492",
    "head_commit": "3e41a106a3999af1cfca4f47e75de7f8676b464e",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17804",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17804",
    "dockerfile": "",
    "pr_merged_at": "2024-12-08T00:15:43.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/googletv/GoogleTVConnectionManager.java b/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/googletv/GoogleTVConnectionManager.java\nindex 1ba30cb807472..0724f3f95fa33 100644\n--- a/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/googletv/GoogleTVConnectionManager.java\n+++ b/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/googletv/GoogleTVConnectionManager.java\n@@ -579,7 +579,8 @@ public void connect() {\n                 logger.trace(\"{} - Starting Reader Thread for {}:{}\", handler.getThingID(), config.ipAddress,\n                         config.googletvPort);\n \n-                Thread readerThread = new Thread(this::readerThreadJob, \"GoogleTV reader \" + handler.getThingID());\n+                Thread readerThread = new Thread(this::readerThreadJob,\n+                        \"OH-binding-\" + handler.getThingUID() + \"-GoogleTVReader\");\n                 readerThread.setDaemon(true);\n                 readerThread.start();\n                 this.readerThread = readerThread;\n@@ -587,7 +588,8 @@ public void connect() {\n                 logger.trace(\"{} - Starting Sender Thread for {}:{}\", handler.getThingID(), config.ipAddress,\n                         config.googletvPort);\n \n-                Thread senderThread = new Thread(this::senderThreadJob, \"GoogleTV sender \" + handler.getThingID());\n+                Thread senderThread = new Thread(this::senderThreadJob,\n+                        \"OH-binding-\" + handler.getThingUID() + \"-GoogleTVSender\");\n                 senderThread.setDaemon(true);\n                 senderThread.start();\n                 this.senderThread = senderThread;\n@@ -698,12 +700,14 @@ public void shimInitialize() {\n                         this.shimServerSocket = serverSocket;\n                         this.shimQueue.clear();\n \n-                        Thread readerThread = new Thread(this::shimReaderThreadJob, \"GoogleTV shim reader\");\n+                        Thread readerThread = new Thread(this::shimReaderThreadJob,\n+                                \"OH-binding-\" + handler.getThingUID() + \"-GoogleTVShimReader\");\n                         readerThread.setDaemon(true);\n                         readerThread.start();\n                         this.shimReaderThread = readerThread;\n \n-                        Thread senderThread = new Thread(this::shimSenderThreadJob, \"GoogleTV shim sender\");\n+                        Thread senderThread = new Thread(this::shimSenderThreadJob,\n+                                \"OH-binding-\" + handler.getThingUID() + \"-GoogleTVShimSender\");\n                         senderThread.setDaemon(true);\n                         senderThread.start();\n                         this.shimSenderThread = senderThread;\n\ndiff --git a/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/shieldtv/ShieldTVConnectionManager.java b/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/shieldtv/ShieldTVConnectionManager.java\nindex 0c79a8f04c558..bf6f173a2801e 100644\n--- a/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/shieldtv/ShieldTVConnectionManager.java\n+++ b/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/shieldtv/ShieldTVConnectionManager.java\n@@ -443,12 +443,14 @@ public void connect() {\n \n                 setStatus(false, \"offline.initializing\");\n \n-                Thread readerThread = new Thread(this::readerThreadJob, \"ShieldTV reader \" + handler.getThingID());\n+                Thread readerThread = new Thread(this::readerThreadJob,\n+                        \"OH-binding-\" + handler.getThingUID() + \"-ShieldTVReader\");\n                 readerThread.setDaemon(true);\n                 readerThread.start();\n                 this.readerThread = readerThread;\n \n-                Thread senderThread = new Thread(this::senderThreadJob, \"ShieldTV sender \" + handler.getThingID());\n+                Thread senderThread = new Thread(this::senderThreadJob,\n+                        \"OH-binding-\" + handler.getThingUID() + \"-ShieldTVSender\");\n                 senderThread.setDaemon(true);\n                 senderThread.start();\n                 this.senderThread = senderThread;\n@@ -513,13 +515,13 @@ public void shimInitialize() {\n                     this.shimServerSocket = serverSocket;\n \n                     Thread readerThread = new Thread(this::shimReaderThreadJob,\n-                            \"ShieldTV shim reader \" + handler.getThingID());\n+                            \"OH-binding-\" + handler.getThingUID() + \"-ShieldTVShimReader\");\n                     readerThread.setDaemon(true);\n                     readerThread.start();\n                     this.shimReaderThread = readerThread;\n \n                     Thread senderThread = new Thread(this::shimSenderThreadJob,\n-                            \"ShieldTV shim sender\" + handler.getThingID());\n+                            \"OH-binding-\" + handler.getThingUID() + \"-ShieldTVShimSender\");\n                     senderThread.setDaemon(true);\n                     senderThread.start();\n                     this.shimSenderThread = senderThread;\n\ndiff --git a/bundles/org.openhab.binding.anthem/src/main/java/org/openhab/binding/anthem/internal/handler/AnthemHandler.java b/bundles/org.openhab.binding.anthem/src/main/java/org/openhab/binding/anthem/internal/handler/AnthemHandler.java\nindex 4ea2e505322bd..24445dc02590a 100644\n--- a/bundles/org.openhab.binding.anthem/src/main/java/org/openhab/binding/anthem/internal/handler/AnthemHandler.java\n+++ b/bundles/org.openhab.binding.anthem/src/main/java/org/openhab/binding/anthem/internal/handler/AnthemHandler.java\n@@ -242,12 +242,12 @@ private synchronized void connect() {\n             scheduleConnectRetry(reconnectIntervalMinutes);\n             return;\n         }\n-        Thread localReaderThread = new Thread(this::readerThreadJob, \"Anthem reader\");\n+        Thread localReaderThread = new Thread(this::readerThreadJob, \"OH-binding-\" + getThing().getUID() + \"-Reader\");\n         localReaderThread.setDaemon(true);\n         localReaderThread.start();\n         this.readerThread = localReaderThread;\n \n-        Thread localSenderThread = new Thread(this::senderThreadJob, \"Anthem sender\");\n+        Thread localSenderThread = new Thread(this::senderThreadJob, \"OH-binding-\" + getThing().getUID() + \"-Sender\");\n         localSenderThread.setDaemon(true);\n         localSenderThread.start();\n         this.senderThread = localSenderThread;\n\ndiff --git a/bundles/org.openhab.binding.argoclima/src/main/java/org/openhab/binding/argoclima/internal/device/passthrough/RemoteArgoApiServerStub.java b/bundles/org.openhab.binding.argoclima/src/main/java/org/openhab/binding/argoclima/internal/device/passthrough/RemoteArgoApiServerStub.java\nindex ce3adcbd489fd..64dd206e9aa6e 100644\n--- a/bundles/org.openhab.binding.argoclima/src/main/java/org/openhab/binding/argoclima/internal/device/passthrough/RemoteArgoApiServerStub.java\n+++ b/bundles/org.openhab.binding.argoclima/src/main/java/org/openhab/binding/argoclima/internal/device/passthrough/RemoteArgoApiServerStub.java\n@@ -290,7 +290,7 @@ public synchronized void start() throws ArgoRemoteServerStubStartupException {\n                 // to stop, actually)\n                 s.setStopTimeout(1000L);\n                 try {\n-                    new Thread() {\n+                    new Thread(\"OH-binding-\" + this.id + \"-APIStub\") {\n                         @Override\n                         public void run() {\n                             try {\n\ndiff --git a/bundles/org.openhab.binding.echonetlite/src/main/java/org/openhab/binding/echonetlite/internal/EchonetLiteBridgeHandler.java b/bundles/org.openhab.binding.echonetlite/src/main/java/org/openhab/binding/echonetlite/internal/EchonetLiteBridgeHandler.java\nindex 078e0cf7bb4c6..11bc6334dc7fe 100644\n--- a/bundles/org.openhab.binding.echonetlite/src/main/java/org/openhab/binding/echonetlite/internal/EchonetLiteBridgeHandler.java\n+++ b/bundles/org.openhab.binding.echonetlite/src/main/java/org/openhab/binding/echonetlite/internal/EchonetLiteBridgeHandler.java\n@@ -52,7 +52,8 @@ public class EchonetLiteBridgeHandler extends BaseBridgeHandler {\n     private final ArrayBlockingQueue<Message> requests = new ArrayBlockingQueue<>(1024);\n     private final Map<InstanceKey, EchonetObject> devicesByKey = new HashMap<>();\n     private final EchonetMessageBuilder messageBuilder = new EchonetMessageBuilder();\n-    private final Thread networkingThread = new Thread(this::poll);\n+    private final Thread networkingThread = new Thread(this::poll,\n+            \"OH-binding-\" + EchonetLiteBindingConstants.BINDING_ID);\n     private final EchonetMessage echonetMessage = new EchonetMessage();\n     private final MonotonicClock clock = new MonotonicClock();\n \n@@ -76,8 +77,6 @@ private void start(final InstanceKey managementControllerKey, InstanceKey discov\n         logger.debug(\"Binding echonet channel\");\n         echonetChannel = new EchonetChannel(discoveryKey.address);\n         logger.debug(\"Starting networking thread\");\n-\n-        networkingThread.setName(\"OH-binding-\" + EchonetLiteBindingConstants.BINDING_ID);\n         networkingThread.setDaemon(true);\n         networkingThread.start();\n     }\n\ndiff --git a/bundles/org.openhab.binding.ekey/src/main/java/org/openhab/binding/ekey/internal/handler/EkeyHandler.java b/bundles/org.openhab.binding.ekey/src/main/java/org/openhab/binding/ekey/internal/handler/EkeyHandler.java\nindex cc9b3cbe369b1..22d10da448eed 100644\n--- a/bundles/org.openhab.binding.ekey/src/main/java/org/openhab/binding/ekey/internal/handler/EkeyHandler.java\n+++ b/bundles/org.openhab.binding.ekey/src/main/java/org/openhab/binding/ekey/internal/handler/EkeyHandler.java\n@@ -82,10 +82,10 @@ public void initialize() {\n \n             scheduler.submit(() -> {\n                 populateChannels(config.protocol);\n-                String readerThreadName = \"OH-binding-\" + getThing().getUID().getAsString();\n \n                 EkeyUdpPacketReceiver localReceiver = receiver = new EkeyUdpPacketReceiver(\n-                        Objects.requireNonNullElse(config.natIp, config.ipAddress), config.port, readerThreadName);\n+                        Objects.requireNonNullElse(config.natIp, config.ipAddress), config.port,\n+                        \"OH-binding-\" + getThing().getUID());\n                 localReceiver.addEkeyPacketListener(this);\n                 try {\n                     localReceiver.openConnection();\n\ndiff --git a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/connection/Clip2Bridge.java b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/connection/Clip2Bridge.java\nindex 59cd410a22b47..9b23025491e3a 100644\n--- a/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/connection/Clip2Bridge.java\n+++ b/bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/connection/Clip2Bridge.java\n@@ -397,7 +397,8 @@ public void onFailure(@Nullable Session session, @Nullable Throwable failure) {\n         public void onGoAway(@Nullable Session session, @Nullable GoAwayFrame frame) {\n             Objects.requireNonNull(session);\n             if (session.equals(http2Session)) {\n-                Thread recreateThread = new Thread(() -> recreateSession());\n+                Thread recreateThread = new Thread(() -> recreateSession(),\n+                        \"OH-binding-\" + bridgeHandler.getThing().getUID() + \"-RecreateSession\");\n                 Clip2Bridge.this.recreateThread = recreateThread;\n                 recreateThread.start();\n             }\n\ndiff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/transport/LegacyPort.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/transport/LegacyPort.java\nindex 664a1f8386938..28ee847c0be02 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/transport/LegacyPort.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/transport/LegacyPort.java\n@@ -22,6 +22,7 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.insteon.internal.InsteonBindingConstants;\n import org.openhab.binding.insteon.internal.InsteonLegacyBindingConstants;\n import org.openhab.binding.insteon.internal.config.InsteonLegacyNetworkConfiguration;\n import org.openhab.binding.insteon.internal.device.InsteonAddress;\n@@ -178,9 +179,9 @@ public void start() {\n         }\n \n         readThread = new Thread(reader);\n-        setParamsAndStart(readThread, \"Reader\");\n+        setParamsAndStart(readThread, \"OH-binding-\" + InsteonBindingConstants.BINDING_ID + \"-LegacyReader\");\n         writeThread = new Thread(writer);\n-        setParamsAndStart(writeThread, \"Writer\");\n+        setParamsAndStart(writeThread, \"OH-binding-\" + InsteonBindingConstants.BINDING_ID + \"-LegacyWriter\");\n \n         if (!mdbb.isComplete()) {\n             modem.initialize();\n\ndiff --git a/bundles/org.openhab.binding.intesis/src/main/java/org/openhab/binding/intesis/internal/handler/IntesisBoxHandler.java b/bundles/org.openhab.binding.intesis/src/main/java/org/openhab/binding/intesis/internal/handler/IntesisBoxHandler.java\nindex 5a82a2e231899..44ab794a716f6 100644\n--- a/bundles/org.openhab.binding.intesis/src/main/java/org/openhab/binding/intesis/internal/handler/IntesisBoxHandler.java\n+++ b/bundles/org.openhab.binding.intesis/src/main/java/org/openhab/binding/intesis/internal/handler/IntesisBoxHandler.java\n@@ -93,11 +93,8 @@ public void initialize() {\n         if (!config.ipAddress.isEmpty()) {\n             updateStatus(ThingStatus.UNKNOWN);\n             scheduler.submit(() -> {\n-\n-                String readerThreadName = \"OH-binding-\" + getThing().getUID().getAsString();\n-\n                 IntesisBoxSocketApi intesisLocalApi = intesisBoxSocketApi = new IntesisBoxSocketApi(config.ipAddress,\n-                        config.port, readerThreadName);\n+                        config.port, \"OH-binding-\" + getThing().getUID());\n                 intesisLocalApi.addIntesisBoxChangeListener(this);\n                 try {\n                     intesisLocalApi.openConnection();\n\ndiff --git a/bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java b/bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java\nindex 2e2d4503d6814..315009c78d265 100644\n--- a/bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java\n+++ b/bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactTransceiver.java\n@@ -32,6 +32,7 @@\n import java.util.Set;\n import java.util.concurrent.locks.ReentrantLock;\n \n+import org.openhab.binding.keba.internal.KebaBindingConstants;\n import org.openhab.core.thing.ThingStatus;\n import org.openhab.core.thing.ThingStatusDetail;\n import org.slf4j.Logger;\n@@ -71,7 +72,8 @@ public void start() {\n                 selector = Selector.open();\n \n                 if (transceiverThread == null) {\n-                    transceiverThread = new Thread(transceiverRunnable, \"OH-binding-Keba-Transceiver\");\n+                    transceiverThread = new Thread(transceiverRunnable,\n+                            \"OH-binding-\" + KebaBindingConstants.BINDING_ID + \"-Transceiver\");\n                     transceiverThread.start();\n                 }\n \n\ndiff --git a/bundles/org.openhab.binding.loxone/src/main/java/org/openhab/binding/loxone/internal/security/LxWsSecurity.java b/bundles/org.openhab.binding.loxone/src/main/java/org/openhab/binding/loxone/internal/security/LxWsSecurity.java\nindex e9f0d155f85fb..65bd792a96ac9 100644\n--- a/bundles/org.openhab.binding.loxone/src/main/java/org/openhab/binding/loxone/internal/security/LxWsSecurity.java\n+++ b/bundles/org.openhab.binding.loxone/src/main/java/org/openhab/binding/loxone/internal/security/LxWsSecurity.java\n@@ -86,7 +86,7 @@ public void authenticate(BiConsumer<LxErrorCode, String> doneCallback) {\n                 authenticationLock.unlock();\n             }\n         };\n-        new Thread(init).start();\n+        new Thread(init, \"OH-binding-\" + thingHandler.getThingId() + \"-Authenticate\").start();\n     }\n \n     /**\n\ndiff --git a/bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/IPBridgeHandler.java b/bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/IPBridgeHandler.java\nindex 9ea61279430a2..c24ffe8f55c46 100644\n--- a/bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/IPBridgeHandler.java\n+++ b/bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/IPBridgeHandler.java\n@@ -216,7 +216,7 @@ private synchronized void connect() {\n         sendCommand(new LIPCommand(TargetType.BRIDGE, LutronOperation.QUERY, LutronCommandType.SYSTEM, null,\n                 SYSTEM_DBEXPORTDATETIME));\n \n-        messageSender = new Thread(this::sendCommandsThread, \"Lutron sender\");\n+        messageSender = new Thread(this::sendCommandsThread, \"OH-binding-\" + getThing().getUID() + \"-IPBridgeSender\");\n         messageSender.start();\n \n         logger.debug(\"Starting keepAlive job with interval {}\", heartbeatInterval);\n\ndiff --git a/bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/LeapBridgeHandler.java b/bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/LeapBridgeHandler.java\nindex 0bd9a24760cb8..f48d75fdb8ed7 100644\n--- a/bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/LeapBridgeHandler.java\n+++ b/bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/handler/LeapBridgeHandler.java\n@@ -304,12 +304,12 @@ private synchronized void connect() {\n \n         updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.NONE, STATUS_INITIALIZING);\n \n-        Thread readerThread = new Thread(this::readerThreadJob, \"Lutron reader\");\n+        Thread readerThread = new Thread(this::readerThreadJob, \"OH-binding-\" + getThing().getUID() + \"-BridgeReader\");\n         readerThread.setDaemon(true);\n         readerThread.start();\n         this.readerThread = readerThread;\n \n-        Thread senderThread = new Thread(this::senderThreadJob, \"Lutron sender\");\n+        Thread senderThread = new Thread(this::senderThreadJob, \"OH-binding-\" + getThing().getUID() + \"-BridgeSender\");\n         senderThread.setDaemon(true);\n         senderThread.start();\n         this.senderThread = senderThread;\n\ndiff --git a/bundles/org.openhab.binding.luxom/src/main/java/org/openhab/binding/luxom/internal/handler/LuxomBridgeHandler.java b/bundles/org.openhab.binding.luxom/src/main/java/org/openhab/binding/luxom/internal/handler/LuxomBridgeHandler.java\nindex 0072b7d578376..ae7d77f391d1b 100644\n--- a/bundles/org.openhab.binding.luxom/src/main/java/org/openhab/binding/luxom/internal/handler/LuxomBridgeHandler.java\n+++ b/bundles/org.openhab.binding.luxom/src/main/java/org/openhab/binding/luxom/internal/handler/LuxomBridgeHandler.java\n@@ -139,7 +139,7 @@ public void startProcessing() {\n \n         updateStatus(ThingStatus.ONLINE);\n \n-        messageSender = new Thread(this::sendCommandsThread, \"Luxom sender\");\n+        messageSender = new Thread(this::sendCommandsThread, \"OH-binding-\" + getThing().getUID() + \"-Sender\");\n         messageSender.start();\n \n         logger.debug(\"Starting heartbeat job with interval {} (seconds)\", HEARTBEAT_INTERVAL_SECONDS);\n\ndiff --git a/bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/handler/MaxCubeBridgeHandler.java b/bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/handler/MaxCubeBridgeHandler.java\nindex ea8f42a33087b..4df534dd79634 100644\n--- a/bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/handler/MaxCubeBridgeHandler.java\n+++ b/bundles/org.openhab.binding.max/src/main/java/org/openhab/binding/max/internal/handler/MaxCubeBridgeHandler.java\n@@ -340,7 +340,8 @@ private synchronized void startAutomaticRefresh() {\n             pollingJob = scheduler.scheduleWithFixedDelay(this::refreshData, 0, refreshInterval, TimeUnit.SECONDS);\n         }\n         if (queueConsumerThread == null || !queueConsumerThread.isAlive()) {\n-            queueConsumerThread = new Thread(new QueueConsumer(commandQueue), \"max-queue-consumer\");\n+            queueConsumerThread = new Thread(new QueueConsumer(commandQueue),\n+                    \"OH-binding-\" + getThing().getUID() + \"-max-queue-consumer\");\n             queueConsumerThread.setDaemon(true);\n             queueConsumerThread.start();\n         }\n\ndiff --git a/bundles/org.openhab.binding.mihome/src/main/java/org/openhab/binding/mihome/internal/socket/XiaomiSocket.java b/bundles/org.openhab.binding.mihome/src/main/java/org/openhab/binding/mihome/internal/socket/XiaomiSocket.java\nindex 1119057d5bd0d..503f38e4d4eb7 100644\n--- a/bundles/org.openhab.binding.mihome/src/main/java/org/openhab/binding/mihome/internal/socket/XiaomiSocket.java\n+++ b/bundles/org.openhab.binding.mihome/src/main/java/org/openhab/binding/mihome/internal/socket/XiaomiSocket.java\n@@ -12,6 +12,8 @@\n  */\n package org.openhab.binding.mihome.internal.socket;\n \n+import static org.openhab.binding.mihome.internal.XiaomiGatewayBindingConstants.BINDING_ID;\n+\n import java.io.IOException;\n import java.net.DatagramPacket;\n import java.net.DatagramSocket;\n@@ -71,7 +73,7 @@ public XiaomiSocket(String owner) {\n      */\n     public XiaomiSocket(int port, String owner) {\n         this.port = port;\n-        socketReceiveThread.setName(\"XiaomiSocketReceiveThread(\" + port + \", \" + owner + \")\");\n+        socketReceiveThread.setName(\"OH-binding-\" + BINDING_ID + \"-XiaomiSocket(\" + port + \", \" + owner + \")\");\n     }\n \n     public void initialize() {\n\ndiff --git a/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/MilightV6SessionManager.java b/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/MilightV6SessionManager.java\nindex 0d04f8bc4c879..8713451fba7e7 100644\n--- a/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/MilightV6SessionManager.java\n+++ b/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/MilightV6SessionManager.java\n@@ -32,6 +32,7 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.milight.internal.MilightBindingConstants;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -185,7 +186,7 @@ public MilightV6SessionManager(String bridgeId, ISessionState observer, @Nullabl\n             throw new IllegalArgumentException(\"keepAliveInterval not within given limits!\");\n         }\n \n-        sessionThread = new Thread(this, \"SessionThread\");\n+        sessionThread = new Thread(this, \"OH-binding-\" + MilightBindingConstants.BINDING_ID + \"-SessionThread\");\n     }\n \n     /**\n\ndiff --git a/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/QueuedSend.java b/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/QueuedSend.java\nindex 8666591e45d92..b968f3bb24652 100644\n--- a/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/QueuedSend.java\n+++ b/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/protocol/QueuedSend.java\n@@ -21,6 +21,7 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.milight.internal.MilightBindingConstants;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -48,7 +49,7 @@ public class QueuedSend implements Runnable, Closeable {\n      */\n     public void start() {\n         willbeclosed = false;\n-        thread = new Thread(this);\n+        thread = new Thread(this, \"OH-binding-\" + MilightBindingConstants.BINDING_ID + \"-QueuedSend\");\n         thread.start();\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.pentair/src/main/java/org/openhab/binding/pentair/internal/handler/PentairBaseBridgeHandler.java b/bundles/org.openhab.binding.pentair/src/main/java/org/openhab/binding/pentair/internal/handler/PentairBaseBridgeHandler.java\nindex 65c0107a37a07..f0c17584ec84b 100644\n--- a/bundles/org.openhab.binding.pentair/src/main/java/org/openhab/binding/pentair/internal/handler/PentairBaseBridgeHandler.java\n+++ b/bundles/org.openhab.binding.pentair/src/main/java/org/openhab/binding/pentair/internal/handler/PentairBaseBridgeHandler.java\n@@ -203,7 +203,7 @@ private void baseConnect() {\n             return;\n         }\n \n-        Thread parserThread = new Thread(parser, \"OH-pentair-\" + this.getThing().getUID() + \"-parser\");\n+        Thread parserThread = new Thread(parser, \"OH-binding-\" + this.getThing().getUID() + \"-parser\");\n         this.parserThread = parserThread;\n \n         parserThread.setDaemon(true);\n\ndiff --git a/bundles/org.openhab.binding.russound/src/main/java/org/openhab/binding/russound/internal/net/SocketChannelSession.java b/bundles/org.openhab.binding.russound/src/main/java/org/openhab/binding/russound/internal/net/SocketChannelSession.java\nindex 4f1c7bed490b3..72ec3d5bbf00c 100644\n--- a/bundles/org.openhab.binding.russound/src/main/java/org/openhab/binding/russound/internal/net/SocketChannelSession.java\n+++ b/bundles/org.openhab.binding.russound/src/main/java/org/openhab/binding/russound/internal/net/SocketChannelSession.java\n@@ -24,6 +24,7 @@\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicReference;\n \n+import org.openhab.binding.russound.internal.RussoundBindingConstants;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -127,8 +128,10 @@ public void connect(int timeout) throws IOException {\n \n         responses.clear();\n \n-        dispatchingThread = new Thread(new Dispatcher());\n-        responseThread = new Thread(new ResponseReader());\n+        dispatchingThread = new Thread(new Dispatcher(),\n+                \"OH-binding-\" + RussoundBindingConstants.BINDING_ID + \"-dispatcher\");\n+        responseThread = new Thread(new ResponseReader(),\n+                \"OH-binding-\" + RussoundBindingConstants.BINDING_ID + \"-responseReader\");\n \n         dispatchingThread.start();\n         responseThread.start();\n\ndiff --git a/bundles/org.openhab.binding.satel/src/main/java/org/openhab/binding/satel/internal/protocol/SatelModule.java b/bundles/org.openhab.binding.satel/src/main/java/org/openhab/binding/satel/internal/protocol/SatelModule.java\nindex 502ce80cb0903..84d23b8c6a8f8 100644\n--- a/bundles/org.openhab.binding.satel/src/main/java/org/openhab/binding/satel/internal/protocol/SatelModule.java\n+++ b/bundles/org.openhab.binding.satel/src/main/java/org/openhab/binding/satel/internal/protocol/SatelModule.java\n@@ -23,6 +23,7 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.satel.internal.SatelBindingConstants;\n import org.openhab.binding.satel.internal.command.IntegraVersionCommand;\n import org.openhab.binding.satel.internal.command.SatelCommand;\n import org.openhab.binding.satel.internal.command.SatelCommand.State;\n@@ -520,7 +521,7 @@ public void run() {\n                     SatelModule.this.communicationLoop(CommunicationWatchdog.this);\n                     logger.debug(\"Communication thread stopped\");\n                 }\n-            });\n+            }, \"OH-binding-\" + SatelBindingConstants.BINDING_ID + \"-dispatcher\");\n             thread.start();\n             this.thread = thread;\n             // if module is not initialized yet, send version command\n\ndiff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerActionPage.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerActionPage.java\nindex 1b6d8e0cb2f9a..7825e610d8b8e 100644\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerActionPage.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerActionPage.java\n@@ -24,6 +24,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jetty.client.HttpClient;\n import org.eclipse.jetty.http.HttpStatus;\n+import org.openhab.binding.shelly.internal.ShellyBindingConstants;\n import org.openhab.binding.shelly.internal.ShellyHandlerFactory;\n import org.openhab.binding.shelly.internal.api.ShellyApiException;\n import org.openhab.binding.shelly.internal.api.ShellyApiInterface;\n@@ -103,7 +104,7 @@ public ShellyMgrResponse generateContent(String path, Map<String, String[]> para\n                                 // maybe the device restarts before returning the http response\n                             }\n                             setRestarted(th, uid); // refresh after reboot\n-                        }).start();\n+                        }, \"OH-binding-\" + ShellyBindingConstants.BINDING_ID + \"-\" + uid + \"-deviceReboot\").start();\n                         refreshTimer = profile.isMotion ? 60 : 30;\n                     } else {\n                         message = getMessageS(\"action.restart.confirm\", MCINFO);\n@@ -162,7 +163,7 @@ public ShellyMgrResponse generateContent(String path, Map<String, String[]> para\n                                 // maybe the device restarts before returning the http response\n                             }\n                             setRestarted(th, uid); // refresh after reboot\n-                        }).start();\n+                        }, \"OH-binding-\" + ShellyBindingConstants.BINDING_ID + \"-\" + uid + \"-reboot\").start();\n \n                         // The device needs a restart after changing the peer mode\n                         message = getMessageP(\"action.restart.info\", MCINFO);\n@@ -188,7 +189,7 @@ public ShellyMgrResponse generateContent(String path, Map<String, String[]> para\n                             } catch (ShellyApiException e) {\n                                 // maybe the device restarts before returning the http response\n                             }\n-                        }).start();\n+                        }, \"OH-binding-\" + ShellyBindingConstants.BINDING_ID + \"-\" + uid + \"-factoryReset\").start();\n                         message = getMessageP(\"action.reset.confirm\", MCINFO, serviceName);\n                         refreshTimer = 5;\n                     }\n@@ -216,7 +217,7 @@ public ShellyMgrResponse generateContent(String path, Map<String, String[]> para\n                             } catch (ShellyApiException e) {\n                                 // maybe the device restarts before returning the http response\n                             }\n-                        }).start();\n+                        }, \"OH-binding-\" + ShellyBindingConstants.BINDING_ID + \"-\" + uid + \"-setDebug\").start();\n \n                         message = getMessage(\"action.debug-confirm\", enable ? \"enabled\" : \"disabled\");\n                         refreshTimer = 3;\n\ndiff --git a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerOtaPage.java b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerOtaPage.java\nindex eb759411a5f60..935c91bc15811 100644\n--- a/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerOtaPage.java\n+++ b/bundles/org.openhab.binding.shelly/src/main/java/org/openhab/binding/shelly/internal/manager/ShellyManagerOtaPage.java\n@@ -31,6 +31,7 @@\n import org.eclipse.jetty.http.HttpFields;\n import org.eclipse.jetty.http.HttpMethod;\n import org.eclipse.jetty.http.HttpStatus;\n+import org.openhab.binding.shelly.internal.ShellyBindingConstants;\n import org.openhab.binding.shelly.internal.ShellyHandlerFactory;\n import org.openhab.binding.shelly.internal.api.ShellyApiException;\n import org.openhab.binding.shelly.internal.api.ShellyApiInterface;\n@@ -134,7 +135,7 @@ public ShellyMgrResponse generatePage(String path, Map<String, String[]> paramet\n                         // maybe the device restarts before returning the http response\n                         logger.warn(\"{}: {}\", th.getThingName(), getMessage(\"fwupdate.initiated\", e.toString()));\n                     }\n-                }).start();\n+                }, \"OH-binding-\" + ShellyBindingConstants.BINDING_ID + \"-\" + uid + \"-scheduleUpdate\").start();\n             } else {\n                 String message = getMessageP(\"fwupdate.confirm\", MCINFO);\n                 properties.put(ATTRIBUTE_MESSAGE, message);\n\ndiff --git a/bundles/org.openhab.binding.silvercrestwifisocket/src/main/java/org/openhab/binding/silvercrestwifisocket/internal/handler/SilvercrestWifiSocketMediatorImpl.java b/bundles/org.openhab.binding.silvercrestwifisocket/src/main/java/org/openhab/binding/silvercrestwifisocket/internal/handler/SilvercrestWifiSocketMediatorImpl.java\nindex d472895cb6602..94b0dc92e8427 100644\n--- a/bundles/org.openhab.binding.silvercrestwifisocket/src/main/java/org/openhab/binding/silvercrestwifisocket/internal/handler/SilvercrestWifiSocketMediatorImpl.java\n+++ b/bundles/org.openhab.binding.silvercrestwifisocket/src/main/java/org/openhab/binding/silvercrestwifisocket/internal/handler/SilvercrestWifiSocketMediatorImpl.java\n@@ -145,7 +145,8 @@ private void initMediatorWifiSocketUpdateReceiverRunnable() {\n             try {\n                 this.receiver = new SilvercrestWifiSocketUpdateReceiverRunnable(this,\n                         SilvercrestWifiSocketBindingConstants.WIFI_SOCKET_DEFAULT_UDP_PORT);\n-                this.receiverThread = new Thread(this.receiver);\n+                this.receiverThread = new Thread(this.receiver,\n+                        \"OH-binding-\" + SilvercrestWifiSocketBindingConstants.BINDING_ID + \"-receiver\");\n                 this.receiverThread.start();\n                 logger.debug(\"Invoked the start of receiver thread.\");\n             } catch (SocketException e) {\n\ndiff --git a/bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreBridgeHandler.java b/bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreBridgeHandler.java\nindex f5b90334de079..97b3f701be171 100644\n--- a/bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreBridgeHandler.java\n+++ b/bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreBridgeHandler.java\n@@ -129,7 +129,8 @@ public void initialize() {\n     }\n \n     private void setupDeviceController(TellstickBridgeConfiguration configuration) {\n-        deviceController = new TelldusCoreDeviceController(configuration.resendInterval);\n+        deviceController = new TelldusCoreDeviceController(configuration.resendInterval,\n+                \"OH-binding-\" + getThing().getUID() + \"-worker\");\n         eventHandler.addListener((TelldusCoreDeviceController) deviceController);\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreDeviceController.java b/bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreDeviceController.java\nindex ecff75e061d9b..a37e21352a248 100644\n--- a/bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreDeviceController.java\n+++ b/bundles/org.openhab.binding.tellstick/src/main/java/org/openhab/binding/tellstick/internal/core/TelldusCoreDeviceController.java\n@@ -55,11 +55,11 @@ public class TelldusCoreDeviceController implements DeviceChangeListener, Sensor\n     private Thread workerThread;\n     private SortedMap<Device, TelldusCoreSendEvent> messageQue;\n \n-    public TelldusCoreDeviceController(long resendInterval) {\n+    public TelldusCoreDeviceController(long resendInterval, final String threadName) {\n         this.resendInterval = resendInterval;\n         messageQue = Collections.synchronizedSortedMap(new TreeMap<>());\n         telldusCoreWorker = new TelldusCoreWorker(messageQue);\n-        workerThread = new Thread(telldusCoreWorker);\n+        workerThread = new Thread(telldusCoreWorker, threadName);\n     }\n \n     @Override\n\ndiff --git a/bundles/org.openhab.binding.vitotronic/src/main/java/org/openhab/binding/vitotronic/internal/handler/VitotronicBridgeHandler.java b/bundles/org.openhab.binding.vitotronic/src/main/java/org/openhab/binding/vitotronic/internal/handler/VitotronicBridgeHandler.java\nindex 27536b376a6ea..5c18d79855aa6 100644\n--- a/bundles/org.openhab.binding.vitotronic/src/main/java/org/openhab/binding/vitotronic/internal/handler/VitotronicBridgeHandler.java\n+++ b/bundles/org.openhab.binding.vitotronic/src/main/java/org/openhab/binding/vitotronic/internal/handler/VitotronicBridgeHandler.java\n@@ -276,8 +276,7 @@ private void startSocketReceiver() {\n         if (!isConnect) {\n             openSocket();\n \n-            Thread thread = new Thread(socketReceiverRunnable);\n-            thread.setName(\"VitotronicSocketThread\");\n+            Thread thread = new Thread(socketReceiverRunnable, \"OH-binding-\" + getThing().getUID() + \"-SocketThread\");\n             thread.start();\n         }\n     }\n\ndiff --git a/bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/device/connection/WifiConnection.java b/bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/device/connection/WifiConnection.java\nindex 678b9153c22ba..4ed0061b0d361 100644\n--- a/bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/device/connection/WifiConnection.java\n+++ b/bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/device/connection/WifiConnection.java\n@@ -17,6 +17,7 @@\n import java.io.InputStreamReader;\n import java.net.Socket;\n \n+import org.openhab.binding.yeelight.internal.YeelightBindingConstants;\n import org.openhab.binding.yeelight.internal.lib.device.ConnectState;\n import org.openhab.binding.yeelight.internal.lib.device.DeviceBase;\n import org.openhab.binding.yeelight.internal.lib.device.DeviceMethod;\n@@ -120,7 +121,7 @@ public boolean connect() {\n                 mDevice.setConnectionState(ConnectState.DISCONNECTED);\n                 mSocket = null;\n             }\n-        });\n+        }, \"OH-binding-\" + YeelightBindingConstants.BINDING_ID + \"-WifiConnection\");\n         mConnectThread.start();\n         return false;\n     }\n\ndiff --git a/bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/services/DeviceManager.java b/bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/services/DeviceManager.java\nindex 652e8e4bd6c49..e6a4ae55a4897 100644\n--- a/bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/services/DeviceManager.java\n+++ b/bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/services/DeviceManager.java\n@@ -29,6 +29,7 @@\n import java.util.concurrent.Executors;\n import java.util.stream.Collectors;\n \n+import org.openhab.binding.yeelight.internal.YeelightBindingConstants;\n import org.openhab.binding.yeelight.internal.lib.device.DeviceBase;\n import org.openhab.binding.yeelight.internal.lib.device.DeviceFactory;\n import org.openhab.binding.yeelight.internal.lib.device.DeviceStatus;\n@@ -98,7 +99,7 @@ public void startDiscovery(long timeToStop) {\n                 } finally {\n                     stopDiscovery();\n                 }\n-            }).start();\n+            }, \"OH-binding-\" + YeelightBindingConstants.BINDING_ID + \"-DeviceManager\").start();\n         }\n     }\n \n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/test/EmulatedV6Bridge.java b/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/test/EmulatedV6Bridge.java\nindex 243a912d726c1..75e5872a55df1 100644\n--- a/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/test/EmulatedV6Bridge.java\n+++ b/bundles/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/test/EmulatedV6Bridge.java\n@@ -92,8 +92,8 @@ public class EmulatedV6Bridge {\n             FAKE_MAC[2], FAKE_MAC[3], FAKE_MAC[4], FAKE_MAC[5], 1 };\n \n     EmulatedV6Bridge() {\n-        new Thread(this::runDiscovery).start();\n-        new Thread(this::runBrigde).start();\n+        new Thread(this::runDiscovery, \"OH-binding-\" + MilightBindingConstants.BINDING_ID + \"-runDiscovery\").start();\n+        new Thread(this::runBridge, \"OH-binding-\" + MilightBindingConstants.BINDING_ID + \"-runBridge\").start();\n     }\n \n     private void replaceWithMac(byte[] data, int offset) {\n@@ -144,7 +144,7 @@ public void runDiscovery() {\n         }\n     }\n \n-    public void runBrigde() {\n+    public void runBridge() {\n         try {\n             byte[] a = new byte[0];\n             DatagramPacket sPacket = new DatagramPacket(a, a.length);\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17792",
    "pr_id": 17792,
    "issue_id": 17758,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[homewizard] The p1 meter stays in status unknow\nI Upgraded to 4.3m4 and there is one problem with the homewizard binding. It stays in status unkown.\r\n\r\n> 2024-11-16 20:38:37.735 [WARN ] [mmon.WrappedScheduledExecutorService] - Scheduled runnable ended with an exception:\r\ncom.google.gson.JsonSyntaxException: java.lang.NumberFormatException: Expected an int but was 226.800 at line 1 column 515 path $.active_voltage_l1_v\r\nat com.google.gson.internal.bind.TypeAdapters$7.read(TypeAdapters.java:251) ~[?:?]\r\nat com.google.gson.internal.bind.TypeAdapters$7.read(TypeAdapters.java:241) ~[?:?]\r\nat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.readIntoField(ReflectiveTypeAdapterFactory.java:212) ~[?:?]\r\nat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$FieldReflectionAdapter.readField(ReflectiveTypeAdapterFactory.java:433) ~[?:?]\r\nat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:393) ~[?:?]\r\nat com.google.gson.Gson.fromJson(Gson.java:1227) ~[?:?]\r\nat com.google.gson.Gson.fromJson(Gson.java:1137) ~[?:?]\r\nat com.google.gson.Gson.fromJson(Gson.java:1047) ~[?:?]\r\nat com.google.gson.Gson.fromJson(Gson.java:982) ~[?:?]\r\nat org.openhab.binding.homewizard.internal.handler.HomeWizardDeviceHandler.pollData(HomeWizardDeviceHandler.java:140) ~[?:?]\r\nat org.openhab.binding.homewizard.internal.handler.HomeWizardDeviceHandler.pollingCode(HomeWizardDeviceHandler.java:160) ~[?:?]\r\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]\r\nat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) ~[?:?]\r\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) ~[?:?]\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]\r\nat java.lang.Thread.run(Thread.java:840) [?:?]\r\nCaused by: java.lang.NumberFormatException: Expected an int but was 226.800 at line 1 column 515 path $.active_voltage_l1_v\r\nat com.google.gson.stream.JsonReader.nextInt(JsonReader.java:1218) ~[?:?]\r\nat com.google.gson.internal.bind.TypeAdapters$7.read(TypeAdapters.java:249) ~[?:?]\r\n… 16 more\r\n\r\nIf i can do somthing let me know! \r\nthank you in advance!!\r\n",
    "issue_word_count": 295,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.binding.homewizard/src/main/java/org/openhab/binding/homewizard/internal/dto/DataPayload.java",
      "bundles/org.openhab.binding.homewizard/src/test/java/org/openhab/binding/homewizard/internal/dto/P1PayloadTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.homewizard/src/test/java/org/openhab/binding/homewizard/internal/dto/P1PayloadTest.java"
    ],
    "base_commit": "511fab73c01590ecb71c94f8a4e06c02615a2100",
    "head_commit": "a1143b976cebd8ade8ba0bdc5d4b23a8358bf9e8",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17792",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17792",
    "dockerfile": "",
    "pr_merged_at": "2024-11-23T20:16:16.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.homewizard/src/main/java/org/openhab/binding/homewizard/internal/dto/DataPayload.java b/bundles/org.openhab.binding.homewizard/src/main/java/org/openhab/binding/homewizard/internal/dto/DataPayload.java\nindex e6154bebfb64f..4769da9e14911 100644\n--- a/bundles/org.openhab.binding.homewizard/src/main/java/org/openhab/binding/homewizard/internal/dto/DataPayload.java\n+++ b/bundles/org.openhab.binding.homewizard/src/main/java/org/openhab/binding/homewizard/internal/dto/DataPayload.java\n@@ -58,13 +58,13 @@ public class DataPayload {\n     private int longPowerFailCount;\n \n     @SerializedName(\"active_voltage_v\")\n-    private int activeVoltage;\n+    private double activeVoltage;\n     @SerializedName(\"active_voltage_l1_v\")\n-    private int activeVoltageL1;\n+    private double activeVoltageL1;\n     @SerializedName(\"active_voltage_l2_v\")\n-    private int activeVoltageL2;\n+    private double activeVoltageL2;\n     @SerializedName(\"active_voltage_l3_v\")\n-    private int activeVoltageL3;\n+    private double activeVoltageL3;\n \n     @SerializedName(\"active_current_a\")\n     private double activeCurrent;\n@@ -175,7 +175,7 @@ public int getLongPowerFailCount() {\n      *\n      * @return current active voltage\n      */\n-    public int getActiveVoltage() {\n+    public double getActiveVoltage() {\n         return activeVoltage;\n     }\n \n@@ -184,7 +184,7 @@ public int getActiveVoltage() {\n      *\n      * @return active voltage on phase 1\n      */\n-    public int getActiveVoltageL1() {\n+    public double getActiveVoltageL1() {\n         return activeVoltageL1;\n     }\n \n@@ -193,7 +193,7 @@ public int getActiveVoltageL1() {\n      *\n      * @return active voltage on phase 2\n      */\n-    public int getActiveVoltageL2() {\n+    public double getActiveVoltageL2() {\n         return activeVoltageL2;\n     }\n \n@@ -202,7 +202,7 @@ public int getActiveVoltageL2() {\n      *\n      * @return active voltage on phase 3\n      */\n-    public int getActiveVoltageL3() {\n+    public double getActiveVoltageL3() {\n         return activeVoltageL3;\n     }\n \n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.homewizard/src/test/java/org/openhab/binding/homewizard/internal/dto/P1PayloadTest.java b/bundles/org.openhab.binding.homewizard/src/test/java/org/openhab/binding/homewizard/internal/dto/P1PayloadTest.java\nindex cf7bdbb59bbbf..33c1c750f03fe 100644\n--- a/bundles/org.openhab.binding.homewizard/src/test/java/org/openhab/binding/homewizard/internal/dto/P1PayloadTest.java\n+++ b/bundles/org.openhab.binding.homewizard/src/test/java/org/openhab/binding/homewizard/internal/dto/P1PayloadTest.java\n@@ -47,10 +47,10 @@ public void deserializeResponse() throws IOException {\n         assertThat(key.getActivePowerL1W(), is(-676));\n         assertThat(key.getActivePowerL2W(), is(133));\n         assertThat(key.getActivePowerL3W(), is(18));\n-        assertThat(key.getActiveVoltage(), is(220));\n-        assertThat(key.getActiveVoltageL1(), is(221));\n-        assertThat(key.getActiveVoltageL2(), is(222));\n-        assertThat(key.getActiveVoltageL3(), is(223));\n+        assertThat(key.getActiveVoltage(), is(220.0));\n+        assertThat(key.getActiveVoltageL1(), is(221.0));\n+        assertThat(key.getActiveVoltageL2(), is(222.0));\n+        assertThat(key.getActiveVoltageL3(), is(223.0));\n         assertThat(key.getTotalEnergyExportT1Kwh(), is(8874.0));\n         assertThat(key.getTotalEnergyExportT2Kwh(), is(7788.0));\n         assertThat(key.getTotalEnergyImportT1Kwh(), is(10830.511));\n@@ -80,10 +80,10 @@ public void deserializeResponseEmpty() throws IOException {\n         assertThat(key.getActivePowerL1W(), is(0));\n         assertThat(key.getActivePowerL2W(), is(0));\n         assertThat(key.getActivePowerL3W(), is(0));\n-        assertThat(key.getActiveVoltage(), is(0));\n-        assertThat(key.getActiveVoltageL1(), is(0));\n-        assertThat(key.getActiveVoltageL2(), is(0));\n-        assertThat(key.getActiveVoltageL3(), is(0));\n+        assertThat(key.getActiveVoltage(), is(0.0));\n+        assertThat(key.getActiveVoltageL1(), is(0.0));\n+        assertThat(key.getActiveVoltageL2(), is(0.0));\n+        assertThat(key.getActiveVoltageL3(), is(0.0));\n         assertThat(key.getAnyPowerFailCount(), is(0));\n         assertThat(key.getLongPowerFailCount(), is(0));\n         assertThat(key.getTotalEnergyExportT1Kwh(), is(0.0));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17772",
    "pr_id": 17772,
    "issue_id": 17762,
    "repo": "openhab/openhab-addons",
    "problem_statement": "Discussion: Hue Emulation and Hue API V2\nFor discussion: does Hue Emulation need to be rewritten using Hue API V2? (I believe it is currently based on API V1 which may no longer be supported..)\r\n\r\nhttps://community.openhab.org/t/hue-emulator-alexa-app-only-displays-one-light/159556/14",
    "issue_word_count": 50,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.io.hueemulation/src/main/java/org/openhab/io/hueemulation/internal/ConfigStore.java",
      "bundles/org.openhab.io.hueemulation/src/test/java/org/openhab/io/hueemulation/internal/rest/ItemUIDtoHueIDMappingTests.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.io.hueemulation/src/test/java/org/openhab/io/hueemulation/internal/rest/ItemUIDtoHueIDMappingTests.java"
    ],
    "base_commit": "91f16fa16c340910282e1a116291453c365eeea7",
    "head_commit": "9a1e3e39671225a58e6028f710cb62887fab021f",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17772",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17772",
    "dockerfile": "",
    "pr_merged_at": "2024-11-21T19:04:05.000Z",
    "patch": "diff --git a/bundles/org.openhab.io.hueemulation/src/main/java/org/openhab/io/hueemulation/internal/ConfigStore.java b/bundles/org.openhab.io.hueemulation/src/main/java/org/openhab/io/hueemulation/internal/ConfigStore.java\nindex 7ec3261b5c382..e9f560eaf406e 100644\n--- a/bundles/org.openhab.io.hueemulation/src/main/java/org/openhab/io/hueemulation/internal/ConfigStore.java\n+++ b/bundles/org.openhab.io.hueemulation/src/main/java/org/openhab/io/hueemulation/internal/ConfigStore.java\n@@ -122,8 +122,6 @@ public class ConfigStore {\n \n     private int highestAssignedHueID = 1;\n \n-    private String hueIDPrefix = \"\";\n-\n     public ConfigStore() {\n         scheduler = ThreadPoolManager.getScheduledPool(ThreadPoolManager.THREAD_POOL_NAME_COMMON);\n     }\n@@ -236,8 +234,6 @@ public void modified(Map<String, Object> properties) {\n             ds.config.bridgeid = ds.config.bridgeid.substring(0, 12);\n         }\n \n-        hueIDPrefix = getHueIDPrefixFromUUID(config.uuid);\n-\n         if (config.permanentV1bridge) {\n             ds.config.makeV1bridge();\n         }\n@@ -263,31 +259,6 @@ private String getConfiguredHostAddress(InetAddress configuredAddress) {\n         }\n     }\n \n-    /**\n-     * Get the prefix used to create a unique id\n-     *\n-     * @param uuid The uuid\n-     * @return The prefix in the format of AA:BB:CC:DD:EE:FF:00:11 if uuid is a valid UUID, otherwise uuid is returned.\n-     */\n-    private String getHueIDPrefixFromUUID(final String uuid) {\n-        // Hue API example of a unique id is AA:BB:CC:DD:EE:FF:00:11-XX\n-        // 00:11-XX is generated from the item.\n-        String prefix = uuid;\n-        try {\n-            // Generate prefix if uuid is a randomly generated UUID\n-            if (UUID.fromString(uuid).version() == 4) {\n-                final StringBuilder sb = new StringBuilder(17);\n-                sb.append(uuid, 0, 2).append(\":\").append(uuid, 2, 4).append(\":\").append(uuid, 4, 6).append(\":\")\n-                        .append(uuid, 6, 8).append(\":\").append(uuid, 9, 11).append(\":\").append(uuid, 11, 13);\n-                prefix = sb.toString().toUpperCase();\n-            }\n-        } catch (final IllegalArgumentException e) {\n-            // uuid is not a valid UUID\n-        }\n-\n-        return prefix;\n-    }\n-\n     @Deactivate\n     public void deactive(int reason) {\n         ScheduledFuture<?> future = pairingOffFuture;\n@@ -351,17 +322,26 @@ public String mapItemUIDtoHueID(Item item) {\n      * @return The unique id\n      */\n     public String getHueUniqueId(final String hueId) {\n+        // From the Hue API:\n+        // Format: AA:BB:CC:DD:EE:FF:00:11-XX\n+        // Content: Device MAC + unique endpoint id\n+        // Example: 00:17:88:01:00:bd:c7:b9-0b\n+        // Using the item's hueID for every three octets ensures both the MAC and\n+        // endpoint are unique for each item which seems important for Alexa discovery.\n         String unique;\n \n         try {\n-            final String id = String.format(\"%06X\", Integer.valueOf(hueId));\n+            final String id = String.format(\"%06x\", Integer.valueOf(hueId));\n             final StringBuilder sb = new StringBuilder(26);\n-            sb.append(hueIDPrefix).append(\":\").append(id, 0, 2).append(\":\").append(id, 2, 4).append(\"-\").append(id, 4,\n-                    6);\n+\n+            sb.append(id, 0, 2).append(\":\").append(id, 2, 4).append(\":\").append(id, 4, 6).append(\":\")//\n+                    .append(id, 0, 2).append(\":\").append(id, 2, 4).append(\":\").append(id, 4, 6).append(\":\")//\n+                    .append(id, 0, 2).append(\":\").append(id, 2, 4).append(\"-\").append(id, 4, 6);\n+\n             unique = sb.toString();\n         } catch (final NumberFormatException | IllegalFormatException e) {\n             // Use the hueId as is\n-            unique = hueIDPrefix + \"-\" + hueId;\n+            unique = hueId;\n         }\n \n         return unique;\n",
    "test_patch": "diff --git a/bundles/org.openhab.io.hueemulation/src/test/java/org/openhab/io/hueemulation/internal/rest/ItemUIDtoHueIDMappingTests.java b/bundles/org.openhab.io.hueemulation/src/test/java/org/openhab/io/hueemulation/internal/rest/ItemUIDtoHueIDMappingTests.java\nindex 3385015a2d40a..41303755b8502 100644\n--- a/bundles/org.openhab.io.hueemulation/src/test/java/org/openhab/io/hueemulation/internal/rest/ItemUIDtoHueIDMappingTests.java\n+++ b/bundles/org.openhab.io.hueemulation/src/test/java/org/openhab/io/hueemulation/internal/rest/ItemUIDtoHueIDMappingTests.java\n@@ -133,7 +133,7 @@ public void uniqueIdForLargeHueID() {\n         HueLightEntry device = cs.ds.lights.get(hueID);\n         assertThat(device.item, is(item));\n         assertThat(device.state, is(instanceOf(HueStatePlug.class)));\n-        assertThat(device.uniqueid, CoreMatchers.is(\"A6:68:DC:9B:71:72:00:00-FF\"));\n+        assertThat(device.uniqueid, CoreMatchers.is(\"00:00:ff:00:00:ff:00:00-ff\"));\n \n         item = new SwitchItem(\"switch2\");\n         item.setCategory(\"Light\");\n@@ -146,6 +146,6 @@ public void uniqueIdForLargeHueID() {\n         device = cs.ds.lights.get(hueID);\n         assertThat(device.item, is(item));\n         assertThat(device.state, is(instanceOf(HueStatePlug.class)));\n-        assertThat(device.uniqueid, CoreMatchers.is(\"A6:68:DC:9B:71:72:03:E8-00\"));\n+        assertThat(device.uniqueid, CoreMatchers.is(\"03:e8:00:03:e8:00:03:e8-00\"));\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17770",
    "pr_id": 17770,
    "issue_id": 17755,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[onkyo] Audio sink does not play any sounds on TX-NR646\n<!-- Provide a general summary of the issue in the *Title* above -->\r\n<!-- If the issue is related to a binding, please include its short name in -->\r\n<!-- square brackets in the title - Example: \"[astro] My issue...\" -->\r\n\r\n<!-- Important: Please contact the openHAB community forum for questions or -->\r\n<!-- for configuration and usage guidance: https://community.openhab.org -->\r\n\r\n<!-- Feel free to delete any comment lines in the template (starting with \"<!--\") -->\r\n\r\n## Expected Behavior\r\nAfter setting the receiver thing as default audio sink it should be possible to play sounds from CLI:\r\n```\r\nopenhab> openhab:audio play doorbell.mp3\r\n```\r\n<!-- If you're describing a bug, tell us what should happen -->\r\n<!-- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n## Current Behavior\r\nThere is no sound coming out of the receiver speakers after issuing `openhab:audio play` commands.\r\nAfter enabling `TRACE` level it looks that the binding sends proper commands to the receiver, but nothing happens.\r\n<!-- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!-- Include related log information (preferably debug level) and related configs -->\r\n<!-- Use a file attachment for log and config information longer than a few lines -->\r\n<!-- Enclose multi-line log/code snippets with ``` on new lines for proper formatting -->\r\n<!-- If suggesting a change/improvement, explain the difference from current behavior -->\r\n<!-- For improvements, discuss at community.openhab.org first and include link to topic -->\r\n\r\n## Possible Solution\r\nIt turned out, that the binding sends \"SetAVTransportURI\" action with empty \"CurrentURIMetaData\" element in request body.\r\nTested other UPnP players (BubbleUPnP, Windows Media Player) send this action with filled \"CurrentURIMetaData\" element and the receiver plays any media without problems. It seems that at least some of Onkyo receivers (including TX-NR646) require this field to play media streams. After several exepriments it looks like required element is \"res\" with \"protocolInfo\" attribute.\r\n<!-- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!-- or ideas how to implement the addition or change -->\r\n\r\n## Steps to Reproduce (for Bugs)\r\n<!-- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!-- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Install Onkyo binding\r\n2. Configure \"Callback URL\" parameter in the binding configuration\r\n4. Discover your receiver and add new thing\r\n5. Set it as default audio sink in \"Sounds\" configuration\r\n7. Login to the console\r\n8. Enter `openhab:audio play doorbell.mp3`\r\n9. Nothing happens\r\n\r\n## Your Environment\r\n<!-- Include as many relevant details about the environment you experienced the bug in -->\r\n* Official docker image 4.2.2\r\n* Java 17\r\n* Onkyo TX-NR646 receiver with latest possible firmware\r\n\r\nRelevant discussion is [here](https://community.openhab.org/t/using-onkyo-as-audio-sink/29946/16).\r\n",
    "issue_word_count": 449,
    "test_files_count": 1,
    "non_test_files_count": 3,
    "pr_changed_files": [
      "bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoAudioSink.java",
      "bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoUpnpHandler.java",
      "bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/URIMetaDataProcessor.java",
      "bundles/org.openhab.binding.onkyo/src/test/java/org/openhab/binding/onkyo/internal/handler/URIMetaDataProcessorTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.onkyo/src/test/java/org/openhab/binding/onkyo/internal/handler/URIMetaDataProcessorTest.java"
    ],
    "base_commit": "68a02d538aad0e0897f7c317e3a348755937b55d",
    "head_commit": "874d112374a8ac822d589cc6bcc7c5ceabecb1d1",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17770",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17770",
    "dockerfile": "",
    "pr_merged_at": "2024-11-21T16:20:03.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoAudioSink.java b/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoAudioSink.java\nindex 5c06a8f4edab5..ce4742a970d9a 100644\n--- a/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoAudioSink.java\n+++ b/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoAudioSink.java\n@@ -45,9 +45,9 @@ public class OnkyoAudioSink extends AudioSinkAsync {\n     private static final Set<AudioFormat> SUPPORTED_FORMATS = Set.of(AudioFormat.WAV, AudioFormat.MP3);\n     private static final Set<Class<? extends AudioStream>> SUPPORTED_STREAMS = Set.of(AudioStream.class);\n \n-    private OnkyoHandler handler;\n-    private AudioHTTPServer audioHTTPServer;\n-    private @Nullable String callbackUrl;\n+    private final OnkyoHandler handler;\n+    private final AudioHTTPServer audioHTTPServer;\n+    private final @Nullable String callbackUrl;\n \n     public OnkyoAudioSink(OnkyoHandler handler, AudioHTTPServer audioHTTPServer, @Nullable String callbackUrl) {\n         this.handler = handler;\n@@ -106,7 +106,7 @@ protected void processAsynchronously(@Nullable AudioStream audioStream)\n             tryClose(audioStream);\n             return;\n         }\n-        handler.playMedia(url);\n+        handler.playMedia(url, audioStream);\n     }\n \n     private void tryClose(@Nullable InputStream is) {\n\ndiff --git a/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoUpnpHandler.java b/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoUpnpHandler.java\nindex ee15fb3a1dc9e..3d15ea8bc96b0 100644\n--- a/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoUpnpHandler.java\n+++ b/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/OnkyoUpnpHandler.java\n@@ -16,6 +16,7 @@\n import java.util.Map;\n \n import org.openhab.binding.onkyo.internal.OnkyoBindingConstants;\n+import org.openhab.core.audio.AudioStream;\n import org.openhab.core.io.transport.upnp.UpnpIOParticipant;\n import org.openhab.core.io.transport.upnp.UpnpIOService;\n import org.openhab.core.library.types.StringType;\n@@ -35,7 +36,9 @@ public abstract class OnkyoUpnpHandler extends BaseThingHandler implements UpnpI\n \n     private final Logger logger = LoggerFactory.getLogger(OnkyoUpnpHandler.class);\n \n-    private UpnpIOService service;\n+    private final UpnpIOService service;\n+\n+    private final URIMetaDataProcessor uriMetaDataProcessor = new URIMetaDataProcessor();\n \n     public OnkyoUpnpHandler(Thing thing, UpnpIOService upnpIOService) {\n         super(thing);\n@@ -45,7 +48,7 @@ public OnkyoUpnpHandler(Thing thing, UpnpIOService upnpIOService) {\n     protected void handlePlayUri(Command command) {\n         if (command instanceof StringType) {\n             try {\n-                playMedia(command.toString());\n+                playMedia(command.toString(), null);\n \n             } catch (IllegalStateException e) {\n                 logger.warn(\"Cannot play URI ({})\", e.getMessage());\n@@ -53,7 +56,7 @@ protected void handlePlayUri(Command command) {\n         }\n     }\n \n-    public void playMedia(String url) {\n+    public void playMedia(String url, AudioStream audioStream) {\n         stop();\n         removeAllTracksFromQueue();\n \n@@ -61,7 +64,7 @@ public void playMedia(String url) {\n             url = \"x-file-cifs:\" + url;\n         }\n \n-        setCurrentURI(url, \"\");\n+        setCurrentURI(url, uriMetaDataProcessor.generate(url, audioStream));\n \n         play();\n     }\n\ndiff --git a/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/URIMetaDataProcessor.java b/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/URIMetaDataProcessor.java\nnew file mode 100644\nindex 0000000000000..0df1a1cbb203f\n--- /dev/null\n+++ b/bundles/org.openhab.binding.onkyo/src/main/java/org/openhab/binding/onkyo/internal/handler/URIMetaDataProcessor.java\n@@ -0,0 +1,118 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.onkyo.internal.handler;\n+\n+import static org.jupnp.model.XMLUtil.appendNewElement;\n+\n+import java.io.StringWriter;\n+\n+import javax.xml.transform.OutputKeys;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.stream.StreamResult;\n+\n+import org.jupnp.transport.impl.PooledXmlProcessor;\n+import org.openhab.core.audio.AudioFormat;\n+import org.openhab.core.audio.AudioStream;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+\n+/**\n+ * Utility class for building metadata XML for UPnP \"SetAVTransportURI\" action.\n+ *\n+ * @author Krzysztof Goworek - Initial contribution\n+ */\n+public class URIMetaDataProcessor extends PooledXmlProcessor {\n+    private static final String XML_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\n+    private static final String DIDL_NAMESPACE_URI = \"urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/\";\n+    private static final String UPNP_NAMESPACE_URI = \"urn:schemas-upnp-org:metadata-1-0/upnp/\";\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    /**\n+     * Generates metadata XML for given audio stream.\n+     *\n+     * @param url media stream URL\n+     * @param audioStream audio format specification\n+     * @return generated XML document as {@code String}\n+     */\n+    public String generate(String url, AudioStream audioStream) {\n+        if (audioStream != null) {\n+            try {\n+                Document document = this.newDocument();\n+                Element rootElement = document.createElementNS(DIDL_NAMESPACE_URI, \"DIDL-Lite\");\n+                document.appendChild(rootElement);\n+                rootElement.setAttributeNS(XML_NAMESPACE_URI, \"xmlns:upnp\", UPNP_NAMESPACE_URI);\n+\n+                Element itemElement = appendNewElement(document, rootElement, \"item\");\n+                setAttributeIfNotNull(itemElement, \"id\", audioStream.getId());\n+\n+                appendNewElement(document, itemElement, \"upnp:class\", \"object.item.audioItem\", UPNP_NAMESPACE_URI);\n+                Element resourceElement = appendNewElement(document, itemElement, \"res\", url);\n+                setFormatAttributes(resourceElement, audioStream.getFormat());\n+\n+                return documentToString(document);\n+            } catch (Exception e) {\n+                logger.warn(\"Unable to build metadata for {}: {}\", url, e.getMessage());\n+            }\n+        }\n+\n+        return \"\";\n+    }\n+\n+    private void setFormatAttributes(Element resourceElement, AudioFormat format) {\n+        setAttributeIfNotNull(resourceElement, \"nrAudioChannels\", format.getChannels());\n+        setAttributeIfNotNull(resourceElement, \"sampleFrequency\", format.getFrequency());\n+        setAttributeIfNotNull(resourceElement, \"bitrate\", format.getBitRate());\n+        setAttributeIfNotNull(resourceElement, \"protocolInfo\", getProtocolInfo(format));\n+    }\n+\n+    private String getProtocolInfo(AudioFormat format) {\n+        String[] protocolInfo = { \"http-get\", \"*\", getFormatMimeType(format), \"*\" };\n+        return String.join(\":\", protocolInfo);\n+    }\n+\n+    private String getFormatMimeType(AudioFormat format) {\n+        if (AudioFormat.MP3.isCompatible(format)) {\n+            return \"audio/mpeg\";\n+        } else if (AudioFormat.WAV.isCompatible(format)) {\n+            return \"audio/wav\";\n+        } else if (AudioFormat.OGG.isCompatible(format)) {\n+            return \"audio/ogg\";\n+        } else if (AudioFormat.AAC.isCompatible(format)) {\n+            return \"audio/aac\";\n+        } else if (AudioFormat.PCM_SIGNED.isCompatible(format)) {\n+            return \"audio/pcm\";\n+        }\n+        throw new IllegalArgumentException(\"Invalid audio format given: \" + format);\n+    }\n+\n+    private String documentToString(Document document) throws TransformerException {\n+        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n+        Transformer transformer = transformerFactory.newTransformer();\n+        StringWriter out = new StringWriter();\n+        transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\n+        transformer.transform(new DOMSource(document), new StreamResult(out));\n+        return out.toString();\n+    }\n+\n+    private static void setAttributeIfNotNull(Element element, String name, Object value) {\n+        if (value != null) {\n+            element.setAttribute(name, value.toString());\n+        }\n+    }\n+}\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.onkyo/src/test/java/org/openhab/binding/onkyo/internal/handler/URIMetaDataProcessorTest.java b/bundles/org.openhab.binding.onkyo/src/test/java/org/openhab/binding/onkyo/internal/handler/URIMetaDataProcessorTest.java\nnew file mode 100644\nindex 0000000000000..3435e91a93e91\n--- /dev/null\n+++ b/bundles/org.openhab.binding.onkyo/src/test/java/org/openhab/binding/onkyo/internal/handler/URIMetaDataProcessorTest.java\n@@ -0,0 +1,93 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.onkyo.internal.handler;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import java.io.IOException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.core.audio.AudioFormat;\n+import org.openhab.core.audio.AudioStream;\n+\n+/**\n+ * @author Krzysztof Goworek - Initial contribution\n+ */\n+class URIMetaDataProcessorTest {\n+    private static final String MP3_STREAM_URL = \"http://audio.server.local/audio.mp3\";\n+    private static final String AAC_STREAM_URL = \"http://audio.server.local/audio.aac\";\n+\n+    @Test\n+    void generateShouldReturnEmptyStringWhenStreamIsNull() {\n+        String result = new URIMetaDataProcessor().generate(MP3_STREAM_URL, null);\n+\n+        assertEquals(\"\", result);\n+    }\n+\n+    @Test\n+    void generateShouldReturnEmptyStringWhenExceptionOccurs() {\n+        AudioStream audioStream = new TestAudioStream(AudioFormat.MP3) {\n+            @Override\n+            public @Nullable String getId() {\n+                throw new UnsupportedOperationException();\n+            }\n+        };\n+\n+        String result = new URIMetaDataProcessor().generate(MP3_STREAM_URL, audioStream);\n+\n+        assertEquals(\"\", result);\n+    }\n+\n+    @Test\n+    void generateShouldReturnXMLWithGivenURLAndProtocolInfo() {\n+        String result = new URIMetaDataProcessor().generate(MP3_STREAM_URL, new TestAudioStream(AudioFormat.MP3));\n+\n+        assertTrue(result.matches(\"<DIDL-Lite.+</DIDL-Lite>\"));\n+        assertTrue(result.contains(\">\" + MP3_STREAM_URL + \"</res></item></DIDL-Lite>\"));\n+        assertTrue(result.contains(\"protocolInfo=\\\"http-get:*:audio/mpeg:*\\\"\"));\n+    }\n+\n+    @Test\n+    void generateShouldReturnXMLWithAllFormatAttributes() {\n+        AudioFormat audioFormat = new AudioFormat(AudioFormat.CONTAINER_NONE, AudioFormat.CODEC_AAC, true, 8, 192000,\n+                48000L, 2);\n+\n+        String result = new URIMetaDataProcessor().generate(AAC_STREAM_URL, new TestAudioStream(audioFormat));\n+\n+        assertTrue(result.contains(\"nrAudioChannels=\\\"2\\\"\"));\n+        assertTrue(result.contains(\"sampleFrequency=\\\"48000\\\"\"));\n+        assertTrue(result.contains(\"bitrate=\\\"192000\\\"\"));\n+        assertTrue(result.contains(\"protocolInfo=\\\"http-get:*:audio/aac:*\\\"\"));\n+    }\n+\n+    @NonNullByDefault\n+    private static class TestAudioStream extends AudioStream {\n+        private final AudioFormat audioFormat;\n+\n+        private TestAudioStream(AudioFormat audioFormat) {\n+            this.audioFormat = audioFormat;\n+        }\n+\n+        @Override\n+        public AudioFormat getFormat() {\n+            return audioFormat;\n+        }\n+\n+        @Override\n+        public int read() throws IOException {\n+            throw new IOException(\"Unsupported operation\");\n+        }\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17688",
    "pr_id": 17688,
    "issue_id": 17682,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[ism8] Support for heat pump power channels\nism8 API has been extended to provide data for new heat pumps (CHA) in firmware 1.80 and 1.90.\r\nSee the new manual at\r\nhttps://oxomi.com/service/json/catalog/pdf?portal=2024876&user=&roles=&accessToken=&catalog=10572791\r\n\r\nThe following should be done:\r\n* **add new channel type ```power-r```, which is used by CHA and Solar module**\r\n* update documentation: sample things file contains unknown channel type ```number-r``` for DpId002 (should be ```mode-r```), and wrong type ```temperature-r```for DpId013 (should be ```pressure-r```); fix typo CML -> CWL\r\n* update documentation: link to manual is no longer valid\r\n* possibly example should be extended, as it is tedious to add all the required channels by hand",
    "issue_word_count": 123,
    "test_files_count": 1,
    "non_test_files_count": 8,
    "pr_changed_files": [
      "bundles/org.openhab.binding.ism8/README.md",
      "bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/internal/util/Ism8DomainMap.java",
      "bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointFactory.java",
      "bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointIntegerValue.java",
      "bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointLongValue.java",
      "bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointValue.java",
      "bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/i18n/ism8.properties",
      "bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/thing/thing-types.xml",
      "bundles/org.openhab.binding.ism8/src/test/java/org/openhab/binding/ism8/internal/util/Ism8DomainMapTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.ism8/src/test/java/org/openhab/binding/ism8/internal/util/Ism8DomainMapTest.java"
    ],
    "base_commit": "2080c85524d6798c01cddabd08644ab2fb33df24",
    "head_commit": "e8ba5d12bfc1ea81e4e2e25f1314b627effbb230",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17688",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17688",
    "dockerfile": "",
    "pr_merged_at": "2024-11-05T22:03:19.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.ism8/README.md b/bundles/org.openhab.binding.ism8/README.md\nindex 1d6eb60393b91..9a9f47618dc76 100644\n--- a/bundles/org.openhab.binding.ism8/README.md\n+++ b/bundles/org.openhab.binding.ism8/README.md\n@@ -1,18 +1,21 @@\n # Ism8 Binding\n \n-_This binding can receive values of the Wolf heating system._\n+_This binding can receive measurements from a Wolf heating system._\n \n The ISM8 card can be placed into the Wolf heating system.\n-The card is usually used in combination with an object server, where the object server does forward those messages into the KNX bus system.\n-In case there is no need to handle the heating system values directly in the KNX system you can use this binding to monitor and control your heating system without the need to buy an object server.\n-The system works in a way that the ISM8 connects to a partner and sends from time to time an update. The frequency depends on the change of the values.\n+The card is usually used in combination with an object server, where the object server forwards those messages into the KNX bus system.\n+If there is no need to handle the heating system values directly in the KNX system, you can use this binding to monitor and control your heating system without the need to buy an object server.\n+The system works in such a way that the ISM8 connects to a partner and sends, from time to time, an update. The frequency depends on the change in values.\n This binding is listening to those messages.\n-After the first connection there is an active command send to the ISM8 in order to receive all available data points.\n-The manual of the ISM8 can be downloaded from the supplier (<https://www.wolf.eu/fileadmin/Wolf_Profi/Downloads/Montage-Bedienungsanleitungen/Regelungen/Zubehoer/3064356_201611_ISM8i_Montage-u.Bedienungsanleitung.pdf>)\n+After the first connection, there is an active command sent to the ISM8 in order to receive all available data points.\n+The manual for the ISM8 can be downloaded here: (<https://oxomi.com/service/json/catalog/pdf?portal=2024876&user=&roles=&accessToken=&catalog=10572791>)\n+\n+Note that there are different firmware versions of the ISM8 module.\n+Some data points are not available with older firmware versions.\n \n ## Supported Things\n \n-_This binding does only support one Thing - the Ism8-Device._\n+_This binding does only support one Thing - the ISM8-Device._\n \n ## Discovery\n \n@@ -20,18 +23,19 @@ _Auto-discovery is not supported._\n \n ## Thing Configuration\n \n-The intention was to have a generic ISM8 binding in order to offer the full flexibilty for the different heating systems.\n-For this reason you need to create a Thing configuration, where basically only the port is required next to the channel configuration.\n+The intention was to have a generic ISM8 binding in order to offer full flexibility for the different heating systems.\n+For this reason, you need to create a Thing configuration, where basically only the port is required next to the channel configuration.\n (`Thing ism8:device:heater \"Wolf Heizung\" [portNumber=12004]`)\n \n+\n ## Channels\n \n-You can use any channel supported by the ISM8 as data point. Please have a look at the official manual from Wolf.\n-Within this document you'll find a table containing all supported data points.\n-The available data points are depending on your heating system configuration.\n-The ISM8 does currently support 4 different devices at the same moment of time (e.g. CGB-2, CWL Excellent, Solar, ...).\n+You can use any channel supported by the ISM8 as a data point. Please take a look at the official manual from Wolf.\n+Within this document, you'll find a table containing all supported data points.\n+Depending on your heating system configuration, different data points are available.\n+The ISM8 does currently support 4 different devices at the same moment of time (e.g., CHA, CGB-2, CWL Excellent, Solar, etc.).\n \n-Once you have an overview of your heating system set you can start to create the channels accordingly.\n+Once you have an overview of your heating system, you can start to create the channels accordingly.\n Each channel should be created in the following way:\n \n | Type               | Name    | Description        | Configuration |\n@@ -49,28 +53,33 @@ Description:\n Configuration:\n \n - id=1            - Please enter here the ID of the data point you'd like to map to this channel.\n-A list of the available IDs are available within the Wolf manual.\n-The supported IDs are depending on the firmware version of the ISM8 and the connected systems.\n-- type=\"1.001\"    - Please enter here the knx type of the data point.\n+A list of the available IDs is available within the Wolf manual.\n+\n+Depending on the firmware version of the ISM8 and the connected systems, the supported IDs differ.\n+- type=\"1.001\"    - Please enter here the KNX type of the data point.\n You can find the data type in the Wolf ISM8 document as well.\n - write=true      - This parameter defines if the channel is bidirectional, but the parameter is optional and by default false.\n \n-Note:\n-Not all available types of the ISM8 interface are fully supported, but this can be extended.\n-For the moment the following data types are implemented:\n-\n-| Channel type   | Datapoint type                 | Item type                 | R/W | KNX-type's                 |\n-|----------------|--------------------------------|---------------------------|-----|----------------------------|\n-| switch-rw      | Digital DataPoint              | Switch                    | R/W | 1.001, 1.002, 1.003, 1.009 |\n-| switch-r       | Digital Readonly DataPoint     | Switch                    | R   | 1.001, 1.002, 1.003, 1.009 |\n-| percentage-rw  | Percentage  DataPoint          | Number:Dimensionless      | R/W | 5.001                      |\n-| percentage-r   | Percentage Readonly DataPoint  | Number:Dimensionless      | R   | 5.001                      |\n-| temperature-rw | Temperature DataPoint          | Number:Temperature        | R/W | 9.001,9.002                |\n-| temperature-r  | Temperature Readonly DataPoint | Number:Temperature        | R   | 9.002,9.002                |\n-| pressure-r     | Pressure Readonly DataPoint    | Number:Pressure           | R   | 9.006                      |\n-| flowrate-r     | Flowrate Readonly DataPoint    | Number:VolumetricFlowRate | R   | 13.002                     |\n-| mode-rw        | Mode DataPoint                 | Number:Dimensionless      | R/W | 20.102, 20.103, 20.105     |\n-| mode-r         | Mode Readonly DataPoint        | Number:Dimensionless      | R   | 20.102, 20.103, 20.105     |\n+> Note:\n+Not all available data types of the ISM8 interface are fully supported.\n+For the moment, the following data types are implemented:\n+\n+| Channel type    | Datapoint type                           | Item type                 | R/W | KNX-type's                 |\n+|-----------------|------------------------------------------|---------------------------|-----|----------------------------|\n+| switch-rw       | Digital DataPoint                        | Switch                    | R/W | 1.001, 1.002, 1.003, 1.009 |\n+| switch-r        | Digital Readonly DataPoint               | Switch                    | R   | 1.001, 1.002, 1.003, 1.009 |\n+| percentage-rw   | Percentage  DataPoint                    | Number:Dimensionless      | R/W | 5.001                      |\n+| percentage-r    | Percentage Readonly DataPoint            | Number:Dimensionless      | R   | 5.001                      |\n+| number-r        | Numeric Readonly DataPoint               | Number:Dimensionless      | R   | 5.010, 7.001               |\n+| temperature-rw  | Temperature DataPoint                    | Number:Temperature        | R/W | 9.001,9.002                |\n+| temperature-r   | Temperature Readonly DataPoint           | Number:Temperature        | R   | 9.002,9.002                |\n+| pressure-r      | Pressure Readonly DataPoint              | Number:Pressure           | R   | 9.006                      |\n+| flowrate-r      | Flowrate Readonly DataPoint              | Number:VolumetricFlowRate | R   | 9.025, 13.002              |\n+| active-energy-r | Active Energy Readonly DataPoint         | Number:Energy             | R   | 13.010, 13.013             |\n+| mode-rw         | Mode DataPoint                           | Number:Dimensionless      | R/W | 20.102, 20.103, 20.105     |\n+| mode-r          | Mode Readonly DataPoint                  | Number:Dimensionless      | R   | 20.102, 20.103, 20.105     |\n+\n+Date and Time types used by for CWL Excellent and CWL2 are currently not supported by the ISM8 add-on.\n \n ## Full Example\n \n@@ -80,28 +89,28 @@ For the moment the following data types are implemented:\n Thing ism8:device:heater \"Wolf Heizung\"         [portNumber=12004]\n     {\n         Type switch-r       : DpId001 \"Störung Heizgerät\"            [id=1, type=\"1.001\"]\n-        Type number-r       : DpId002 \"Betriebsart\"                  [id=2, type=\"20.105\"]\n+        Type mode-r         : DpId002 \"Betriebsart\"                  [id=2, type=\"20.105\"]\n         Type percentage-r   : DpId003 \"Brennerleistung\"              [id=3, type=\"5.001\"]\n         Type temperature-r  : DpId004 \"Kesseltemperatur\"             [id=4, type=\"9.001\"]\n         Type temperature-r  : DpId006 \"Rücklauftemperatur\"           [id=6, type=\"9.001\"]\n         Type temperature-r  : DpId007 \"Warmwassertemperatur\"         [id=7, type=\"9.001\"]\n         Type temperature-r  : DpId008 \"Außentemperatur\"              [id=8, type=\"9.001\"]\n         Type switch-r       : DpId009 \"Status Flamme\"                [id=9, type=\"1.001\"]\n-        Type temperature-r  : DpId013 \"Anlagendruck\"                 [id=13, type=\"9.006\"]\n+        Type pressure-r     : DpId013 \"Anlagendruck\"                 [id=13, type=\"9.006\"]\n         Type switch-r       : DpId053 \"Störung Systemmodul\"          [id=53, type=\"1.001\"]\n         Type temperature-r  : DpId054 \"Außentemperatur Systemmodul\"  [id=54, type=\"9.001\"]\n         Type temperature-rw : DpId056 \"Sollwert Warmwasser\"          [id=56, type=\"9.001\"]\n         Type mode-rw        : DpId057 \"Betriebsart Heizkreis\"        [id=57, type=\"20.102\"]\n         Type mode-rw        : DpId058 \"Betriebsart Warmwasser\"       [id=58, type=\"20.103\"]\n         Type temperature-rw : DpId065 \"Sollwertverschiebung\"         [id=65, type=\"9.002\"]\n-        Type switch-rw      : DpId148 \"CML Störung\"                  [id=148, type=\"1.001\"]\n+        Type switch-rw      : DpId148 \"CWL Störung\"                  [id=148, type=\"1.001\"]\n         Type mode-rw        : DpId149 \"CWL Betriebsart\"              [id=149, type=\"20.102\"]\n         Type percentage-r   : DpId163 \"CWL Lüftungsstufe\"            [id=163, type=\"5.001\"]\n         Type temperature-r  : DpId164 \"CWL Ablufttemperatur\"         [id=164, type=\"9.001\"]\n         Type temperature-r  : DpId165 \"CWL Zulufttemperatur\"         [id=165, type=\"9.001\"]\n         Type flowrate-r     : DpId166 \"CWL Luftdurchsatz Zuluft\"     [id=166, type=\"13.002\"]\n         Type flowrate-r     : DpId167 \"CWL Luftdurchsatz Abluft\"     [id=167, type=\"13.002\"]\n-        Type switch-r       : DpId192 \"CML Filterwarnung\"            [id=192, type=\"1.001\"]\n+        Type switch-r       : DpId192 \"CWL Filterwarnung\"            [id=192, type=\"1.001\"]\n     }\n ```\n \n@@ -123,14 +132,14 @@ Number ISM_HeizungSollwertWarmwasser    \"Sollwert Warmwasser [%.1f °C]\"\n Number ISM_HeizungBetriebsartHeizkreis  \"Betriebsart Heizkreis\"                  { channel=\"ism8:device:heater:DpId057\" }\n Number ISM_HeizungBetriebsartWarmwasser \"Betriebsart Warmwasser\"                 { channel=\"ism8:device:heater:DpId058\" }\n Number ISM_HeizungSollwertverschiebung  \"Sollwertverschiebung [%.1f °C]\"         { channel=\"ism8:device:heater:DpId065\" }\n-Switch ISM_LueftungStoerung             \"CML Störung\"                            { channel=\"ism8:device:heater:DpId148\" }\n+Switch ISM_LueftungStoerung             \"CWL Störung\"                            { channel=\"ism8:device:heater:DpId148\" }\n Number ISM_LueftungBetriebsart          \"CWL Betriebsart\"                        { channel=\"ism8:device:heater:DpId149\" }\n Number ISM_LueftungLueftungsstufe       \"CWL Lüftungsstufe [%.1f %%]\"            { channel=\"ism8:device:heater:DpId163\" }\n Number ISM_LueftungAblufttemperatur     \"CWL Ablufttemperatur [%.1f °C]\"         { channel=\"ism8:device:heater:DpId164\" }\n Number ISM_LueftungZulufttemperatur     \"CWL Zulufttemperatur [%.1f °C]\"         { channel=\"ism8:device:heater:DpId165\" }\n Number ISM_LueftungLuftdurchsatzZuluft  \"CWL Luftdurchsatz Zuluft [%.1f m³/h]\"   { channel=\"ism8:device:heater:DpId166\" }\n Number ISM_LueftungLuftdurchsatzAbluft  \"CWL Luftdurchsatz Abluft [%.1f m³/h]\"   { channel=\"ism8:device:heater:DpId167\" }\n-Switch ISM_LueftungFilterwarnung        \"CML Filterwarnung\"                      { channel=\"ism8:device:heater:DpId192\" }\n+Switch ISM_LueftungFilterwarnung        \"CWL Filterwarnung\"                      { channel=\"ism8:device:heater:DpId192\" }\n ```\n \n ### demo.sitemap\n\ndiff --git a/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/internal/util/Ism8DomainMap.java b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/internal/util/Ism8DomainMap.java\nindex bf5144abf05e4..4ecb42d491dfe 100644\n--- a/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/internal/util/Ism8DomainMap.java\n+++ b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/internal/util/Ism8DomainMap.java\n@@ -17,6 +17,8 @@\n \n import javax.measure.Unit;\n import javax.measure.quantity.Dimensionless;\n+import javax.measure.quantity.Energy;\n+import javax.measure.quantity.Power;\n import javax.measure.quantity.Pressure;\n import javax.measure.quantity.Temperature;\n \n@@ -57,8 +59,14 @@ public static State toOpenHABState(IDataPoint dataPoint) {\n             return new QuantityType<Temperature>((Double) value, Units.KELVIN);\n         } else if (Units.CUBICMETRE_PER_HOUR.equals(unit)) {\n             return new QuantityType<VolumetricFlowRate>((Double) value, Units.CUBICMETRE_PER_HOUR);\n+        } else if (Units.LITRE_PER_MINUTE.equals(unit)) {\n+            return new QuantityType<VolumetricFlowRate>((Double) value, Units.LITRE_PER_MINUTE);\n         } else if (Units.BAR.equals(unit)) {\n             return new QuantityType<Pressure>((Double) value, Units.BAR);\n+        } else if (Units.WATT.equals(unit)) {\n+            return new QuantityType<Power>((Double) value, Units.WATT);\n+        } else if (Units.WATT_HOUR.equals(unit)) {\n+            return new QuantityType<Energy>((Double) value, Units.WATT_HOUR);\n         } else if (Units.PERCENT.equals(unit)) {\n             return new QuantityType<Dimensionless>((Double) value, Units.PERCENT);\n         } else if (Units.ONE.equals(unit)) {\n@@ -67,6 +75,8 @@ public static State toOpenHABState(IDataPoint dataPoint) {\n             return OnOffType.from((boolean) value);\n         } else if (value instanceof Byte) {\n             return new QuantityType<Dimensionless>((byte) value, Units.ONE);\n+        } else if (value instanceof Integer) {\n+            return new QuantityType<Dimensionless>((int) value, Units.ONE);\n         }\n \n         LOGGER.debug(\"Failed to map DataPoint id: {} val: {}, to UoM state. Performing fallback.\", dataPoint.getId(),\n\ndiff --git a/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointFactory.java b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointFactory.java\nindex a61f1ff05b0ed..36733374b3683 100644\n--- a/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointFactory.java\n+++ b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointFactory.java\n@@ -19,6 +19,7 @@\n  * The {@link DataPointFactory} creates the data points depending on the types\n  *\n  * @author Hans-Reiner Hoffmann - Initial contribution\n+ * @author Holger Friedrich - Extend to new data types (fw 1.80 and 1.90)\n  */\n @NonNullByDefault\n public class DataPointFactory {\n@@ -40,14 +41,22 @@ public static IDataPoint createDataPoint(int id, String knxType, String descript\n             case \"5.001\":\n                 dataPoint = new DataPointScaling(id, knxType, description);\n                 break;\n+            case \"7.001\":\n+                dataPoint = new DataPointIntegerValue(id, knxType, description);\n+                break;\n             case \"9.001\":\n             case \"9.002\":\n             case \"9.006\":\n+            case \"9.024\":\n+            case \"9.025\":\n                 dataPoint = new DataPointValue(id, knxType, description);\n                 break;\n+            // TODO 10.001 (Time, CWL)\n+            // TODO 11.001 (Date, CWL)\n             case \"13.002\":\n                 dataPoint = new DataPointLongValue(id, knxType, description);\n                 break;\n+            case \"5.010\":\n             case \"20.102\":\n             case \"20.103\":\n             case \"20.105\":\n\ndiff --git a/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointIntegerValue.java b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointIntegerValue.java\nnew file mode 100644\nindex 0000000000000..f12d7c8390734\n--- /dev/null\n+++ b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointIntegerValue.java\n@@ -0,0 +1,69 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.ism8.server;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link DataPointIntegerValue} is the data points for integer values\n+ *\n+ * @author Holger Friedrich - Initial contribution\n+ */\n+@NonNullByDefault\n+public class DataPointIntegerValue extends DataPointBase<@Nullable Integer> {\n+    private final Logger logger = LoggerFactory.getLogger(DataPointIntegerValue.class);\n+\n+    public DataPointIntegerValue(int id, String knxDataType, String description) {\n+        super(id, knxDataType, description);\n+    }\n+\n+    @Override\n+    public String getValueText() {\n+        Object val = this.getValue();\n+        return val != null ? val.toString() : \"0\";\n+    }\n+\n+    @Override\n+    public void processData(byte[] data) {\n+        if (this.checkProcessData(data)) {\n+            if (data[3] != 2 && data.length <= 5) {\n+                logger.debug(\"DataPoint-ProcessData: Data size wrong for this type({}/1).\", data[3]);\n+                return;\n+            }\n+            int rawValue = Byte.toUnsignedInt(data[4]) * 0x100 + Byte.toUnsignedInt(data[5]);\n+            this.setValue(rawValue);\n+        }\n+    }\n+\n+    @Override\n+    protected byte[] convertWriteValue(Object value) {\n+        ByteBuffer data = ByteBuffer.allocate(2);\n+        int intVal;\n+        try {\n+            intVal = Integer.parseInt(value.toString());\n+        } catch (NumberFormatException e) {\n+            intVal = 0;\n+        }\n+\n+        int val = intVal;\n+        data.put((byte) (val & 0xFF));\n+        val = (val & 0xFF) / 256;\n+        data.put((byte) (val & 0xFF));\n+        return data.array();\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointLongValue.java b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointLongValue.java\nindex 18e9f8dc4ef62..b12479619f70a 100644\n--- a/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointLongValue.java\n+++ b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointLongValue.java\n@@ -38,6 +38,14 @@ public DataPointLongValue(int id, String knxDataType, String description) {\n             this.setUnit(Units.CUBICMETRE_PER_HOUR);\n             this.factor = 0.0001f;\n             this.outputFormat = \"%.1f\";\n+        } else if (\"13.010\".equals(knxDataType)) {\n+            this.setUnit(Units.WATT_HOUR);\n+            this.factor = 1.0f;\n+            this.outputFormat = \"%.1f\";\n+        } else if (\"13.013\".equals(knxDataType)) {\n+            this.setUnit(Units.WATT_HOUR);\n+            this.factor = 1000.0f;\n+            this.outputFormat = \"%.1f\";\n         } else {\n             this.setUnit(Units.ONE);\n             this.factor = 1.0f;\n\ndiff --git a/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointValue.java b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointValue.java\nindex fbb5f5b5d0b75..d9b67157a1777 100644\n--- a/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointValue.java\n+++ b/bundles/org.openhab.binding.ism8/src/main/java/org/openhab/binding/ism8/server/DataPointValue.java\n@@ -47,6 +47,14 @@ public DataPointValue(int id, String knxDataType, String description) {\n             this.setUnit(Units.BAR);\n             this.factor = 0.0000001f;\n             this.outputFormat = \"%.2f\";\n+        } else if (\"9.024\".equals(knxDataType)) {\n+            this.setUnit(Units.WATT);\n+            this.factor = 0.01f * 1000.0f;\n+            this.outputFormat = \"%.2f\";\n+        } else if (\"9.025\".equals(knxDataType)) {\n+            this.setUnit(Units.LITRE_PER_MINUTE);\n+            this.factor = 0.01f / 60.0f;\n+            this.outputFormat = \"%.2f\";\n         }\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/i18n/ism8.properties b/bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/i18n/ism8.properties\nindex 99778eeead9d5..828e2388c868b 100644\n--- a/bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/i18n/ism8.properties\n+++ b/bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/i18n/ism8.properties\n@@ -15,46 +15,99 @@ thing-type.config.ism8.device.portNumber.description = Port number of the object\n \n # channel types\n \n-channel-type.ism8.number-readonly.label = Value Readonly DataPoint\n-channel-type.ism8.number.label = Value DataPoint\n-channel-type.ism8.switch-readonly.label = Digital Readonly DataPoint\n-channel-type.ism8.switch.label = Digital DataPoint\n+channel-type.ism8.active-energy-r.label = Active Energy Readonly DataPoint\n+channel-type.ism8.flowrate-r.label = Flowrate Readonly DataPoint\n+channel-type.ism8.mode-r.label = Mode Readonly DataPoint\n+channel-type.ism8.mode-rw.label = Mode DataPoint\n+channel-type.ism8.number-r.label = Numeric Readonly DataPoint\n+channel-type.ism8.percentage-r.label = Percentage Readonly DataPoint\n+channel-type.ism8.percentage-rw.label = Percentage DataPoint\n+channel-type.ism8.power-r.label = Power Readonly DataPoint\n+channel-type.ism8.pressure-r.label = Pressure Readonly DataPoint\n+channel-type.ism8.switch-r.label = Digital Readonly DataPoint\n+channel-type.ism8.switch-rw.label = Digital DataPoint\n+channel-type.ism8.temperature-r.label = Temperature Readonly DataPoint\n+channel-type.ism8.temperature-rw.label = Temperature DataPoint\n \n # channel types config\n \n-channel-type.config.ism8.number-readonly.id.label = DP ID\n-channel-type.config.ism8.number-readonly.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n-channel-type.config.ism8.number-readonly.type.label = Type\n-channel-type.config.ism8.number-readonly.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n-channel-type.config.ism8.number-readonly.type.option.5.001 = DPT_Scaling\n-channel-type.config.ism8.number-readonly.type.option.9.001 = DPT_Value_Temp\n-channel-type.config.ism8.number-readonly.type.option.9.002 = DPT_Value_Tempd\n-channel-type.config.ism8.number-readonly.type.option.9.006 = DPT_Value_Pres\n-channel-type.config.ism8.number-readonly.type.option.13.002 = DPT_FlowRate\n-channel-type.config.ism8.number-readonly.type.option.20.102 = DPT_HVACMode\n-channel-type.config.ism8.number-readonly.type.option.20.103 = DPT_DHWMode\n-channel-type.config.ism8.number-readonly.type.option.20.105 = DPT_HVACContrMode\n-channel-type.config.ism8.number.id.label = DP ID\n-channel-type.config.ism8.number.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n-channel-type.config.ism8.number.type.label = Type\n-channel-type.config.ism8.number.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n-channel-type.config.ism8.number.type.option.9.001 = DPT_Value_Temp\n-channel-type.config.ism8.number.type.option.20.102 = DPT_HVACMode\n-channel-type.config.ism8.number.type.option.20.103 = DPT_DHWMode\n-channel-type.config.ism8.number.type.option.20.105 = DPT_HVACContrMode\n-channel-type.config.ism8.switch-readonly.id.label = DP ID\n-channel-type.config.ism8.switch-readonly.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n-channel-type.config.ism8.switch-readonly.type.label = Type\n-channel-type.config.ism8.switch-readonly.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Switch / 1.001)\n-channel-type.config.ism8.switch-readonly.type.option.1.001 = DPT_Switch\n-channel-type.config.ism8.switch-readonly.type.option.1.002 = DPT_Bool\n-channel-type.config.ism8.switch-readonly.type.option.1.003 = DPT_Enable\n-channel-type.config.ism8.switch-readonly.type.option.1.009 = DPT_OpenClose\n-channel-type.config.ism8.switch.id.label = DP ID\n-channel-type.config.ism8.switch.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n-channel-type.config.ism8.switch.type.label = Type\n-channel-type.config.ism8.switch.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Switch / 1.001)\n-channel-type.config.ism8.switch.type.option.1.001 = DPT_Switch\n-channel-type.config.ism8.switch.type.option.1.002 = DPT_Bool\n-channel-type.config.ism8.switch.type.option.1.003 = DPT_Enable\n-channel-type.config.ism8.switch.type.option.1.009 = DPT_OpenClose\n+channel-type.config.ism8.active-energy-r.id.label = DP ID\n+channel-type.config.ism8.active-energy-r.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.active-energy-r.type.label = Type\n+channel-type.config.ism8.active-energy-r.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.active-energy-r.type.option.13.010 = DPT_ActiveEnergy\n+channel-type.config.ism8.active-energy-r.type.option.13.013 = DPT_ActiveEnergy_kWh\n+channel-type.config.ism8.flowrate-r.id.label = DP ID\n+channel-type.config.ism8.flowrate-r.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.flowrate-r.type.label = Type\n+channel-type.config.ism8.flowrate-r.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.flowrate-r.type.option.9.025 = DPT_Power\n+channel-type.config.ism8.flowrate-r.type.option.13.002 = DPT_FlowRate\n+channel-type.config.ism8.mode-r.id.label = DP ID\n+channel-type.config.ism8.mode-r.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.mode-r.type.label = Type\n+channel-type.config.ism8.mode-r.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.mode-r.type.option.20.102 = DPT_HVACMode\n+channel-type.config.ism8.mode-r.type.option.20.103 = DPT_DHWMode\n+channel-type.config.ism8.mode-r.type.option.20.105 = DPT_HVACContrMode\n+channel-type.config.ism8.mode-rw.id.label = DP ID\n+channel-type.config.ism8.mode-rw.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.mode-rw.type.label = Type\n+channel-type.config.ism8.mode-rw.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.mode-rw.type.option.20.102 = DPT_HVACMode\n+channel-type.config.ism8.mode-rw.type.option.20.103 = DPT_DHWMode\n+channel-type.config.ism8.mode-rw.type.option.20.105 = DPT_HVACContrMode\n+channel-type.config.ism8.number-r.id.label = DP ID\n+channel-type.config.ism8.number-r.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.number-r.type.label = Type\n+channel-type.config.ism8.number-r.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.number-r.type.option.5.010 = DPT_Value_1_Ucount\n+channel-type.config.ism8.number-r.type.option.7.001 = DPT_Value_2_Ucount\n+channel-type.config.ism8.percentage-r.id.label = DP ID\n+channel-type.config.ism8.percentage-r.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.percentage-r.type.label = Type\n+channel-type.config.ism8.percentage-r.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.percentage-r.type.option.5.001 = DPT_Scaling\n+channel-type.config.ism8.percentage-rw.id.label = DP ID\n+channel-type.config.ism8.percentage-rw.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.percentage-rw.type.label = Type\n+channel-type.config.ism8.percentage-rw.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.percentage-rw.type.option.5.001 = DPT_Scaling\n+channel-type.config.ism8.power-r.id.label = DP ID\n+channel-type.config.ism8.power-r.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.power-r.type.label = Type\n+channel-type.config.ism8.power-r.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.power-r.type.option.9.024 = DPT_Power\n+channel-type.config.ism8.pressure-r.id.label = DP ID\n+channel-type.config.ism8.pressure-r.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.pressure-r.type.label = Type\n+channel-type.config.ism8.pressure-r.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.pressure-r.type.option.9.006 = DPT_Value_Pres\n+channel-type.config.ism8.switch-r.id.label = DP ID\n+channel-type.config.ism8.switch-r.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.switch-r.type.label = Type\n+channel-type.config.ism8.switch-r.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Switch / 1.001)\n+channel-type.config.ism8.switch-r.type.option.1.001 = DPT_Switch\n+channel-type.config.ism8.switch-r.type.option.1.002 = DPT_Bool\n+channel-type.config.ism8.switch-r.type.option.1.003 = DPT_Enable\n+channel-type.config.ism8.switch-r.type.option.1.009 = DPT_OpenClose\n+channel-type.config.ism8.switch-rw.id.label = DP ID\n+channel-type.config.ism8.switch-rw.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.switch-rw.type.label = Type\n+channel-type.config.ism8.switch-rw.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Switch / 1.001)\n+channel-type.config.ism8.switch-rw.type.option.1.001 = DPT_Switch\n+channel-type.config.ism8.switch-rw.type.option.1.002 = DPT_Bool\n+channel-type.config.ism8.switch-rw.type.option.1.003 = DPT_Enable\n+channel-type.config.ism8.switch-rw.type.option.1.009 = DPT_OpenClose\n+channel-type.config.ism8.temperature-r.id.label = DP ID\n+channel-type.config.ism8.temperature-r.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.temperature-r.type.label = Type\n+channel-type.config.ism8.temperature-r.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.temperature-r.type.option.9.001 = DPT_Value_Temp\n+channel-type.config.ism8.temperature-r.type.option.9.002 = DPT_Value_Tempd\n+channel-type.config.ism8.temperature-rw.id.label = DP ID\n+channel-type.config.ism8.temperature-rw.id.description = Put the number of the DataPoint ID to be mapped from the heating sytem.\n+channel-type.config.ism8.temperature-rw.type.label = Type\n+channel-type.config.ism8.temperature-rw.type.description = Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)\n+channel-type.config.ism8.temperature-rw.type.option.9.001 = DPT_Value_Temp\n+channel-type.config.ism8.temperature-rw.type.option.9.002 = DPT_Value_Tempd\n\ndiff --git a/bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/thing/thing-types.xml b/bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/thing/thing-types.xml\nindex e21c8946d5ccb..cb7d5b8603cfc 100644\n--- a/bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/thing/thing-types.xml\n+++ b/bundles/org.openhab.binding.ism8/src/main/resources/OH-INF/thing/thing-types.xml\n@@ -98,6 +98,26 @@\n \t\t</config-description>\n \t</channel-type>\n \n+\t<channel-type id=\"number-r\">\n+\t\t<item-type>Number:Dimensionless</item-type>\n+\t\t<label>Numeric Readonly DataPoint</label>\n+\t\t<state readOnly=\"true\"/>\n+\t\t<config-description>\n+\t\t\t<parameter name=\"id\" type=\"integer\" required=\"true\">\n+\t\t\t\t<label>DP ID</label>\n+\t\t\t\t<description>Put the number of the DataPoint ID to be mapped from the heating sytem.</description>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"type\" type=\"text\" required=\"true\">\n+\t\t\t\t<label>Type</label>\n+\t\t\t\t<description>Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)</description>\n+\t\t\t\t<options>\n+\t\t\t\t\t<option value=\"5.010\">DPT_Value_1_Ucount</option>\n+\t\t\t\t\t<option value=\"7.001\">DPT_Value_2_Ucount</option>\n+\t\t\t\t</options>\n+\t\t\t</parameter>\n+\t\t</config-description>\n+\t</channel-type>\n+\n \t<channel-type id=\"temperature-r\">\n \t\t<item-type>Number:Temperature</item-type>\n \t\t<label>Temperature Readonly DataPoint</label>\n@@ -157,6 +177,25 @@\n \t\t</config-description>\n \t</channel-type>\n \n+\t<channel-type id=\"power-r\">\n+\t\t<item-type>Number:Power</item-type>\n+\t\t<label>Power Readonly DataPoint</label>\n+\t\t<state readOnly=\"true\"/>\n+\t\t<config-description>\n+\t\t\t<parameter name=\"id\" type=\"integer\" required=\"true\">\n+\t\t\t\t<label>DP ID</label>\n+\t\t\t\t<description>Put the number of the DataPoint ID to be mapped from the heating sytem.</description>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"type\" type=\"text\" required=\"true\">\n+\t\t\t\t<label>Type</label>\n+\t\t\t\t<description>Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)</description>\n+\t\t\t\t<options>\n+\t\t\t\t\t<option value=\"9.024\">DPT_Power</option>\n+\t\t\t\t</options>\n+\t\t\t</parameter>\n+\t\t</config-description>\n+\t</channel-type>\n+\n \t<channel-type id=\"flowrate-r\">\n \t\t<item-type>Number:VolumetricFlowRate</item-type>\n \t\t<label>Flowrate Readonly DataPoint</label>\n@@ -170,12 +209,33 @@\n \t\t\t\t<label>Type</label>\n \t\t\t\t<description>Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)</description>\n \t\t\t\t<options>\n+\t\t\t\t\t<option value=\"9.025\">DPT_Power</option>\n \t\t\t\t\t<option value=\"13.002\">DPT_FlowRate</option>\n \t\t\t\t</options>\n \t\t\t</parameter>\n \t\t</config-description>\n \t</channel-type>\n \n+\t<channel-type id=\"active-energy-r\">\n+\t\t<item-type>Number:Energy</item-type>\n+\t\t<label>Active Energy Readonly DataPoint</label>\n+\t\t<state readOnly=\"true\"/>\n+\t\t<config-description>\n+\t\t\t<parameter name=\"id\" type=\"integer\" required=\"true\">\n+\t\t\t\t<label>DP ID</label>\n+\t\t\t\t<description>Put the number of the DataPoint ID to be mapped from the heating sytem.</description>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"type\" type=\"text\" required=\"true\">\n+\t\t\t\t<label>Type</label>\n+\t\t\t\t<description>Put the KNX-type of the DataPoint (e.g. DPT_Value_Temp / 9.001)</description>\n+\t\t\t\t<options>\n+\t\t\t\t\t<option value=\"13.010\">DPT_ActiveEnergy</option>\n+\t\t\t\t\t<option value=\"13.013\">DPT_ActiveEnergy_kWh</option>\n+\t\t\t\t</options>\n+\t\t\t</parameter>\n+\t\t</config-description>\n+\t</channel-type>\n+\n \t<channel-type id=\"mode-r\">\n \t\t<item-type>Number:Dimensionless</item-type>\n \t\t<label>Mode Readonly DataPoint</label>\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.ism8/src/test/java/org/openhab/binding/ism8/internal/util/Ism8DomainMapTest.java b/bundles/org.openhab.binding.ism8/src/test/java/org/openhab/binding/ism8/internal/util/Ism8DomainMapTest.java\nindex 05ca48ca1b62b..311831d3d2615 100644\n--- a/bundles/org.openhab.binding.ism8/src/test/java/org/openhab/binding/ism8/internal/util/Ism8DomainMapTest.java\n+++ b/bundles/org.openhab.binding.ism8/src/test/java/org/openhab/binding/ism8/internal/util/Ism8DomainMapTest.java\n@@ -15,7 +15,7 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n import javax.measure.quantity.Dimensionless;\n-import javax.measure.quantity.Temperature;\n+import javax.measure.quantity.Pressure;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.BeforeEach;\n@@ -24,6 +24,8 @@\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.openhab.binding.ism8.server.DataPointBool;\n import org.openhab.binding.ism8.server.DataPointByteValue;\n+import org.openhab.binding.ism8.server.DataPointIntegerValue;\n+import org.openhab.binding.ism8.server.DataPointLongValue;\n import org.openhab.binding.ism8.server.DataPointScaling;\n import org.openhab.binding.ism8.server.DataPointValue;\n import org.openhab.binding.ism8.server.IDataPoint;\n@@ -35,6 +37,8 @@\n import org.openhab.core.types.Command;\n import org.openhab.core.types.State;\n import org.openhab.core.util.HexUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  *\n@@ -44,6 +48,7 @@\n @ExtendWith(MockitoExtension.class)\n @NonNullByDefault\n public class Ism8DomainMapTest {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(Ism8DomainMap.class);\n \n     @BeforeEach\n     public void initialize() {\n@@ -105,29 +110,229 @@ public void mapDataPointScalingToMessage() {\n         assertEquals(\"0620F080001504000000F0C1000300010003000121\", HexUtils.bytesToHex(result));\n     }\n \n+    @Test\n+    public void mapDataPointBoolToOHState() {\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointBool(1, \"1.001\", \"Datapoint_1.001\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"0001030200\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(OnOffType.from(false), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointBool(1, \"1.001\", \"Datapoint_1.001\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"0001030201\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(OnOffType.from(true), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointBool(1, \"1.002\", \"Datapoint_1.002\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"0001030201\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(OnOffType.from(true), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointBool(1, \"1.003\", \"Datapoint_1.003\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"0001030201\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(OnOffType.from(true), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointBool(1, \"1.009\", \"Datapoint_1.009\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"0001030201\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(OnOffType.from(true), result);\n+            // TODO: check if OpenClosedType is appropriate\n+            // assertEquals(OpenClosedType.valueOf(\"OPEN\"), result);\n+        }\n+    }\n+\n     @Test\n     public void mapDataPointValueToOHState() {\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointValue(4, \"9.001\", \"Datapoint_9.001\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"000403020FE9\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(new QuantityType<>(\"40.49999909475446 °C\"), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointValue(4, \"9.002\", \"Datapoint_9.002\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"000403020FE9\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(new QuantityType<>(\"40.49999909475446 K\"), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointValue(4, \"9.006\", \"Datapoint_9.006\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"000403020FE9\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            // original unit is Pa, will be bar in OH -> divide by 10000, i.e. expect 0.0004049999909475446 bar\n+            // text ctor cannot be used, as it will result in scientific notation ..E-4,\n+            // double ctor returns a slightly different number caused by internal representation\n+            assertEquals(new QuantityType<Pressure>(0.00040500000473286946, Units.BAR), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointValue(4, \"9.024\", \"Datapoint_9.024\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"000403020FE9\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            // original unit is kW\n+            assertEquals(new QuantityType<>(\"40500 W\"), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointValue(4, \"9.025\", \"Datapoint_9.025\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"000403020FE9\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            // original unit is l/h, i.e. divide by 60 to get l/min\n+            assertEquals(new QuantityType<>(\"0.6749999927706085 l/min\"), result);\n+        }\n+    }\n+\n+    @Test\n+    public void mapDataPointByteValueToOHState() {\n         // arrange\n-        IDataPoint dataPoint = new DataPointValue(4, \"9.001\", \"Datapoint_9.001\");\n-        dataPoint.processData(HexUtils.hexToBytes(\"000403020FE9\"));\n+        IDataPoint dataPoint = new DataPointByteValue(5, \"5.010\", \"Datapoint_5.010\");\n+        dataPoint.processData(HexUtils.hexToBytes(\"0005030243\"));\n \n         // act\n         State result = Ism8DomainMap.toOpenHABState(dataPoint);\n \n         // assert\n-        assertEquals(new QuantityType<Temperature>(40.49999909475446, SIUnits.CELSIUS), result);\n+        assertEquals(new QuantityType<Dimensionless>(0x43, Units.ONE), result);\n     }\n \n     @Test\n-    public void mapDataPointLongToOHState() {\n+    public void mapDataPointIntegerValueToOHState() {\n         // arrange\n-        IDataPoint dataPoint = new DataPointByteValue(2, \"20.102\", \"Datapoint_20.102\");\n-        dataPoint.processData(HexUtils.hexToBytes(\"0002030101\"));\n+        IDataPoint dataPoint = new DataPointIntegerValue(7, \"7.001\", \"Datapoint_7.001\");\n+        dataPoint.processData(HexUtils.hexToBytes(\"000703024321\"));\n \n         // act\n         State result = Ism8DomainMap.toOpenHABState(dataPoint);\n \n         // assert\n-        assertEquals(new QuantityType<Dimensionless>(1, Units.ONE), result);\n+        assertEquals(new QuantityType<Dimensionless>(0x4321, Units.ONE), result);\n+    }\n+\n+    @Test\n+    public void mapDataPointLongValueToOHState() {\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointLongValue(13, \"13.002\", \"Datapoint_13.002\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"000D03027FFFFFFF\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            // value encoded above is max value 2147483647, scaling for 13.002 is 0.0001, unit m^3/h\n+            // -> expected is 214748.3647 m^3/h\n+            assertEquals(new QuantityType<>(\"214748.359275 m³/h\"), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointLongValue(13, \"13.010\", \"Datapoint_13.010\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"000D03027FFFFFFF\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            // value encoded above is max value 2147483647\n+            assertEquals(new QuantityType<>(\"2147483647 Wh\"), result);\n+        }\n+        {\n+            // arrange\n+            IDataPoint dataPoint = new DataPointLongValue(13, \"13.013\", \"Datapoint_13.013\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"000D03027FFFFFFF\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            // value encoded above is max value 2147483647\n+            assertEquals(new QuantityType<>(\"2147483647 kWh\"), result);\n+        }\n+    }\n+\n+    @Test\n+    public void mapDataPointLongToOHState() {\n+        { // arrange\n+            IDataPoint dataPoint = new DataPointByteValue(20, \"20.102\", \"Datapoint_20.102\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"0014030101\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(new QuantityType<Dimensionless>(1, Units.ONE), result);\n+        }\n+        { // arrange\n+            IDataPoint dataPoint = new DataPointByteValue(20, \"20.103\", \"Datapoint_20.103\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"0014030101\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(new QuantityType<Dimensionless>(1, Units.ONE), result);\n+        }\n+        { // arrange\n+            IDataPoint dataPoint = new DataPointByteValue(20, \"20.105\", \"Datapoint_20.105\");\n+            dataPoint.processData(HexUtils.hexToBytes(\"0014030101\"));\n+\n+            // act\n+            State result = Ism8DomainMap.toOpenHABState(dataPoint);\n+\n+            // assert\n+            assertEquals(new QuantityType<Dimensionless>(1, Units.ONE), result);\n+        }\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17685",
    "pr_id": 17685,
    "issue_id": 17609,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[avmfritz] HAN_FUN_DIMMABLE_BULB state not updating correctly when turned off\n### Description\r\nI have encountered an issue with the openHAB AVM FRITZ! Binding when using HAN_FUN_DIMMABLE_BULB type lamps (e.g., \"Philips Hue White E27 LED Lamp\" connected via a FRITZ!Smart Gateway). The binding does not recognize when the lamp is turned off. Instead, it retains the last brightness value. For example, if the lamp is set to a brightness of 50% and I turn it off via openHAB, the item briefly gets the value 0 but then reverts to 50, although the lamp is off.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Connect a HAN_FUN_DIMMABLE_BULB type lamp  (e.g., \"Philips Hue White E27 LED Lamp\") to a FRITZ!Smart Gateway.\r\n2. Set the lamp brightness to 50% using openHAB.\r\n3. Turn the lamp off via openHAB.\r\n4. Observe the item state in openHAB.\r\n\r\n### Expected Behavior \r\n\r\nThe item state should reflect that the lamp is off (brightness 0) and not revert to the previous brightness value.\r\n\r\n### Actual Behavior\r\n\r\nThe item state briefly changes to 0 and then reverts to the previous brightness value (e.g., 50%).\r\n\r\n### Analysis\r\n\r\nThe issue is likely due to the method [updateDimmableLight](https://github.com/openhab/openhab-addons/blob/99892c56eb7f3b02339174e65f8b389e672d298c/bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/handler/AVMFritzBaseThingHandler.java#L260) in the class `AVMFritzBaseThingHandler` not accounting for the `SimpleOnOffModel`. Similar to the [updateColorLight](https://github.com/openhab/openhab-addons/blob/99892c56eb7f3b02339174e65f8b389e672d298c/bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/handler/AVMFritzBaseThingHandler.java#L273) method, the brightness should be set to 0 when !simpleOnOff.state applies.\r\n\r\n### Affected Versions\r\n\r\n-   openHAB: 4.2.1\r\n-   FRITZ!Box: FRITZ!OS 7.59\r\n-   FRITZ!Smart Gateway: FRITZ!OS 7.63\r\n\r\n### API Data\r\n\r\n```xml\r\n<device identifier=\"Z001788010D412345\" id=\"2038\" functionbitmask=\"106500\" fwversion=\"0.0\" manufacturer=\"0x100b\" productname=\"Signify Netherlands B.V. LWG004\">\r\n  <present>1</present>\r\n  <txbusy>0</txbusy>\r\n  <name>Flur EG</name>\r\n  <simpleonoff>\r\n    <state>0</state>\r\n  </simpleonoff>\r\n  <levelcontrol>\r\n    <level>255</level>\r\n    <levelpercentage>100</levelpercentage>\r\n  </levelcontrol>\r\n  <etsiunitinfo>\r\n    <etsideviceid>20029</etsideviceid>\r\n    <unittype>265</unittype>\r\n    <interfaces>512,513</interfaces>\r\n  </etsiunitinfo>\r\n</device>\r\n```\r\n\r\nAny guidance on how to modify the updateDimmableLight method or any other potential fixes would be greatly appreciated. Thank you!",
    "issue_word_count": 362,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/handler/AVMFritzBaseThingHandler.java",
      "bundles/org.openhab.binding.avmfritz/src/test/java/org/openhab/binding/avmfritz/internal/dto/AVMFritzDeviceListModelTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.avmfritz/src/test/java/org/openhab/binding/avmfritz/internal/dto/AVMFritzDeviceListModelTest.java"
    ],
    "base_commit": "ed93eb572c072898faa21def64461ea7b5120481",
    "head_commit": "25b572ba789007e43d6aaed05602cc18d6e247b0",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17685",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17685",
    "dockerfile": "",
    "pr_merged_at": "2024-11-10T18:50:43.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/handler/AVMFritzBaseThingHandler.java b/bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/handler/AVMFritzBaseThingHandler.java\nindex 2262df46e8b40..ff4e72c294e39 100644\n--- a/bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/handler/AVMFritzBaseThingHandler.java\n+++ b/bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/handler/AVMFritzBaseThingHandler.java\n@@ -126,6 +126,7 @@\n  * @author Ulrich Mertin - Added support for HAN-FUN blinds\n  * @author Christoph Sommer - Added support for color temperature\n  * @author Tobias Lange - Added abs color temperature and fixed on/off behavior of light blub\n+ * @author Fabian Girgert - Fixed incorrect state of dimmable bulb when switched off\n  */\n @NonNullByDefault\n public abstract class AVMFritzBaseThingHandler extends BaseThingHandler implements FritzAhaStatusListener {\n@@ -207,7 +208,7 @@ public void onDeviceUpdated(ThingUID thingUID, AVMFritzBaseModel device) {\n                     updateColorLight(deviceModel.getColorControlModel(), deviceModel.getLevelControlModel(),\n                             deviceModel.getSimpleOnOffUnit());\n                 } else if (deviceModel.isDimmableLight() && !deviceModel.isHANFUNBlinds()) {\n-                    updateDimmableLight(deviceModel.getLevelControlModel());\n+                    updateDimmableLight(deviceModel.getLevelControlModel(), deviceModel.getSimpleOnOffUnit());\n                 } else if (deviceModel.isHANFUNUnit() && deviceModel.isHANFUNOnOff()) {\n                     updateSimpleOnOffUnit(deviceModel.getSimpleOnOffUnit());\n                 }\n@@ -255,9 +256,16 @@ protected void updateLevelControl(@Nullable LevelControlModel levelControlModel)\n         }\n     }\n \n-    private void updateDimmableLight(@Nullable LevelControlModel levelControlModel) {\n+    private void updateDimmableLight(@Nullable LevelControlModel levelControlModel,\n+            @Nullable SimpleOnOffModel simpleOnOff) {\n         if (levelControlModel != null) {\n-            updateThingChannelState(CHANNEL_BRIGHTNESS, new PercentType(levelControlModel.getLevelPercentage()));\n+            PercentType brightness;\n+            if (simpleOnOff == null || simpleOnOff.state) {\n+                brightness = new PercentType(levelControlModel.getLevelPercentage());\n+            } else {\n+                brightness = PercentType.ZERO;\n+            }\n+            updateThingChannelState(CHANNEL_BRIGHTNESS, brightness);\n         }\n     }\n \n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.avmfritz/src/test/java/org/openhab/binding/avmfritz/internal/dto/AVMFritzDeviceListModelTest.java b/bundles/org.openhab.binding.avmfritz/src/test/java/org/openhab/binding/avmfritz/internal/dto/AVMFritzDeviceListModelTest.java\nindex a3f2d6ee65d4a..eef3e9e33b58a 100644\n--- a/bundles/org.openhab.binding.avmfritz/src/test/java/org/openhab/binding/avmfritz/internal/dto/AVMFritzDeviceListModelTest.java\n+++ b/bundles/org.openhab.binding.avmfritz/src/test/java/org/openhab/binding/avmfritz/internal/dto/AVMFritzDeviceListModelTest.java\n@@ -34,6 +34,7 @@\n  *\n  * @author Christoph Weitkamp - Initial contribution\n  * @author Ulrich Mertin - Added support for HAN-FUN blinds\n+ * @author Fabian Girgert - Fixed incorrect state of dimmable bulb when switched off\n  */\n @NonNullByDefault\n public class AVMFritzDeviceListModelTest {\n@@ -111,7 +112,24 @@ public void setUp() throws JAXBException, XMLStreamException {\n                         <interfaces>512,514,513</interfaces>\n                     </etsiunitinfo>\n                 </device>\\\n-                </devicelist>\\\n+                <device identifier=\"Z001788011D4B55D30B\" id=\"2038\" functionbitmask=\"106500\" fwversion=\"0.0\" manufacturer=\"0x100b\" productname=\"Signify Netherlands B.V. LWG004\">\n+                    <present>1</present>\n+                    <txbusy>0</txbusy>\n+                    <name>Zigbee dimmable bulb</name>\n+                    <simpleonoff>\n+                        <state>0</state>\n+                    </simpleonoff>\n+                    <levelcontrol>\n+                        <level>255</level>\n+                        <levelpercentage>100</levelpercentage>\n+                    </levelcontrol>\n+                    <etsiunitinfo>\n+                        <etsideviceid>20029</etsideviceid>\n+                        <unittype>265</unittype>\n+                        <interfaces>512,513</interfaces>\n+                    </etsiunitinfo>\n+                </device>\\\n+            </devicelist>\\\n                 \"\"\";\n         //@formatter:on\n         XMLStreamReader xsr = JAXBUtils.XMLINPUTFACTORY.createXMLStreamReader(new StringReader(xml));\n@@ -122,7 +140,7 @@ public void setUp() throws JAXBException, XMLStreamException {\n     @Test\n     public void validateDeviceListModel() {\n         assertNotNull(devices);\n-        assertEquals(17, devices.getDevicelist().size());\n+        assertEquals(18, devices.getDevicelist().size());\n         assertEquals(\"1\", devices.getXmlApiVersion());\n     }\n \n@@ -732,6 +750,57 @@ public void validateHANFUNColorLightModel() {\n         assertEquals(2700, colorModel.temperature);\n     }\n \n+    @Test\n+    public void validateHANFUNDimmableLightModel() {\n+        Optional<AVMFritzBaseModel> optionalDevice = findModelByIdentifier(\"Z001788011D4B55D30B\");\n+        assertTrue(optionalDevice.isPresent());\n+        assertTrue(optionalDevice.get() instanceof DeviceModel);\n+\n+        DeviceModel device = (DeviceModel) optionalDevice.get();\n+        assertEquals(\"Signify Netherlands B.V. LWG004\", device.getProductName());\n+        assertEquals(\"Z001788011D4B55D30B\", device.getIdentifier());\n+        assertEquals(\"2038\", device.getDeviceId());\n+        assertEquals(\"0.0\", device.getFirmwareVersion());\n+        assertEquals(\"0x100b\", device.getManufacturer());\n+\n+        assertEquals(1, device.getPresent());\n+        assertEquals(\"Zigbee dimmable bulb\", device.getName());\n+\n+        assertFalse(device.isHANFUNDevice());\n+        assertFalse(device.isHANFUNButton());\n+        assertFalse(device.isHANFUNAlarmSensor());\n+        assertFalse(device.isButton());\n+        assertFalse(device.isSwitchableOutlet());\n+        assertFalse(device.isTemperatureSensor());\n+        assertFalse(device.isHumiditySensor());\n+        assertFalse(device.isPowermeter());\n+        assertFalse(device.isDectRepeater());\n+        assertFalse(device.isHeatingThermostat());\n+        assertFalse(device.hasMicrophone());\n+        assertTrue(device.isHANFUNUnit());\n+        assertTrue(device.isHANFUNOnOff());\n+        assertTrue(device.isDimmableLight());\n+        assertFalse(device.isColorLight());\n+        assertFalse(device.isHANFUNBlinds());\n+\n+        assertTrue(device.getButtons().isEmpty());\n+\n+        assertNull(device.getAlert());\n+\n+        assertNull(device.getSwitch());\n+\n+        assertNull(device.getTemperature());\n+\n+        assertNull(device.getPowermeter());\n+\n+        assertNull(device.getHkr());\n+\n+        LevelControlModel levelcontrol = device.getLevelControlModel();\n+        assertNotNull(levelcontrol);\n+        assertEquals(BigDecimal.valueOf(255L), levelcontrol.getLevel());\n+        assertEquals(BigDecimal.valueOf(100L), levelcontrol.getLevelPercentage());\n+    }\n+\n     @Test\n     public void validateHANFUNOnOffModel() {\n         Optional<AVMFritzBaseModel> optionalDevice = findModelByIdentifier(\"113240824499-1\");\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17563",
    "pr_id": 17563,
    "issue_id": 17559,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[solarman] Implement Support for LAN Stick Logger LSE-3\nThe plugin hast to have a checkbox in advanced mode, to check if LAN stick will be used. In this case, the Raw mode will be used to read MODBUS via LAN Stick LSE-3.\r\n\r\n<!-- Provide a general summary of the feature request in the *Title* above -->\r\n<!-- If the feature request is related to an add-on, please include its short name in -->\r\n<!-- square brackets in the title - Example: \"[astro] My feature request...\" -->\r\n\r\n<!-- Important: Please contact the openHAB community forum for questions or -->\r\n<!-- for configuration and usage guidance: https://community.openhab.org -->\r\n\r\n## Your Environment\r\n<!-- Include as many relevant details about the environment when applicable -->\r\n* Version used: Intended for Openhab 4.3\r\n* Stick Logger for Solarmen (Ethernet) Model: LSE-3",
    "issue_word_count": 128,
    "test_files_count": 2,
    "non_test_files_count": 15,
    "pr_changed_files": [
      "bundles/org.openhab.binding.solarman/README.md",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerConfiguration.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerHandler.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerMode.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/channel/SolarmanChannelManager.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/defmodel/Lookup.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/defmodel/ParameterItem.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanLoggerConnection.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocol.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocolFactory.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanRawProtocol.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5Protocol.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/typeprovider/ChannelUtils.java",
      "bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/updater/SolarmanChannelUpdater.java",
      "bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml",
      "bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanRawProtocolTest.java",
      "bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5ProtocolTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanRawProtocolTest.java",
      "bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5ProtocolTest.java"
    ],
    "base_commit": "f0d4a0a965de293adbcc7f6b5e69443640a46bb0",
    "head_commit": "ebbfe8c94f4204a61364b528048d479e09283547",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17563",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17563",
    "dockerfile": "",
    "pr_merged_at": "2024-11-11T21:49:57.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.solarman/README.md b/bundles/org.openhab.binding.solarman/README.md\nindex 8762f6cda75ec..994be731a7d5a 100644\n--- a/bundles/org.openhab.binding.solarman/README.md\n+++ b/bundles/org.openhab.binding.solarman/README.md\n@@ -15,7 +15,7 @@ These data loggers are used by inverters from a lot of manufacturers, just to na\n \n The `solarman:logger` thing supports reading data from a Solarman LSW-3 Stick Logger (it might also work with LSE-3 and maybe others) when connected to a supported inverter.\n \n-It was tested on a SUN-12K-SG04LP3-EU only, but because the implementation uses the inverter definitions created as part of Stephan Joubert's Home Assistant plugin it **might** work with the other inverters supported by the plugin.\n+It was tested on a SUN-12K-SG04LP3-EU only, with LAN Stick LSE-3 in RAW MODBUS solarmanLoggerMode and Wifi Stick in V5 MODBUS solarmanLoggerMode but because the implementation uses the inverter definitions created as part of Stephan Joubert's Home Assistant plugin it **might** work with the other inverters supported by the plugin.\n \n ## Thing Configuration\n \n@@ -25,14 +25,15 @@ The IP address can be obtained from your router and the serial number can either\n \n ### `logger` Thing Configuration\n \n-| Name               | Type    | Description                                            | Default | Required | Advanced |\n-|--------------------|---------|--------------------------------------------------------|---------|----------|----------|\n-| hostname           | text    | Hostname or IP address of the Solarman logger          | N/A     | yes      | no       |\n-| serialNumber       | text    | Serial number of the Solarman logger                   | N/A     | yes      | no       |\n-| inverterType       | text    | The type of inverter connected to the logger           | N/A     | yes      | no       |\n-| port               | integer | Port of the Solarman logger                            | 8899    | no       | yes      |\n-| refreshInterval    | integer | Interval the device is polled in sec.                  | 60      | no       | yes      |\n-| additionalRequests | text    | Additional requests besides the ones in the definition | N/A     | no       | yes      |\n+| Name               | Type    | Description                                                                                                       | Default   | Required | Advanced |\n+|--------------------|---------|-------------------------------------------------------------------------------------------------------------------|-----------|----------|----------|\n+| hostname           | text    | Hostname or IP address of the Solarman logger                                                                     | N/A       | yes      | no       |\n+| serialNumber       | text    | Serial number of the Solarman logger                                                                              | N/A       | yes      | no       |\n+| inverterType       | text    | The type of inverter connected to the logger                                                                      | N/A       | yes      | no       |\n+| port               | integer | Port of the Solarman logger                                                                                       | 8899      | no       | yes      |\n+| refreshInterval    | integer | Interval the device is polled in sec.                                                                             | 60        | no       | yes      |\n+| solarmanLoggerMode | option  | RAW Modbus for LAN Stick LSE-3 and V5 MODBUS for most Wifi Sticks. If your Wifi stick uses Raw Modbus choose RAW. | V5 MODBUS | no       | yes      |\n+| additionalRequests | text    | Additional requests besides the ones in the definition                                                            | N/A       | no       | yes      |\n \n The `inverterType` parameter governs what registers the binding will read from the logger and what channels it will expose.\n \n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerConfiguration.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerConfiguration.java\nindex 4e8b082a14ddb..db8abcb6beff7 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerConfiguration.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerConfiguration.java\n@@ -31,6 +31,7 @@ public class SolarmanLoggerConfiguration {\n     public String serialNumber = \"\";\n     public String inverterType = \"sg04lp3\";\n     public int refreshInterval = 30;\n+    public String solarmanLoggerMode = SolarmanLoggerMode.V5MODBUS.toString();\n     @Nullable\n     public String additionalRequests;\n \n@@ -38,12 +39,13 @@ public SolarmanLoggerConfiguration() {\n     }\n \n     public SolarmanLoggerConfiguration(String hostname, Integer port, String serialNumber, String inverterType,\n-            int refreshInterval, @Nullable String additionalRequests) {\n+            int refreshInterval, String solarmanLoggerMode, @Nullable String additionalRequests) {\n         this.hostname = hostname;\n         this.port = port;\n         this.serialNumber = serialNumber;\n         this.inverterType = inverterType;\n         this.refreshInterval = refreshInterval;\n+        this.solarmanLoggerMode = solarmanLoggerMode;\n         this.additionalRequests = additionalRequests;\n     }\n \n@@ -67,6 +69,10 @@ public int getRefreshInterval() {\n         return refreshInterval;\n     }\n \n+    public SolarmanLoggerMode getSolarmanLoggerMode() {\n+        return SolarmanLoggerMode.valueOf(solarmanLoggerMode);\n+    }\n+\n     @Nullable\n     public String getAdditionalRequests() {\n         return additionalRequests;\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerHandler.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerHandler.java\nindex a5dfb68c6823b..4adb140c409c9 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerHandler.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerHandler.java\n@@ -34,7 +34,8 @@\n import org.openhab.binding.solarman.internal.defmodel.Request;\n import org.openhab.binding.solarman.internal.defmodel.Validation;\n import org.openhab.binding.solarman.internal.modbus.SolarmanLoggerConnector;\n-import org.openhab.binding.solarman.internal.modbus.SolarmanV5Protocol;\n+import org.openhab.binding.solarman.internal.modbus.SolarmanProtocol;\n+import org.openhab.binding.solarman.internal.modbus.SolarmanProtocolFactory;\n import org.openhab.binding.solarman.internal.updater.SolarmanChannelUpdater;\n import org.openhab.binding.solarman.internal.updater.SolarmanProcessResult;\n import org.openhab.core.thing.Channel;\n@@ -94,7 +95,10 @@ public void initialize() {\n                 logger.debug(\"Found definition for {}\", config.inverterType);\n             }\n         }\n-        SolarmanV5Protocol solarmanV5Protocol = new SolarmanV5Protocol(config);\n+\n+        logger.debug(\"Raw Type {}\", config.solarmanLoggerMode);\n+\n+        SolarmanProtocol solarmanProtocol = SolarmanProtocolFactory.createSolarmanProtocol(config);\n \n         String additionalRequests = Objects.requireNonNullElse(config.getAdditionalRequests(), \"\");\n \n@@ -110,17 +114,17 @@ public void initialize() {\n \n         scheduledFuture = scheduler\n                 .scheduleWithFixedDelay(\n-                        () -> queryLoggerAndUpdateState(solarmanLoggerConnector, solarmanV5Protocol, mergedRequests,\n+                        () -> queryLoggerAndUpdateState(solarmanLoggerConnector, solarmanProtocol, mergedRequests,\n                                 paramToChannelMapping, solarmanChannelUpdater),\n                         0, config.refreshInterval, TimeUnit.SECONDS);\n     }\n \n     private void queryLoggerAndUpdateState(SolarmanLoggerConnector solarmanLoggerConnector,\n-            SolarmanV5Protocol solarmanV5Protocol, List<Request> mergedRequests,\n+            SolarmanProtocol solarmanProtocol, List<Request> mergedRequests,\n             Map<ParameterItem, ChannelUID> paramToChannelMapping, SolarmanChannelUpdater solarmanChannelUpdater) {\n         try {\n             SolarmanProcessResult solarmanProcessResult = solarmanChannelUpdater.fetchDataFromLogger(mergedRequests,\n-                    solarmanLoggerConnector, solarmanV5Protocol, paramToChannelMapping);\n+                    solarmanLoggerConnector, solarmanProtocol, paramToChannelMapping);\n \n             if (solarmanProcessResult.hasSuccessfulResponses()) {\n                 updateStatus(ThingStatus.ONLINE);\n@@ -149,7 +153,7 @@ private Map<ParameterItem, ChannelUID> extractChannelMappingFromChannels(List<Ch\n             }\n \n             return new AbstractMap.SimpleEntry<>(new ParameterItem(label, \"N/A\", \"N/A\", bcc.uom, bcc.scale, bcc.rule,\n-                    parseRegisters(bcc.registers), \"N/A\", new Validation(), bcc.offset, Boolean.FALSE),\n+                    parseRegisters(bcc.registers), \"N/A\", new Validation(), bcc.offset, Boolean.FALSE, null),\n                     channel.getUID());\n         }).collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n     }\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerMode.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerMode.java\nnew file mode 100644\nindex 0000000000000..85e6008de98ab\n--- /dev/null\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/SolarmanLoggerMode.java\n@@ -0,0 +1,21 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.solarman.internal;\n+\n+/**\n+ * @author Peter Kretz - Initial contribution\n+ */\n+public enum SolarmanLoggerMode {\n+    V5MODBUS,\n+    RAWMODBUS\n+}\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/channel/SolarmanChannelManager.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/channel/SolarmanChannelManager.java\nindex 5fad5438aa81b..95c68b7290b10 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/channel/SolarmanChannelManager.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/channel/SolarmanChannelManager.java\n@@ -80,7 +80,13 @@ private Configuration buildConfigurationFromItem(ParameterItem item) {\n             baseChannelConfig.scale = scale;\n         }\n \n-        baseChannelConfig.rule = item.getRule();\n+        if (item.hasLookup() || Boolean.TRUE.equals(item.getIsstr())) {\n+            // Set 5 for Text (String), when isstr is true or Lookup is present\n+            baseChannelConfig.rule = 5;\n+        } else {\n+            baseChannelConfig.rule = item.getRule();\n+        }\n+\n         baseChannelConfig.registers = convertRegisters(item.getRegisters());\n         baseChannelConfig.uom = item.getUom();\n \n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/defmodel/Lookup.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/defmodel/Lookup.java\nnew file mode 100644\nindex 0000000000000..f81b4cffd1b91\n--- /dev/null\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/defmodel/Lookup.java\n@@ -0,0 +1,43 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.solarman.internal.defmodel;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+/**\n+ * @author Peter Kretz - Initial contribution\n+ */\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+@NonNullByDefault\n+public class Lookup {\n+    private int key;\n+    private String value = \"\";\n+\n+    public int getKey() {\n+        return key;\n+    }\n+\n+    public void setKey(int key) {\n+        this.key = key;\n+    }\n+\n+    public String getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(String value) {\n+        this.value = value;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/defmodel/ParameterItem.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/defmodel/ParameterItem.java\nindex bc5a9cbf7cd2b..1f1ef55400d4a 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/defmodel/ParameterItem.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/defmodel/ParameterItem.java\n@@ -46,13 +46,15 @@ public class ParameterItem {\n     private BigDecimal offset;\n     @Nullable\n     private Boolean isstr;\n+    private List<Lookup> lookup = new ArrayList<>();\n \n     public ParameterItem() {\n     }\n \n     public ParameterItem(String name, @Nullable String itemClass, @Nullable String stateClass, @Nullable String uom,\n             @Nullable BigDecimal scale, Integer rule, List<Integer> registers, @Nullable String icon,\n-            @Nullable Validation validation, @Nullable BigDecimal offset, @Nullable Boolean isstr) {\n+            @Nullable Validation validation, @Nullable BigDecimal offset, @Nullable Boolean isstr,\n+            @Nullable List<Lookup> lookup) {\n         this.name = name;\n         this.itemClass = itemClass;\n         this.stateClass = stateClass;\n@@ -64,6 +66,9 @@ public ParameterItem(String name, @Nullable String itemClass, @Nullable String s\n         this.validation = validation;\n         this.offset = offset;\n         this.isstr = isstr;\n+        if (lookup != null) {\n+            this.lookup = lookup;\n+        }\n     }\n \n     public String getName() {\n@@ -153,4 +158,16 @@ public void setIsstr(Boolean isstr) {\n     public void setItemClass(String itemClass) {\n         this.itemClass = itemClass;\n     }\n+\n+    public List<Lookup> getLookup() {\n+        return lookup;\n+    }\n+\n+    public void setLookup(List<Lookup> lookup) {\n+        this.lookup = lookup;\n+    }\n+\n+    public Boolean hasLookup() {\n+        return !lookup.isEmpty();\n+    }\n }\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanLoggerConnection.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanLoggerConnection.java\nindex cf3167349299b..b3b05fb2ee125 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanLoggerConnection.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanLoggerConnection.java\n@@ -92,7 +92,7 @@ public byte[] sendRequest(byte[] reqFrame) throws SolarmanConnectionException {\n         return new byte[0];\n     }\n \n-    private static String bytesToHex(byte[] bytes) {\n+    protected static String bytesToHex(byte[] bytes) {\n         return IntStream.range(0, bytes.length).mapToObj(i -> String.format(\"%02X\", bytes[i]))\n                 .collect(Collectors.joining());\n     }\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocol.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocol.java\nnew file mode 100644\nindex 0000000000000..18d6149304948\n--- /dev/null\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocol.java\n@@ -0,0 +1,28 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.solarman.internal.modbus;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.binding.solarman.internal.modbus.exception.SolarmanException;\n+\n+/**\n+ * @author Peter Kretz - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface SolarmanProtocol {\n+\n+    Map<Integer, byte[]> readRegisters(SolarmanLoggerConnection solarmanLoggerConnection, byte mbFunctionCode,\n+            int firstReg, int lastReg) throws SolarmanException;\n+}\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocolFactory.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocolFactory.java\nnew file mode 100644\nindex 0000000000000..addeb4cea9e4a\n--- /dev/null\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanProtocolFactory.java\n@@ -0,0 +1,34 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.solarman.internal.modbus;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.binding.solarman.internal.SolarmanLoggerConfiguration;\n+\n+/**\n+ * @author Peter Kretz - Added RAW Modbus for LAN Stick\n+ */\n+@NonNullByDefault\n+public class SolarmanProtocolFactory {\n+\n+    public static SolarmanProtocol createSolarmanProtocol(SolarmanLoggerConfiguration solarmanLoggerConfiguration) {\n+        switch (solarmanLoggerConfiguration.getSolarmanLoggerMode()) {\n+            case RAWMODBUS: {\n+                return new SolarmanRawProtocol(solarmanLoggerConfiguration);\n+            }\n+            case V5MODBUS:\n+            default:\n+                return new SolarmanV5Protocol(solarmanLoggerConfiguration);\n+        }\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanRawProtocol.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanRawProtocol.java\nnew file mode 100644\nindex 0000000000000..38fd8e2a2632d\n--- /dev/null\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanRawProtocol.java\n@@ -0,0 +1,163 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.solarman.internal.modbus;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.solarman.internal.SolarmanLoggerConfiguration;\n+import org.openhab.binding.solarman.internal.modbus.exception.SolarmanConnectionException;\n+import org.openhab.binding.solarman.internal.modbus.exception.SolarmanException;\n+import org.openhab.binding.solarman.internal.modbus.exception.SolarmanProtocolException;\n+\n+/**\n+ * @author Catalin Sanda - Initial contribution\n+ * @author Peter Kretz - Added RAW Modbus for LAN Stick\n+ */\n+@NonNullByDefault\n+public class SolarmanRawProtocol implements SolarmanProtocol {\n+    private final SolarmanLoggerConfiguration solarmanLoggerConfiguration;\n+\n+    public SolarmanRawProtocol(SolarmanLoggerConfiguration solarmanLoggerConfiguration) {\n+        this.solarmanLoggerConfiguration = solarmanLoggerConfiguration;\n+    }\n+\n+    public Map<Integer, byte[]> readRegisters(SolarmanLoggerConnection solarmanLoggerConnection, byte mbFunctionCode,\n+            int firstReg, int lastReg) throws SolarmanException {\n+        byte[] solarmanRawFrame = buildSolarmanRawFrame(mbFunctionCode, firstReg, lastReg);\n+        byte[] respFrame = solarmanLoggerConnection.sendRequest(solarmanRawFrame);\n+        if (respFrame.length > 0) {\n+            byte[] modbusRespFrame = extractModbusRawResponseFrame(respFrame, solarmanRawFrame);\n+            return parseRawModbusReadHoldingRegistersResponse(modbusRespFrame, firstReg, lastReg);\n+        } else {\n+            throw new SolarmanConnectionException(\"Response frame was empty\");\n+        }\n+    }\n+\n+    protected byte[] extractModbusRawResponseFrame(byte @Nullable [] responseFrame, byte[] requestFrame)\n+            throws SolarmanException {\n+        if (responseFrame == null || responseFrame.length == 0) {\n+            throw new SolarmanProtocolException(\"No response frame\");\n+        } else if (responseFrame.length < 11) {\n+            throw new SolarmanProtocolException(\"Response frame is too short\");\n+        } else if (responseFrame[0] != (byte) 0x03) {\n+            throw new SolarmanProtocolException(\"Response frame has invalid starting byte\");\n+        }\n+\n+        return Arrays.copyOfRange(responseFrame, 6, responseFrame.length);\n+    }\n+\n+    protected Map<Integer, byte[]> parseRawModbusReadHoldingRegistersResponse(byte @Nullable [] frame, int firstReg,\n+            int lastReg) throws SolarmanProtocolException {\n+        int regCount = lastReg - firstReg + 1;\n+        Map<Integer, byte[]> registers = new HashMap<>();\n+        int expectedFrameDataLen = 2 + 1 + regCount * 2;\n+        if (frame == null || frame.length < expectedFrameDataLen) {\n+            throw new SolarmanProtocolException(\"Modbus frame is too short or empty\");\n+        }\n+\n+        for (int i = 0; i < regCount; i++) {\n+            int p1 = 3 + (i * 2);\n+            ByteBuffer order = ByteBuffer.wrap(frame, p1, 2).order(ByteOrder.BIG_ENDIAN);\n+            byte[] array = new byte[] { order.get(), order.get() };\n+            registers.put(i + firstReg, array);\n+        }\n+\n+        return registers;\n+    }\n+\n+    /**\n+     * Builds a SolarMAN Raw frame to request data from firstReg to lastReg.\n+     * Frame format is based on\n+     * <a href=\"https://github.com/StephanJoubert/home_assistant_solarman/issues/247\">Solarman RAW Protocol</a>\n+     * Request send:\n+     * Header 03e8: Transaction identifier\n+     * Header 0000: Protocol identifier\n+     * Header 0006: Message length (w/o CRC)\n+     * Payload 01: Slave ID\n+     * Payload 03: Read function\n+     * Payload 0003: 1st register address\n+     * Payload 006e: Nb of registers to read\n+     * Trailer 3426: CRC-16 ModBus\n+     * \n+     * @param mbFunctionCode\n+     * @param firstReg - the start register\n+     * @param lastReg - the end register\n+     * @return byte array containing the Solarman Raw frame\n+     */\n+    protected byte[] buildSolarmanRawFrame(byte mbFunctionCode, int firstReg, int lastReg) {\n+        byte[] requestPayload = buildSolarmanRawFrameRequestPayload(mbFunctionCode, firstReg, lastReg);\n+        byte[] header = buildSolarmanRawFrameHeader(requestPayload.length);\n+\n+        return ByteBuffer.allocate(header.length + requestPayload.length).put(header).put(requestPayload).array();\n+    }\n+\n+    /**\n+     * Builds a SolarMAN Raw frame Header\n+     * Frame format is based on\n+     * <a href=\"https://github.com/StephanJoubert/home_assistant_solarman/issues/247\">Solarman RAW Protocol</a>\n+     * Request send:\n+     * Header 03e8: Transaction identifier\n+     * Header 0000: Protocol identifier\n+     * Header 0006: Message length (w/o CRC)\n+     * \n+     * @param payloadSize th\n+     * @return byte array containing the Solarman Raw frame header\n+     */\n+    private byte[] buildSolarmanRawFrameHeader(int payloadSize) {\n+        // (two byte) Denotes the start of the Raw frame. Always 0x03 0xE8.\n+        byte[] transactionId = new byte[] { (byte) 0x03, (byte) 0xE8 };\n+\n+        // (two bytes) – Always 0x00 0x00\n+        byte[] protocolId = new byte[] { (byte) 0x00, (byte) 0x00 };\n+\n+        // (two bytes) Payload length\n+        byte[] messageLength = ByteBuffer.allocate(Short.BYTES).order(ByteOrder.BIG_ENDIAN)\n+                .putShort((short) payloadSize).array();\n+\n+        // Append all fields into the header\n+        return ByteBuffer.allocate(transactionId.length + protocolId.length + messageLength.length).put(transactionId)\n+                .put(protocolId).put(messageLength).array();\n+    }\n+\n+    /**\n+     * Builds a SolarMAN Raw frame payload\n+     * Frame format is based on\n+     * <a href=\"https://github.com/StephanJoubert/home_assistant_solarman/issues/247\">Solarman RAW Protocol</a>\n+     * Request send:\n+     * Payload 01: Slave ID\n+     * Payload 03: Read function\n+     * Payload 0003: 1st register address\n+     * Payload 006e: Nb of registers to read\n+     * Trailer 3426: CRC-16 ModBus\n+     * \n+     * @param mbFunctionCode\n+     * @param firstReg - the start register\n+     * @param lastReg - the end register\n+     * @return byte array containing the Solarman Raw frame payload\n+     */\n+    protected byte[] buildSolarmanRawFrameRequestPayload(byte mbFunctionCode, int firstReg, int lastReg) {\n+        int regCount = lastReg - firstReg + 1;\n+        byte[] req = ByteBuffer.allocate(6).put((byte) 0x01).put(mbFunctionCode).putShort((short) firstReg)\n+                .putShort((short) regCount).array();\n+        byte[] crc = ByteBuffer.allocate(Short.BYTES).order(ByteOrder.LITTLE_ENDIAN)\n+                .putShort((short) CRC16Modbus.calculate(req)).array();\n+\n+        return ByteBuffer.allocate(req.length + crc.length).put(req).put(crc).array();\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5Protocol.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5Protocol.java\nindex 16f484b6d78dc..f2264f14088fc 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5Protocol.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5Protocol.java\n@@ -30,13 +30,14 @@\n  * @author Catalin Sanda - Initial contribution\n  */\n @NonNullByDefault\n-public class SolarmanV5Protocol {\n+public class SolarmanV5Protocol implements SolarmanProtocol {\n     private final SolarmanLoggerConfiguration solarmanLoggerConfiguration;\n \n     public SolarmanV5Protocol(SolarmanLoggerConfiguration solarmanLoggerConfiguration) {\n         this.solarmanLoggerConfiguration = solarmanLoggerConfiguration;\n     }\n \n+    @Override\n     public Map<Integer, byte[]> readRegisters(SolarmanLoggerConnection solarmanLoggerConnection, byte mbFunctionCode,\n             int firstReg, int lastReg) throws SolarmanException {\n         byte[] solarmanV5Frame = buildSolarmanV5Frame(mbFunctionCode, firstReg, lastReg);\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/typeprovider/ChannelUtils.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/typeprovider/ChannelUtils.java\nindex 6a49b99adad57..abca6afcc1251 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/typeprovider/ChannelUtils.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/typeprovider/ChannelUtils.java\n@@ -14,6 +14,7 @@\n \n import javax.measure.Unit;\n import javax.measure.quantity.Dimensionless;\n+import javax.measure.quantity.ElectricCharge;\n import javax.measure.quantity.ElectricCurrent;\n import javax.measure.quantity.ElectricPotential;\n import javax.measure.quantity.Energy;\n@@ -76,6 +77,7 @@ public static String getItemType(ParameterItem item) {\n     private static String computeNumberType(String uom) {\n         return switch (uom.toUpperCase()) {\n             case \"A\" -> CoreItemFactory.NUMBER + \":\" + ElectricCurrent.class.getSimpleName();\n+            case \"AH\" -> CoreItemFactory.NUMBER + \":\" + ElectricCharge.class.getSimpleName();\n             case \"V\" -> CoreItemFactory.NUMBER + \":\" + ElectricPotential.class.getSimpleName();\n             case \"°C\" -> CoreItemFactory.NUMBER + \":\" + Temperature.class.getSimpleName();\n             case \"W\", \"KW\", \"VA\", \"KVA\", \"VAR\", \"KVAR\" -> CoreItemFactory.NUMBER + \":\" + Power.class.getSimpleName();\n@@ -96,6 +98,7 @@ private static String computeNumberType(String uom) {\n     public static @Nullable Unit<?> getUnitFromDefinition(String uom) {\n         return switch (uom.toUpperCase()) {\n             case \"A\" -> Units.AMPERE;\n+            case \"AH\" -> Units.AMPERE_HOUR;\n             case \"V\" -> Units.VOLT;\n             case \"°C\" -> SIUnits.CELSIUS;\n             case \"W\" -> Units.WATT;\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/updater/SolarmanChannelUpdater.java b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/updater/SolarmanChannelUpdater.java\nindex a9aa8ccd8d266..bb75d5b5dd815 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/updater/SolarmanChannelUpdater.java\n+++ b/bundles/org.openhab.binding.solarman/src/main/java/org/openhab/binding/solarman/internal/updater/SolarmanChannelUpdater.java\n@@ -33,11 +33,12 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.solarman.internal.defmodel.Lookup;\n import org.openhab.binding.solarman.internal.defmodel.ParameterItem;\n import org.openhab.binding.solarman.internal.defmodel.Request;\n import org.openhab.binding.solarman.internal.modbus.SolarmanLoggerConnection;\n import org.openhab.binding.solarman.internal.modbus.SolarmanLoggerConnector;\n-import org.openhab.binding.solarman.internal.modbus.SolarmanV5Protocol;\n+import org.openhab.binding.solarman.internal.modbus.SolarmanProtocol;\n import org.openhab.binding.solarman.internal.modbus.exception.SolarmanConnectionException;\n import org.openhab.binding.solarman.internal.modbus.exception.SolarmanException;\n import org.openhab.binding.solarman.internal.typeprovider.ChannelUtils;\n@@ -64,7 +65,7 @@ public SolarmanChannelUpdater(StateUpdater stateUpdater) {\n     }\n \n     public SolarmanProcessResult fetchDataFromLogger(List<Request> requests,\n-            SolarmanLoggerConnector solarmanLoggerConnector, SolarmanV5Protocol solarmanV5Protocol,\n+            SolarmanLoggerConnector solarmanLoggerConnector, SolarmanProtocol solarmanProtocol,\n             Map<ParameterItem, ChannelUID> paramToChannelMapping) {\n         try (SolarmanLoggerConnection solarmanLoggerConnection = solarmanLoggerConnector.createConnection()) {\n             logger.debug(\"Fetching data from logger\");\n@@ -77,7 +78,7 @@ public SolarmanProcessResult fetchDataFromLogger(List<Request> requests,\n             SolarmanProcessResult solarmanProcessResult = requests.stream().map(request -> {\n                 try {\n                     return SolarmanProcessResult.ofValue(request,\n-                            solarmanV5Protocol.readRegisters(solarmanLoggerConnection,\n+                            solarmanProtocol.readRegisters(solarmanLoggerConnection,\n                                     (byte) request.getMbFunctioncode().intValue(), request.getStart(),\n                                     request.getEnd()));\n                 } catch (SolarmanException e) {\n@@ -120,6 +121,7 @@ private void updateChannelWithTime(ChannelUID channelUID, List<Integer> register\n                 .map(rawVal -> String.format(\"%02d\", rawVal / 100) + \":\" + String.format(\"%02d\", rawVal % 100))\n                 .collect(Collectors.joining());\n \n+        logger.debug(\"Update state: channelUID: {}, state: {}\", channelUID.getAsString(), stringValue);\n         stateUpdater.updateState(channelUID, new StringType(stringValue));\n     }\n \n@@ -143,6 +145,7 @@ private void updateChannelWithDateTime(ChannelUID channelUID, List<Integer> regi\n             DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yy/M/d H:m:s\");\n             LocalDateTime dateTime = LocalDateTime.parse(stringValue, formatter);\n \n+            logger.debug(\"Update state: channelUID: {}, state: {}\", channelUID.getAsString(), dateTime.toString());\n             stateUpdater.updateState(channelUID, new DateTimeType(dateTime.atZone(ZoneId.systemDefault())));\n         } catch (DateTimeParseException e) {\n             logger.debug(\"Unable to parse string date {} to a DateTime object\", stringValue);\n@@ -156,6 +159,7 @@ private void updateChannelWithVersion(ChannelUID channelUID, List<Integer> regis\n                         + (rawVal & 0x0F))\n                 .collect(Collectors.joining());\n \n+        logger.debug(\"Update Version state: channelUID: {}, state: {}\", channelUID.getAsString(), stringValue);\n         stateUpdater.updateState(channelUID, new StringType(stringValue));\n     }\n \n@@ -166,6 +170,7 @@ private void updateChannelWithStringValue(ChannelUID channelUID, List<Integer> r\n             return acc.append((char) (shortValue >> 8)).append((char) (shortValue & 0xFF));\n         }, StringBuilder::append).toString();\n \n+        logger.debug(\"Update String state: channelUID: {}, state: {}\", channelUID.getAsString(), stringValue);\n         stateUpdater.updateState(channelUID, new StringType(stringValue));\n     }\n \n@@ -175,23 +180,37 @@ private void updateChannelWithNumericValue(ParameterItem parameterItem, ChannelU\n         BigDecimal convertedValue = convertNumericValue(value, parameterItem.getOffset(), parameterItem.getScale());\n         String uom = Objects.requireNonNullElse(parameterItem.getUom(), \"\");\n \n-        State state;\n-        if (!uom.isBlank()) {\n-            try {\n-                Unit<?> unitFromDefinition = ChannelUtils.getUnitFromDefinition(uom);\n-                if (unitFromDefinition != null) {\n-                    state = new QuantityType<>(convertedValue, unitFromDefinition);\n-                } else {\n-                    logger.debug(\"Unable to parse unit: {}\", uom);\n+        if (parameterItem.hasLookup()) {\n+            String stringValue = getStringFromLookupList(value.intValue(), parameterItem.getLookup());\n+            logger.debug(\"Update Lookup state: channelUID: {}, key: {}, state: {}\", channelUID.getAsString(),\n+                    value.intValue(), stringValue);\n+            stateUpdater.updateState(channelUID, new StringType(stringValue));\n+        } else {\n+            State state;\n+            if (!uom.isBlank()) {\n+                try {\n+                    Unit<?> unitFromDefinition = ChannelUtils.getUnitFromDefinition(uom);\n+                    if (unitFromDefinition != null) {\n+                        state = new QuantityType<>(convertedValue, unitFromDefinition);\n+                    } else {\n+                        logger.debug(\"Unable to parse unit: {}\", uom);\n+                        state = new DecimalType(convertedValue);\n+                    }\n+                } catch (MeasurementParseException e) {\n                     state = new DecimalType(convertedValue);\n                 }\n-            } catch (MeasurementParseException e) {\n+            } else {\n                 state = new DecimalType(convertedValue);\n             }\n-        } else {\n-            state = new DecimalType(convertedValue);\n+            logger.debug(\"Update Numeric state: channelUID: {}, state: {}\", channelUID.getAsString(),\n+                    state.toFullString());\n+            stateUpdater.updateState(channelUID, state);\n         }\n-        stateUpdater.updateState(channelUID, state);\n+    }\n+\n+    private @Nullable String getStringFromLookupList(int key, List<Lookup> lookupList) {\n+        return lookupList.stream().filter(lookup -> key == lookup.getKey()).map(Lookup::getValue).findFirst()\n+                .orElse(\"\");\n     }\n \n     private void updateChannelWithRawValue(ParameterItem parameterItem, ChannelUID channelUID, List<Integer> registers,\n@@ -200,7 +219,7 @@ private void updateChannelWithRawValue(ParameterItem parameterItem, ChannelUID c\n                 reversed(registers).stream().map(readRegistersMap::get).map(\n                         val -> String.format(\"0x%02X\", ByteBuffer.wrap(val).order(ByteOrder.BIG_ENDIAN).getShort()))\n                         .collect(Collectors.joining(\",\")));\n-\n+        logger.debug(\"Update RawValue state: channelUID: {}, state: {}\", channelUID.getAsString(), hexString);\n         stateUpdater.updateState(channelUID, new StringType(hexString));\n     }\n \n\ndiff --git a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml\nindex 3a616b56532fa..57046c17c7f5b 100644\n--- a/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml\n+++ b/bundles/org.openhab.binding.solarman/src/main/resources/OH-INF/thing/thing-types.xml\n@@ -57,6 +57,17 @@\n \t\t\t\t<default>60</default>\n \t\t\t\t<advanced>true</advanced>\n \t\t\t</parameter>\n+\t\t\t<parameter name=\"solarmanLoggerMode\" type=\"text\" required=\"false\">\n+\t\t\t\t<label>Logger Mode</label>\n+\t\t\t\t<description>Use RAW Modbus for LAN Stick LSE-3 and V5 NODBUS for most Wifi Sticks. If your Wifi stick uses Raw\n+\t\t\t\t\tModbus choose RAW. If you do not use this advanced option, V5 MODBUS will be the default.</description>\n+\t\t\t\t<options>\n+\t\t\t\t\t<option value=\"V5MODBUS\">V5 Modbus</option>\n+\t\t\t\t\t<option value=\"RAWMODBUS\">RAW Modbus</option>\n+\t\t\t\t</options>\n+\t\t\t\t<default>V5MODBUS</default>\n+\t\t\t\t<advanced>true</advanced>\n+\t\t\t</parameter>\n \t\t\t<parameter name=\"additionalRequests\" type=\"text\" required=\"false\">\n \t\t\t\t<label>Additional Requests</label>\n \t\t\t\t<description>Additional requests besides the ones defined in the inverter definition.\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanRawProtocolTest.java b/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanRawProtocolTest.java\nnew file mode 100644\nindex 0000000000000..647e10e5dcdcb\n--- /dev/null\n+++ b/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanRawProtocolTest.java\n@@ -0,0 +1,146 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.solarman.internal.modbus;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Map;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openhab.binding.solarman.internal.SolarmanLoggerConfiguration;\n+import org.openhab.binding.solarman.internal.SolarmanLoggerMode;\n+import org.openhab.binding.solarman.internal.modbus.exception.SolarmanException;\n+\n+/**\n+ * @author Catalin Sanda - Initial contribution\n+ */\n+@ExtendWith(MockitoExtension.class)\n+@NonNullByDefault\n+class SolarmanRawProtocolTest {\n+    SolarmanLoggerConnection solarmanLoggerConnection = (@NotNull SolarmanLoggerConnection) mock(\n+            SolarmanLoggerConnection.class);\n+\n+    private SolarmanLoggerConfiguration loggerConfiguration = new SolarmanLoggerConfiguration(\"192.168.1.1\", 8899,\n+            \"1234567890\", \"sg04lp3\", 60, SolarmanLoggerMode.RAWMODBUS.toString(), null);\n+\n+    private SolarmanRawProtocol solarmanRawProtocol = new SolarmanRawProtocol(loggerConfiguration);\n+\n+    @Test\n+    void testbuildSolarmanRawFrame() {\n+        byte[] requestFrame = solarmanRawProtocol.buildSolarmanRawFrame((byte) 0x03, 0x0063, 0x006D);\n+        byte[] expectedFrame = { (byte) 0x03, (byte) 0xE8, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x08,\n+                (byte) 0x01, (byte) 0x03, (byte) 0x00, (byte) 0x63, (byte) 0x00, (byte) 0x0B, (byte) 0xF4,\n+                (byte) 0x13 };\n+\n+        assertArrayEquals(requestFrame, expectedFrame);\n+    }\n+\n+    @Test\n+    void testReadRegister0x01() throws SolarmanException {\n+        // given\n+        when(solarmanLoggerConnection.sendRequest(any()))\n+                .thenReturn(hexStringToByteArray(\"03E800000019010316168016801590012C11940014005A000000050096007D\"));\n+\n+        // when\n+        Map<Integer, byte[]> regValues = solarmanRawProtocol.readRegisters(solarmanLoggerConnection, (byte) 0x03, 1, 1);\n+\n+        // then\n+        assertEquals(1, regValues.size());\n+        assertTrue(regValues.containsKey(1));\n+        assertEquals(\"1680\", bytesToHex(regValues.get(1)));\n+    }\n+\n+    @Test\n+    void testReadRegisters0x02to0x03() throws SolarmanException {\n+        // given\n+        when(solarmanLoggerConnection.sendRequest(any()))\n+                .thenReturn(hexStringToByteArray(\"03E800000019010316168016801590012C11940014005A000000050096007D\"));\n+\n+        // when\n+        Map<Integer, byte[]> regValues = solarmanRawProtocol.readRegisters(solarmanLoggerConnection, (byte) 0x03, 2, 3);\n+\n+        // then\n+        assertEquals(2, regValues.size());\n+        assertTrue(regValues.containsKey(2));\n+        assertTrue(regValues.containsKey(3));\n+        assertEquals(\"1680\", bytesToHex(regValues.get(2)));\n+        assertEquals(\"1680\", bytesToHex(regValues.get(3)));\n+    }\n+\n+    @Test\n+    void testReadRegisterSUN10KSG04LP3EUPart1() throws SolarmanException {\n+        // given\n+        when(solarmanLoggerConnection.sendRequest(any())).thenReturn(hexStringToByteArray(\n+                \"03E80000005101034E091A08FD092700000000000000020003000000050000138800800037002800A5004A003D000600010003000A00000000000600010003000A0000091B08F6091C006E00500014010E00C9003E0215\"));\n+\n+        // when\n+        Map<Integer, byte[]> regValues = solarmanRawProtocol.readRegisters(solarmanLoggerConnection, (byte) 0x03, 0x3c,\n+                0x4f);\n+\n+        // then\n+        assertEquals(20, regValues.size());\n+        assertTrue(regValues.containsKey(0x3c));\n+        assertTrue(regValues.containsKey(0x4f));\n+        assertEquals(\"091A\", bytesToHex(regValues.get(0x3c)));\n+        assertEquals(\"0001\", bytesToHex(regValues.get(0x4f)));\n+    }\n+\n+    @Test\n+    void testReadRegisterSUN10KSG04LP3EUPart2() throws SolarmanException {\n+        // given\n+        when(solarmanLoggerConnection.sendRequest(any())).thenReturn(hexStringToByteArray(\n+                \"03E80000005101034E091A08FD092700000000000000020003000000050000138800800037002800A5004A003D000600010003000A00000000000600010003000A0000091B08F6091C006E00500014010E00C9003E0215\"));\n+\n+        // when\n+        Map<Integer, byte[]> regValues = solarmanRawProtocol.readRegisters(solarmanLoggerConnection, (byte) 0x03, 0x50,\n+                0x5f);\n+\n+        // then\n+        assertEquals(16, regValues.size());\n+        assertTrue(regValues.containsKey(0x50));\n+        assertTrue(regValues.containsKey(0x5f));\n+        assertEquals(\"091A\", bytesToHex(regValues.get(0x50)));\n+        assertEquals(\"00A5\", bytesToHex(regValues.get(0x5f)));\n+    }\n+\n+    private static byte[] hexStringToByteArray(String s) {\n+        int len = s.length();\n+        byte[] data = new byte[len / 2];\n+        for (int i = 0; i < len; i += 2) {\n+            data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4) + Character.digit(s.charAt(i + 1), 16));\n+        }\n+        return data;\n+    }\n+\n+    @Nullable\n+    private static String bytesToHex(byte @Nullable [] bytes) {\n+        if (bytes == null) {\n+            return null;\n+        }\n+\n+        StringBuilder sb = new StringBuilder();\n+        for (byte b : bytes) {\n+            sb.append(String.format(\"%02X\", b));\n+        }\n+        return sb.toString();\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5ProtocolTest.java b/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5ProtocolTest.java\nindex 4577f750533b4..bb800b88d49cd 100644\n--- a/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5ProtocolTest.java\n+++ b/bundles/org.openhab.binding.solarman/src/test/java/org/openhab/binding/solarman/internal/modbus/SolarmanV5ProtocolTest.java\n@@ -27,6 +27,7 @@\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.openhab.binding.solarman.internal.SolarmanLoggerConfiguration;\n+import org.openhab.binding.solarman.internal.SolarmanLoggerMode;\n import org.openhab.binding.solarman.internal.modbus.exception.SolarmanException;\n \n /**\n@@ -39,7 +40,7 @@ class SolarmanV5ProtocolTest {\n             SolarmanLoggerConnection.class);\n \n     private SolarmanLoggerConfiguration loggerConfiguration = new SolarmanLoggerConfiguration(\"192.168.1.1\", 8899,\n-            \"1234567890\", \"sg04lp3\", 60, null);\n+            \"1234567890\", \"sg04lp3\", 60, SolarmanLoggerMode.V5MODBUS.toString(), null);\n \n     private SolarmanV5Protocol solarmanV5Protocol = new SolarmanV5Protocol(loggerConfiguration);\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17555",
    "pr_id": 17555,
    "issue_id": 17548,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[fmiweather] Add possibility to use fmi::forecast::edited in addition to fmi::forecast::harmonie\n# Problem / Motivation\r\nThe fmiweather binding fetches weather forecast from the Finnish Meteorology Instititute's (FMI) API. The binding uses currently the fmi::forecast::harmonie::surface::point::multipointcoverage stored query. The forecast provided as a response is based on the Harmonie weather model, which is different to what FMI publishes as their official forecast on their website and in their mobile app.\r\n\r\nThe meteorologists at FMI use multiple different weather models and their experience to provide an official FMI forecast which they publish on their website and in the FMI mobile app. [This official forecast, which is often times more accurate than the Harmonie-based forecast, has been available via their API since 6 June 2023](https://en.ilmatieteenlaitos.fi/open-data-changelog). During the past two winters, there have been cases where the Harmonie based forecast has been off by almost 10 degrees while the forecast provided by the FMI meteorologists have been accurate.\r\n\r\nHaving as accurate weather forecast as possible is cruicial for optimizing the heating of a house using openHAB. There are solutions like the [openHAB Spot Price Optimizer](https://community.openhab.org/t/spot-price-optimizer-advanced-algorhitms-to-optimize-heating-charging-of-electric-vehicles-water-boilers-and-more/159539) to do this (I'm the maintainer of that solution). At the moment the Spot Price Optimizer doesn't use the FMI Binding, but has it's own javascript module to fetch the FMI forecast.\r\n\r\n# Proposed change\r\nI would like to see this official FMI Weather Binding to allow users to be able to choose between the fmi::forecast::edited model and the current fmi::forecast::harmonie model.",
    "issue_word_count": 285,
    "test_files_count": 1,
    "non_test_files_count": 8,
    "pr_changed_files": [
      "bundles/org.openhab.binding.fmiweather/README.md",
      "bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/AbstractWeatherHandler.java",
      "bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/ForecastWeatherHandler.java",
      "bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/Client.java",
      "bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/ForecastRequest.java",
      "bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/config/ForecastConfiguration.java",
      "bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/i18n/fmiweather.properties",
      "bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/thing/thing-types.xml",
      "bundles/org.openhab.binding.fmiweather/src/test/java/org/openhab/binding/fmiweather/FMIRequestTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.fmiweather/src/test/java/org/openhab/binding/fmiweather/FMIRequestTest.java"
    ],
    "base_commit": "ec998ac4bb1fbb25ca10cdbf59de4401822c4653",
    "head_commit": "7a494446e590cb2e61c7ec68c59ca391e534ed41",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17555",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17555",
    "dockerfile": "",
    "pr_merged_at": "2024-10-19T20:37:22.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.fmiweather/README.md b/bundles/org.openhab.binding.fmiweather/README.md\nindex be0724a878459..94aed6ca50f45 100644\n--- a/bundles/org.openhab.binding.fmiweather/README.md\n+++ b/bundles/org.openhab.binding.fmiweather/README.md\n@@ -2,8 +2,12 @@\n \n This binding integrates to [the Finnish Meteorological Institute (FMI) Open Data API](https://en.ilmatieteenlaitos.fi/open-data).\n \n-Binding provides access to weather observations from FMI weather stations and [HARMONIE weather forecast model](https://en.ilmatieteenlaitos.fi/weather-forecast-models) forecasts.\n+The binding provides access to weather observations from FMI weather stations and FMI weather forecasts.\n Forecast covers \"northern Europe\" (Finland, Baltics, Scandinavia, some parts of surrounding countries), see [coverage map in the documentation](https://en.ilmatieteenlaitos.fi/weather-forecast-models).\n+The binding supports two different forecast queries:\n+\n+- [HARMONIE weather forecast model](https://en.ilmatieteenlaitos.fi/weather-forecast-models), which is one of the weather models that meteorologists use in their work.\n+- An edited query providing the official FMI forecast, which is often more accurate since it's edited by meteorologists who combine several different weather models and their experience to produce the official forecast.\n \n ![example of things](doc/images/fmi-example-things.png)\n \n@@ -36,9 +40,10 @@ The binding automatically discovers weather stations and forecasts for nearby pl\n \n ### `forecast` Thing Configuration\n \n-| Parameter  | Type | Required | Description                                                                                          | Example                           |\n-| ---------- | ---- | -------- | ---------------------------------------------------------------------------------------------------- | --------------------------------- |\n+| Parameter  | Type | Required | Description                                                                                          | Example                               |\n+| ---------- | ---- | -------- | ---------------------------------------------------------------------------------------------------- | ------------------------------------- |\n | `location` | text | ✓        | Latitude longitude location for the forecast. The parameter is given in format `LATITUDE,LONGITUDE`. | `\"60.192059, 24.945831\"` for Helsinki |\n+| `query`    | text |          | Stored query for official FMI forecast, either `harmonie` or `edited`.                               |                                       |\n \n ## Channels\n \n\ndiff --git a/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/AbstractWeatherHandler.java b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/AbstractWeatherHandler.java\nindex 0aaf824e39972..57426a9cdb7bc 100644\n--- a/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/AbstractWeatherHandler.java\n+++ b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/AbstractWeatherHandler.java\n@@ -138,9 +138,6 @@ protected void update(int retry) {\n         if (retry < RETRIES) {\n             try {\n                 response = client.query(getRequest(), TIMEOUT_MILLIS);\n-            } catch (FMIUnexpectedResponseException e) {\n-                handleError(e, retry);\n-                return;\n             } catch (FMIResponseException e) {\n                 handleError(e, retry);\n                 return;\n\ndiff --git a/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/ForecastWeatherHandler.java b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/ForecastWeatherHandler.java\nindex 03e78ef778b06..019d8ed3d9ac1 100644\n--- a/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/ForecastWeatherHandler.java\n+++ b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/ForecastWeatherHandler.java\n@@ -37,6 +37,7 @@\n import org.openhab.binding.fmiweather.internal.client.Location;\n import org.openhab.binding.fmiweather.internal.client.Request;\n import org.openhab.binding.fmiweather.internal.client.exception.FMIUnexpectedResponseException;\n+import org.openhab.binding.fmiweather.internal.config.ForecastConfiguration;\n import org.openhab.core.thing.Channel;\n import org.openhab.core.thing.ChannelUID;\n import org.openhab.core.thing.Thing;\n@@ -82,6 +83,7 @@ private static void addMapping(String channelId, String requestField, @Nullable\n     }\n \n     private @NonNullByDefault({}) LatLon location;\n+    private String query = \"\";\n \n     public ForecastWeatherHandler(Thing thing) {\n         super(thing);\n@@ -91,27 +93,23 @@ public ForecastWeatherHandler(Thing thing) {\n \n     @Override\n     public void initialize() {\n-        try {\n-            Object location = getConfig().get(BindingConstants.LOCATION);\n-            if (location == null) {\n-                logger.debug(\"Location not set for thing {} -- aborting initialization.\", getThing().getUID());\n-                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n-                        String.format(\"location parameter not set\"));\n-                return;\n-            }\n-            String latlon = location.toString();\n-            String[] split = latlon.split(\",\");\n-            if (split.length != 2) {\n-                throw new NumberFormatException(String.format(\n-                        \"Expecting location parameter to have latitude and longitude separated by comma (LATITUDE,LONGITUDE). Found %d values instead.\",\n-                        split.length));\n-            }\n-            this.location = new LatLon(new BigDecimal(split[0].trim()), new BigDecimal(split[1].trim()));\n-            super.initialize();\n-        } catch (NumberFormatException e) {\n+        ForecastConfiguration config = getConfigAs(ForecastConfiguration.class);\n+        String location = config.location;\n+        if (location.isBlank()) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, \"location parameter not set\");\n+            return;\n+        }\n+        String[] split = location.split(\",\");\n+        if (split.length != 2) {\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, String.format(\n-                    \"location parameter should be in format LATITUDE,LONGITUDE. Error details: %s\", e.getMessage()));\n+                    \"location parameter should have latitude and longitude separated by comma (LATITUDE,LONGITUDE). Found %d values instead\",\n+                    split.length));\n+            return;\n         }\n+        this.location = new LatLon(new BigDecimal(split[0].trim()), new BigDecimal(split[1].trim()));\n+        query = config.query;\n+\n+        super.initialize();\n     }\n \n     @Override\n@@ -123,7 +121,7 @@ public void dispose() {\n     @Override\n     protected Request getRequest() {\n         long now = Instant.now().getEpochSecond();\n-        return new ForecastRequest(location, floorToEvenMinutes(now, QUERY_RESOLUTION_MINUTES),\n+        return new ForecastRequest(location, query, floorToEvenMinutes(now, QUERY_RESOLUTION_MINUTES),\n                 ceilToEvenMinutes(now + TimeUnit.HOURS.toSeconds(FORECAST_HORIZON_HOURS), QUERY_RESOLUTION_MINUTES),\n                 QUERY_RESOLUTION_MINUTES);\n     }\n\ndiff --git a/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/Client.java b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/Client.java\nindex 4b9f4b7715cdd..6cd22851e0550 100644\n--- a/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/Client.java\n+++ b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/Client.java\n@@ -133,10 +133,12 @@ public FMIResponse query(Request request, int timeoutMillis)\n             throws FMIExceptionReportException, FMIUnexpectedResponseException, FMIIOException {\n         try {\n             String url = request.toUrl();\n+            logger.trace(\"GET request for {}\", url);\n             String responseText = HttpUtil.executeUrl(\"GET\", url, timeoutMillis);\n             if (responseText == null) {\n                 throw new FMIIOException(String.format(\"HTTP error with %s\", request.toUrl()));\n             }\n+            logger.trace(\"Response content: '{}'\", responseText);\n             FMIResponse response = parseMultiPointCoverageXml(responseText);\n             logger.debug(\"Request {} translated to url {}. Response: {}\", request, url, response);\n             return response;\n\ndiff --git a/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/ForecastRequest.java b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/ForecastRequest.java\nindex 359a757b050d0..cd494034d4b04 100644\n--- a/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/ForecastRequest.java\n+++ b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/client/ForecastRequest.java\n@@ -13,6 +13,7 @@\n package org.openhab.binding.fmiweather.internal.client;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.binding.fmiweather.internal.config.ForecastConfiguration;\n \n /**\n  * Request for weather forecasts\n@@ -23,7 +24,8 @@\n @NonNullByDefault\n public class ForecastRequest extends Request {\n \n-    public static final String STORED_QUERY_ID = \"fmi::forecast::harmonie::surface::point::multipointcoverage\";\n+    public static final String STORED_QUERY_ID_HARMONIE = \"fmi::forecast::harmonie::surface::point::multipointcoverage\";\n+    public static final String STORED_QUERY_ID_EDITED = \"fmi::forecast::edited::weather::scandinavia::point::multipointcoverage\";\n \n     // For description of variables: http://opendata.fmi.fi/meta?observableProperty=forecast\n     public static final String PARAM_TEMPERATURE = \"Temperature\";\n@@ -39,7 +41,12 @@ public class ForecastRequest extends Request {\n             PARAM_WIND_SPEED, PARAM_WIND_GUST, PARAM_PRESSURE, PARAM_PRECIPITATION_1H, PARAM_TOTAL_CLOUD_COVER,\n             PARAM_WEATHER_SYMBOL };\n \n-    public ForecastRequest(QueryParameter location, long startEpoch, long endEpoch, long timestepMinutes) {\n-        super(STORED_QUERY_ID, location, startEpoch, endEpoch, timestepMinutes, PARAMETERS);\n+    public ForecastRequest(QueryParameter location, String query, long startEpoch, long endEpoch,\n+            long timestepMinutes) {\n+        super(switch (query) {\n+            case ForecastConfiguration.QUERY_HARMONIE -> STORED_QUERY_ID_HARMONIE;\n+            case ForecastConfiguration.QUERY_EDITED -> STORED_QUERY_ID_EDITED;\n+            default -> throw new IllegalArgumentException(\"Invalid query parameter '%s'\".formatted(query));\n+        }, location, startEpoch, endEpoch, timestepMinutes, PARAMETERS);\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/config/ForecastConfiguration.java b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/config/ForecastConfiguration.java\nnew file mode 100644\nindex 0000000000000..5ee66c87cc360\n--- /dev/null\n+++ b/bundles/org.openhab.binding.fmiweather/src/main/java/org/openhab/binding/fmiweather/internal/config/ForecastConfiguration.java\n@@ -0,0 +1,29 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.fmiweather.internal.config;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link ForecastConfiguration} class contains fields mapping Thing configuration parameters.\n+ *\n+ * @author Jacob Laursen - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ForecastConfiguration {\n+    public static final String QUERY_HARMONIE = \"harmonie\";\n+    public static final String QUERY_EDITED = \"edited\";\n+\n+    public String location = \"\";\n+    public String query = QUERY_HARMONIE;\n+}\n\ndiff --git a/bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/i18n/fmiweather.properties b/bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/i18n/fmiweather.properties\nindex f231e99d1a865..b666012577538 100644\n--- a/bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/i18n/fmiweather.properties\n+++ b/bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/i18n/fmiweather.properties\n@@ -118,6 +118,10 @@ thing-type.fmiweather.observation.description = Finnish Meteorological Institute\n \n thing-type.config.fmiweather.forecast.location.label = Location\n thing-type.config.fmiweather.forecast.location.description = Location of weather in geographical coordinates (latitude,longitude).\n+thing-type.config.fmiweather.forecast.query.label = Stored Query\n+thing-type.config.fmiweather.forecast.query.description = Stored query for official FMI forecast\n+thing-type.config.fmiweather.forecast.query.option.harmonie = Harmonie Surface Point Weather Forecast\n+thing-type.config.fmiweather.forecast.query.option.edited = Forecast for Scandinavia (edited by a forecaster)\n thing-type.config.fmiweather.observation.fmisid.label = FMISID of the Weather Station\n thing-type.config.fmiweather.observation.fmisid.description = Station ID (FMISID) of the weather observation station <br /> <br />See https://en.ilmatieteenlaitos.fi/observation-stations for a list of observation stations. Select 'Weather' station for widest set of observations.\n \n\ndiff --git a/bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/thing/thing-types.xml b/bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/thing/thing-types.xml\nindex 7ce3e14f82b11..468afc12d545e 100644\n--- a/bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/thing/thing-types.xml\n+++ b/bundles/org.openhab.binding.fmiweather/src/main/resources/OH-INF/thing/thing-types.xml\n@@ -247,6 +247,15 @@\n \t\t\t\t<label>Location</label>\n \t\t\t\t<description>Location of weather in geographical coordinates (latitude,longitude).</description>\n \t\t\t</parameter>\n+\t\t\t<parameter name=\"query\" type=\"text\" required=\"false\">\n+\t\t\t\t<label>Stored Query</label>\n+\t\t\t\t<description>Stored query for official FMI forecast</description>\n+\t\t\t\t<default>harmonie</default>\n+\t\t\t\t<options>\n+\t\t\t\t\t<option value=\"harmonie\">Harmonie Surface Point Weather Forecast</option>\n+\t\t\t\t\t<option value=\"edited\">Forecast for Scandinavia (edited by a forecaster)</option>\n+\t\t\t\t</options>\n+\t\t\t</parameter>\n \t\t</config-description>\n \n \t</thing-type>\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.fmiweather/src/test/java/org/openhab/binding/fmiweather/FMIRequestTest.java b/bundles/org.openhab.binding.fmiweather/src/test/java/org/openhab/binding/fmiweather/FMIRequestTest.java\nindex 4bbd9a13a0878..c4d6f3fc94748 100644\n--- a/bundles/org.openhab.binding.fmiweather/src/test/java/org/openhab/binding/fmiweather/FMIRequestTest.java\n+++ b/bundles/org.openhab.binding.fmiweather/src/test/java/org/openhab/binding/fmiweather/FMIRequestTest.java\n@@ -49,9 +49,9 @@ public void testObservationRequestToUrl() {\n     }\n \n     @Test\n-    public void testForecastRequestToUrl() {\n-        ForecastRequest request = new ForecastRequest(new LatLon(new BigDecimal(\"9\"), new BigDecimal(\"8\")), 1552215664L,\n-                1552215665L, 61);\n+    public void testForecastRequestToUrlHarmonie() {\n+        ForecastRequest request = new ForecastRequest(new LatLon(new BigDecimal(\"9\"), new BigDecimal(\"8\")), \"harmonie\",\n+                1552215664L, 1552215665L, 61);\n         assertThat(request.toUrl(),\n                 is(\"\"\"\n                         https://opendata.fmi.fi/wfs?service=WFS&version=2.0.0&request=getFeature&storedquery_id=fmi::forecast::harmonie::surface::point::multipointcoverage\\\n@@ -60,6 +60,18 @@ public void testForecastRequestToUrl() {\n                         \"\"\"));\n     }\n \n+    @Test\n+    public void testForecastRequestToUrlEdited() {\n+        ForecastRequest request = new ForecastRequest(new LatLon(new BigDecimal(\"9\"), new BigDecimal(\"8\")), \"edited\",\n+                1552215664L, 1552215665L, 61);\n+        assertThat(request.toUrl(),\n+                is(\"\"\"\n+                        https://opendata.fmi.fi/wfs?service=WFS&version=2.0.0&request=getFeature&storedquery_id=fmi::forecast::edited::weather::scandinavia::point::multipointcoverage\\\n+                        &starttime=2019-03-10T11:01:04Z&endtime=2019-03-10T11:01:05Z&timestep=61&latlon=9,8\\\n+                        &parameters=Temperature,Humidity,WindDirection,WindSpeedMS,WindGust,Pressure,Precipitation1h,TotalCloudCover,WeatherSymbol3\\\n+                        \"\"\"));\n+    }\n+\n     @Test\n     public void testCustomLocation() {\n         QueryParameter location = new QueryParameter() {\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17502",
    "pr_id": 17502,
    "issue_id": 12474,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[wemo] WemoHandlerOSGiTest unstable\nThis test failed in: https://github.com/openhab/openhab-addons/runs/5533265679\r\n\r\n```\r\nTEST org.openhab.binding.wemo.internal.handler.test.WemoHandlerOSGiTest#assertThatThingHandlesOnOffCommandCorrectly() <<< ERROR: \r\nExpected: is <UNKNOWN>\r\n     but: was <OFFLINE>\r\njava.lang.AssertionError: \r\nExpected: is <UNKNOWN>\r\n     but: was <OFFLINE>\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\r\n\tat org.openhab.binding.wemo.internal.handler.test.WemoHandlerOSGiTest.lambda$0(WemoHandlerOSGiTest.java:78)\r\n\tat org.openhab.core.test.java.JavaTest.waitForAssert(JavaTest.java:152)\r\n\tat org.openhab.core.test.java.JavaTest.waitForAssert(JavaTest.java:120)\r\n\tat org.openhab.core.test.java.JavaTest.waitForAssert(JavaTest.java:73)\r\n\tat org.openhab.binding.wemo.internal.handler.test.WemoHandlerOSGiTest.assertThatThingHandlesOnOffCommandCorrectly(WemoHandlerOSGiTest.java:77)\r\n```",
    "issue_word_count": 117,
    "test_files_count": 2,
    "non_test_files_count": 0,
    "pr_changed_files": [
      "itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoHandlerOSGiTest.java",
      "itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoHandlerOSGiTest.java",
      "itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java"
    ],
    "base_commit": "856d526d95abc6c3f7e15d0afce36441437a1a7a",
    "head_commit": "65d356c509b97275afda8a4949667b707ffb230a",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17502",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17502",
    "dockerfile": "",
    "pr_merged_at": "2024-10-03T19:41:31.000Z",
    "patch": "",
    "test_patch": "diff --git a/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoHandlerOSGiTest.java b/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoHandlerOSGiTest.java\nindex 241b09f29d876..c504ce2e60d1d 100644\n--- a/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoHandlerOSGiTest.java\n+++ b/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoHandlerOSGiTest.java\n@@ -25,6 +25,7 @@\n \n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Disabled;\n import org.junit.jupiter.api.Test;\n import org.jupnp.model.ValidationException;\n import org.mockito.ArgumentCaptor;\n@@ -68,6 +69,7 @@ public void tearDown() {\n     }\n \n     @Test\n+    @Disabled(\"https://github.com/openhab/openhab-addons/issues/12474\")\n     public void assertThatThingHandlesOnOffCommandCorrectly()\n             throws MalformedURLException, URISyntaxException, ValidationException, IOException {\n         Command command = OnOffType.OFF;\n@@ -104,6 +106,7 @@ public void assertThatThingHandlesOnOffCommandCorrectly()\n     }\n \n     @Test\n+    @Disabled(\"https://github.com/openhab/openhab-addons/issues/12474\")\n     public void assertThatThingHandlesREFRESHCommandCorrectly()\n             throws MalformedURLException, URISyntaxException, ValidationException, IOException {\n         Command command = RefreshType.REFRESH;\n\ndiff --git a/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java b/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java\nindex 8755f8d9969c6..f478cbc8c0ff3 100644\n--- a/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java\n+++ b/itests/org.openhab.binding.wemo.tests/src/main/java/org/openhab/binding/wemo/internal/handler/test/WemoMakerHandlerOSGiTest.java\n@@ -69,8 +69,8 @@ public void tearDown() {\n         removeThing();\n     }\n \n-    @Disabled\n     @Test\n+    @Disabled(\"https://github.com/openhab/openhab-addons/issues/12474\")\n     public void assertThatThingHandlesOnOffCommandCorrectly()\n             throws MalformedURLException, URISyntaxException, ValidationException, IOException {\n         Command command = OnOffType.OFF;\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17457",
    "pr_id": 17457,
    "issue_id": 16847,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[modbus] Do not process values from channel if configured transformation service is unavailable (during startup)\n## Expected Behavior\r\nConsistent value range for items.\r\n\r\n## Current Behavior\r\nWhen starting or restarting openHAB, services like ModBus poll data from server ignore transformation services (here: JS) when they are not ready. This results in values out of usual value range destroying average calculations and representations (e.g. in Grafana - see screenshot).\r\n\r\n![image](https://github.com/openhab/openhab-core/assets/34278179/460a9769-6aa7-4a80-a43a-98ca71fd2ee6)\r\n\r\n![image](https://github.com/openhab/openhab-core/assets/34278179/1af67f6e-baea-46dd-a111-2f6da826add8)\r\n\r\n```\r\n2024-05-29 14:01:44.121 [INFO ] [org.openhab.core.Activator          ] - Starting openHAB 4.2.0 (Build openhab/openhab-core#4103)\r\n2024-05-29 14:01:49.660 [INFO ] [.core.internal.i18n.I18nProviderImpl] - Time zone set to 'Europe/Vienna'.\r\n2024-05-29 14:01:49.671 [INFO ] [.core.internal.i18n.I18nProviderImpl] - Locale set to 'en_AT'.\r\n2024-05-29 14:01:49.674 [INFO ] [.core.internal.i18n.I18nProviderImpl] - Measurement system set to 'SI'.\r\n2024-05-29 14:02:01.593 [INFO ] [el.core.internal.ModelRepositoryImpl] - Loading model 'influxdb.persist'\r\n2024-05-29 14:02:02.905 [WARN ] [penhab.core.library.items.NumberItem] - Unit 'rpm' could not be parsed to a known unit. Keeping old unit 'one' for item 'miele_washing_machine_wwg360_spinning_speed'.\r\n2024-05-29 14:02:08.717 [INFO ] [e.automation.internal.RuleEngineImpl] - Rule engine started.\r\n2024-05-29 14:02:10.980 [INFO ] [internal.handler.OnectaBridgeHandler] - Discovered a onecta unit thing with ID '44da5053-e3a9-4519-ba71-43e8da9f3642' '44da5053-e3a9-4519-ba71-43e8da9f3642'\r\n2024-05-29 14:02:11.021 [INFO ] [internal.handler.OnectaBridgeHandler] - Discovered a onecta gateway thing with ID '44da5053-e3a9-4519-ba71-43e8da9f3642' '44da5053-e3a9-4519-ba71-43e8da9f3642'\r\n2024-05-29 14:02:11.030 [INFO ] [internal.handler.OnectaBridgeHandler] - Discovered a onecta watertank thing with ID '44da5053-e3a9-4519-ba71-43e8da9f3642' '44da5053-e3a9-4519-ba71-43e8da9f3642'\r\n2024-05-29 14:02:11.046 [INFO ] [.core.model.lsp.internal.ModelServer] - Started Language Server Protocol (LSP) service on port 5007\r\n2024-05-29 14:02:27.372 [WARN ] [ty.util.ssl.SslContextFactory.config] - Trusting all certificates configured for Client@6d7da0b[provider=null,keyStore=null,trustStore=null]\r\n2024-05-29 14:02:27.376 [WARN ] [ty.util.ssl.SslContextFactory.config] - No Client EndPointIdentificationAlgorithm configured for Client@6d7da0b[provider=null,keyStore=null,trustStore=null]\r\n2024-05-29 14:02:28.885 [INFO ] [nding.http.internal.HttpThingHandler] - Using the secure client for thing 'http:url:epex_spot_awattar'.\r\n2024-05-29 14:02:29.276 [INFO ] [rt.modbus.internal.ModbusManagerImpl] - Modbus manager activated\r\n2024-05-29 14:02:30.360 [WARN ] [nelTransformation$TransformationStep] - Failed to use TransformationStep{serviceName='JS', function='config:js:awattar_current_item'}, service not found\r\n2024-05-29 14:02:30.364 [WARN ] [nelTransformation$TransformationStep] - Failed to use TransformationStep{serviceName='JS', function='config:js:awattar_extrema_item'}, service not found\r\n2024-05-29 14:02:30.367 [WARN ] [nelTransformation$TransformationStep] - Failed to use TransformationStep{serviceName='JS', function='config:js:awattar_extrema_item'}, service not found\r\n2024-05-29 14:02:30.372 [WARN ] [nelTransformation$TransformationStep] - Failed to use TransformationStep{serviceName='JS', function='config:js:awattar_current_item'}, service not found\r\n2024-05-29 14:02:30.374 [WARN ] [nelTransformation$TransformationStep] - Failed to use TransformationStep{serviceName='JS', function='config:js:awattar_current_item'}, service not found\r\n2024-05-29 14:02:30.378 [WARN ] [nelTransformation$TransformationStep] - Failed to use TransformationStep{serviceName='JS', function='config:js:awattar_extrema_item'}, service not found\r\n2024-05-29 14:02:30.383 [WARN ] [nelTransformation$TransformationStep] - Failed to use TransformationStep{serviceName='JS', function='config:js:awattar_extrema_item'}, service not found\r\n2024-05-29 14:02:32.321 [INFO ] [.transport.mqtt.MqttBrokerConnection] - Starting MQTT broker connection to 'localhost' with clientid ae9753ea-0d0b-4be9-8d2d-b838af1cee34\r\n2024-05-29 14:02:36.449 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.493 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.498 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.507 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.516 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.528 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.537 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.543 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.550 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.559 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.565 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:37.575 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:38.397 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:38.403 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:38.407 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n2024-05-29 14:02:38.411 [WARN ] [s.internal.SingleValueTransformation] - couldn't transform response because transformationService of type 'JS' is unavailable\r\n```\r\n\r\n## Possible Solution\r\nIgnore values from Thing channel when transformation is configured but not available or initialize transformation services earlier or before Things.\r\n\r\n## Steps to Reproduce (for Bugs)\r\n1. Add a Modbus data Thing and configure \"Read Transform\" (e.g. \"JS:|input/10\" like in screenshot above).\r\n2. Link item to channel.\r\n3. Restart openHAB.\r\n\r\n## Your Environment\r\n* Version used: openHAB 4.2.0-M3\r\n",
    "issue_word_count": 1022,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/internal/ModbusTransformation.java",
      "bundles/org.openhab.binding.modbus/src/test/java/org/openhab/binding/modbus/internal/ModbusTransformationTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.modbus/src/test/java/org/openhab/binding/modbus/internal/ModbusTransformationTest.java"
    ],
    "base_commit": "163f517f6f198b26b0731a386657f7be55bc983b",
    "head_commit": "6b5c94a5bff39225fcca0f5b540b864d57ab0284",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17457",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17457",
    "dockerfile": "",
    "pr_merged_at": "2024-09-26T19:28:39.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/internal/ModbusTransformation.java b/bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/internal/ModbusTransformation.java\nindex 9c0050f60a468..10181ce7c67e0 100644\n--- a/bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/internal/ModbusTransformation.java\n+++ b/bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/internal/ModbusTransformation.java\n@@ -111,10 +111,19 @@ public ModbusTransformation(@Nullable List<String> transformationList) {\n         }\n     }\n \n+    /**\n+     * Transform the given value using the configured transformations.\n+     * \n+     * @param value the value to transform\n+     * @return the transformed value. If the transformation failed, return a blank string.\n+     *         This could happen in one of these situations:\n+     *         - The transformation service is not available.\n+     *         - An error occurred when performing transformations.\n+     *         - The transformation service intentionally returned null.\n+     */\n     public String transform(String value) {\n         if (transformation != null) {\n-            // return input if transformation failed\n-            return Objects.requireNonNull(transformation.apply(value).orElse(value));\n+            return Objects.requireNonNull(transformation.apply(value).orElse(\"\"));\n         }\n \n         return Objects.requireNonNullElse(constantOutput, value);\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.modbus/src/test/java/org/openhab/binding/modbus/internal/ModbusTransformationTest.java b/bundles/org.openhab.binding.modbus/src/test/java/org/openhab/binding/modbus/internal/ModbusTransformationTest.java\nindex 30480e39e7ec7..e59f457f5493d 100644\n--- a/bundles/org.openhab.binding.modbus/src/test/java/org/openhab/binding/modbus/internal/ModbusTransformationTest.java\n+++ b/bundles/org.openhab.binding.modbus/src/test/java/org/openhab/binding/modbus/internal/ModbusTransformationTest.java\n@@ -51,4 +51,11 @@ public void testTransformationConstant() {\n         assertFalse(transformation.isIdentityTransform());\n         assertEquals(\"constant\", transformation.transform(\"xx\"));\n     }\n+\n+    @Test\n+    public void testTransformationFailed() {\n+        ModbusTransformation transformation = new ModbusTransformation(List.of(\"NONEXISTENT(test)\"));\n+        assertFalse(transformation.isIdentityTransform());\n+        assertEquals(\"\", transformation.transform(\"xx\"));\n+    }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17412",
    "pr_id": 17412,
    "issue_id": 15145,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[mqtt.homeassistant][JINJA] Transformation problem with value template key\nI did read this is potentially the wrong place (just need some feedback at this point).  I'm not fluent in Java but can read a little bit of code.  The actual log message is from the Addons repository, but when I looked into that class it appears to call on the transformation services in the core.  However, from within the core I could not find the source.  \r\n\r\nBackground: I'm experimenting with zwave-js-ui for OH. On a test system I can discover all my test zwave devices in OH4M3. Test setup with openhabian (on WSL - Debian 11 with MQTT, Json Path & Jinja transform installed) and all the channels/topics appear.  It is early in testing so far, but most channels/topics can be linked to items and display the state (ON/OFF or Number). \r\n\r\nThe one type of channel /topic with a problem so far;\r\n`{\"value_template\":\"{{ {22: \\\"Window/door is open\\\",23: \\\"Window/door is closed\\\",5632: \\\"Window/door is open in regular position\\\",5633: \\\"Window/door is open in tilt position\\\"}[value_json.value] | default(value_json.value) }}\",\"icon\":\"mdi:alarm-light\",\"state_topic\":\"zwave/nodeID_10/113/0/Access_Control/Door_state\",\"json_attributes_topic\":\"zwave/nodeID_10/113/0/Access_Control/Door_state\",\"device\":{\"identifiers\":[\"zwavejs2mqtt_0xe2bd1ff1_node10\"],\"manufacturer\":\"Zooz\",\"model\":\"Tilt Shock XS Sensor (ZSE43)\",\"name\":\"nodeID_10\",\"sw_version\":\"1.20.1\"},\"name\":\"nodeID_10_notification_access_control_door_state\",\"unique_id\":\"zwavejs2mqtt_0xe2bd1ff1_10-113-0-Access_Control-Door_state\"}`\r\n\r\n## Expected Behavior\r\nI would hope this should return the string corresponding with the number.  I don't know if this is a bug or just not allowed by the Jinja /JSON specification.\r\n\r\n## Current Behavior\r\n`2023-06-27 14:32:56.534 [WARN ] [t.generic.ChannelStateTransformation] - Executing the JINJA-transformation failed: An error occurred while transformation. InterpretException: Error resolving expression [{22: \"Window/door is open\",23: \"Window/door is closed\",5632: \"Window/door is open in regular position\",5633: \"Window/door is open in tilt position\"}[value_json.value] | default(value_json.value)]: TemplateStateException: Dict key must be a string or identifier, was: 22`\r\n\r\nand another;\r\n`2023-06-27 14:32:56.174 [WARN ] [t.generic.ChannelStateTransformation] - Executing the JINJA-transformation failed: An error occurred while transformation. InterpretException: Error resolving expression [{0: \"off\", 1: \"heat\", 2: \"cool\"}[value_json.value] | default('off')]: TemplateStateException: Dict key must be a string or identifier, was: 0`\r\n\r\n## Possible Solution\r\nAllow a number to be the index to get the string. If it helps, all the numbers will be a member of integers.\r\n\r\n## Context\r\nzwave-js-ui includes several features not currently available with the OH Zwave binding including S2 security, OTA firmware updates, 700/800 series controllers and has applied for certification with the Zwave Alliance standards body. I do not know if this is going to work.  There could be more issues (possibly impossible to resolve) as I add different devices.",
    "issue_word_count": 466,
    "test_files_count": 1,
    "non_test_files_count": 5,
    "pr_changed_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/pom.xml",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/feature/feature.xml",
      "bundles/org.openhab.transform.jinja/pom.xml",
      "bundles/org.openhab.transform.jinja/src/main/feature/feature.xml",
      "features/openhab-addons/src/main/resources/footer.xml",
      "itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun"
    ],
    "base_commit": "2d61ffc409166f30f7b16405feeb8539536d9c3f",
    "head_commit": "bc65f297c9effa5d060584fd424c200da600d7ae",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17412",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17412",
    "dockerfile": "",
    "pr_merged_at": "2024-09-23T14:57:21.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/pom.xml b/bundles/org.openhab.binding.mqtt.homeassistant/pom.xml\nindex 854983ad21f14..849eeb0d3bf57 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/pom.xml\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/pom.xml\n@@ -37,7 +37,7 @@\n     <dependency>\n       <groupId>org.openhab.osgiify</groupId>\n       <artifactId>com.hubspot.jinjava.jinjava</artifactId>\n-      <version>2.7.2_0</version>\n+      <version>2.7.3</version>\n       <scope>compile</scope>\n     </dependency>\n     <dependency>\n@@ -52,5 +52,17 @@\n       <version>2.3.2</version>\n       <scope>compile</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.datatype</groupId>\n+      <artifactId>jackson-datatype-jdk8</artifactId>\n+      <version>${jackson.version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.openhab.osgiify</groupId>\n+      <artifactId>com.hubspot.immutables.immutables-exceptions</artifactId>\n+      <version>1.9</version>\n+      <scope>compile</scope>\n+    </dependency>\n   </dependencies>\n </project>\n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/feature/feature.xml b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/feature/feature.xml\nindex 853e170e1cfd7..770886a76adbc 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/feature/feature.xml\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/feature/feature.xml\n@@ -6,9 +6,11 @@\n \t\t<feature>openhab-runtime-base</feature>\n \t\t<feature>openhab-transport-mqtt</feature>\n \t\t<feature dependency=\"true\">openhab.tp-commons-net</feature>\n-\t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.hubspot.jinjava.jinjava/2.7.2_0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.hubspot.jinjava.jinjava/2.7.3</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.google.re2j.re2j/1.2</bundle>\n \t\t<bundle dependency=\"true\">mvn:ch.obermuhlner/big-math/2.3.2</bundle>\n+\t\t<bundle dependency=\"true\">mvn:com.fasterxml.jackson.datatype/jackson-datatype-jdk8/${jackson.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.hubspot.immutables.immutables-exceptions/1.9</bundle>\n \t\t<bundle start-level=\"80\">mvn:org.openhab.addons.bundles/org.openhab.binding.mqtt/${project.version}</bundle>\n \t\t<bundle start-level=\"81\">mvn:org.openhab.addons.bundles/org.openhab.binding.mqtt.generic/${project.version}</bundle>\n \t\t<bundle start-level=\"82\">mvn:org.openhab.addons.bundles/org.openhab.binding.mqtt.homeassistant/${project.version}</bundle>\n\ndiff --git a/bundles/org.openhab.transform.jinja/pom.xml b/bundles/org.openhab.transform.jinja/pom.xml\nindex 0adfa3d09a685..f175a0d68c10e 100644\n--- a/bundles/org.openhab.transform.jinja/pom.xml\n+++ b/bundles/org.openhab.transform.jinja/pom.xml\n@@ -16,9 +16,9 @@\n \n   <dependencies>\n     <dependency>\n-      <groupId>com.hubspot.jinjava</groupId>\n-      <artifactId>jinjava</artifactId>\n-      <version>2.7.2</version>\n+      <groupId>org.openhab.osgiify</groupId>\n+      <artifactId>com.hubspot.jinjava.jinjava</artifactId>\n+      <version>2.7.3</version>\n       <scope>compile</scope>\n     </dependency>\n     <dependency>\n@@ -75,6 +75,18 @@\n       <version>${commons.net.version}</version>\n       <scope>compile</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.datatype</groupId>\n+      <artifactId>jackson-datatype-jdk8</artifactId>\n+      <version>${jackson.version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.openhab.osgiify</groupId>\n+      <artifactId>com.hubspot.immutables.immutables-exceptions</artifactId>\n+      <version>1.9</version>\n+      <scope>compile</scope>\n+    </dependency>\n   </dependencies>\n \n </project>\n\ndiff --git a/bundles/org.openhab.transform.jinja/src/main/feature/feature.xml b/bundles/org.openhab.transform.jinja/src/main/feature/feature.xml\nindex 7276e97d27433..1cb59b50380f7 100644\n--- a/bundles/org.openhab.transform.jinja/src/main/feature/feature.xml\n+++ b/bundles/org.openhab.transform.jinja/src/main/feature/feature.xml\n@@ -5,9 +5,11 @@\n \t<feature name=\"openhab-transformation-jinja\" description=\"Jinja Transformation\" version=\"${project.version}\">\n \t\t<feature>openhab-runtime-base</feature>\n \t\t<feature dependency=\"true\">openhab.tp-commons-net</feature>\n-\t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.hubspot.jinjava.jinjava/2.7.2_0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.hubspot.jinjava.jinjava/2.7.3</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.google.re2j.re2j/1.2</bundle>\n \t\t<bundle dependency=\"true\">mvn:ch.obermuhlner/big-math/2.3.2</bundle>\n+\t\t<bundle dependency=\"true\">mvn:com.fasterxml.jackson.datatype/jackson-datatype-jdk8/${jackson.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.hubspot.immutables.immutables-exceptions/1.9</bundle>\n \t\t<bundle start-level=\"75\">mvn:org.openhab.addons.bundles/org.openhab.transform.jinja/${project.version}</bundle>\n \t</feature>\n </features>\n\ndiff --git a/features/openhab-addons/src/main/resources/footer.xml b/features/openhab-addons/src/main/resources/footer.xml\nindex 383959548d486..5e758dc8ba4b5 100644\n--- a/features/openhab-addons/src/main/resources/footer.xml\n+++ b/features/openhab-addons/src/main/resources/footer.xml\n@@ -23,9 +23,11 @@\n \t\t<feature>openhab-runtime-base</feature>\n \t\t<feature>openhab-transport-mqtt</feature>\n \t\t<feature dependency=\"true\">openhab.tp-commons-net</feature>\n-\t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.hubspot.jinjava.jinjava/2.7.2_0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.hubspot.jinjava.jinjava/2.7.3</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.google.re2j.re2j/1.2</bundle>\n \t\t<bundle dependency=\"true\">mvn:ch.obermuhlner/big-math/2.3.2</bundle>\n+\t\t<bundle dependency=\"true\">mvn:com.fasterxml.jackson.datatype/jackson-datatype-jdk8/${jackson.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/com.hubspot.immutables.immutables-exceptions/1.9</bundle>\n \t\t<bundle start-level=\"80\">mvn:org.openhab.addons.bundles/org.openhab.binding.mqtt/${project.version}</bundle>\n \t\t<bundle start-level=\"81\">mvn:org.openhab.addons.bundles/org.openhab.binding.mqtt.espmilighthub/${project.version}</bundle>\n \t\t<bundle start-level=\"81\">mvn:org.openhab.addons.bundles/org.openhab.binding.mqtt.generic/${project.version}</bundle>\n",
    "test_patch": "diff --git a/itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun b/itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun\nindex b6d41e1a2e85b..0350e6fc18aeb 100644\n--- a/itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun\n+++ b/itests/org.openhab.binding.mqtt.homeassistant.tests/itest.bndrun\n@@ -125,7 +125,7 @@ Import-Package: \\\n \tcom.google.guava;version='[33.2.0,33.2.1)',\\\n \tcom.google.guava.failureaccess;version='[1.0.2,1.0.3)',\\\n \tcom.google.re2j.re2j;version='[1.2.0,1.2.1)',\\\n-\tcom.hubspot.jinjava.jinjava;version='[2.7.2,2.7.3)',\\\n+\tcom.hubspot.jinjava.jinjava;version='[2.7.3,2.7.4)',\\\n \tjavassist;version='[3.29.2,3.29.3)',\\\n \torg.apache.commons.commons-net;version='[3.9.0,3.9.1)',\\\n \torg.apache.commons.lang3;version='[3.14.0,3.14.1)',\\\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17383",
    "pr_id": 17383,
    "issue_id": 17247,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[Groovy] Default preset does not include OnOffType\nhttps://www.openhab.org/docs/configuration/jsr223.html#default-preset-importpreset-not-required says that the OnOffType is available in Groovy, as part of the Default preset.\r\n\r\nI create a file in openhab/automation/jsr223/onoff.groovy with content:\r\n```\r\nOnOffType v = ON\r\n```\r\nLoading it fails:\r\n```\r\n2024-08-12 20:53:31.386 [ERROR] [ipt.internal.ScriptEngineManagerImpl] - Error during evaluation of script '/etc/openhab/automation/jsr223/onoff.groovy': org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:\r\n/etc/openhab/automation/jsr223/onoff.groovy: 2: unable to resolve class OnOffType\r\n @ line 2, column 11.\r\n   OnOffType v = ON\r\n             ^\r\n\r\n1 error\r\n```\r\nIf I change onoff.groovy to:\r\n```\r\nimport org.openhab.core.library.types.OnOffType\r\nOnOffType v = ON\r\n```\r\nthere is no error on loading.\r\n\r\nSo in OpenHAB 4.2.1 the Default preset for Groovy does not include OnOffType, contrary to the statement at https://www.openhab.org/docs/configuration/jsr223.html#default-preset-importpreset-not-required.",
    "issue_word_count": 157,
    "test_files_count": 4,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.automation.groovyscripting/src/main/java/org/openhab/automation/groovyscripting/internal/CustomizableGroovyClassLoader.java",
      "bundles/org.openhab.automation.groovyscripting/src/main/java/org/openhab/automation/groovyscripting/internal/GroovyScriptEngineFactory.java",
      "itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/AbstractGroovyScriptingOSGiTest.java",
      "itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/ScriptScopeOSGiTest.java",
      "itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/SlurperOSGiTest.java",
      "itests/org.openhab.automation.groovyscripting.tests/src/main/resources/OH-INF/automation/jsr223/scope-working.groovy"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/AbstractGroovyScriptingOSGiTest.java",
      "itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/ScriptScopeOSGiTest.java",
      "itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/SlurperOSGiTest.java",
      "itests/org.openhab.automation.groovyscripting.tests/src/main/resources/OH-INF/automation/jsr223/scope-working.groovy"
    ],
    "base_commit": "9f58f6ddbc2af9e39fb1d705735c54171de04dcb",
    "head_commit": "1e32bf45de4a919bed4d2e61530fef375abf7ab3",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17383",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17383",
    "dockerfile": "",
    "pr_merged_at": "2024-09-08T12:55:31.000Z",
    "patch": "diff --git a/bundles/org.openhab.automation.groovyscripting/src/main/java/org/openhab/automation/groovyscripting/internal/CustomizableGroovyClassLoader.java b/bundles/org.openhab.automation.groovyscripting/src/main/java/org/openhab/automation/groovyscripting/internal/CustomizableGroovyClassLoader.java\nnew file mode 100644\nindex 0000000000000..0314f33d15b53\n--- /dev/null\n+++ b/bundles/org.openhab.automation.groovyscripting/src/main/java/org/openhab/automation/groovyscripting/internal/CustomizableGroovyClassLoader.java\n@@ -0,0 +1,49 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.automation.groovyscripting.internal;\n+\n+import java.io.File;\n+\n+import org.codehaus.groovy.control.CompilerConfiguration;\n+import org.codehaus.groovy.control.customizers.CompilationCustomizer;\n+import org.openhab.core.OpenHAB;\n+\n+import groovy.lang.GroovyClassLoader;\n+\n+/**\n+ * Customizes the {@link GroovyClassLoader} so that {@link CompilationCustomizer}s can be added which allows for\n+ * importing additional classes via scopes.\n+ *\n+ * @author Wouter Born - Initial contribution\n+ */\n+public class CustomizableGroovyClassLoader extends GroovyClassLoader {\n+\n+    private static final String FILE_DIRECTORY = \"automation\" + File.separator + \"groovy\";\n+\n+    private CompilerConfiguration config;\n+\n+    public CustomizableGroovyClassLoader() {\n+        this(CustomizableGroovyClassLoader.class.getClassLoader(), new CompilerConfiguration(), true);\n+    }\n+\n+    public CustomizableGroovyClassLoader(ClassLoader parent, CompilerConfiguration config,\n+            boolean useConfigurationClasspath) {\n+        super(parent, config, useConfigurationClasspath);\n+        this.config = config;\n+        addClasspath(OpenHAB.getConfigFolder() + File.separator + FILE_DIRECTORY);\n+    }\n+\n+    public void addCompilationCustomizers(CompilationCustomizer... customizers) {\n+        config.addCompilationCustomizers(customizers);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.automation.groovyscripting/src/main/java/org/openhab/automation/groovyscripting/internal/GroovyScriptEngineFactory.java b/bundles/org.openhab.automation.groovyscripting/src/main/java/org/openhab/automation/groovyscripting/internal/GroovyScriptEngineFactory.java\nindex f192ed0106c21..d2dac88609dd4 100644\n--- a/bundles/org.openhab.automation.groovyscripting/src/main/java/org/openhab/automation/groovyscripting/internal/GroovyScriptEngineFactory.java\n+++ b/bundles/org.openhab.automation.groovyscripting/src/main/java/org/openhab/automation/groovyscripting/internal/GroovyScriptEngineFactory.java\n@@ -12,22 +12,20 @@\n  */\n package org.openhab.automation.groovyscripting.internal;\n \n-import java.io.File;\n import java.util.List;\n-import java.util.stream.Collectors;\n+import java.util.Map;\n import java.util.stream.Stream;\n \n import javax.script.ScriptEngine;\n \n+import org.codehaus.groovy.control.customizers.ImportCustomizer;\n+import org.codehaus.groovy.jsr223.GroovyScriptEngineImpl;\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n-import org.openhab.core.OpenHAB;\n import org.openhab.core.automation.module.script.AbstractScriptEngineFactory;\n import org.openhab.core.automation.module.script.ScriptEngineFactory;\n import org.osgi.service.component.annotations.Component;\n \n-import groovy.lang.GroovyClassLoader;\n-\n /**\n  * This is an implementation of a {@link ScriptEngineFactory} for Groovy.\n  *\n@@ -37,20 +35,11 @@\n @NonNullByDefault\n public class GroovyScriptEngineFactory extends AbstractScriptEngineFactory {\n \n-    private static final String FILE_DIRECTORY = \"automation\" + File.separator + \"groovy\";\n     private final org.codehaus.groovy.jsr223.GroovyScriptEngineFactory factory = new org.codehaus.groovy.jsr223.GroovyScriptEngineFactory();\n \n-    private final List<String> scriptTypes = (List<String>) Stream.of(factory.getExtensions(), factory.getMimeTypes())\n+    private final List<String> scriptTypes = Stream.of(factory.getExtensions(), factory.getMimeTypes())\n             .flatMap(List::stream) //\n-            .collect(Collectors.toUnmodifiableList());\n-\n-    private final GroovyClassLoader gcl = new GroovyClassLoader(GroovyScriptEngineFactory.class.getClassLoader());\n-\n-    public GroovyScriptEngineFactory() {\n-        String scriptDir = OpenHAB.getConfigFolder() + File.separator + FILE_DIRECTORY;\n-        logger.debug(\"Adding script directory {} to the GroovyScriptEngine class path.\", scriptDir);\n-        gcl.addClasspath(scriptDir);\n-    }\n+            .toList();\n \n     @Override\n     public List<String> getScriptTypes() {\n@@ -58,10 +47,24 @@ public List<String> getScriptTypes() {\n     }\n \n     @Override\n-    public @Nullable ScriptEngine createScriptEngine(String scriptType) {\n-        if (scriptTypes.contains(scriptType)) {\n-            return new org.codehaus.groovy.jsr223.GroovyScriptEngineImpl(gcl);\n+    public void scopeValues(ScriptEngine scriptEngine, Map<String, Object> scopeValues) {\n+        ImportCustomizer importCustomizer = new ImportCustomizer();\n+        for (Map.Entry<String, Object> entry : scopeValues.entrySet()) {\n+            if (entry.getValue() instanceof Class<?> clazz) {\n+                importCustomizer.addImport(entry.getKey(), clazz.getCanonicalName());\n+            } else {\n+                scriptEngine.put(entry.getKey(), entry.getValue());\n+            }\n         }\n-        return null;\n+\n+        GroovyScriptEngineImpl gse = (GroovyScriptEngineImpl) scriptEngine;\n+        CustomizableGroovyClassLoader cl = (CustomizableGroovyClassLoader) gse.getClassLoader();\n+        cl.addCompilationCustomizers(importCustomizer);\n+    }\n+\n+    @Override\n+    public @Nullable ScriptEngine createScriptEngine(String scriptType) {\n+        return scriptTypes.contains(scriptType) ? new GroovyScriptEngineImpl(new CustomizableGroovyClassLoader())\n+                : null;\n     }\n }\n",
    "test_patch": "diff --git a/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/AbstractGroovyScriptingOSGiTest.java b/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/AbstractGroovyScriptingOSGiTest.java\nnew file mode 100644\nindex 0000000000000..e9a0d6401af21\n--- /dev/null\n+++ b/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/AbstractGroovyScriptingOSGiTest.java\n@@ -0,0 +1,54 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.automation.groovyscripting;\n+\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.URL;\n+import java.util.Objects;\n+\n+import javax.script.ScriptEngine;\n+import javax.script.ScriptException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.openhab.core.automation.module.script.ScriptEngineContainer;\n+import org.openhab.core.automation.module.script.ScriptEngineManager;\n+import org.openhab.core.test.java.JavaOSGiTest;\n+\n+/**\n+ * Provides helper methods that can be reused for testing Groovy scripts.\n+ *\n+ * @author Wouter Born - Initial contribution\n+ */\n+@NonNullByDefault\n+public abstract class AbstractGroovyScriptingOSGiTest extends JavaOSGiTest {\n+\n+    protected @NonNullByDefault({}) ScriptEngine engine;\n+\n+    private final String path = \"OH-INF/automation/jsr223/\";\n+\n+    @BeforeEach\n+    public void init() {\n+        ScriptEngineManager scriptManager = Objects.requireNonNull(getService(ScriptEngineManager.class),\n+                \"Could not get ScriptEngineManager\");\n+        ScriptEngineContainer container = Objects.requireNonNull(\n+                scriptManager.createScriptEngine(\"groovy\", \"testGroovyEngine\"), \"Could not create Groovy ScriptEngine\");\n+        engine = container.getScriptEngine();\n+    }\n+\n+    protected void evalScript(String fileName) throws ScriptException, IOException {\n+        URL url = bundleContext.getBundle().getResource(path + fileName);\n+        engine.eval(new InputStreamReader(url.openStream()));\n+    }\n+}\n\ndiff --git a/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/ScriptScopeOSGiTest.java b/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/ScriptScopeOSGiTest.java\nnew file mode 100644\nindex 0000000000000..6b2da61a94c15\n--- /dev/null\n+++ b/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/ScriptScopeOSGiTest.java\n@@ -0,0 +1,32 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.automation.groovyscripting;\n+\n+import java.io.IOException;\n+\n+import javax.script.ScriptException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * This tests the script modules using the Groovy scripting engine.\n+ *\n+ * @author Wouter Born - Initial contribution\n+ */\n+public class ScriptScopeOSGiTest extends AbstractGroovyScriptingOSGiTest {\n+\n+    @Test\n+    public void scopeWorking() throws ScriptException, IOException {\n+        evalScript(\"scope-working.groovy\");\n+    }\n+}\n\ndiff --git a/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/SlurperOSGiTest.java b/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/SlurperOSGiTest.java\nindex c12e6db610a54..430268d94e3c1 100644\n--- a/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/SlurperOSGiTest.java\n+++ b/itests/org.openhab.automation.groovyscripting.tests/src/main/java/org/openhab/automation/groovyscripting/SlurperOSGiTest.java\n@@ -13,18 +13,11 @@\n package org.openhab.automation.groovyscripting;\n \n import java.io.IOException;\n-import java.io.InputStreamReader;\n-import java.net.URL;\n \n-import javax.script.ScriptEngine;\n import javax.script.ScriptException;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n-import org.openhab.core.automation.module.script.ScriptEngineContainer;\n-import org.openhab.core.automation.module.script.ScriptEngineManager;\n-import org.openhab.core.test.java.JavaOSGiTest;\n \n /**\n  * This tests the JSON, XML and YAML slurpers using the Groovy scripting engine.\n@@ -32,23 +25,7 @@\n  * @author Wouter Born - Initial contribution\n  */\n @NonNullByDefault\n-public class SlurperOSGiTest extends JavaOSGiTest {\n-\n-    private @NonNullByDefault({}) ScriptEngine engine;\n-\n-    private final String path = \"OH-INF/automation/jsr223/\";\n-\n-    @BeforeEach\n-    public void init() {\n-        ScriptEngineManager scriptManager = getService(ScriptEngineManager.class);\n-        ScriptEngineContainer container = scriptManager.createScriptEngine(\"groovy\", \"myGroovyEngine\");\n-        engine = container.getScriptEngine();\n-    }\n-\n-    private void evalScript(String fileName) throws ScriptException, IOException {\n-        URL url = bundleContext.getBundle().getResource(path + fileName);\n-        engine.eval(new InputStreamReader(url.openStream()));\n-    }\n+public class SlurperOSGiTest extends AbstractGroovyScriptingOSGiTest {\n \n     @Test\n     public void jsonSlurper() throws ScriptException, IOException {\n\ndiff --git a/itests/org.openhab.automation.groovyscripting.tests/src/main/resources/OH-INF/automation/jsr223/scope-working.groovy b/itests/org.openhab.automation.groovyscripting.tests/src/main/resources/OH-INF/automation/jsr223/scope-working.groovy\nnew file mode 100644\nindex 0000000000000..508cb06a512b0\n--- /dev/null\n+++ b/itests/org.openhab.automation.groovyscripting.tests/src/main/resources/OH-INF/automation/jsr223/scope-working.groovy\n@@ -0,0 +1,163 @@\n+import static org.hamcrest.CoreMatchers.*\n+import static org.hamcrest.MatcherAssert.assertThat\n+\n+assertThat(actions, instanceOf(Object))\n+assertThat(events, instanceOf(Object))\n+assertThat(ir, instanceOf(Object))\n+assertThat(itemRegistry, instanceOf(Object))\n+assertThat(ir, is(itemRegistry))\n+assertThat(items, instanceOf(Object))\n+assertThat(rules, instanceOf(Object))\n+assertThat(se, instanceOf(Object))\n+assertThat(scriptExtension, instanceOf(Object))\n+assertThat(se, is(scriptExtension))\n+assertThat(things, instanceOf(Object))\n+\n+assertThat(State, instanceOf(Class))\n+assertThat(State.getCanonicalName(), is(\"org.openhab.core.types.State\"))\n+\n+assertThat(Command, instanceOf(Class))\n+assertThat(Command.getCanonicalName(), is(\"org.openhab.core.types.Command\"))\n+\n+assertThat(URLEncoder, instanceOf(Class))\n+assertThat(URLEncoder.getCanonicalName(), is(\"java.net.URLEncoder\"))\n+\n+assertThat(File, instanceOf(Class))\n+assertThat(File.getCanonicalName(), is(\"java.io.File\"))\n+\n+assertThat(Files, instanceOf(Class))\n+assertThat(Files.getCanonicalName(), is(\"java.nio.file.Files\"))\n+\n+assertThat(Path, instanceOf(Class))\n+assertThat(Path.getCanonicalName(), is(\"java.nio.file.Path\"))\n+\n+assertThat(Paths, instanceOf(Class))\n+assertThat(Paths.getCanonicalName(), is(\"java.nio.file.Paths\"))\n+\n+assertThat(IncreaseDecreaseType, instanceOf(Class))\n+assertThat(IncreaseDecreaseType.getCanonicalName(), is(\"org.openhab.core.library.types.IncreaseDecreaseType\"))\n+assertThat(DECREASE, instanceOf(IncreaseDecreaseType))\n+assertThat(DECREASE, is(IncreaseDecreaseType.DECREASE))\n+assertThat(INCREASE, instanceOf(IncreaseDecreaseType))\n+assertThat(INCREASE, is(IncreaseDecreaseType.INCREASE))\n+\n+assertThat(OnOffType, instanceOf(Class))\n+assertThat(OnOffType.getCanonicalName(), is(\"org.openhab.core.library.types.OnOffType\"))\n+assertThat(ON, instanceOf(OnOffType))\n+assertThat(ON, is(OnOffType.ON))\n+assertThat(OFF, instanceOf(OnOffType))\n+assertThat(OFF, is(OnOffType.OFF))\n+\n+assertThat(OpenClosedType, instanceOf(Class))\n+assertThat(OpenClosedType.getCanonicalName(), is(\"org.openhab.core.library.types.OpenClosedType\"))\n+assertThat(CLOSED, instanceOf(OpenClosedType))\n+assertThat(CLOSED, is(OpenClosedType.CLOSED))\n+assertThat(OPEN, instanceOf(OpenClosedType))\n+assertThat(OPEN, is(OpenClosedType.OPEN))\n+\n+assertThat(StopMoveType, instanceOf(Class))\n+assertThat(StopMoveType.getCanonicalName(), is(\"org.openhab.core.library.types.StopMoveType\"))\n+assertThat(MOVE, instanceOf(StopMoveType))\n+assertThat(MOVE, is(StopMoveType.MOVE))\n+assertThat(STOP, instanceOf(StopMoveType))\n+assertThat(STOP, is(StopMoveType.STOP))\n+\n+assertThat(UpDownType, instanceOf(Class))\n+assertThat(UpDownType.getCanonicalName(), is(\"org.openhab.core.library.types.UpDownType\"))\n+assertThat(DOWN, instanceOf(UpDownType))\n+assertThat(DOWN, is(UpDownType.DOWN))\n+assertThat(UP, instanceOf(UpDownType))\n+assertThat(UP, is(UpDownType.UP))\n+\n+assertThat(UnDefType, instanceOf(Class))\n+assertThat(UnDefType.getCanonicalName(), is(\"org.openhab.core.types.UnDefType\"))\n+assertThat(NULL, instanceOf(UnDefType))\n+assertThat(NULL, is(UnDefType.NULL))\n+assertThat(UNDEF, instanceOf(UnDefType))\n+assertThat(UNDEF, is(UnDefType.UNDEF))\n+\n+assertThat(RefreshType, instanceOf(Class))\n+assertThat(RefreshType.getCanonicalName(), is(\"org.openhab.core.types.RefreshType\"))\n+assertThat(REFRESH, instanceOf(RefreshType))\n+assertThat(REFRESH, is(RefreshType.REFRESH))\n+\n+assertThat(NextPreviousType, instanceOf(Class))\n+assertThat(NextPreviousType.getCanonicalName(), is(\"org.openhab.core.library.types.NextPreviousType\"))\n+assertThat(NEXT, instanceOf(NextPreviousType))\n+assertThat(NEXT, is(NextPreviousType.NEXT))\n+assertThat(PREVIOUS, instanceOf(NextPreviousType))\n+assertThat(PREVIOUS, is(NextPreviousType.PREVIOUS))\n+\n+assertThat(PlayPauseType, instanceOf(Class))\n+assertThat(PlayPauseType.getCanonicalName(), is(\"org.openhab.core.library.types.PlayPauseType\"))\n+assertThat(PLAY, instanceOf(PlayPauseType))\n+assertThat(PLAY, is(PlayPauseType.PLAY))\n+assertThat(PAUSE, instanceOf(PlayPauseType))\n+assertThat(PAUSE, is(PlayPauseType.PAUSE))\n+\n+assertThat(RewindFastforwardType, instanceOf(Class))\n+assertThat(RewindFastforwardType.getCanonicalName(), is(\"org.openhab.core.library.types.RewindFastforwardType\"))\n+assertThat(REWIND, instanceOf(RewindFastforwardType))\n+assertThat(REWIND, is(RewindFastforwardType.REWIND))\n+assertThat(FASTFORWARD, instanceOf(RewindFastforwardType))\n+assertThat(FASTFORWARD, is(RewindFastforwardType.FASTFORWARD))\n+\n+assertThat(QuantityType, instanceOf(Class))\n+assertThat(QuantityType.getCanonicalName(), is(\"org.openhab.core.library.types.QuantityType\"))\n+\n+assertThat(StringListType, instanceOf(Class))\n+assertThat(StringListType.getCanonicalName(), is(\"org.openhab.core.library.types.StringListType\"))\n+\n+assertThat(RawType, instanceOf(Class))\n+assertThat(RawType.getCanonicalName(), is(\"org.openhab.core.library.types.RawType\"))\n+\n+assertThat(DateTimeType, instanceOf(Class))\n+assertThat(DateTimeType.getCanonicalName(), is(\"org.openhab.core.library.types.DateTimeType\"))\n+\n+assertThat(DecimalType, instanceOf(Class))\n+assertThat(DecimalType.getCanonicalName(), is(\"org.openhab.core.library.types.DecimalType\"))\n+\n+assertThat(HSBType, instanceOf(Class))\n+assertThat(HSBType.getCanonicalName(), is(\"org.openhab.core.library.types.HSBType\"))\n+\n+assertThat(PercentType, instanceOf(Class))\n+assertThat(PercentType.getCanonicalName(), is(\"org.openhab.core.library.types.PercentType\"))\n+\n+assertThat(PointType, instanceOf(Class))\n+assertThat(PointType.getCanonicalName(), is(\"org.openhab.core.library.types.PointType\"))\n+\n+assertThat(StringType, instanceOf(Class))\n+assertThat(StringType.getCanonicalName(), is(\"org.openhab.core.library.types.StringType\"))\n+\n+assertThat(ImperialUnits, instanceOf(Class))\n+assertThat(ImperialUnits.getCanonicalName(), is(\"org.openhab.core.library.unit.ImperialUnits\"))\n+\n+assertThat(MetricPrefix, instanceOf(Class))\n+assertThat(MetricPrefix.getCanonicalName(), is(\"org.openhab.core.library.unit.MetricPrefix\"))\n+\n+assertThat(SIUnits, instanceOf(Class))\n+assertThat(SIUnits.getCanonicalName(), is(\"org.openhab.core.library.unit.SIUnits\"))\n+\n+assertThat(Units, instanceOf(Class))\n+assertThat(Units.getCanonicalName(), is(\"org.openhab.core.library.unit.Units\"))\n+\n+assertThat(BinaryPrefix, instanceOf(Class))\n+assertThat(BinaryPrefix.getCanonicalName(), is(\"org.openhab.core.library.unit.BinaryPrefix\"))\n+\n+assertThat(ChronoUnit, instanceOf(Class))\n+assertThat(ChronoUnit.getCanonicalName(), is(\"java.time.temporal.ChronoUnit\"))\n+\n+assertThat(DayOfWeek, instanceOf(Class))\n+assertThat(DayOfWeek.getCanonicalName(), is(\"java.time.DayOfWeek\"))\n+\n+assertThat(Duration, instanceOf(Class))\n+assertThat(Duration.getCanonicalName(), is(\"java.time.Duration\"))\n+\n+assertThat(Month, instanceOf(Class))\n+assertThat(Month.getCanonicalName(), is(\"java.time.Month\"))\n+\n+assertThat(ZoneId, instanceOf(Class))\n+assertThat(ZoneId.getCanonicalName(), is(\"java.time.ZoneId\"))\n+\n+assertThat(ZonedDateTime, instanceOf(Class))\n+assertThat(ZonedDateTime.getCanonicalName(), is(\"java.time.ZonedDateTime\"))\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17373",
    "pr_id": 17373,
    "issue_id": 17370,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[AndroidTV] Error message every 10 seconds  Error occurred during handling of command for TV Channels: Cannot deserialize value of type `int` from String\nGetting error message every 10 seconds:\r\n\r\n\r\n```\r\n22:38:08.542 [WARN ] [ol.philipstv.service.TvChannelService] - Error occurred during handling of command for TV Channels: Cannot deserialize value of type `int` from String \"84384_293_1\": not a valid `int` value\r\n at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 12] (through reference chain: org.openhab.binding.androidtv.internal.protocol.philipstv.service.model.channel.AvailableTvChannelsDTO[\"version\"])\r\ncom.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String \"84384_293_1\": not a valid `int` value\r\n at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 12] (through reference chain: org.openhab.binding.androidtv.internal.protocol.philipstv.service.model.channel.AvailableTvChannelsDTO[\"version\"])\r\n        at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67) ~[?:?]\r\n        at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1958) ~[?:?]\r\n        at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1245) ~[?:?]\r\n        at com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(StdDeserializer.java:775) ~[?:?]\r\n        at com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(StdDeserializer.java:753) ~[?:?]\r\n        at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:529) ~[?:?]\r\n        at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:506) ~[?:?]\r\n        at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129) ~[?:?]\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[?:?]\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177) ~[?:?]\r\n        at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[?:?]\r\n        at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[?:?]\r\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3848) ~[?:?]\r\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3816) ~[?:?]\r\n        at org.openhab.binding.androidtv.internal.protocol.philipstv.service.TvChannelService.getAvailableTvChannelListFromTv(TvChannelService.java:109) ~[?:?]\r\n        at org.openhab.binding.androidtv.internal.protocol.philipstv.service.TvChannelService.handleCommand(TvChannelService.java:71) ~[?:?]\r\n        at org.openhab.binding.androidtv.internal.protocol.philipstv.PhilipsTVConnectionManager.refreshTvProperties(PhilipsTVConnectionManager.java:631) ~[?:?]\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) [?:?]\r\n        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305) [?:?]\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]\r\n        at java.lang.Thread.run(Thread.java:840) [?:?]\r\n```\r\n\r\n## Context\r\nPhilips Android TV OLED 4K Ambilight TV    65OLED708/12\r\n\r\n## Your Environment\r\n* Version used: OH4.2.1\r\n",
    "issue_word_count": 401,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/TvChannelService.java",
      "bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/model/channel/AvailableTvChannelsDTO.java",
      "bundles/org.openhab.binding.androidtv/src/test/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/PhilipsTvChannelTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.androidtv/src/test/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/PhilipsTvChannelTest.java"
    ],
    "base_commit": "c1a63ff4c6ad5041ff0180547eb0394cbcecb378",
    "head_commit": "520e31b40f4b2d0a1faebf66aeedebe2ac6b2b50",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17373",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17373",
    "dockerfile": "",
    "pr_merged_at": "2024-09-09T12:48:24.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/TvChannelService.java b/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/TvChannelService.java\nindex e0479e5630e43..f39b3f8242f9e 100644\n--- a/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/TvChannelService.java\n+++ b/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/TvChannelService.java\n@@ -12,11 +12,12 @@\n  */\n package org.openhab.binding.androidtv.internal.protocol.philipstv.service;\n \n-import static org.openhab.binding.androidtv.internal.AndroidTVBindingConstants.*;\n+import static org.openhab.binding.androidtv.internal.AndroidTVBindingConstants.CHANNEL_TV_CHANNEL;\n import static org.openhab.binding.androidtv.internal.protocol.philipstv.ConnectionManager.OBJECT_MAPPER;\n import static org.openhab.binding.androidtv.internal.protocol.philipstv.PhilipsTVBindingConstants.*;\n \n import java.io.IOException;\n+import java.util.Collections;\n import java.util.Map;\n import java.util.concurrent.ConcurrentMap;\n import java.util.function.Function;\n@@ -39,6 +40,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import com.fasterxml.jackson.databind.exc.InvalidFormatException;\n+\n /**\n  * Service for handling commands regarding setting or retrieving the TV channel\n  *\n@@ -105,17 +108,22 @@ private boolean isTvChannelListEmpty() {\n     }\n \n     private Map<String, String> getAvailableTvChannelListFromTv() throws IOException {\n-        AvailableTvChannelsDTO availableTvChannelsDTO = OBJECT_MAPPER.readValue(\n-                connectionManager.doHttpsGet(GET_AVAILABLE_TV_CHANNEL_LIST_PATH), AvailableTvChannelsDTO.class);\n+        try {\n+            AvailableTvChannelsDTO availableTvChannelsDTO = OBJECT_MAPPER.readValue(\n+                    connectionManager.doHttpsGet(GET_AVAILABLE_TV_CHANNEL_LIST_PATH), AvailableTvChannelsDTO.class);\n \n-        ConcurrentMap<String, String> tvChannelsMap = availableTvChannelsDTO.getChannel().stream()\n-                .collect(Collectors.toConcurrentMap(ChannelDTO::getName, ChannelDTO::getCcid, (c1, c2) -> c1));\n+            ConcurrentMap<String, String> tvChannelsMap = availableTvChannelsDTO.getChannel().stream()\n+                    .collect(Collectors.toConcurrentMap(ChannelDTO::getName, ChannelDTO::getCcid, (c1, c2) -> c1));\n \n-        logger.debug(\"TV Channels added: {}\", tvChannelsMap.size());\n-        if (logger.isTraceEnabled()) {\n-            tvChannelsMap.keySet().forEach(app -> logger.trace(\"TV Channel found: {}\", app));\n+            logger.debug(\"TV Channels added: {}\", tvChannelsMap.size());\n+            if (logger.isTraceEnabled()) {\n+                tvChannelsMap.keySet().forEach(app -> logger.trace(\"TV Channel found: {}\", app));\n+            }\n+            return tvChannelsMap;\n+        } catch (InvalidFormatException e) {\n+            logger.debug(\"TV Channels loading failed: {}\", e.getMessage(), e);\n         }\n-        return tvChannelsMap;\n+        return Collections.emptyMap();\n     }\n \n     private String getCurrentTvChannel() throws IOException {\n\ndiff --git a/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/model/channel/AvailableTvChannelsDTO.java b/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/model/channel/AvailableTvChannelsDTO.java\nindex fc10fd820cf76..bb1d7c376f7fa 100644\n--- a/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/model/channel/AvailableTvChannelsDTO.java\n+++ b/bundles/org.openhab.binding.androidtv/src/main/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/model/channel/AvailableTvChannelsDTO.java\n@@ -37,7 +37,7 @@ public class AvailableTvChannelsDTO {\n     private String medium = \"\";\n \n     @JsonProperty(\"version\")\n-    private int version;\n+    private String version;\n \n     @JsonProperty(\"listType\")\n     private String listType = \"\";\n@@ -75,11 +75,11 @@ public String getMedium() {\n         return medium;\n     }\n \n-    public void setVersion(int version) {\n+    public void setVersion(String version) {\n         this.version = version;\n     }\n \n-    public int getVersion() {\n+    public String getVersion() {\n         return version;\n     }\n \n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.androidtv/src/test/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/PhilipsTvChannelTest.java b/bundles/org.openhab.binding.androidtv/src/test/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/PhilipsTvChannelTest.java\nnew file mode 100644\nindex 0000000000000..1a0fde8a12f89\n--- /dev/null\n+++ b/bundles/org.openhab.binding.androidtv/src/test/java/org/openhab/binding/androidtv/internal/protocol/philipstv/service/PhilipsTvChannelTest.java\n@@ -0,0 +1,103 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.androidtv.internal.protocol.philipstv.service;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.*;\n+import static org.openhab.binding.androidtv.internal.AndroidTVBindingConstants.CHANNEL_TV_CHANNEL;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.ArgumentMatchers;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.openhab.binding.androidtv.internal.protocol.philipstv.ConnectionManager;\n+import org.openhab.binding.androidtv.internal.protocol.philipstv.PhilipsTVConnectionManager;\n+import org.openhab.core.library.types.StringType;\n+import org.openhab.core.types.Command;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link PhilipsTvChannelTest} is responsible for testing {@linkTvChannelService}\n+ *\n+ * @author Marcel Verpaalen - Initial contribution\n+ *\n+ */\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+@NonNullByDefault\n+public class PhilipsTvChannelTest {\n+\n+    private final Logger logger = LoggerFactory.getLogger(getClass());\n+    private @Mock @NonNullByDefault({}) PhilipsTVConnectionManager handler;\n+    private @Mock @NonNullByDefault({}) ConnectionManager connectionManager;\n+\n+    static final String NEW_RESPONSE = \"{\\\"version\\\":\\\"84384_293_1\\\",\\\"id\\\":\\\"all\\\",\\\"listType\\\":\\\"MixedSources\\\",\\\"medium\\\":\\\"mixed\\\",\\\"operator\\\":\\\"Ziggo\\\",\\\"installCountry\\\":\\\"Netherlands\\\",\\\"Channel\\\":[{\\\"ccid\\\":142,\\\"preset\\\":\\\"1\\\",\\\"name\\\":\\\"NPO 1\\\",\\\"onid\\\":1536,\\\"tsid\\\":2098,\\\"sid\\\":19401,\\\"serviceType\\\":\\\"audio_video\\\",\\\"type\\\":\\\"DVB_C\\\",\\\"logoVersion\\\":142},{\\\"ccid\\\":143,\\\"preset\\\":\\\"2\\\",\\\"name\\\":\\\"NPO 2\\\",\\\"onid\\\":1536,\\\"tsid\\\":2098,\\\"sid\\\":19402,\\\"serviceType\\\":\\\"audio_video\\\",\\\"type\\\":\\\"DVB_C\\\",\\\"logoVersion\\\":143}]}\";\n+    static final String OLD_RESPONSE = \"{\\\"version\\\":123,\\\"id\\\":\\\"all\\\",\\\"listType\\\":\\\"MixedSources\\\",\\\"medium\\\":\\\"mixed\\\",\\\"operator\\\":\\\"Ziggo\\\",\\\"installCountry\\\":\\\"Netherlands\\\",\\\"Channel\\\":[{\\\"ccid\\\":142,\\\"preset\\\":\\\"1\\\",\\\"name\\\":\\\"NPO 1\\\",\\\"onid\\\":1536,\\\"tsid\\\":2098,\\\"sid\\\":19401,\\\"serviceType\\\":\\\"audio_video\\\",\\\"type\\\":\\\"DVB_C\\\",\\\"logoVersion\\\":142},{\\\"ccid\\\":143,\\\"preset\\\":\\\"2\\\",\\\"name\\\":\\\"NPO 2\\\",\\\"onid\\\":1536,\\\"tsid\\\":2098,\\\"sid\\\":19402,\\\"serviceType\\\":\\\"audio_video\\\",\\\"type\\\":\\\"DVB_C\\\",\\\"logoVersion\\\":143}]}\";\n+    static final String TEST_CHANNEL = \"NPO 2\";\n+\n+    private void testPhilipsTVChannelParsing(String channel, Command command, String ccid) throws IOException {\n+        Map<String, String> availableTvChannels = Collections.emptyMap();\n+\n+        TvChannelService tvChannelService = new TvChannelService(handler, connectionManager);\n+        tvChannelService.handleCommand(channel, command);\n+        ArgumentCaptor<Map<String, String>> captor = ArgumentCaptor.forClass(Map.class);\n+        verify(handler, atLeastOnce()).updateChannelStateDescription(ArgumentMatchers.eq(CHANNEL_TV_CHANNEL),\n+                captor.capture());\n+        availableTvChannels = captor.getValue();\n+        logger.info(\"Channels found: {}\", availableTvChannels);\n+        assertEquals(2, availableTvChannels.size());\n+        assertEquals(TEST_CHANNEL, availableTvChannels.get(TEST_CHANNEL));\n+\n+        ArgumentCaptor<String> captorSwitchChannel = ArgumentCaptor.forClass(String.class);\n+        verify(connectionManager, atLeastOnce()).doHttpsPost(any(), captorSwitchChannel.capture());\n+        String changeChannelJson = captorSwitchChannel.getValue();\n+        logger.info(\"Channel change command: {}\", changeChannelJson);\n+        assertEquals(\"{\\\"channel\\\":{\\\"serviceType\\\":\\\"\\\",\\\"logoVersion\\\":0,\\\"ccid\\\":\\\"\" + ccid\n+                + \"\\\",\\\"name\\\":\\\"\\\",\\\"preset\\\":\\\"\\\",\\\"tsid\\\":0,\\\"type\\\":\\\"\\\",\\\"onid\\\":0,\\\"sid\\\":0},\\\"channelList\\\":{\\\"id\\\":\\\"allter\\\",\\\"version\\\":\\\"30\\\"}}\",\n+                changeChannelJson);\n+    }\n+\n+    @Test\n+    public void testNewerPhilipsTVChannelParsing() {\n+        try {\n+            // test compatibility with newer Philips TV's that provide the version as string\n+            when(connectionManager.doHttpsGet(any())).thenReturn(NEW_RESPONSE);\n+            testPhilipsTVChannelParsing(TEST_CHANNEL, new StringType(TEST_CHANNEL), \"143\");\n+        } catch (IOException e) {\n+            logger.warn(\"Test Failed with\", e);\n+        }\n+    }\n+\n+    @Test\n+    public void testOlderPhilipsTVChannelParsing() {\n+        try {\n+            // test compatibility with older Philips TV's that provide the version as int\n+            when(connectionManager.doHttpsGet(any())).thenReturn(OLD_RESPONSE);\n+            testPhilipsTVChannelParsing(\"NPO 1\", new StringType(\"NPO 1\"), \"142\");\n+        } catch (IOException e) {\n+            logger.warn(\"Test Failed with\", e);\n+        }\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17365",
    "pr_id": 17365,
    "issue_id": 17363,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[emotiva] Source channels are not listing items recevied from device\n## Expected Behavior\r\nAll source channels should list available sources after the initial start of the device.\r\n\r\n## Current Behavior\r\nSometimes source channels are empty, sometimes they are populated.\r\n\r\n## Possible Solution\r\nThe missing population in the source channels seem to be caused by a race condition in the initial design. \r\n\r\n## Steps to Reproduce (for Bugs)\r\nBecause it is a race condition, the reproduction of this is a bit spotty, but in essence you just:\r\n\r\n1. Turn on device via power channel\r\n2. Try to change source.\r\n\r\n## Your Environment\r\n* Version used: OpenHAB 4.2.1\r\n* Operating System and version Debian 12.7\r\n",
    "issue_word_count": 109,
    "test_files_count": 5,
    "non_test_files_count": 11,
    "pr_changed_files": [
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaBindingConstants.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelper.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaProcessorHandler.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaProcessorState.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpReceivingService.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpSendingService.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/InputStateOptionProvider.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequest.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscribeDTO.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequest.java",
      "bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaSubscriptionTags.java",
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelperTest.java",
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaProcessorStateTest.java",
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequestTest.java",
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscriptionTest.java",
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequestTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelperTest.java",
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaProcessorStateTest.java",
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequestTest.java",
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscriptionTest.java",
      "bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequestTest.java"
    ],
    "base_commit": "f4805eda2b3ff1abf557a502bf3ed847c164f931",
    "head_commit": "85fc0bf85c37272b5d3af1c68ae21713973216db",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17365",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17365",
    "dockerfile": "",
    "pr_merged_at": "2024-09-28T13:28:36.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaBindingConstants.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaBindingConstants.java\nindex 33d9fd0596eb3..316e941606aa8 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaBindingConstants.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaBindingConstants.java\n@@ -86,6 +86,9 @@ public class EmotivaBindingConstants {\n     public static final int DEFAULT_TRIM_MAX_DECIBEL = 12;\n     public static final String MAP_SOURCES_MAIN_ZONE = \"sources\";\n     public static final String MAP_SOURCES_ZONE_2 = \"zone2-sources\";\n+    public static final String MAP_TUNER_CHANNELS = \"tuner-channel\";\n+    public static final String MAP_TUNER_BANDS = \"tuner-bands\";\n+    public static final String MAP_MODES = \"modes\";\n \n     /** Miscellaneous Constants **/\n     public static final int PROTOCOL_V3_LEVEL_MULTIPLIER = 2;\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelper.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelper.java\nindex ec79969e85310..ab3e870c11444 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelper.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelper.java\n@@ -14,8 +14,6 @@\n \n import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.*;\n \n-import java.util.Map;\n-\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands;\n import org.openhab.binding.emotiva.internal.protocol.EmotivaControlRequest;\n@@ -69,11 +67,11 @@ private static int clamp(int volumeInPercentage, int min, int max) {\n         return Math.min(Math.max(Double.valueOf(volumeInPercentage).intValue(), min), max);\n     }\n \n-    public static EmotivaControlRequest channelToControlRequest(String id,\n-            Map<String, Map<EmotivaControlCommands, String>> commandMaps, EmotivaProtocolVersion protocolVersion) {\n+    public static EmotivaControlRequest channelToControlRequest(String id, EmotivaProcessorState state,\n+            EmotivaProtocolVersion protocolVersion) {\n         EmotivaSubscriptionTags channelSubscription = EmotivaSubscriptionTags.fromChannelUID(id);\n         EmotivaControlCommands channelFromCommand = OHChannelToEmotivaCommand.fromChannelUID(id);\n-        return new EmotivaControlRequest(id, channelSubscription, channelFromCommand, commandMaps, protocolVersion);\n+        return new EmotivaControlRequest(id, channelSubscription, channelFromCommand, state, protocolVersion);\n     }\n \n     public static String getMenuPanelRowLabel(int row) {\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaProcessorHandler.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaProcessorHandler.java\nindex 9b1d07becf04d..191a96f135000 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaProcessorHandler.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaProcessorHandler.java\n@@ -20,17 +20,12 @@\n import static org.openhab.binding.emotiva.internal.EmotivaCommandHelper.updateProgress;\n import static org.openhab.binding.emotiva.internal.EmotivaCommandHelper.volumeDecibelToPercentage;\n import static org.openhab.binding.emotiva.internal.EmotivaCommandHelper.volumePercentageToDecibel;\n-import static org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands.band_am;\n-import static org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands.band_fm;\n-import static org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands.channel_1;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands.none;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands.power_on;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaDataType.STRING;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaPropertyStatus.NOT_VALID;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaProtocolVersion.protocolFromConfig;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags.noSubscriptionToChannel;\n-import static org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags.tuner_band;\n-import static org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags.tuner_channel;\n \n import java.io.IOException;\n import java.io.InterruptedIOException;\n@@ -40,13 +35,10 @@\n import java.time.Instant;\n import java.time.temporal.ChronoUnit;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.EnumMap;\n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n+import java.util.Optional;\n import java.util.Set;\n-import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.TimeUnit;\n \n@@ -74,6 +66,7 @@\n import org.openhab.binding.emotiva.internal.protocol.EmotivaUdpResponse;\n import org.openhab.binding.emotiva.internal.protocol.EmotivaXmlUtils;\n import org.openhab.core.common.NamedThreadFactory;\n+import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.library.types.PercentType;\n import org.openhab.core.library.types.QuantityType;\n@@ -102,21 +95,17 @@ public class EmotivaProcessorHandler extends BaseThingHandler {\n \n     private final Logger logger = LoggerFactory.getLogger(EmotivaProcessorHandler.class);\n \n-    private final Map<String, State> stateMap = Collections.synchronizedMap(new HashMap<>());\n-\n     private final EmotivaConfiguration config;\n \n     /**\n      * Emotiva devices have trouble with too many subscriptions in same request, so subscriptions are dividing into\n-     * those general group channels, and the rest.\n+     * groups.\n      */\n-    private final EmotivaSubscriptionTags[] generalSubscription = EmotivaSubscriptionTags.generalChannels();\n-    private final EmotivaSubscriptionTags[] nonGeneralSubscriptions = EmotivaSubscriptionTags.nonGeneralChannels();\n+    private final List<EmotivaSubscriptionTags> generalSubscription = EmotivaSubscriptionTags.channels(\"general\");\n+    private final List<EmotivaSubscriptionTags> mainZoneSubscriptions = EmotivaSubscriptionTags.channels(\"main-zone\");\n+    private final List<EmotivaSubscriptionTags> zone2Subscriptions = EmotivaSubscriptionTags.channels(\"zone2\");\n \n-    private final EnumMap<EmotivaControlCommands, String> sourcesMainZone;\n-    private final EnumMap<EmotivaControlCommands, String> sourcesZone2;\n-    private final EnumMap<EmotivaSubscriptionTags, String> modes;\n-    private final Map<String, Map<EmotivaControlCommands, String>> commandMaps = new ConcurrentHashMap<>();\n+    private final EmotivaProcessorState state = new EmotivaProcessorState();\n     private final EmotivaTranslationProvider i18nProvider;\n \n     private @Nullable ScheduledFuture<?> pollingJob;\n@@ -141,41 +130,6 @@ public EmotivaProcessorHandler(Thing thing, EmotivaTranslationProvider i18nProvi\n         this.i18nProvider = i18nProvider;\n         this.config = getConfigAs(EmotivaConfiguration.class);\n         this.retryConnectInMinutes = config.retryConnectInMinutes;\n-\n-        sourcesMainZone = new EnumMap<>(EmotivaControlCommands.class);\n-        commandMaps.put(MAP_SOURCES_MAIN_ZONE, sourcesMainZone);\n-\n-        sourcesZone2 = new EnumMap<>(EmotivaControlCommands.class);\n-        commandMaps.put(MAP_SOURCES_ZONE_2, sourcesZone2);\n-\n-        EnumMap<EmotivaControlCommands, String> channels = new EnumMap<>(\n-                Map.ofEntries(Map.entry(channel_1, channel_1.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_2, EmotivaControlCommands.channel_2.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_3, EmotivaControlCommands.channel_3.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_4, EmotivaControlCommands.channel_4.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_5, EmotivaControlCommands.channel_5.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_6, EmotivaControlCommands.channel_6.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_7, EmotivaControlCommands.channel_7.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_8, EmotivaControlCommands.channel_8.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_9, EmotivaControlCommands.channel_9.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_10, EmotivaControlCommands.channel_10.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_11, EmotivaControlCommands.channel_11.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_12, EmotivaControlCommands.channel_12.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_13, EmotivaControlCommands.channel_13.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_14, EmotivaControlCommands.channel_14.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_15, EmotivaControlCommands.channel_15.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_16, EmotivaControlCommands.channel_16.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_17, EmotivaControlCommands.channel_17.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_18, EmotivaControlCommands.channel_18.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_19, EmotivaControlCommands.channel_19.getLabel()),\n-                        Map.entry(EmotivaControlCommands.channel_20, EmotivaControlCommands.channel_20.getLabel())));\n-        commandMaps.put(tuner_channel.getEmotivaName(), channels);\n-\n-        EnumMap<EmotivaControlCommands, String> bands = new EnumMap<>(\n-                Map.of(band_am, band_am.getLabel(), band_fm, band_fm.getLabel()));\n-        commandMaps.put(tuner_band.getEmotivaName(), bands);\n-\n-        modes = new EnumMap<>(EmotivaSubscriptionTags.class);\n     }\n \n     @Override\n@@ -222,7 +176,8 @@ private synchronized void connect() {\n                 try {\n                     logger.debug(\"Connection attempt '{}'\", attempt);\n                     sendConnector.sendSubscription(generalSubscription, config);\n-                    sendConnector.sendSubscription(nonGeneralSubscriptions, config);\n+                    sendConnector.sendSubscription(mainZoneSubscriptions, config);\n+                    sendConnector.sendSubscription(zone2Subscriptions, config);\n                 } catch (IOException e) {\n                     // network or socket failure, also wait 2 sec and try again\n                 }\n@@ -264,44 +219,49 @@ private void scheduleConnectRetry(long waitMinutes) {\n     }\n \n     /**\n-     * Starts a polling job for connection to th device, adds the\n+     * Starts a polling job for connection to the device, adds the\n      * {@link EmotivaBindingConstants#DEFAULT_KEEP_ALIVE_IN_MILLISECONDS} as a time buffer for checking, to avoid\n      * flapping state or minor network issues.\n      */\n     private void startPollingKeepAlive() {\n         final ScheduledFuture<?> localRefreshJob = this.pollingJob;\n         if (localRefreshJob == null || localRefreshJob.isCancelled()) {\n-            logger.debug(\"Start polling\");\n-\n-            int delay = stateMap.get(EmotivaSubscriptionTags.keepAlive.name()) != null\n-                    && stateMap.get(EmotivaSubscriptionTags.keepAlive.name()) instanceof Number keepAlive\n-                            ? keepAlive.intValue()\n-                            : config.keepAlive;\n-            pollingJob = scheduler.scheduleWithFixedDelay(this::checkKeepAliveTimestamp,\n-                    delay + DEFAULT_KEEP_ALIVE_IN_MILLISECONDS, delay + DEFAULT_KEEP_ALIVE_IN_MILLISECONDS,\n+\n+            Number keepAliveConfig = state.getChannel(EmotivaSubscriptionTags.keepAlive)\n+                    .filter(channel -> channel instanceof Number).map(keepAlive -> (Number) keepAlive)\n+                    .orElse(new DecimalType(config.keepAlive));\n+\n+            // noinspection ConstantConditions\n+            long delay = keepAliveConfig == null\n+                    ? DEFAULT_KEEP_ALIVE_IN_MILLISECONDS + DEFAULT_KEEP_ALIVE_IN_MILLISECONDS\n+                    : keepAliveConfig.longValue() + DEFAULT_KEEP_ALIVE_IN_MILLISECONDS;\n+            pollingJob = scheduler.scheduleWithFixedDelay(this::checkKeepAliveTimestamp, delay, delay,\n                     TimeUnit.MILLISECONDS);\n+            logger.debug(\"Started scheduled job to check connection to device, with an {}ms internal\", delay);\n         }\n     }\n \n     private void checkKeepAliveTimestamp() {\n         if (ThingStatus.ONLINE.equals(getThing().getStatusInfo().getStatus())) {\n-            State state = stateMap.get(LAST_SEEN_STATE_NAME);\n-            if (state instanceof Number value) {\n-                Instant lastKeepAliveMessageTimestamp = Instant.ofEpochSecond(value.longValue());\n-                Instant deviceGoneGracePeriod = Instant.now().minus(config.keepAlive, ChronoUnit.MILLIS)\n-                        .minus(DEFAULT_KEEP_ALIVE_CONSIDERED_LOST_IN_MILLISECONDS, ChronoUnit.MILLIS);\n-                if (lastKeepAliveMessageTimestamp.isBefore(deviceGoneGracePeriod)) {\n-                    logger.debug(\n-                            \"Last KeepAlive message received '{}', over grace-period by '{}', consider '{}' gone, setting OFFLINE and disposing\",\n-                            lastKeepAliveMessageTimestamp,\n-                            Duration.between(lastKeepAliveMessageTimestamp, deviceGoneGracePeriod),\n-                            thing.getThingTypeUID());\n-                    updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR,\n-                            \"@text/message.processor.connection.error.keep-alive\");\n-                    // Connection lost, avoid sending unsubscription messages\n-                    udpSenderActive = false;\n-                    disconnect();\n-                    scheduleConnectRetry(retryConnectInMinutes);\n+            Optional<State> lastSeenState = state.getChannel(LAST_SEEN_STATE_NAME);\n+            if (lastSeenState.isPresent()) {\n+                if (lastSeenState.get() instanceof Number value) {\n+                    Instant lastKeepAliveMessageTimestamp = Instant.ofEpochSecond(value.longValue());\n+                    Instant deviceGoneGracePeriod = Instant.now().minus(config.keepAlive, ChronoUnit.MILLIS)\n+                            .minus(DEFAULT_KEEP_ALIVE_CONSIDERED_LOST_IN_MILLISECONDS, ChronoUnit.MILLIS);\n+                    if (lastKeepAliveMessageTimestamp.isBefore(deviceGoneGracePeriod)) {\n+                        logger.debug(\n+                                \"Last KeepAlive message received '{}', over grace-period by '{}', consider '{}' gone, setting OFFLINE and disposing\",\n+                                lastKeepAliveMessageTimestamp,\n+                                Duration.between(lastKeepAliveMessageTimestamp, deviceGoneGracePeriod),\n+                                thing.getThingTypeUID());\n+                        updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR,\n+                                \"@text/message.processor.connection.error.keep-alive\");\n+                        // Connection lost, avoid sending unsubscription messages\n+                        udpSenderActive = false;\n+                        disconnect();\n+                        scheduleConnectRetry(retryConnectInMinutes);\n+                    }\n                 }\n             }\n         } else if (ThingStatus.OFFLINE.equals(getThing().getStatusInfo().getStatus())) {\n@@ -325,9 +285,10 @@ private void handleStatusUpdate(EmotivaUdpResponse emotivaUdpResponse) {\n             return;\n         }\n \n-        if (object instanceof EmotivaAckDTO answerDto) {\n+        if (object instanceof EmotivaAckDTO) {\n             // Currently not supported to revert a failed command update, just used for logging for now.\n-            logger.trace(\"Processing received '{}' with '{}'\", EmotivaAckDTO.class.getSimpleName(), answerDto);\n+            logger.trace(\"Processing received '{}' with '{}'\", EmotivaAckDTO.class.getSimpleName(),\n+                    emotivaUdpResponse.answer());\n         } else if (object instanceof EmotivaBarNotifyWrapper answerDto) {\n             logger.trace(\"Processing received '{}' with '{}'\", EmotivaBarNotifyWrapper.class.getSimpleName(),\n                     emotivaUdpResponse.answer());\n@@ -364,13 +325,15 @@ private void handleStatusUpdate(EmotivaUdpResponse emotivaUdpResponse) {\n             logger.trace(\"Processing received '{}' with '{}'\", EmotivaSubscriptionResponse.class.getSimpleName(),\n                     emotivaUdpResponse.answer());\n             // Populates static input sources, except input\n-            sourcesMainZone.putAll(EmotivaControlCommands.getCommandsFromType(EmotivaCommandType.SOURCE_MAIN_ZONE));\n-            sourcesMainZone.remove(EmotivaControlCommands.input);\n-            commandMaps.put(MAP_SOURCES_MAIN_ZONE, sourcesMainZone);\n+            EnumMap<EmotivaControlCommands, String> sourceMainZone = EmotivaControlCommands\n+                    .getCommandsFromType(EmotivaCommandType.SOURCE_MAIN_ZONE);\n+            sourceMainZone.remove(EmotivaControlCommands.input);\n+            state.setSourcesMainZone(sourceMainZone);\n \n-            sourcesZone2.putAll(EmotivaControlCommands.getCommandsFromType(EmotivaCommandType.SOURCE_ZONE2));\n-            sourcesZone2.remove(EmotivaControlCommands.zone2_input);\n-            commandMaps.put(MAP_SOURCES_ZONE_2, sourcesZone2);\n+            EnumMap<EmotivaControlCommands, String> sourcesZone2 = EmotivaControlCommands\n+                    .getCommandsFromType(EmotivaCommandType.SOURCE_ZONE2);\n+            sourcesZone2.remove(EmotivaControlCommands.input);\n+            state.setSourcesZone2(sourcesZone2);\n \n             if (answerDto.getProperties() == null) {\n                 for (EmotivaNotifyDTO dto : xmlUtils.unmarshallToNotification(answerDto.getTags())) {\n@@ -528,11 +491,9 @@ private void handleChannelUpdate(String emotivaSubscriptionName, String value, S\n             // Add/Update user assigned name for inputs\n             if (subscriptionTag.getChannel().startsWith(CHANNEL_INPUT1.substring(0, CHANNEL_INPUT1.indexOf(\"-\") + 1))\n                     && \"true\".equals(visible)) {\n-                logger.debug(\"Adding '{}' to dynamic source input list\", trimmedValue);\n-                sourcesMainZone.put(EmotivaControlCommands.matchToInput(subscriptionTag.name()), trimmedValue);\n-                commandMaps.put(MAP_SOURCES_MAIN_ZONE, sourcesMainZone);\n-\n-                logger.debug(\"sources list is now {}\", sourcesMainZone.size());\n+                state.updateSourcesMainZone(EmotivaControlCommands.matchToInput(subscriptionTag.name()), trimmedValue);\n+                logger.debug(\"Adding '{}' to dynamic source input list, map is now {}\", trimmedValue,\n+                        state.getSourcesMainZone());\n             }\n \n             // Add/Update audio modes\n@@ -541,7 +502,7 @@ private void handleChannelUpdate(String emotivaSubscriptionName, String value, S\n                         + subscriptionTag.getChannel().substring(subscriptionTag.getChannel().indexOf(\"_\") + 1));\n                 logger.debug(\"Adding '{} ({})' from channel '{}' to dynamic mode list\", trimmedValue, modeName,\n                         subscriptionTag.getChannel());\n-                modes.put(EmotivaSubscriptionTags.fromChannelUID(subscriptionTag.getChannel()), trimmedValue);\n+                state.updateModes(EmotivaSubscriptionTags.fromChannelUID(subscriptionTag.getChannel()), trimmedValue);\n             }\n \n             findChannelDatatypeAndUpdateChannel(subscriptionTag.getChannel(), trimmedValue,\n@@ -630,10 +591,10 @@ private void findChannelDatatypeAndUpdateChannel(String channelName, String valu\n         }\n     }\n \n-    private void updateChannelState(String channelID, State state) {\n-        stateMap.put(channelID, state);\n-        logger.trace(\"Updating channel '{}' with '{}'\", channelID, state);\n-        updateState(channelID, state);\n+    private void updateChannelState(String channelID, State channelState) {\n+        state.updateChannel(channelID, channelState);\n+        logger.trace(\"Updating channel '{}' with '{}'\", channelID, channelState);\n+        updateState(channelID, channelState);\n     }\n \n     private void updateVolumeChannels(String value, String muteChannel, String volumeChannel, String volumeDbChannel) {\n@@ -651,10 +612,10 @@ public void handleCommand(ChannelUID channelUID, Command ohCommand) {\n         EmotivaUdpSendingService localSendingService = sendingService;\n \n         if (localSendingService != null) {\n-            EmotivaControlRequest emotivaRequest = channelToControlRequest(channelUID.getId(), commandMaps,\n+            EmotivaControlRequest emotivaRequest = channelToControlRequest(channelUID.getId(), state,\n                     protocolFromConfig(config.protocolVersion));\n             if (ohCommand instanceof RefreshType) {\n-                stateMap.remove(channelUID.getId());\n+                state.removeChannel(channelUID.getId());\n \n                 if (emotivaRequest.getDefaultCommand().equals(none)) {\n                     logger.debug(\"Found controlCommand 'none' for request '{}' from channel '{}' with RefreshType\",\n@@ -665,26 +626,29 @@ public void handleCommand(ChannelUID channelUID, Command ohCommand) {\n                 }\n             } else {\n                 try {\n-                    EmotivaControlDTO dto = emotivaRequest.createDTO(ohCommand, stateMap.get(channelUID.getId()));\n-                    localSendingService.send(dto);\n-\n-                    if (emotivaRequest.getName().equals(EmotivaControlCommands.volume.name())) {\n-                        if (ohCommand instanceof PercentType value) {\n-                            updateChannelState(CHANNEL_MAIN_VOLUME_DB,\n-                                    QuantityType.valueOf(volumePercentageToDecibel(value.intValue()), Units.DECIBEL));\n-                        } else if (ohCommand instanceof QuantityType<?> value) {\n-                            updateChannelState(CHANNEL_MAIN_VOLUME, volumeDecibelToPercentage(value.toString()));\n-                        }\n-                    } else if (emotivaRequest.getName().equals(EmotivaControlCommands.zone2_volume.name())) {\n-                        if (ohCommand instanceof PercentType value) {\n-                            updateChannelState(CHANNEL_ZONE2_VOLUME_DB,\n-                                    QuantityType.valueOf(volumePercentageToDecibel(value.intValue()), Units.DECIBEL));\n-                        } else if (ohCommand instanceof QuantityType<?> value) {\n-                            updateChannelState(CHANNEL_ZONE2_VOLUME, volumeDecibelToPercentage(value.toString()));\n-                        }\n-                    } else if (ohCommand instanceof OnOffType value) {\n-                        if (value.equals(OnOffType.ON) && emotivaRequest.getOnCommand().equals(power_on)) {\n-                            localSendingService.sendUpdate(EmotivaSubscriptionTags.speakerChannels(), config);\n+                    Optional<State> channel = state.getChannel(channelUID.getId());\n+                    if (channel.isPresent()) {\n+                        EmotivaControlDTO dto = emotivaRequest.createDTO(ohCommand, channel.get());\n+                        localSendingService.send(dto);\n+\n+                        if (emotivaRequest.getName().equals(EmotivaControlCommands.volume.name())) {\n+                            if (ohCommand instanceof PercentType value) {\n+                                updateChannelState(CHANNEL_MAIN_VOLUME_DB, QuantityType\n+                                        .valueOf(volumePercentageToDecibel(value.intValue()), Units.DECIBEL));\n+                            } else if (ohCommand instanceof QuantityType<?> value) {\n+                                updateChannelState(CHANNEL_MAIN_VOLUME, volumeDecibelToPercentage(value.toString()));\n+                            }\n+                        } else if (emotivaRequest.getName().equals(EmotivaControlCommands.zone2_volume.name())) {\n+                            if (ohCommand instanceof PercentType value) {\n+                                updateChannelState(CHANNEL_ZONE2_VOLUME_DB, QuantityType\n+                                        .valueOf(volumePercentageToDecibel(value.intValue()), Units.DECIBEL));\n+                            } else if (ohCommand instanceof QuantityType<?> value) {\n+                                updateChannelState(CHANNEL_ZONE2_VOLUME, volumeDecibelToPercentage(value.toString()));\n+                            }\n+                        } else if (ohCommand instanceof OnOffType value) {\n+                            if (value.equals(OnOffType.ON) && emotivaRequest.getOnCommand().equals(power_on)) {\n+                                localSendingService.sendUpdate(EmotivaSubscriptionTags.speakerChannels(), config);\n+                            }\n                         }\n                     }\n                 } catch (InterruptedIOException e) {\n@@ -714,7 +678,8 @@ private synchronized void disconnect() {\n                 try {\n                     // Unsubscribe before disconnect\n                     localSendingService.sendUnsubscribe(generalSubscription);\n-                    localSendingService.sendUnsubscribe(nonGeneralSubscriptions);\n+                    localSendingService.sendUnsubscribe(mainZoneSubscriptions);\n+                    localSendingService.sendUnsubscribe(zone2Subscriptions);\n                 } catch (IOException e) {\n                     logger.debug(\"Failed to unsubscribe for '{}'\", config.ipAddress, e);\n                 }\n@@ -772,14 +737,14 @@ public Collection<Class<? extends ThingHandlerService>> getServices() {\n     }\n \n     public EnumMap<EmotivaControlCommands, String> getSourcesMainZone() {\n-        return sourcesMainZone;\n+        return state.getSourcesMainZone();\n     }\n \n     public EnumMap<EmotivaControlCommands, String> getSourcesZone2() {\n-        return sourcesZone2;\n+        return state.getSourcesZone2();\n     }\n \n     public EnumMap<EmotivaSubscriptionTags, String> getModes() {\n-        return modes;\n+        return state.getModes();\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaProcessorState.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaProcessorState.java\nnew file mode 100644\nindex 0000000000000..6d9f48aee81a4\n--- /dev/null\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaProcessorState.java\n@@ -0,0 +1,149 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.emotiva.internal;\n+\n+import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.MAP_SOURCES_MAIN_ZONE;\n+import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.MAP_SOURCES_ZONE_2;\n+import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.MAP_TUNER_BANDS;\n+import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.MAP_TUNER_CHANNELS;\n+import static org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands.band_am;\n+import static org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands.band_fm;\n+import static org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands.channel_1;\n+\n+import java.util.Collections;\n+import java.util.EnumMap;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands;\n+import org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags;\n+import org.openhab.core.types.State;\n+\n+/**\n+ * Holds state for Emotiva Processor.\n+ *\n+ * @author Espen Fossen - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EmotivaProcessorState {\n+\n+    private final Map<String, State> channelStateMap;\n+\n+    private EnumMap<EmotivaControlCommands, String> sourcesMainZone;\n+    private EnumMap<EmotivaControlCommands, String> sourcesZone2;\n+    private final EnumMap<EmotivaSubscriptionTags, String> modes;\n+\n+    private EnumMap<EmotivaControlCommands, String> tunerChannels = new EnumMap<>(\n+            Map.ofEntries(Map.entry(channel_1, channel_1.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_2, EmotivaControlCommands.channel_2.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_3, EmotivaControlCommands.channel_3.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_4, EmotivaControlCommands.channel_4.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_5, EmotivaControlCommands.channel_5.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_6, EmotivaControlCommands.channel_6.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_7, EmotivaControlCommands.channel_7.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_8, EmotivaControlCommands.channel_8.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_9, EmotivaControlCommands.channel_9.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_10, EmotivaControlCommands.channel_10.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_11, EmotivaControlCommands.channel_11.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_12, EmotivaControlCommands.channel_12.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_13, EmotivaControlCommands.channel_13.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_14, EmotivaControlCommands.channel_14.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_15, EmotivaControlCommands.channel_15.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_16, EmotivaControlCommands.channel_16.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_17, EmotivaControlCommands.channel_17.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_18, EmotivaControlCommands.channel_18.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_19, EmotivaControlCommands.channel_19.getLabel()),\n+                    Map.entry(EmotivaControlCommands.channel_20, EmotivaControlCommands.channel_20.getLabel())));\n+\n+    private EnumMap<EmotivaControlCommands, String> tunerBands = new EnumMap<>(\n+            Map.of(band_am, band_am.getLabel(), band_fm, band_fm.getLabel()));\n+\n+    public EmotivaProcessorState() {\n+        channelStateMap = Collections.synchronizedMap(new HashMap<>());\n+        sourcesMainZone = new EnumMap<>(EmotivaControlCommands.class);\n+        sourcesZone2 = new EnumMap<>(EmotivaControlCommands.class);\n+        modes = new EnumMap<>(EmotivaSubscriptionTags.class);\n+    }\n+\n+    public Optional<State> getChannel(String channelName) {\n+        if (channelStateMap.containsKey(channelName)) {\n+            return Optional.ofNullable(channelStateMap.get(channelName));\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    public Optional<State> getChannel(EmotivaSubscriptionTags channelTagName) {\n+        if (channelStateMap.containsKey(channelTagName.name())) {\n+            return Optional.ofNullable(channelStateMap.get(channelTagName.name()));\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    public Map<EmotivaControlCommands, String> getCommandMap(String mapName) {\n+        return switch (mapName) {\n+            case MAP_SOURCES_MAIN_ZONE -> sourcesMainZone;\n+            case MAP_SOURCES_ZONE_2 -> sourcesZone2;\n+            case MAP_TUNER_CHANNELS -> tunerChannels;\n+            case MAP_TUNER_BANDS -> tunerBands;\n+            default -> new EnumMap<>(EmotivaControlCommands.class);\n+        };\n+    }\n+\n+    public EnumMap<EmotivaControlCommands, String> getSourcesMainZone() {\n+        return sourcesMainZone;\n+    }\n+\n+    public EnumMap<EmotivaControlCommands, String> getSourcesZone2() {\n+        return sourcesZone2;\n+    }\n+\n+    public EnumMap<EmotivaSubscriptionTags, String> getModes() {\n+        return modes;\n+    }\n+\n+    public void setChannels(EnumMap<EmotivaControlCommands, String> map) {\n+        tunerChannels = map;\n+    }\n+\n+    public void setSourcesMainZone(EnumMap<EmotivaControlCommands, String> map) {\n+        sourcesMainZone = map;\n+    }\n+\n+    public void setSourcesZone2(EnumMap<EmotivaControlCommands, String> map) {\n+        sourcesZone2 = map;\n+    }\n+\n+    public void setTunerBands(EnumMap<EmotivaControlCommands, String> map) {\n+        tunerBands = map;\n+    }\n+\n+    public void updateChannel(String channel, State state) {\n+        channelStateMap.put(channel, state);\n+    }\n+\n+    public void updateSourcesMainZone(EmotivaControlCommands command, String value) {\n+        sourcesMainZone.put(command, value);\n+    }\n+\n+    public void updateModes(EmotivaSubscriptionTags tag, String value) {\n+        modes.put(tag, value);\n+    }\n+\n+    public void removeChannel(String channel) {\n+        channelStateMap.remove(channel);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpReceivingService.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpReceivingService.java\nindex 954af61a2f38e..adec7e6db88b0 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpReceivingService.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpReceivingService.java\n@@ -156,9 +156,7 @@ private void listenUnhandledInterruption() throws InterruptedException {\n                 localReceivingSocket.receive(answer); // receive packet (blocking call)\n                 listenerNotifyActive = false;\n \n-                final byte[] receivedData = Arrays.copyOfRange(answer.getData(), 0, answer.getLength() - 1);\n-\n-                if (receivedData.length == 0) {\n+                if (Arrays.copyOfRange(answer.getData(), 0, answer.getLength() - 1).length == 0) {\n                     if (isConnected()) {\n                         logger.debug(\"Nothing received, this may happen during shutdown or some unknown error\");\n                     }\n@@ -166,7 +164,7 @@ private void listenUnhandledInterruption() throws InterruptedException {\n                 }\n                 receiveNotifyFailures = 0; // message successfully received, unset failure counter\n \n-                handleReceivedData(answer, receivedData, localListener);\n+                handleReceivedData(answer, localListener);\n             } catch (Exception e) {\n                 listenerNotifyActive = false;\n \n@@ -190,12 +188,11 @@ private void listenUnhandledInterruption() throws InterruptedException {\n         }\n     }\n \n-    private void handleReceivedData(DatagramPacket answer, byte[] receivedData,\n-            Consumer<EmotivaUdpResponse> localListener) {\n+    private void handleReceivedData(DatagramPacket answer, Consumer<EmotivaUdpResponse> localListener) {\n         // log & notify listener in new thread (so that listener loop continues immediately)\n         executorService.execute(() -> {\n             if (answer.getAddress() != null && answer.getLength() > 0) {\n-                logger.trace(\"Received data on port '{}': {}\", answer.getPort(), receivedData);\n+                logger.trace(\"Received data on port '{}'\", answer.getPort());\n                 EmotivaUdpResponse emotivaUdpResponse = new EmotivaUdpResponse(\n                         new String(answer.getData(), 0, answer.getLength()), answer.getAddress().getHostAddress());\n                 localListener.accept(emotivaUdpResponse);\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpSendingService.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpSendingService.java\nindex 5b91a6896f200..216d503580370 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpSendingService.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/EmotivaUdpSendingService.java\n@@ -21,6 +21,7 @@\n import java.net.SocketException;\n import java.nio.charset.Charset;\n import java.util.Arrays;\n+import java.util.List;\n import java.util.Objects;\n import java.util.concurrent.ExecutorService;\n import java.util.function.Consumer;\n@@ -122,12 +123,11 @@ public void connect(Consumer<EmotivaUdpResponse> listener, boolean logNotThrowEx\n         }\n     }\n \n-    private void handleReceivedData(DatagramPacket answer, byte[] receivedData,\n-            Consumer<EmotivaUdpResponse> localListener) {\n+    private void handleReceivedData(DatagramPacket answer, Consumer<EmotivaUdpResponse> localListener) {\n         // log & notify listener in new thread (so that listener loop continues immediately)\n         executorService.execute(() -> {\n             if (answer.getAddress() != null && answer.getLength() > 0) {\n-                logger.trace(\"Received data on port '{}': {}\", answer.getPort(), receivedData);\n+                logger.trace(\"Received data on port '{}'\", answer.getPort());\n                 EmotivaUdpResponse emotivaUdpResponse = new EmotivaUdpResponse(\n                         new String(answer.getData(), 0, answer.getLength()), answer.getAddress().getHostAddress());\n                 localListener.accept(emotivaUdpResponse);\n@@ -158,7 +158,7 @@ public void send(EmotivaControlDTO dto) throws IOException {\n         send(emotivaXmlUtils.marshallJAXBElementObjects(dto));\n     }\n \n-    public void sendSubscription(EmotivaSubscriptionTags[] tags, EmotivaConfiguration config) throws IOException {\n+    public void sendSubscription(List<EmotivaSubscriptionTags> tags, EmotivaConfiguration config) throws IOException {\n         send(emotivaXmlUtils.marshallJAXBElementObjects(new EmotivaSubscriptionRequest(tags, config.protocolVersion)));\n     }\n \n@@ -171,7 +171,7 @@ public void sendUpdate(EmotivaSubscriptionTags[] tags, EmotivaConfiguration conf\n         send(emotivaXmlUtils.marshallJAXBElementObjects(new EmotivaUpdateRequest(tags, config.protocolVersion)));\n     }\n \n-    public void sendUnsubscribe(EmotivaSubscriptionTags[] defaultCommand) throws IOException {\n+    public void sendUnsubscribe(List<EmotivaSubscriptionTags> defaultCommand) throws IOException {\n         send(emotivaXmlUtils.marshallJAXBElementObjects(new EmotivaUnsubscribeDTO(defaultCommand)));\n     }\n \n@@ -196,14 +196,13 @@ public void send(String msg) throws IOException {\n                 logger.debug(\"Sending successful\");\n \n                 localDatagramSocket.receive(answer);\n-                final byte[] receivedData = Arrays.copyOfRange(answer.getData(), 0, answer.getLength() - 1);\n \n-                if (receivedData.length == 0) {\n+                if (Arrays.copyOfRange(answer.getData(), 0, answer.getLength() - 1).length == 0) {\n                     logger.debug(\"Nothing received, this may happen during shutdown or some unknown error\");\n                 }\n \n                 if (localListener != null) {\n-                    handleReceivedData(answer, receivedData, localListener);\n+                    handleReceivedData(answer, localListener);\n                 }\n             } else {\n                 throw new SocketException(\"Datagram Socket closed or not initialized\");\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/InputStateOptionProvider.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/InputStateOptionProvider.java\nindex c20b2c6f5814e..dce836a5c5853 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/InputStateOptionProvider.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/InputStateOptionProvider.java\n@@ -65,7 +65,7 @@ public void setThingHandler(ThingHandler handler) {\n     public @Nullable StateDescription getStateDescription(Channel channel, @Nullable StateDescription original,\n             @Nullable Locale locale) {\n         ChannelTypeUID typeUID = channel.getChannelTypeUID();\n-        if (typeUID == null || !BINDING_ID.equals(typeUID.getBindingId()) || original == null) {\n+        if (typeUID == null || !BINDING_ID.equals(typeUID.getBindingId())) {\n             return null;\n         }\n \n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequest.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequest.java\nindex faff31332029f..5f1480bae7a19 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequest.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequest.java\n@@ -14,13 +14,12 @@\n \n import static org.openhab.binding.emotiva.internal.protocol.EmotivaProtocolVersion.PROTOCOL_V2;\n \n-import java.util.ArrayList;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlRootElement;\n \n-import org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands;\n import org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags;\n \n /**\n@@ -38,26 +37,18 @@ public class EmotivaSubscriptionRequest extends AbstractJAXBElementDTO {\n     public EmotivaSubscriptionRequest() {\n     }\n \n-    public EmotivaSubscriptionRequest(List<EmotivaCommandDTO> commands, String protocol) {\n+    public EmotivaSubscriptionRequest(List<EmotivaSubscriptionTags> emotivaCommandTypes, String protocol) {\n         this.protocol = protocol;\n-        this.commands = commands;\n-    }\n-\n-    public EmotivaSubscriptionRequest(EmotivaSubscriptionTags[] emotivaCommandTypes, String protocol) {\n-        this.protocol = protocol;\n-        List<EmotivaCommandDTO> list = new ArrayList<>();\n-        for (EmotivaSubscriptionTags commandType : emotivaCommandTypes) {\n-            list.add(EmotivaCommandDTO.fromTypeWithAck(commandType));\n-        }\n-        this.commands = list;\n+        this.commands = emotivaCommandTypes.stream().map(EmotivaCommandDTO::fromTypeWithAck)\n+                .collect(Collectors.toList());\n     }\n \n     public EmotivaSubscriptionRequest(EmotivaSubscriptionTags tag) {\n         this.commands = List.of(EmotivaCommandDTO.fromTypeWithAck(tag));\n     }\n \n-    public EmotivaSubscriptionRequest(EmotivaControlCommands commandType, String protocol) {\n+    public EmotivaSubscriptionRequest(EmotivaCommandDTO commandType, String protocol) {\n         this.protocol = protocol;\n-        this.commands = List.of(EmotivaCommandDTO.fromTypeWithAck(commandType));\n+        this.commands = List.of(commandType);\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscribeDTO.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscribeDTO.java\nindex 6a97e53a364f0..621bcf25537d8 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscribeDTO.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscribeDTO.java\n@@ -14,10 +14,10 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n import javax.xml.bind.annotation.XmlRootElement;\n \n-import org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands;\n import org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags;\n \n /**\n@@ -34,10 +34,6 @@ public class EmotivaUnsubscribeDTO extends AbstractJAXBElementDTO {\n     public EmotivaUnsubscribeDTO() {\n     }\n \n-    public EmotivaUnsubscribeDTO(List<EmotivaCommandDTO> commands) {\n-        this.commands = commands;\n-    }\n-\n     public EmotivaUnsubscribeDTO(EmotivaSubscriptionTags[] emotivaCommandTypes) {\n         List<EmotivaCommandDTO> list = new ArrayList<>();\n         for (EmotivaSubscriptionTags commandType : emotivaCommandTypes) {\n@@ -50,7 +46,11 @@ public EmotivaUnsubscribeDTO(EmotivaSubscriptionTags tag) {\n         this.commands = List.of(EmotivaCommandDTO.fromType(tag));\n     }\n \n-    public EmotivaUnsubscribeDTO(EmotivaControlCommands commandType) {\n-        this.commands = List.of(EmotivaCommandDTO.fromType(commandType));\n+    public EmotivaUnsubscribeDTO(EmotivaCommandDTO commandType) {\n+        this.commands = List.of(commandType);\n+    }\n+\n+    public EmotivaUnsubscribeDTO(List<EmotivaSubscriptionTags> commandType) {\n+        this.commands = commandType.stream().map(EmotivaCommandDTO::fromTypeWithAck).collect(Collectors.toList());\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequest.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequest.java\nindex ab529c742b464..035b0cd5ad3b6 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequest.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequest.java\n@@ -17,13 +17,12 @@\n import static org.openhab.binding.emotiva.internal.EmotivaCommandHelper.volumePercentageToDecibel;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaCommandType.*;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaDataType.FREQUENCY_HERTZ;\n-import static org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags.tuner_band;\n-import static org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags.tuner_channel;\n \n import java.util.Map;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.emotiva.internal.EmotivaProcessorState;\n import org.openhab.binding.emotiva.internal.dto.EmotivaControlDTO;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.library.types.PercentType;\n@@ -53,11 +52,11 @@ public class EmotivaControlRequest {\n     private final EmotivaControlCommands downCommand;\n     private double maxValue;\n     private double minValue;\n-    private final Map<String, Map<EmotivaControlCommands, String>> commandMaps;\n+    private final EmotivaProcessorState state;\n     private final EmotivaProtocolVersion protocolVersion;\n \n     public EmotivaControlRequest(String channel, EmotivaSubscriptionTags channelSubscription,\n-            EmotivaControlCommands controlCommand, Map<String, Map<EmotivaControlCommands, String>> commandMaps,\n+            EmotivaControlCommands controlCommand, EmotivaProcessorState state,\n             EmotivaProtocolVersion protocolVersion) {\n         if (channelSubscription.equals(EmotivaSubscriptionTags.unknown)) {\n             if (controlCommand.equals(EmotivaControlCommands.none)) {\n@@ -94,7 +93,7 @@ public EmotivaControlRequest(String channel, EmotivaSubscriptionTags channelSubs\n         this.name = defaultCommand.name();\n         this.dataType = defaultCommand.getDataType();\n         this.channel = channel;\n-        this.commandMaps = commandMaps;\n+        this.state = state;\n         this.protocolVersion = protocolVersion;\n         if (name.equals(EmotivaControlCommands.volume.name())\n                 || name.equals(EmotivaControlCommands.zone2_volume.name())) {\n@@ -155,10 +154,10 @@ public EmotivaControlDTO createDTO(Command ohCommand, @Nullable State previousSt\n             case NONE -> {\n                 switch (channel) {\n                     case CHANNEL_TUNER_BAND -> {\n-                        return matchToCommandMap(ohCommand, tuner_band.getEmotivaName());\n+                        return matchToCommandMap(ohCommand, MAP_TUNER_BANDS);\n                     }\n                     case CHANNEL_TUNER_CHANNEL_SELECT -> {\n-                        return matchToCommandMap(ohCommand, tuner_channel.getEmotivaName());\n+                        return matchToCommandMap(ohCommand, MAP_TUNER_CHANNELS);\n                     }\n                     case CHANNEL_SOURCE -> {\n                         return matchToCommandMap(ohCommand, MAP_SOURCES_MAIN_ZONE);\n@@ -284,15 +283,13 @@ public EmotivaControlDTO createDTO(Command ohCommand, @Nullable State previousSt\n \n     private EmotivaControlDTO matchToCommandMap(Command ohCommand, String mapName) {\n         if (ohCommand instanceof StringType value) {\n-            Map<EmotivaControlCommands, String> commandMap = commandMaps.get(mapName);\n-            if (commandMap != null) {\n-                for (EmotivaControlCommands command : commandMap.keySet()) {\n-                    String map = commandMap.get(command);\n-                    if (map != null && map.equals(value.toString())) {\n-                        return EmotivaControlDTO.create(EmotivaControlCommands.matchToInput(command.toString()));\n-                    } else if (command.name().equalsIgnoreCase(value.toString())) {\n-                        return EmotivaControlDTO.create(command);\n-                    }\n+            Map<EmotivaControlCommands, String> commandMap = state.getCommandMap(mapName);\n+            for (EmotivaControlCommands command : commandMap.keySet()) {\n+                String map = commandMap.get(command);\n+                if (map != null && map.equals(value.toString())) {\n+                    return EmotivaControlDTO.create(EmotivaControlCommands.matchToInput(command.toString()));\n+                } else if (command.name().equalsIgnoreCase(value.toString())) {\n+                    return EmotivaControlDTO.create(command);\n                 }\n             }\n         }\n@@ -469,7 +466,7 @@ public String toString() {\n         return \"EmotivaControlRequest{\" + \"name='\" + name + '\\'' + \", dataType=\" + dataType + \", channel='\" + channel\n                 + '\\'' + \", defaultCommand=\" + defaultCommand + \", setCommand=\" + setCommand + \", onCommand=\"\n                 + onCommand + \", offCommand=\" + offCommand + \", upCommand=\" + upCommand + \", downCommand=\" + downCommand\n-                + \", maxValue=\" + maxValue + \", minValue=\" + minValue + \", commandMaps=\" + commandMaps\n-                + \", protocolVersion=\" + protocolVersion + '}';\n+                + \", maxValue=\" + maxValue + \", minValue=\" + minValue + \", state=\" + state + \", protocolVersion=\"\n+                + protocolVersion + '}';\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaSubscriptionTags.java b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaSubscriptionTags.java\nindex 2e2d64809d083..b4c5dce435e0b 100644\n--- a/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaSubscriptionTags.java\n+++ b/bundles/org.openhab.binding.emotiva/src/main/java/org/openhab/binding/emotiva/internal/protocol/EmotivaSubscriptionTags.java\n@@ -132,24 +132,14 @@ public static EmotivaSubscriptionTags fromChannelUID(String id) {\n         return EmotivaSubscriptionTags.unknown;\n     }\n \n-    public static EmotivaSubscriptionTags[] generalChannels() {\n+    public static List<EmotivaSubscriptionTags> channels(String zonePrefix) {\n         List<EmotivaSubscriptionTags> tags = new ArrayList<>();\n         for (EmotivaSubscriptionTags value : values()) {\n-            if (value.channel.startsWith(\"general\")) {\n+            if (value.channel.startsWith(zonePrefix)) {\n                 tags.add(value);\n             }\n         }\n-        return tags.toArray(new EmotivaSubscriptionTags[0]);\n-    }\n-\n-    public static EmotivaSubscriptionTags[] nonGeneralChannels() {\n-        List<EmotivaSubscriptionTags> tags = new ArrayList<>();\n-        for (EmotivaSubscriptionTags value : values()) {\n-            if (!value.channel.startsWith(\"general\")) {\n-                tags.add(value);\n-            }\n-        }\n-        return tags.toArray(new EmotivaSubscriptionTags[0]);\n+        return tags;\n     }\n \n     public static EmotivaSubscriptionTags[] speakerChannels() {\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelperTest.java b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelperTest.java\nindex b495509cb16d5..2c4417851f241 100644\n--- a/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelperTest.java\n+++ b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaCommandHelperTest.java\n@@ -32,8 +32,6 @@\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaProtocolVersion.PROTOCOL_V2;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaProtocolVersion.PROTOCOL_V3;\n \n-import java.util.Map;\n-import java.util.concurrent.ConcurrentHashMap;\n import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -90,9 +88,9 @@ private static Stream<Arguments> channelToControlRequest() {\n     void testChannelToControlRequest(String channel, String name, EmotivaDataType emotivaDataType,\n             EmotivaControlCommands defaultCommand, EmotivaControlCommands onCommand, EmotivaControlCommands offCommand,\n             EmotivaControlCommands setCommand, EmotivaProtocolVersion version, double min, double max) {\n-        final Map<String, Map<EmotivaControlCommands, String>> commandMaps = new ConcurrentHashMap<>();\n+        EmotivaProcessorState state = new EmotivaProcessorState();\n \n-        EmotivaControlRequest surround = EmotivaCommandHelper.channelToControlRequest(channel, commandMaps, version);\n+        EmotivaControlRequest surround = EmotivaCommandHelper.channelToControlRequest(channel, state, version);\n         assertThat(surround.getName(), is(name));\n         assertThat(surround.getChannel(), is(channel));\n         assertThat(surround.getDataType(), is(emotivaDataType));\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaProcessorStateTest.java b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaProcessorStateTest.java\nnew file mode 100644\nindex 0000000000000..29e904a82a5b1\n--- /dev/null\n+++ b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/EmotivaProcessorStateTest.java\n@@ -0,0 +1,127 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.emotiva.internal;\n+\n+import static org.hamcrest.CoreMatchers.*;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.MAP_MODES;\n+import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.MAP_SOURCES_MAIN_ZONE;\n+import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.MAP_SOURCES_ZONE_2;\n+import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.MAP_TUNER_BANDS;\n+import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.MAP_TUNER_CHANNELS;\n+\n+import java.util.EnumMap;\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands;\n+import org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags;\n+import org.openhab.core.library.types.DecimalType;\n+\n+/**\n+ * Unit tests for the EmotivaProcessorHandlerState.\n+ *\n+ * @author Espen Fossen - Initial contribution\n+ */\n+@NonNullByDefault\n+class EmotivaProcessorStateTest {\n+\n+    @Test\n+    void initialState() {\n+        var state = new EmotivaProcessorState();\n+\n+        assertThat(state.getSourcesMainZone(), not(nullValue()));\n+        assertThat(state.getSourcesMainZone().size(), is(0));\n+\n+        assertThat(state.getSourcesZone2(), not(nullValue()));\n+        assertThat(state.getSourcesZone2().size(), is(0));\n+\n+        assertThat(state.getModes(), not(nullValue()));\n+        assertThat(state.getModes().size(), is(0));\n+\n+        assertThat(state.getChannel(EmotivaSubscriptionTags.keepAlive), is(Optional.empty()));\n+\n+        assertThat(state.getCommandMap(MAP_SOURCES_MAIN_ZONE).size(), is(0));\n+        assertThat(state.getCommandMap(MAP_SOURCES_ZONE_2).size(), is(0));\n+        assertThat(state.getCommandMap(MAP_TUNER_CHANNELS).size(), is(20));\n+        assertThat(state.getCommandMap(MAP_TUNER_BANDS).size(), is(2));\n+        assertThat(state.getCommandMap(MAP_MODES).size(), is(0));\n+    }\n+\n+    @Test\n+    void updateAndRemoveChannel() {\n+        var state = new EmotivaProcessorState();\n+\n+        assertThat(state.getChannel(EmotivaSubscriptionTags.keepAlive.getChannel()), is(Optional.empty()));\n+\n+        state.updateChannel(EmotivaSubscriptionTags.keepAlive.getChannel(), new DecimalType(10));\n+        assertThat(state.getChannel(EmotivaSubscriptionTags.keepAlive.getChannel()),\n+                is(Optional.of(new DecimalType(10))));\n+\n+        state.removeChannel(EmotivaSubscriptionTags.keepAlive.getChannel());\n+        assertThat(state.getChannel(EmotivaSubscriptionTags.keepAlive.getChannel()), is(Optional.empty()));\n+    }\n+\n+    @Test\n+    void replaceSourcesMap() {\n+        var state = new EmotivaProcessorState();\n+\n+        assertThat(state.getSourcesMainZone(), not(nullValue()));\n+        assertThat(state.getSourcesMainZone().size(), is(0));\n+\n+        EnumMap<EmotivaControlCommands, String> sourcesMap = new EnumMap<>(EmotivaControlCommands.class);\n+        sourcesMap.put(EmotivaControlCommands.source_1, \"HDMI1\");\n+        state.setSourcesMainZone(sourcesMap);\n+\n+        assertThat(state.getSourcesMainZone(), not(nullValue()));\n+        assertThat(state.getSourcesMainZone().size(), is(1));\n+        assertThat(state.getSourcesMainZone().get(EmotivaControlCommands.source_1), is(\"HDMI1\"));\n+    }\n+\n+    @Test\n+    void updateModes() {\n+        var state = new EmotivaProcessorState();\n+\n+        state.updateModes(EmotivaSubscriptionTags.mode_auto, \"Auto\");\n+\n+        assertThat(state.getModes(), not(nullValue()));\n+        assertThat(state.getModes().size(), is(1));\n+        assertThat(state.getModes().get(EmotivaSubscriptionTags.mode_auto), is(\"Auto\"));\n+\n+        state.updateModes(EmotivaSubscriptionTags.mode_auto, \"Custom Label\");\n+\n+        assertThat(state.getModes(), not(nullValue()));\n+        assertThat(state.getModes().size(), is(1));\n+        assertThat(state.getModes().get(EmotivaSubscriptionTags.mode_auto), is(\"Custom Label\"));\n+    }\n+\n+    @Test\n+    void updateSourcesMap() {\n+        var state = new EmotivaProcessorState();\n+\n+        EnumMap<EmotivaControlCommands, String> sourcesMap = new EnumMap<>(EmotivaControlCommands.class);\n+        sourcesMap.put(EmotivaControlCommands.source_1, \"HDMI1\");\n+        state.setSourcesMainZone(sourcesMap);\n+\n+        assertThat(state.getSourcesMainZone(), not(nullValue()));\n+        assertThat(state.getSourcesMainZone().size(), is(1));\n+        assertThat(state.getSourcesMainZone().get(EmotivaControlCommands.source_1), is(\"HDMI1\"));\n+\n+        state.updateSourcesMainZone(EmotivaControlCommands.source_1, \"SHIELD\");\n+\n+        assertThat(state.getSourcesMainZone(), not(nullValue()));\n+        assertThat(state.getSourcesMainZone().size(), is(1));\n+        assertThat(state.getSourcesMainZone().get(EmotivaControlCommands.source_1), is(\"SHIELD\"));\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequestTest.java b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequestTest.java\nindex 8f3c9a8b78157..8315eec64c00b 100644\n--- a/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequestTest.java\n+++ b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaSubscriptionRequestTest.java\n@@ -49,20 +49,16 @@ void marshalFromChannelUID() {\n     }\n \n     @Test\n-    void marshallWithTwoSubscriptionsNoAck() {\n-        EmotivaCommandDTO command1 = new EmotivaCommandDTO(EmotivaControlCommands.volume, \"10\", \"yes\");\n-        EmotivaCommandDTO command2 = new EmotivaCommandDTO(EmotivaControlCommands.power_off);\n+    void marshallWithSubscriptionNoAck() {\n+        EmotivaCommandDTO command = new EmotivaCommandDTO(EmotivaControlCommands.volume, \"10\", \"yes\");\n \n-        EmotivaSubscriptionRequest dto = new EmotivaSubscriptionRequest(List.of(command1, command2),\n-                PROTOCOL_V2.value());\n+        EmotivaSubscriptionRequest dto = new EmotivaSubscriptionRequest(command, PROTOCOL_V2.value());\n \n         String xmlString = xmlUtils.marshallJAXBElementObjects(dto);\n         assertThat(xmlString, containsString(\"<emotivaSubscription protocol=\\\"2.0\\\">\"));\n         assertThat(xmlString, containsString(\"<volume value=\\\"10\\\" ack=\\\"yes\\\" />\"));\n-        assertThat(xmlString, containsString(\"<power_off />\"));\n         assertThat(xmlString, containsString(\"</emotivaSubscription>\"));\n         assertThat(xmlString, not(containsString(\"<volume>\")));\n-        assertThat(xmlString, not(containsString(\"<command>\")));\n     }\n \n     @Test\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscriptionTest.java b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscriptionTest.java\nindex 95f4101e65eca..e12c5b7570837 100644\n--- a/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscriptionTest.java\n+++ b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/dto/EmotivaUnsubscriptionTest.java\n@@ -16,8 +16,6 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.CHANNEL_TUNER_RDS;\n \n-import java.util.List;\n-\n import javax.xml.bind.JAXBException;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -50,16 +48,13 @@ void marshalFromChannelUID() {\n     @Test\n     void marshallWithTwoUnsubscriptions() {\n         EmotivaCommandDTO command1 = new EmotivaCommandDTO(EmotivaControlCommands.volume);\n-        EmotivaCommandDTO command2 = new EmotivaCommandDTO(EmotivaControlCommands.power_off);\n \n-        EmotivaUnsubscribeDTO dto = new EmotivaUnsubscribeDTO(List.of(command1, command2));\n+        EmotivaUnsubscribeDTO dto = new EmotivaUnsubscribeDTO(command1);\n \n         String xmlString = xmlUtils.marshallJAXBElementObjects(dto);\n         assertThat(xmlString, containsString(\"<emotivaUnsubscribe>\"));\n         assertThat(xmlString, containsString(\"<volume />\"));\n-        assertThat(xmlString, containsString(\"<power_off />\"));\n         assertThat(xmlString, containsString(\"</emotivaUnsubscribe>\"));\n         assertThat(xmlString, not(containsString(\"<volume>\")));\n-        assertThat(xmlString, not(containsString(\"<command>\")));\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequestTest.java b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequestTest.java\nindex 754f18a1cd64a..51f85fb247ac1 100644\n--- a/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequestTest.java\n+++ b/bundles/org.openhab.binding.emotiva/src/test/java/org/openhab/binding/emotiva/internal/protocol/EmotivaControlRequestTest.java\n@@ -17,15 +17,12 @@\n import static org.openhab.binding.emotiva.internal.EmotivaBindingConstants.*;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaControlCommands.*;\n import static org.openhab.binding.emotiva.internal.protocol.EmotivaProtocolVersion.*;\n-import static org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags.tuner_band;\n-import static org.openhab.binding.emotiva.internal.protocol.EmotivaSubscriptionTags.tuner_channel;\n import static org.openhab.core.types.RefreshType.REFRESH;\n \n import java.util.Collections;\n import java.util.EnumMap;\n import java.util.HashMap;\n import java.util.Map;\n-import java.util.concurrent.ConcurrentHashMap;\n import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -33,8 +30,8 @@\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.Arguments;\n import org.junit.jupiter.params.provider.MethodSource;\n-import org.openhab.binding.emotiva.internal.EmotivaBindingConstants;\n import org.openhab.binding.emotiva.internal.EmotivaCommandHelper;\n+import org.openhab.binding.emotiva.internal.EmotivaProcessorState;\n import org.openhab.binding.emotiva.internal.dto.EmotivaControlDTO;\n import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.library.types.OnOffType;\n@@ -220,7 +217,7 @@ private static Stream<Arguments> channelToDTOs() {\n     private static final EnumMap<EmotivaControlCommands, String> RADIO_BAND_MAP = new EnumMap<>(\n             EmotivaControlCommands.class);\n     private static final Map<String, State> STATE_MAP = Collections.synchronizedMap(new HashMap<>());\n-    private static final Map<String, Map<EmotivaControlCommands, String>> COMMAND_MAPS = new ConcurrentHashMap<>();\n+    private static final EmotivaProcessorState state = new EmotivaProcessorState();\n \n     @BeforeAll\n     static void beforeAll() {\n@@ -228,7 +225,7 @@ static void beforeAll() {\n         MAP_SOURCES_MAIN_ZONE.put(source_2, \"SHIELD\");\n         MAP_SOURCES_MAIN_ZONE.put(hdmi1, \"HDMI1\");\n         MAP_SOURCES_MAIN_ZONE.put(coax1, \"Coax 1\");\n-        COMMAND_MAPS.put(EmotivaBindingConstants.MAP_SOURCES_MAIN_ZONE, MAP_SOURCES_MAIN_ZONE);\n+        state.setSourcesMainZone(MAP_SOURCES_MAIN_ZONE);\n \n         MAP_SOURCES_ZONE_2.put(source_1, \"HDMI 1\");\n         MAP_SOURCES_ZONE_2.put(source_2, \"SHIELD\");\n@@ -236,16 +233,16 @@ static void beforeAll() {\n         MAP_SOURCES_ZONE_2.put(zone2_coax1, \"Coax 1\");\n         MAP_SOURCES_ZONE_2.put(zone2_ARC, \"Audio Return Channel\");\n         MAP_SOURCES_ZONE_2.put(zone2_follow_main, \"Follow Main\");\n-        COMMAND_MAPS.put(EmotivaBindingConstants.MAP_SOURCES_ZONE_2, MAP_SOURCES_ZONE_2);\n+        state.setSourcesZone2(MAP_SOURCES_ZONE_2);\n \n         CHANNEL_MAP.put(channel_1, \"Channel 1\");\n         CHANNEL_MAP.put(channel_2, \"Channel 2\");\n         CHANNEL_MAP.put(channel_3, \"My Radio Channel\");\n-        COMMAND_MAPS.put(tuner_channel.getEmotivaName(), CHANNEL_MAP);\n+        state.setChannels(CHANNEL_MAP);\n \n         RADIO_BAND_MAP.put(band_am, \"AM\");\n         RADIO_BAND_MAP.put(band_fm, \"FM\");\n-        COMMAND_MAPS.put(tuner_band.getEmotivaName(), RADIO_BAND_MAP);\n+        state.setTunerBands(RADIO_BAND_MAP);\n \n         STATE_MAP.put(CHANNEL_TREBLE, new DecimalType(-3));\n         STATE_MAP.put(CHANNEL_TUNER_CHANNEL, new StringType(\"FM    87.50MHz\"));\n@@ -256,7 +253,7 @@ static void beforeAll() {\n     @MethodSource(\"channelToDTOs\")\n     void createDTO(String channel, Command ohValue, EmotivaControlCommands controlCommand,\n             EmotivaProtocolVersion protocolVersion, String requestValue) {\n-        EmotivaControlRequest controlRequest = EmotivaCommandHelper.channelToControlRequest(channel, COMMAND_MAPS,\n+        EmotivaControlRequest controlRequest = EmotivaCommandHelper.channelToControlRequest(channel, state,\n                 protocolVersion);\n \n         EmotivaControlDTO dto = controlRequest.createDTO(ohValue, STATE_MAP.get(channel));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17350",
    "pr_id": 17350,
    "issue_id": 17321,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[miio] Incorrect `cleaning#last_clean_start_time` and `cleaning#last_clean_end_time` after upgrading to v4.2.1\n## Expected Behavior\r\nThe `cleaning#last_clean_start_time` and `cleaning#last_clean_end_time` should display the correct timestamps of the last cleaning operation.\r\n\r\n## Current Behavior\r\nAfter upgrading from openHAB v4.1.3 to v4.2.1, the times `cleaning#last_clean_start_time` and `cleaning#last_clean_end_time` both display `01.01.70 01:33:44`, which is incorrect.\r\n\r\nIn the `cleaning#last_clean_record`, the following data is observed:\r\n```json\r\n{\r\n  \"start\": \"2024\",\r\n  \"begin\": null,\r\n  \"end\": \"2024\",\r\n  \"duration\": 0,\r\n  \"area\": 0.77,\r\n  \"clean_time\": null,\r\n  \"error\": 0,\r\n  \"finished\": 0,\r\n  \"complete\": null,\r\n  \"start_type\": 2,\r\n  \"clean_type\": 3,\r\n  \"finish_reason\": 60,\r\n  \"dust_collection_status\": null,\r\n  \"map_flag\": null\r\n}\r\n```\r\nIt appears that the Unix timestamps from the XiaomiRobotVacuumProtocol (as seen in the debug log below) are not being parsed correctly. Instead of being fully interpreted, only the year is extracted, which is then incorrectly treated as a timestamp. This results in the channels not displaying the correct datetime.\r\n\r\nThe associated debug log shows:\r\n```\r\nReceived response for device 0F989D8D type: CLEAN_RECORD_GET, result: [[1724174413,1724174459,46,770000,0,0,2,3,60]], fullresponse: {\"result\":[[1724174413,1724174459,46,770000,0,0,2,3,60]],\"id\":7028}\r\n```\r\n\r\n## Possible Solution\r\nIt seems the issue might be related to the way the `start` and `end` fields are parsed as timestamps. In the debug log, the `CLEAN_RECORD_GET` response contains two Unix timestamps, `1724174413` and `1724174459`, which should be correctly parsed. These correspond to the dates:\r\n\r\n- `1724174413` -> `2024-08-20 14:46:53`\r\n- `1724174459` -> `2024-08-20 14:47:39`\r\n\r\nAdjusting the parsing logic to correctly handle these values should resolve the issue.\r\n\r\n## Steps to Reproduce (for Bugs)\r\n1. Upgrade openHAB from v4.1.3 to v4.2.1.\r\n2. Start and complete a cleaning operation with the Roborock S5 Max.\r\n3. Check the `cleaning#last_clean_start_time` and `cleaning#last_clean_end_time` after the cleaning operation.\r\n\r\n## Your Environment\r\n* Version used: openHAB v4.2.1, [miio] binding\r\n* Model ID: `roborock.vacuum.s5e`\r\n* Environment name and version: OpenJDK 17.0.12 (2024-07-16)\r\n* Operating System and version: Raspberry Pi OS",
    "issue_word_count": 330,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java",
      "bundles/org.openhab.binding.miio/src/test/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandlerTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.miio/src/test/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandlerTest.java"
    ],
    "base_commit": "0252099518975e43c184293a66ee76a2b59c5909",
    "head_commit": "6ad05c63c1de9a338ee2547c0d714d5c4e6c1f70",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17350",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17350",
    "dockerfile": "",
    "pr_merged_at": "2024-09-10T10:40:52.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java\nindex de5da91fa50a9..2b0efc2e322ad 100644\n--- a/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java\n+++ b/bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java\n@@ -98,6 +98,7 @@\n public class MiIoVacuumHandler extends MiIoAbstractHandler {\n     private final Logger logger = LoggerFactory.getLogger(MiIoVacuumHandler.class);\n     private static final DateTimeFormatter DATEFORMATTER = DateTimeFormatter.ofPattern(\"yyyyMMdd-HHmmss\");\n+    private static final DateTimeFormatter PARSER_TZ = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n     private static final Gson GSON = new GsonBuilder().serializeNulls().create();\n     private final ChannelUID mapChannelUid;\n \n@@ -504,6 +505,7 @@ private boolean updateHistory(JsonObject historyData) {\n \n     private void updateHistoryRecordLegacy(JsonArray historyData) {\n         HistoryRecordDTO historyRecord = new HistoryRecordDTO();\n+\n         for (int i = 0; i < historyData.size(); ++i) {\n             try {\n                 BigInteger value = historyData.get(i).getAsBigInteger();\n@@ -511,12 +513,12 @@ private void updateHistoryRecordLegacy(JsonArray historyData) {\n                     case 0:\n                         historyRecord.setStart(ZonedDateTime\n                                 .ofInstant(Instant.ofEpochSecond(value.longValue()), ZoneId.systemDefault())\n-                                .toString());\n+                                .format(PARSER_TZ));\n                         break;\n                     case 1:\n                         historyRecord.setEnd(ZonedDateTime\n                                 .ofInstant(Instant.ofEpochSecond(value.longValue()), ZoneId.systemDefault())\n-                                .toString());\n+                                .format(PARSER_TZ));\n                         break;\n                     case 2:\n                         historyRecord.setDuration(value.intValue());\n@@ -549,14 +551,14 @@ private void updateHistoryRecordLegacy(JsonArray historyData) {\n     private void updateHistoryRecord(HistoryRecordDTO historyRecordDTO) {\n         JsonObject historyRecord = GSON.toJsonTree(historyRecordDTO).getAsJsonObject();\n         if (historyRecordDTO.getStart() != null) {\n-            historyRecord.addProperty(\"start\", historyRecordDTO.getStart().split(\"\\\\+\")[0].split(\"\\\\-\")[0]);\n-            updateState(CHANNEL_HISTORY_START_TIME,\n-                    new DateTimeType(historyRecordDTO.getStart().split(\"\\\\+\")[0].split(\"\\\\-\")[0]));\n+            DateTimeType start = new DateTimeType(historyRecordDTO.getStart());\n+            historyRecord.addProperty(\"start\", start.toLocaleZone().format(null));\n+            updateState(CHANNEL_HISTORY_START_TIME, start);\n         }\n         if (historyRecordDTO.getEnd() != null) {\n-            historyRecord.addProperty(\"end\", historyRecordDTO.getEnd().split(\"\\\\+\")[0].split(\"\\\\-\")[0]);\n-            updateState(CHANNEL_HISTORY_END_TIME,\n-                    new DateTimeType(historyRecordDTO.getEnd().split(\"\\\\+\")[0].split(\"\\\\-\")[0]));\n+            DateTimeType end = new DateTimeType(historyRecordDTO.getEnd());\n+            historyRecord.addProperty(\"end\", end.toLocaleZone().format(null));\n+            updateState(CHANNEL_HISTORY_END_TIME, end);\n         }\n         if (historyRecordDTO.getDuration() != null) {\n             long duration = TimeUnit.SECONDS.toMinutes(historyRecordDTO.getDuration().longValue());\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.miio/src/test/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandlerTest.java b/bundles/org.openhab.binding.miio/src/test/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandlerTest.java\nnew file mode 100644\nindex 0000000000000..57f4144d461d0\n--- /dev/null\n+++ b/bundles/org.openhab.binding.miio/src/test/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandlerTest.java\n@@ -0,0 +1,171 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.miio.internal.handler;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.*;\n+import static org.mockito.Mockito.*;\n+\n+import java.io.IOException;\n+import java.time.ZoneId;\n+import java.time.ZonedDateTime;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.Timeout;\n+import org.junit.jupiter.api.Timeout.ThreadMode;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.openhab.binding.miio.internal.MiIoBindingConstants;\n+import org.openhab.binding.miio.internal.MiIoCommand;\n+import org.openhab.binding.miio.internal.MiIoSendCommand;\n+import org.openhab.binding.miio.internal.basic.MiIoDatabaseWatchService;\n+import org.openhab.binding.miio.internal.cloud.CloudConnector;\n+import org.openhab.binding.miio.internal.cloud.MiCloudException;\n+import org.openhab.binding.miio.internal.transport.MiIoAsyncCommunication;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.i18n.LocaleProvider;\n+import org.openhab.core.i18n.TranslationProvider;\n+import org.openhab.core.library.types.DateTimeType;\n+import org.openhab.core.library.types.QuantityType;\n+import org.openhab.core.library.unit.SIUnits;\n+import org.openhab.core.library.unit.Units;\n+import org.openhab.core.thing.ChannelUID;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingStatusDetail;\n+import org.openhab.core.thing.ThingStatusInfo;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.ThingHandlerCallback;\n+import org.openhab.core.thing.type.ChannelTypeRegistry;\n+\n+import com.google.gson.JsonParser;\n+\n+/**\n+ * Test case for {@link MiIoVacuumHandler}\n+ *\n+ * @author Marcel Verpaalen - Initial contribution\n+ *\n+ */\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+@NonNullByDefault\n+public class MiIoVacuumHandlerTest {\n+\n+    private @NonNullByDefault({}) MiIoVacuumHandler miIoHandler;\n+    private @Mock @NonNullByDefault({}) ThingHandlerCallback callback;\n+\n+    private @Mock @NonNullByDefault({}) CloudConnector cloudConnector;\n+    private @Mock @NonNullByDefault({}) MiIoDatabaseWatchService miIoDatabaseWatchService;\n+    private @Mock @NonNullByDefault({}) ChannelTypeRegistry channelTypeRegistry;\n+    private @Mock @NonNullByDefault({}) Thing thing;\n+    private @Mock @NonNullByDefault({}) MiIoAsyncCommunication connection;\n+    private @NonNullByDefault({}) @Mock TranslationProvider translationProvider;\n+    private @NonNullByDefault({}) @Mock LocaleProvider localeProvider;\n+\n+    private final Configuration configuration = new Configuration();\n+    private ThingUID thingUID = new ThingUID(MiIoBindingConstants.THING_TYPE_VACUUM, \"TestThing\");\n+\n+    @BeforeEach\n+    public void setUp() throws IOException, MiCloudException {\n+        configuration.put(MiIoBindingConstants.PROPERTY_HOST_IP, \"localhost\");\n+        configuration.put(MiIoBindingConstants.PROPERTY_TOKEN, \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");\n+        configuration.put(MiIoBindingConstants.PROPERTY_DID, \"AABBCCDDEEFF\");\n+        configuration.put(MiIoBindingConstants.PROPERTY_CLOUDSERVER, \"fake\");\n+        configuration.put(\"communication\", \"cloud\");\n+\n+        when(thing.getConfiguration()).thenReturn(configuration);\n+        when(thing.getUID()).thenReturn(thingUID);\n+        when(thing.getThingTypeUID()).thenReturn(MiIoBindingConstants.THING_TYPE_VACUUM);\n+        when(cloudConnector.sendRPCCommand(any(), any(), any())).thenReturn(\"{\\\"result\\\":\\\"triggerError\\\"}\");\n+        lenient().when(callback.isChannelLinked(any())).thenReturn(true);\n+\n+        miIoHandler = new MiIoVacuumHandler(thing, miIoDatabaseWatchService, cloudConnector, channelTypeRegistry,\n+                translationProvider, localeProvider);\n+\n+        miIoHandler.setCallback(callback);\n+    }\n+\n+    @AfterEach\n+    public void after() {\n+        miIoHandler.dispose();\n+    }\n+\n+    @Test\n+    public void testInitializeShouldCallTheCallback() throws InterruptedException {\n+        miIoHandler.initialize();\n+        ArgumentCaptor<ThingStatusInfo> statusInfoCaptor = ArgumentCaptor.forClass(ThingStatusInfo.class);\n+        verify(callback).statusUpdated(eq(thing), statusInfoCaptor.capture());\n+        ThingStatusInfo thingStatusInfo = statusInfoCaptor.getValue();\n+        assertEquals(ThingStatus.OFFLINE, thingStatusInfo.getStatus(), \"Device should be OFFLINE\");\n+    }\n+\n+    @Test\n+    @Timeout(value = 30, unit = TimeUnit.SECONDS, threadMode = ThreadMode.SEPARATE_THREAD)\n+    public void TestCleanRecord() {\n+        miIoHandler.initialize();\n+        // prepare a CLEAN_RECORD_GET response object\n+        String cmdString = \"{\\\"id\\\":7028,\\\"method\\\":\\\"get_clean_record\\\",\\\"params\\\":[1699081963]}\";\n+        String jsonResponseTxt = \"{\\\"result\\\":[[1724174413,1724174459,246,770000,0,0,2,3,60]],\\\"id\\\":7028}\";\n+\n+        MiIoSendCommand response = new MiIoSendCommand(13, MiIoCommand.CLEAN_RECORD_GET,\n+                JsonParser.parseString(cmdString).getAsJsonObject(), \"\", \"\");\n+        response.setResponse(JsonParser.parseString(jsonResponseTxt).getAsJsonObject());\n+        miIoHandler.onMessageReceived(response);\n+\n+        verify(callback, description(\"Test the start time parsing\")).stateUpdated(\n+                eq(new ChannelUID(thingUID, MiIoBindingConstants.CHANNEL_HISTORY_START_TIME)),\n+                eq(new DateTimeType(ZonedDateTime.parse(\"2024-08-20T19:20:13+02:00\")).toZone(ZoneId.systemDefault())));\n+\n+        verify(callback, description(\"Test the end time parsing\")).stateUpdated(\n+                eq(new ChannelUID(thingUID, MiIoBindingConstants.CHANNEL_HISTORY_END_TIME)),\n+                eq(new DateTimeType(ZonedDateTime.parse(\"2024-08-20T19:20:59+02:00\")).toZone(ZoneId.systemDefault())));\n+\n+        verify(callback, description(\"Test the duration parsing\")).stateUpdated(\n+                eq(new ChannelUID(thingUID, MiIoBindingConstants.CHANNEL_HISTORY_DURATION)),\n+                eq(new QuantityType<>(4, Units.MINUTE)));\n+    }\n+\n+    @Test\n+    @Timeout(value = 30, unit = TimeUnit.SECONDS, threadMode = ThreadMode.SEPARATE_THREAD)\n+    public void TestCleanSummary() {\n+        miIoHandler.initialize();\n+\n+        ThingStatusInfo ts = new ThingStatusInfo(ThingStatus.ONLINE, ThingStatusDetail.NONE, \"I fake to be online\");\n+        when(thing.getStatusInfo()).thenReturn(ts);\n+\n+        // prepare a CLEAN_SUMMARY_GET response object\n+        String cmdString = \"{\\\"id\\\":114,\\\"method\\\":\\\"get_clean_summary\\\",\\\"params\\\":[]}\";\n+        String jsonResponseTxt = \"{\\\"id\\\":114,\\\"result\\\":{\\\"clean_time\\\":109968,\\\"clean_area\\\":1694875000,\\\"clean_count\\\":51,\\\"dust_collection_count\\\":48,\\\"records\\\":[1699081963,1698999875,1698126572,1697463736,1697031817,1696486642,1696320557,1696253060,1695833343,1695821201,1695619374,1695476013,1695457865,1695274110,1695014622,1694876238,1694860994,1694755927,1694526730,1694237806]}}\";\n+\n+        MiIoSendCommand response = new MiIoSendCommand(13, MiIoCommand.CLEAN_SUMMARY_GET,\n+                JsonParser.parseString(cmdString).getAsJsonObject(), \"\", \"\");\n+        response.setResponse(JsonParser.parseString(jsonResponseTxt).getAsJsonObject());\n+        miIoHandler.onMessageReceived(response);\n+\n+        verify(callback, description(\"Test clean time\")).stateUpdated(\n+                eq(new ChannelUID(thingUID, MiIoBindingConstants.CHANNEL_HISTORY_TOTALTIME)),\n+                eq(new QuantityType<>(TimeUnit.MINUTES.convert(109968, TimeUnit.SECONDS), Units.MINUTE)));\n+\n+        verify(callback, description(\"Test the area parsing\")).stateUpdated(\n+                eq(new ChannelUID(thingUID, MiIoBindingConstants.CHANNEL_HISTORY_TOTALAREA)),\n+                eq(new QuantityType<>(1694.875, SIUnits.SQUARE_METRE)));\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17335",
    "pr_id": 17335,
    "issue_id": 16728,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[solarforecast] suspend API calls over night\nCopied from https://github.com/weymann/OH3-SolarForecast-Drops/issues/2\r\n\r\nThanks for the great work on the binding. Saves me a ton of JSON fiddling! ;)\r\n\r\nWould it be possible to define a period of no polling? So you could spare precious API calls over night, when there's no need to update information? Possible having the chance to either:\r\n\r\n1) define a switch-item, which tells the binding to do API-Calls or suspend them\r\n2) define Astro-binding items/channels which trigger local dusk/dawn periods?\r\n\r\nad 1\r\nI could then use whatever means to turn that item ON or OFF (possibly using Astro-binding)\r\n\r\nad 2\r\nI could then just use a fully configured Astro-binding to use for suspending",
    "issue_word_count": 129,
    "test_files_count": 1,
    "non_test_files_count": 8,
    "pr_changed_files": [
      "bundles/org.openhab.binding.solarforecast/README.md",
      "bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecast.java",
      "bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecastActions.java",
      "bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/forecastsolar/ForecastSolarObject.java",
      "bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/SolcastObject.java",
      "bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/handler/SolcastPlaneHandler.java",
      "bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/config/sc-plane-config.xml",
      "bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/i18n/solarforecast.properties",
      "bundles/org.openhab.binding.solarforecast/src/test/java/org/openhab/binding/solarforecast/SolcastTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.solarforecast/src/test/java/org/openhab/binding/solarforecast/SolcastTest.java"
    ],
    "base_commit": "376b696c3e2242b023462fe7318ef6fe8996e3aa",
    "head_commit": "28c025dfc2efcc6f07cbc10d51ba883d4db59f67",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17335",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17335",
    "dockerfile": "",
    "pr_merged_at": "2024-09-09T06:14:12.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.solarforecast/README.md b/bundles/org.openhab.binding.solarforecast/README.md\nindex be93564f39f16..72953200712a5 100644\n--- a/bundles/org.openhab.binding.solarforecast/README.md\n+++ b/bundles/org.openhab.binding.solarforecast/README.md\n@@ -55,16 +55,23 @@ See [DateTime](#date-time) section for more information.\n \n ### Solcast Plane Configuration\n \n-| Name            | Type    | Description                                            | Default         | Required | Advanced |\n-|-----------------|---------|--------------------------------------------------------|-----------------|----------|----------|\n-| resourceId      | text    | Resource Id of Solcast rooftop site                    | N/A             | yes      | no       |\n-| refreshInterval | integer | Forecast Refresh Interval in minutes                   | 120             | yes      | no       |\n+| Name            | Type    | Description                                                              | Default         | Required | Advanced |\n+|-----------------|---------|--------------------------------------------------------------------------|-----------------|----------|----------|\n+| resourceId      | text    | Resource Id of Solcast rooftop site                                      | N/A             | yes      | no       |\n+| refreshInterval | integer | Forecast Refresh Interval in minutes (0 = disable automatic refresh)     | 120             | yes      | no       |\n \n `resourceId` for each plane can be obtained in your [Rooftop Sites](https://toolkit.solcast.com.au/rooftop-sites)\n \n `refreshInterval` of forecast data needs to respect the throttling of the Solcast service. \n If you have 25 free calls per day, each plane needs 2 calls per update a refresh interval of 120 minutes will result in 24 calls per day.\n \n+With `refreshInterval = 0` the forecast data will not be updated by binding.\n+This gives the user the possibility to define an own update strategy in rules.\n+See [manual update rule example](#solcast-manual-update) to update Solcast forecast data \n+\n+- after startup\n+- every 2 hours only during daytime using [Astro Binding](https://www.openhab.org/addons/bindings/astro/)  \n+\n ## Solcast Channels\n \n Each `sc-plane` reports its own values including a `json` channel holding JSON content.\n@@ -354,3 +361,33 @@ rule \"Solcast Actions\"\n         logInfo(\"SF Tests\",\"Optimist energy {}\",energyOptimistic)\n end\n ```\n+\n+### Solcast manual update\n+\n+```java\n+rule \"Daylight End\"\n+    when\n+        Channel \"astro:sun:local:daylight#event\" triggered END\n+    then\n+        PV_Daytime.postUpdate(OFF) // switch item holding daytime state        \n+end\n+\n+rule \"Daylight Start\"\n+    when\n+        Channel \"astro:sun:local:daylight#event\" triggered START\n+    then\n+        PV_Daytime.postUpdate(ON)           \n+end\n+\n+rule \"Solacast Updates\"\n+    when \n+        Thing \"solarforecast:sc-plane:homeSouthWest\" changed to INITIALIZING or // Thing status changed to INITIALIZING\n+        Time cron \"0 30 0/2 ? * * *\" // every 2 hours at minute 30 \n+    then\n+        if(PV_Daytime.state == ON) {\n+            val solarforecastActions = getActions(\"solarforecast\",\"solarforecast:sc-plane:homeSouthWest\")\n+            solarforecastActions.triggerUpdate\n+        } // reject updates during night\n+end\n+```\n+\n\ndiff --git a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecast.java b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecast.java\nindex b6d37bb26971c..7597802a07429 100644\n--- a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecast.java\n+++ b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecast.java\n@@ -85,6 +85,11 @@ public interface SolarForecast {\n      */\n     Instant getForecastEnd();\n \n+    /**\n+     * Forces update in the next scheduling cycle\n+     */\n+    void triggerUpdate();\n+\n     /**\n      * Get TimeSeries for Power forecast\n      *\n\ndiff --git a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecastActions.java b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecastActions.java\nindex c794ebb1c3d03..43ca9be321a68 100644\n--- a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecastActions.java\n+++ b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/actions/SolarForecastActions.java\n@@ -160,6 +160,18 @@ public Instant getForecastEnd() {\n         }\n     }\n \n+    @RuleAction(label = \"@text/actionTriggerUpdateLabel\", description = \"@text/actionTriggerUpdateDesc\")\n+    public void triggerUpdate() {\n+        if (thingHandler.isPresent()) {\n+            List<SolarForecast> forecastObjectList = ((SolarForecastProvider) thingHandler.get()).getSolarForecasts();\n+            forecastObjectList.forEach(forecast -> {\n+                forecast.triggerUpdate();\n+            });\n+        } else {\n+            logger.trace(\"Handler missing\");\n+        }\n+    }\n+\n     public static State getDay(ThingActions actions, LocalDate ld, String... args) {\n         return ((SolarForecastActions) actions).getDay(ld, args);\n     }\n@@ -180,6 +192,10 @@ public static Instant getForecastEnd(ThingActions actions) {\n         return ((SolarForecastActions) actions).getForecastEnd();\n     }\n \n+    public static void triggerUpdate(ThingActions actions) {\n+        ((SolarForecastActions) actions).triggerUpdate();\n+    }\n+\n     @Override\n     public void setThingHandler(ThingHandler handler) {\n         thingHandler = Optional.of(handler);\n\ndiff --git a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/forecastsolar/ForecastSolarObject.java b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/forecastsolar/ForecastSolarObject.java\nindex fa0f79cca56fe..025cd636af8ad 100644\n--- a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/forecastsolar/ForecastSolarObject.java\n+++ b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/forecastsolar/ForecastSolarObject.java\n@@ -327,6 +327,11 @@ public Instant getForecastEnd() {\n         return zdt.toInstant();\n     }\n \n+    @Override\n+    public void triggerUpdate() {\n+        expirationDateTime = Instant.MIN;\n+    }\n+\n     private void throwOutOfRangeException(Instant query) {\n         if (getForecastBegin().equals(Instant.MAX) || getForecastEnd().equals(Instant.MIN)) {\n             throw new SolarForecastException(this, \"Forecast invalid time range\");\n\ndiff --git a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/SolcastObject.java b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/SolcastObject.java\nindex 1055e6e6b1ad7..4f6f91ff8bc64 100644\n--- a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/SolcastObject.java\n+++ b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/SolcastObject.java\n@@ -82,13 +82,13 @@ public String toString() {\n         }\n     }\n \n-    public SolcastObject(String id, TimeZoneProvider tzp) {\n+    public SolcastObject(String id, Instant expiration, TimeZoneProvider tzp) {\n         // invalid forecast object\n         identifier = id;\n         timeZoneProvider = tzp;\n         dateOutputFormatter = DateTimeFormatter.ofPattern(SolarForecastBindingConstants.PATTERN_FORMAT)\n                 .withZone(tzp.getTimeZone());\n-        expirationDateTime = Instant.now().minusSeconds(1);\n+        expirationDateTime = expiration;\n     }\n \n     public SolcastObject(String id, String content, Instant expiration, TimeZoneProvider tzp) {\n@@ -458,6 +458,11 @@ public Instant getForecastEnd() {\n         return Instant.MIN;\n     }\n \n+    @Override\n+    public void triggerUpdate() {\n+        expirationDateTime = Instant.MIN;\n+    }\n+\n     private QueryMode evalArguments(String[] args) {\n         if (args.length > 0) {\n             if (args.length > 1) {\n@@ -501,7 +506,11 @@ private void throwOutOfRangeException(Instant query) {\n     }\n \n     private String getTimeRange() {\n-        return \"Valid range: \" + dateOutputFormatter.format(getForecastBegin()) + \" - \"\n-                + dateOutputFormatter.format(getForecastEnd());\n+        if (getForecastBegin().isBefore(Instant.MAX) && getForecastEnd().isAfter(Instant.MIN)) {\n+            return \"Valid range: \" + dateOutputFormatter.format(getForecastBegin()) + \" - \"\n+                    + dateOutputFormatter.format(getForecastEnd());\n+        } else {\n+            return \"Invalid time range\";\n+        }\n     }\n }\n\ndiff --git a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/handler/SolcastPlaneHandler.java b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/handler/SolcastPlaneHandler.java\nindex 89c46564cfacf..e160d16a6d1c2 100644\n--- a/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/handler/SolcastPlaneHandler.java\n+++ b/bundles/org.openhab.binding.solarforecast/src/main/java/org/openhab/binding/solarforecast/internal/solcast/handler/SolcastPlaneHandler.java\n@@ -84,7 +84,9 @@ public void initialize() {\n             if (handler != null) {\n                 if (handler instanceof SolcastBridgeHandler sbh) {\n                     bridgeHandler = Optional.of(sbh);\n-                    forecast = Optional.of(new SolcastObject(thing.getUID().getAsString(), sbh));\n+                    Instant expiration = (configuration.refreshInterval == 0) ? Instant.MAX\n+                            : Instant.now().minusSeconds(1);\n+                    forecast = Optional.of(new SolcastObject(thing.getUID().getAsString(), expiration, sbh));\n                     sbh.addPlane(this);\n                 } else {\n                     updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n@@ -159,9 +161,10 @@ protected synchronized SolcastObject fetchData() {\n                         estimateRequest.header(HttpHeader.AUTHORIZATION, BEARER + bridge.getApiKey());\n                         ContentResponse crEstimate = estimateRequest.send();\n                         if (crEstimate.getStatus() == 200) {\n+                            Instant expiration = (configuration.refreshInterval == 0) ? Instant.MAX\n+                                    : Instant.now().plus(configuration.refreshInterval, ChronoUnit.MINUTES);\n                             SolcastObject localForecast = new SolcastObject(thing.getUID().getAsString(),\n-                                    crEstimate.getContentAsString(),\n-                                    Instant.now().plus(configuration.refreshInterval, ChronoUnit.MINUTES), bridge);\n+                                    crEstimate.getContentAsString(), expiration, bridge);\n \n                             // get forecast\n                             Request forecastRequest = httpClient.newRequest(forecastUrl);\n\ndiff --git a/bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/config/sc-plane-config.xml b/bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/config/sc-plane-config.xml\nindex d17426c82e4be..cc0fc6dee046c 100644\n--- a/bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/config/sc-plane-config.xml\n+++ b/bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/config/sc-plane-config.xml\n@@ -9,9 +9,9 @@\n \t\t\t<label>Rooftop Resource Id</label>\n \t\t\t<description>Resource Id of Solcast rooftop site</description>\n \t\t</parameter>\n-\t\t<parameter name=\"refreshInterval\" type=\"integer\" min=\"1\" unit=\"min\" required=\"true\">\n+\t\t<parameter name=\"refreshInterval\" type=\"integer\" min=\"0\" unit=\"min\" required=\"true\">\n \t\t\t<label>Forecast Refresh Interval</label>\n-\t\t\t<description>Data refresh rate of forecast data in minutes</description>\n+\t\t\t<description>Data refresh rate of forecast data in minutes, zero for manual updates.</description>\n \t\t\t<default>120</default>\n \t\t</parameter>\n \t</config-description>\n\ndiff --git a/bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/i18n/solarforecast.properties b/bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/i18n/solarforecast.properties\nindex 36ef6e7ac14b1..94f6e1aa979e5 100644\n--- a/bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/i18n/solarforecast.properties\n+++ b/bundles/org.openhab.binding.solarforecast/src/main/resources/OH-INF/i18n/solarforecast.properties\n@@ -6,11 +6,11 @@ addon.solarforecast.description = Solar Forecast for your location\n # thing types\n \n thing-type.solarforecast.fs-plane.label = ForecastSolar PV Plane\n-thing-type.solarforecast.fs-plane.description = PV Plane as part of Multi Plane Bridge\n+thing-type.solarforecast.fs-plane.description = One PV Plane of Multi Plane Bridge\n thing-type.solarforecast.fs-site.label = ForecastSolar Site\n thing-type.solarforecast.fs-site.description = Site location for Forecast Solar\n thing-type.solarforecast.sc-plane.label = Solcast PV Plane\n-thing-type.solarforecast.sc-plane.description = PV Plane as part of Multi Plane Bridge\n+thing-type.solarforecast.sc-plane.description = One PV Plane of Multi Plane Bridge\n thing-type.solarforecast.sc-site.label = Solcast Site\n thing-type.solarforecast.sc-site.description = Solcast service site definition\n \n@@ -35,9 +35,9 @@ thing-type.config.solarforecast.fs-site.apiKey.description = If you have a paid\n thing-type.config.solarforecast.fs-site.inverterKwp.label = Inverter Kilowatt Peak\n thing-type.config.solarforecast.fs-site.inverterKwp.description = Inverter maximum kilowatt peak capability\n thing-type.config.solarforecast.fs-site.location.label = PV Location\n-thing-type.config.solarforecast.fs-site.location.description = Location of photovoltaic system\n+thing-type.config.solarforecast.fs-site.location.description = Location of photovoltaic system. Location from openHAB settings is used in case of empty value.\n thing-type.config.solarforecast.sc-plane.refreshInterval.label = Forecast Refresh Interval\n-thing-type.config.solarforecast.sc-plane.refreshInterval.description = Data refresh rate of forecast data in minutes\n+thing-type.config.solarforecast.sc-plane.refreshInterval.description = Data refresh rate of forecast data in minutes, zero for manual updates.\n thing-type.config.solarforecast.sc-plane.resourceId.label = Rooftop Resource Id\n thing-type.config.solarforecast.sc-plane.resourceId.description = Resource Id of Solcast rooftop site\n thing-type.config.solarforecast.sc-site.apiKey.label = API Key\n@@ -107,3 +107,5 @@ actionForecastBeginLabel = Forecast Startpoint\n actionForecastBeginDesc = Returns earliest timestamp of forecast data\n actionForecastEndLabel = Forecast End\n actionForecastEndDesc = Returns latest timestamp of forecast data\n+actionTriggerUpdateLabel = Trigger Forecast Update\n+actionTriggerUpdateDesc = Triggers manual update of forecast data\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.solarforecast/src/test/java/org/openhab/binding/solarforecast/SolcastTest.java b/bundles/org.openhab.binding.solarforecast/src/test/java/org/openhab/binding/solarforecast/SolcastTest.java\nindex 01763ae3e967b..16d9a88c06955 100644\n--- a/bundles/org.openhab.binding.solarforecast/src/test/java/org/openhab/binding/solarforecast/SolcastTest.java\n+++ b/bundles/org.openhab.binding.solarforecast/src/test/java/org/openhab/binding/solarforecast/SolcastTest.java\n@@ -22,8 +22,10 @@\n import java.time.ZonedDateTime;\n import java.time.temporal.ChronoUnit;\n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Map;\n \n import javax.measure.quantity.Energy;\n \n@@ -503,7 +505,7 @@ void testUnitDetection() {\n     @Test\n     void testTimes() {\n         String utcTimeString = \"2022-07-17T19:30:00.0000000Z\";\n-        SolcastObject so = new SolcastObject(\"sc-test\", TIMEZONEPROVIDER);\n+        SolcastObject so = new SolcastObject(\"sc-test\", Instant.now(), TIMEZONEPROVIDER);\n         ZonedDateTime zdt = so.getZdtFromUTC(utcTimeString);\n         assertNotNull(zdt);\n         assertEquals(\"2022-07-17T21:30+02:00[Europe/Berlin]\", zdt.toString(), \"ZonedDateTime\");\n@@ -676,6 +678,72 @@ void testCombinedPowerTimeSeries() {\n         scph2.dispose();\n     }\n \n+    @Test\n+    void testRefreshManual() {\n+        Map<String, Object> manualConfiguration = new HashMap<>();\n+        manualConfiguration.put(\"refreshInterval\", 0);\n+\n+        BridgeImpl bi = new BridgeImpl(SolarForecastBindingConstants.SOLCAST_SITE, \"bridge\");\n+        SolcastBridgeHandler scbh = new SolcastBridgeHandler(bi, new TimeZP());\n+        bi.setHandler(scbh);\n+        CallbackMock cm = new CallbackMock();\n+        scbh.setCallback(cm);\n+        SolcastPlaneHandler scph1 = new SolcastPlaneMock(bi);\n+        CallbackMock cm1 = new CallbackMock();\n+        scph1.setCallback(cm1);\n+        scph1.handleConfigurationUpdate(manualConfiguration);\n+        scph1.initialize();\n+        scbh.getData();\n+        // no update shall happen\n+        assertEquals(Instant.MAX, scbh.getSolarForecasts().get(0).getForecastBegin(), \"Bridge forecast begin\");\n+        assertEquals(Instant.MIN, scbh.getSolarForecasts().get(0).getForecastEnd(), \"Bridge forecast begin\");\n+        assertEquals(Instant.MAX, scph1.getSolarForecasts().get(0).getForecastBegin(), \"Plane 1 forecast begin\");\n+        assertEquals(Instant.MIN, scph1.getSolarForecasts().get(0).getForecastEnd(), \"Plane 1 forecast begin\");\n+\n+        SolcastPlaneHandler scph2 = new SolcastPlaneMock(bi);\n+        CallbackMock cm2 = new CallbackMock();\n+        scph2.setCallback(cm2);\n+        scph2.handleConfigurationUpdate(manualConfiguration);\n+        scph2.initialize();\n+        scbh.getData();\n+        assertEquals(Instant.MAX, scbh.getSolarForecasts().get(0).getForecastBegin(), \"Bridge forecast begin\");\n+        assertEquals(Instant.MIN, scbh.getSolarForecasts().get(0).getForecastEnd(), \"Bridge forecast begin\");\n+        assertEquals(Instant.MAX, scbh.getSolarForecasts().get(1).getForecastBegin(), \"Bridge forecast begin\");\n+        assertEquals(Instant.MIN, scbh.getSolarForecasts().get(1).getForecastEnd(), \"Bridge forecast begin\");\n+        assertEquals(Instant.MAX, scph1.getSolarForecasts().get(0).getForecastBegin(), \"Plane 1 forecast begin\");\n+        assertEquals(Instant.MIN, scph1.getSolarForecasts().get(0).getForecastEnd(), \"Plane 1 forecast begin\");\n+        assertEquals(Instant.MAX, scph2.getSolarForecasts().get(0).getForecastBegin(), \"Plane 2 forecast begin\");\n+        assertEquals(Instant.MIN, scph2.getSolarForecasts().get(0).getForecastEnd(), \"Plane 2 forecast begin\");\n+\n+        manualConfiguration.put(\"refreshInterval\", 5);\n+        scph1.handleConfigurationUpdate(manualConfiguration);\n+        scph1.initialize();\n+        scph2.handleConfigurationUpdate(manualConfiguration);\n+        scph2.initialize();\n+        scbh.getData();\n+\n+        assertEquals(Instant.parse(\"2022-07-17T21:30:00Z\"), scbh.getSolarForecasts().get(0).getForecastBegin(),\n+                \"Bridge forecast begin\");\n+        assertEquals(Instant.parse(\"2022-07-24T21:00:00Z\"), scbh.getSolarForecasts().get(0).getForecastEnd(),\n+                \"Bridge forecast begin\");\n+        assertEquals(Instant.parse(\"2022-07-17T21:30:00Z\"), scbh.getSolarForecasts().get(1).getForecastBegin(),\n+                \"Bridge forecast begin\");\n+        assertEquals(Instant.parse(\"2022-07-24T21:00:00Z\"), scbh.getSolarForecasts().get(1).getForecastEnd(),\n+                \"Bridge forecast begin\");\n+        assertEquals(Instant.parse(\"2022-07-17T21:30:00Z\"), scph1.getSolarForecasts().get(0).getForecastBegin(),\n+                \"Plane 1 forecast begin\");\n+        assertEquals(Instant.parse(\"2022-07-24T21:00:00Z\"), scph1.getSolarForecasts().get(0).getForecastEnd(),\n+                \"Plane 1 forecast begin\");\n+        assertEquals(Instant.parse(\"2022-07-17T21:30:00Z\"), scph2.getSolarForecasts().get(0).getForecastBegin(),\n+                \"Plane 2 forecast begin\");\n+        assertEquals(Instant.parse(\"2022-07-24T21:00:00Z\"), scph2.getSolarForecasts().get(0).getForecastEnd(),\n+                \"Plane 2 forecast begin\");\n+\n+        scbh.dispose();\n+        scph1.dispose();\n+        scph2.dispose();\n+    }\n+\n     @Test\n     void testCombinedEnergyTimeSeries() {\n         setFixedTimeJul18();\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17318",
    "pr_id": 17318,
    "issue_id": 17307,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[sonos] - Sonos Boost is not yet a supported model\nDuring initialization a warning is generated, if as \"[Sonos Boost](https://www.sonos.com/en-us/guides/boost)\" is discovered - and a fallback device type is used to create a thing:\r\n\r\n```\r\n2024-08-20 22:16:15.425 [WARN ] [overy.ZonePlayerDiscoveryParticipant] - 'Sonos Boost' is not yet a supported model, thing type 'sonos:zoneplayer' is considered as default; please open an issue\r\n```\r\n![image](https://github.com/user-attachments/assets/3eced609-80ca-47de-878a-b8504fff329f)\r\n<details>\r\n<summary>System Information - <b>openHAB 4.2.1</b></summary>\r\n<p><pre>\r\n<b>Karaf</b>\r\n  Karaf version               4.4.6\r\n  Karaf home                  /openhab/runtime\r\n  Karaf base                  /openhab/userdata\r\n  OSGi Framework              org.eclipse.osgi-3.18.0.v20220516-2155\r\n<b>JVM</b>\r\n  Java Virtual Machine        OpenJDK 64-Bit Server VM version 17.0.12+7-Debian\r\n  2deb11u1\r\n  Version                     17.0.12\r\n  Vendor                      Debian\r\n<b>Operating system</b>\r\n  Name                        Linux version 6.5.0-44-generic\r\n  Architecture                amd64\r\n  Processors                  4\r\n  Total physical memory       16,293,704 kbytes\r\n  Free physical memory        311,108 kbytes\r\n</pre></p>\r\n</details>\r\n\r\n## Expected Behavior\r\nThis device is a repeater/range extender and the binding should ignore this device type.\r\n\r\n## Current Behavior\r\nA device is added to the openHAB inbox.\r\n\r\n## Possible Solution\r\nBoost devices/repeaters should be ignored by the `ZonePlayerDiscoveryParticipant` - a warning is not necessary. I propose to create a `TRACE` message in this case - but to keep the inbox and log clean in this case.\r\n",
    "issue_word_count": 241,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.binding.sonos/src/main/java/org/openhab/binding/sonos/internal/SonosXMLParser.java",
      "bundles/org.openhab.binding.sonos/src/test/java/org/openhab/binding/sonos/internal/SonosXMLParserTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.sonos/src/test/java/org/openhab/binding/sonos/internal/SonosXMLParserTest.java"
    ],
    "base_commit": "ac219b509b591cc7c420dfd605045061a217cebb",
    "head_commit": "fdd80cb159c2cadc7620602f3d14d488b4c6e4df",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17318",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17318",
    "dockerfile": "",
    "pr_merged_at": "2024-08-23T19:59:52.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.sonos/src/main/java/org/openhab/binding/sonos/internal/SonosXMLParser.java b/bundles/org.openhab.binding.sonos/src/main/java/org/openhab/binding/sonos/internal/SonosXMLParser.java\nindex d1939f0987b9e..c5fecb88f1e3c 100644\n--- a/bundles/org.openhab.binding.sonos/src/main/java/org/openhab/binding/sonos/internal/SonosXMLParser.java\n+++ b/bundles/org.openhab.binding.sonos/src/main/java/org/openhab/binding/sonos/internal/SonosXMLParser.java\n@@ -1016,7 +1016,7 @@ public static String buildThingTypeIdFromModelName(String sonosModelName) {\n         }\n         // Finally remove unexpected characters in a thing type ID\n         id = id.replaceAll(\"[^a-zA-Z0-9_]\", \"\");\n-        // ZP80 is translated to CONNECT and ZP100 to CONNECTAMP\n+        // ZP80 is translated to CONNECT and ZP100 to CONNECTAMP; Boost is ignored\n         switch (id) {\n             case \"ZP80\":\n                 id = \"CONNECT\";\n@@ -1024,6 +1024,9 @@ public static String buildThingTypeIdFromModelName(String sonosModelName) {\n             case \"ZP100\":\n                 id = \"CONNECTAMP\";\n                 break;\n+            case \"Boost\":\n+                id = \"\";\n+                break;\n             default:\n                 break;\n         }\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.sonos/src/test/java/org/openhab/binding/sonos/internal/SonosXMLParserTest.java b/bundles/org.openhab.binding.sonos/src/test/java/org/openhab/binding/sonos/internal/SonosXMLParserTest.java\nindex 65857dd5a0a7a..884db2d2ae3e3 100644\n--- a/bundles/org.openhab.binding.sonos/src/test/java/org/openhab/binding/sonos/internal/SonosXMLParserTest.java\n+++ b/bundles/org.openhab.binding.sonos/src/test/java/org/openhab/binding/sonos/internal/SonosXMLParserTest.java\n@@ -66,6 +66,11 @@ public void buildThingTypeIdFromModelWithAdditionalTextInParenthesis() {\n         assertEquals(\"OneSL\", SonosXMLParser.buildThingTypeIdFromModelName(\"Sonos One SL (OpenHome)\"));\n     }\n \n+    @Test\n+    public void buildThingTypeIdFromBoost() {\n+        assertEquals(\"\", SonosXMLParser.buildThingTypeIdFromModelName(\"Sonos Boost\"));\n+    }\n+\n     @Test\n     public void getRadioTimeFromXML() throws IOException {\n         InputStream resourceStream = getClass().getResourceAsStream(\"/OPML.xml\");\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-addons-17240",
    "pr_id": 17240,
    "issue_id": 17184,
    "repo": "openhab/openhab-addons",
    "problem_statement": "[mqtt.homeassistant] Color channel not created for Hue lights via zigbee2mqtt\n## Expected Behavior\r\nMy lights should have a color channel.\r\n\r\n## Current Behavior\r\nThey only have a brightness channel.\r\n\r\n## Steps to Reproduce (for Bugs)\r\nExample configuration JSON:\r\n```json\r\n{\"availability\":[{\"topic\":\"zigbee2mqtt/bridge/state\",\"value_template\":\"{{ value_json.state }}\"},{\"topic\":\"zigbee2mqtt/Basement Laundry Room East Can/availability\",\"value_template\":\"{{ value_json.state }}\"}],\"availability_mode\":\"all\",\"brightness\":true,\"brightness_scale\":254,\"command_topic\":\"zigbee2mqtt/Basement Laundry Room East Can/set\",\"device\":{\"configuration_url\":\"http://opennuc:8084/#/device/0x001788010d47085f/info\",\"identifiers\":[\"zigbee2mqtt_0x001788010d47085f\"],\"manufacturer\":\"Philips\",\"model\":\"Hue white and color ambiance 5/6\\\" retrofit recessed downlight (9290031346)\",\"name\":\"Basement Laundry Room East Can\",\"sw_version\":\"1.116.3\",\"via_device\":\"zigbee2mqtt_bridge_0xe0798dfffe882ce4\"},\"effect\":true,\"effect_list\":[\"blink\",\"breathe\",\"okay\",\"channel_change\",\"candle\",\"fireplace\",\"colorloop\",\"finish_effect\",\"stop_effect\",\"stop_hue_effect\"],\"max_mireds\":500,\"min_mireds\":153,\"name\":null,\"object_id\":\"basement_laundry_room_east_can\",\"origin\":{\"name\":\"Zigbee2MQTT\",\"sw\":\"1.38.0\",\"url\":\"https://www.zigbee2mqtt.io\"},\"schema\":\"json\",\"state_topic\":\"zigbee2mqtt/Basement Laundry Room East Can\",\"supported_color_modes\":[\"xy\",\"color_temp\"],\"unique_id\":\"0x001788010d47085f_light_zigbee2mqtt\"}\r\n```\r\nNote that there is a `supported_color_modes` attribute, but _not_ a `color_mode` attribute. The code seems to assume that a color bulb will have a `color_mode` attribute.\r\n\r\n## Context\r\nI don't see `color_mode` in the docs at https://www.home-assistant.io/integrations/light.mqtt/#json-schema for the discovery payload, so either Home Assistant changed how it works, or openHAB has always been wrong. More digging is needed.\r\nThis also _used_ to work with these bulbs, so I suspect a zigbee2mqtt update changed their discovery payload.\r\n\r\n## Your Environment\r\n* Version used: openHAB 4.3.0-SNAPSHOT\r\n* Operating System and version (desktop or mobile, Windows 10, Raspbian Buster, ...): Ubuntu 22.04 jammy\r\n* zigbee2mqtt version: 1.38.0\r\n",
    "issue_word_count": 268,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLight.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Light.java",
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java"
    ],
    "base_commit": "8dfb10e8e9b32af2ad6daa75c0342b9ef586deb7",
    "head_commit": "d3bd7b90023e7a40f7479bb9b63e6410ebf227c2",
    "repo_url": "https://github.com/openhab/openhab-addons/pull/17240",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-addons/17240",
    "dockerfile": "",
    "pr_merged_at": "2024-08-13T21:22:31.000Z",
    "patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLight.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLight.java\nindex ca016efd345d9..4895e6cdccc58 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLight.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLight.java\n@@ -22,7 +22,6 @@\n import org.openhab.binding.mqtt.generic.ChannelStateUpdateListener;\n import org.openhab.binding.mqtt.generic.values.TextValue;\n import org.openhab.binding.mqtt.homeassistant.internal.ComponentChannelType;\n-import org.openhab.binding.mqtt.homeassistant.internal.exception.UnsupportedComponentException;\n import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.library.types.HSBType;\n import org.openhab.core.library.types.OnOffType;\n@@ -82,19 +81,7 @@ public JSONSchemaLight(ComponentFactory.ComponentConfiguration builder, boolean\n     @Override\n     protected void buildChannels() {\n         List<LightColorMode> supportedColorModes = channelConfiguration.supportedColorModes;\n-        if (supportedColorModes != null && supportedColorModes.contains(LightColorMode.COLOR_MODE_COLOR_TEMP)) {\n-            colorModeValue = new TextValue(\n-                    supportedColorModes.stream().map(LightColorMode::serializedName).toArray(String[]::new));\n-            buildChannel(COLOR_MODE_CHANNEL_ID, ComponentChannelType.STRING, colorModeValue, \"Color Mode\", this)\n-                    .isAdvanced(true).build();\n-        }\n-\n-        if (channelConfiguration.colorMode) {\n-            if (supportedColorModes == null || channelConfiguration.supportedColorModes.isEmpty()) {\n-                throw new UnsupportedComponentException(\"JSON schema light with color modes '\" + getHaID()\n-                        + \"' does not define supported_color_modes!\");\n-            }\n-\n+        if (supportedColorModes != null) {\n             if (LightColorMode.hasColorChannel(supportedColorModes)) {\n                 hasColorChannel = true;\n             }\n@@ -103,6 +90,14 @@ protected void buildChannels() {\n                 buildChannel(COLOR_TEMP_CHANNEL_ID, ComponentChannelType.NUMBER, colorTempValue, \"Color Temperature\",\n                         this).commandTopic(DUMMY_TOPIC, true, 1)\n                         .commandFilter(command -> handleColorTempCommand(command)).build();\n+\n+                if (hasColorChannel) {\n+                    colorModeValue = new TextValue(\n+                            supportedColorModes.stream().map(LightColorMode::serializedName).toArray(String[]::new));\n+                    buildChannel(COLOR_MODE_CHANNEL_ID, ComponentChannelType.STRING, colorModeValue, \"Color Mode\", this)\n+                            .isAdvanced(true).build();\n+\n+                }\n             }\n         }\n \n\ndiff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Light.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Light.java\nindex db6baee7ba164..b0de155f9052a 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Light.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/component/Light.java\n@@ -83,8 +83,6 @@ static class ChannelConfiguration extends AbstractChannelConfiguration {\n         protected String schema = DEFAULT_SCHEMA;\n         protected @Nullable Boolean optimistic; // All schemas\n         protected boolean brightness = false; // JSON schema only\n-        @SerializedName(\"color_mode\")\n-        protected boolean colorMode = false; // JSON schema only\n         @SerializedName(\"supported_color_modes\")\n         protected @Nullable List<LightColorMode> supportedColorModes; // JSON schema only\n         // Defines when on the payload_on is sent. Using last (the default) will send\n",
    "test_patch": "diff --git a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java\nindex 6763883f1ef70..43455b077f459 100644\n--- a/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java\n+++ b/bundles/org.openhab.binding.mqtt.homeassistant/src/test/java/org/openhab/binding/mqtt/homeassistant/internal/component/JSONSchemaLightTests.java\n@@ -95,6 +95,63 @@ public void testRgb() throws InterruptedException {\n         assertPublished(\"zigbee2mqtt/light/set/state\", \"{\\\"state\\\":\\\"ON\\\",\\\"brightness\\\":127}\");\n     }\n \n+    @Test\n+    public void testRgbNewStyle() throws InterruptedException {\n+        // @formatter:off\n+        var component = (Light) discoverComponent(configTopicToMqtt(CONFIG_TOPIC),\n+                \"\"\"\n+                { \\\n+                  \"availability\": [ \\\n+                    { \\\n+                      \"topic\": \"zigbee2mqtt/bridge/state\" \\\n+                    } \\\n+                  ], \\\n+                  \"device\": { \\\n+                    \"identifiers\": [ \\\n+                      \"zigbee2mqtt_0x0000000000000000\" \\\n+                    ], \\\n+                    \"manufacturer\": \"Lights inc\", \\\n+                    \"model\": \"light v1\", \\\n+                    \"name\": \"Light\", \\\n+                    \"sw_version\": \"Zigbee2MQTT 1.18.2\" \\\n+                  }, \\\n+                  \"name\": \"light\", \\\n+                  \"schema\": \"json\", \\\n+                  \"state_topic\": \"zigbee2mqtt/light/state\", \\\n+                  \"command_topic\": \"zigbee2mqtt/light/set/state\", \\\n+                  \"brightness\": true, \\\n+                  \"supported_color_modes\": [\"rgb\"]\\\n+                }\\\n+                \"\"\");\n+        // @formatter:on\n+\n+        assertThat(component.channels.size(), is(1));\n+        assertThat(component.getName(), is(\"light\"));\n+\n+        assertChannel(component, Light.COLOR_CHANNEL_ID, \"\", \"dummy\", \"Color\", ColorValue.class);\n+\n+        publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"state\\\": \\\"ON\\\" }\");\n+        assertState(component, Light.COLOR_CHANNEL_ID, HSBType.WHITE);\n+        publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"color\\\": {\\\"r\\\": 10, \\\"g\\\": 20, \\\"b\\\": 30 } }\");\n+        assertState(component, Light.COLOR_CHANNEL_ID, HSBType.fromRGB(10, 20, 30));\n+        publishMessage(\"zigbee2mqtt/light/state\", \"{ \\\"brightness\\\": 255 }\");\n+        assertState(component, Light.COLOR_CHANNEL_ID, new HSBType(\"210,67,100\"));\n+\n+        sendCommand(component, Light.COLOR_CHANNEL_ID, HSBType.BLUE);\n+        assertPublished(\"zigbee2mqtt/light/set/state\",\n+                \"{\\\"state\\\":\\\"ON\\\",\\\"brightness\\\":255,\\\"color\\\":{\\\"r\\\":0,\\\"g\\\":0,\\\"b\\\":255}}\");\n+\n+        // OnOff commands should route to the correct topic\n+        sendCommand(component, Light.COLOR_CHANNEL_ID, OnOffType.OFF);\n+        assertPublished(\"zigbee2mqtt/light/set/state\", \"{\\\"state\\\":\\\"OFF\\\"}\");\n+\n+        sendCommand(component, Light.COLOR_CHANNEL_ID, OnOffType.ON);\n+        assertPublished(\"zigbee2mqtt/light/set/state\", \"{\\\"state\\\":\\\"ON\\\"}\");\n+\n+        sendCommand(component, Light.COLOR_CHANNEL_ID, new PercentType(50));\n+        assertPublished(\"zigbee2mqtt/light/set/state\", \"{\\\"state\\\":\\\"ON\\\",\\\"brightness\\\":127}\");\n+    }\n+\n     @Test\n     public void testBrightnessAndOnOff() throws InterruptedException {\n         // @formatter:off\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  }
]