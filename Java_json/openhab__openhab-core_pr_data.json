[
  {
    "instance_id": "openhab__openhab-core-4856",
    "pr_id": 4856,
    "issue_id": 4513,
    "repo": "openhab/openhab-core",
    "problem_statement": "[automation] Add provider script extension\nThis new script extension allow scripts to provide openHAB entities like Items & Things without needing to manually handle the lifecycle of those.\r\nEntities added through this extension will be bound to the lifecylcle of the script that added them, and won't be modifiable through the UI.\r\n\r\nScripts need to use the special implementations of `ItemRegistry` and `ThingRegistry` from the `provider` preset and core will take care of syncing the entity lifecycle with the script's lifecycle.",
    "issue_word_count": 77,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/shared/ScriptedItemProvider.java",
      "bundles/org.openhab.core.model.item/src/org/openhab/core/model/item/internal/GenericItemProvider.java",
      "itests/org.openhab.core.model.item.tests/src/main/java/org/openhab/core/model/item/internal/GenericItemProviderTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.model.item.tests/src/main/java/org/openhab/core/model/item/internal/GenericItemProviderTest.java"
    ],
    "base_commit": "fcd3a38fd4581075fc74a04b8e5886c5f82ac0e4",
    "head_commit": "d901442e148271952cb60b7588d890b53dea14af",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4856",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4856",
    "dockerfile": "",
    "pr_merged_at": "2025-06-17T20:45:45.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4776",
    "pr_id": 4776,
    "issue_id": 3666,
    "repo": "openhab/openhab-core",
    "problem_statement": "RFC: YAML configuration\nAs discussed in #3636 we need configuration for user-defined tags. It was discussed that an easy to understand standard configuration format would be preferable over creating a new DSL. It was also suggested in different issues that it would be nice to be able to copy&paste from UI to files. Main UI uses a YAML representation for things and items, so this would be good choice. We already have a feature for Jackson's YAML parser, so no additional dependencies are needed for that.\r\n\r\nHowever, there are a few things to discuss:\r\n\r\n- Should different things be configured in one file (e.g. items and things) or would be prefer to have different files?\r\n- Should there be a versioning? This would allow us to better handle future upgrades.\r\n\r\nI would suggest to add a `YamlModelRepository` (similar to our XText `ModelRepository`) that is an OSGi service that encapsulates all YAML processing and file processing. Consumer are OSGi services that implement `YamlModelListener<T>` where `T` is a DTO that describes the format. The listeners are injected into the `YamlModelRepository` and whenever a matching model (identified by the root name) is found the listener is notified.\r\n\r\n```\r\npublic interface YamlModelListener<T> {\r\n    void addedModel(String modelName, List<? extends T> elements);\r\n    void updatedModel(String modelName, List<T> elements);\r\n    void removedModel(String modelName, List<T> elements);\r\n    Class<T> getElementClass();\r\n    String getRootName();\r\n}\r\n```\r\n\r\nExample listener (not fully implemented):\r\n\r\n```\r\n@Component(service=YamlModelListener.class)\r\npublic static class TestListener implements YamlModelListener<YamlItem> {\r\n    private final Logger logger = LoggerFactory.getLogger(TestListener.class);\r\n\r\n    @Override\r\n    public void addedModel(String modelName, List<? extends YamlItem> elements) {\r\n        logger.info(\"Added model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void updatedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Updated model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void removedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Removed model {} with elements {}\", modelName, elements); \r\n    }\r\n\r\n    @Override\r\n    public Class<YamlItem> getElementClass() {\r\n        return YamlItem.class;\r\n    }\r\n\r\n    @Override\r\n    public String getRootName() {\r\n        return \"items\";\r\n    }\r\n}\r\n```\r\n\r\nExample DTO:\r\n\r\n```\r\npublic class YamlItem {\r\n    private String name = \"\";\r\n    private String type = \"\";\r\n    private @Nullable String label;\r\n    private @Nullable String category;\r\n    private Set<String> tags = Set.of();\r\n    private List<String> groupNames = List.of();\r\n    private List<YamlLink> links = List.of();\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public @Nullable String getLabel() {\r\n        return label;\r\n    }\r\n\r\n    public @Nullable String getCategory() {\r\n        return category;\r\n    }\r\n\r\n    public Set<String> getTags() {\r\n        return tags;\r\n    }\r\n\r\n    public List<String> getGroupNames() {\r\n        return groupNames;\r\n    }\r\n\r\n    public List<YamlLink> getLinks() {\r\n        return links;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"YamlItem{\" + \"name='\" + name + \"'\" + \", type='\" + type + \"'\" + \", label='\" + label + \"'\"\r\n                + \", category='\" + category + \"'\" + \", tags=\" + tags + \", groupNames=\" + groupNames + \", links=\" + links\r\n                + \"}\";\r\n    }\r\n}\r\n```\r\n\r\nand the file:\r\n\r\n```\r\nversion: 1\r\nitems:\r\n  - name: Outdoor_temp\r\n      type: Number:Temperature\r\n      label: \"Outdoor [%.1f Â°C]\"\r\n      groupNames:               \r\n        - gTemperatures\r\n        - gOutdoor\r\n        - gPersist5\r\n      links:\r\n        - channel: \"deconz:thing1:channel1\"\r\n        - channel: \"deconz:thing2:channel2\"\r\n          profile: \"MyScope:MyProfile\r\n```",
    "issue_word_count": 443,
    "test_files_count": 2,
    "non_test_files_count": 11,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/fileformat/FileFormatResource.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/items/YamlChannelLinkProvider.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/items/YamlGroupDTO.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/items/YamlItemDTO.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/items/YamlItemProvider.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/items/YamlMetadataDTO.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/items/YamlMetadataProvider.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/items/fileconverter/YamlItemFileConverter.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/util/YamlElementUtils.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/items/YamlGroupDTOTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/items/YamlItemDTOTest.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/CoreItemFactory.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/items/YamlGroupDTOTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/items/YamlItemDTOTest.java"
    ],
    "base_commit": "e9700f85ec844946926936075fdb8c093d5068eb",
    "head_commit": "a90c72f291a9c08aa9e4c5e8244cdfa7c68948b3",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4776",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4776",
    "dockerfile": "",
    "pr_merged_at": "2025-05-18T18:46:18.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4758",
    "pr_id": 4758,
    "issue_id": 4749,
    "repo": "openhab/openhab-core",
    "problem_statement": "Yaml Model Repository: Remove elements no longer in model\nThis fix two scenarios:\r\n- When the new model is missing `version:` key but the old model had one, the file is considered invalid, but the previously loaded elements didn't get removed\r\n- When the new model has a valid `version:` key, but the entire element type, e.g. `thing:` is removed, the previously loaded elements (e.g. things) didn't get removed.\r\n\r\nAdditionally, log a warning when an unknown element type is encountered, log a warning, e.g.\r\n```\r\nversion: 2\r\nthangs: # misspelled?\r\n  x:y:z:d: xx\r\n```\r\n\r\nSee https://github.com/openhab/openhab-core/issues/3666#issuecomment-2829347883\r\n",
    "issue_word_count": 98,
    "test_files_count": 7,
    "non_test_files_count": 0,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdateRemovedElements.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdateRemovedVersion.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdateRenamedElements.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdateRemovedElements.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdateRemovedVersion.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdateRenamedElements.yaml"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdateRemovedElements.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdateRemovedVersion.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdateRenamedElements.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdateRemovedElements.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdateRemovedVersion.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdateRenamedElements.yaml"
    ],
    "base_commit": "8fbea7683489b4b043a304257838fb56fe120bc8",
    "head_commit": "8cf792e4173282912f1d978364b1f69070d284af",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4758",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4758",
    "dockerfile": "",
    "pr_merged_at": "2025-04-28T09:13:29.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4747",
    "pr_id": 4747,
    "issue_id": 3666,
    "repo": "openhab/openhab-core",
    "problem_statement": "RFC: YAML configuration\nAs discussed in #3636 we need configuration for user-defined tags. It was discussed that an easy to understand standard configuration format would be preferable over creating a new DSL. It was also suggested in different issues that it would be nice to be able to copy&paste from UI to files. Main UI uses a YAML representation for things and items, so this would be good choice. We already have a feature for Jackson's YAML parser, so no additional dependencies are needed for that.\r\n\r\nHowever, there are a few things to discuss:\r\n\r\n- Should different things be configured in one file (e.g. items and things) or would be prefer to have different files?\r\n- Should there be a versioning? This would allow us to better handle future upgrades.\r\n\r\nI would suggest to add a `YamlModelRepository` (similar to our XText `ModelRepository`) that is an OSGi service that encapsulates all YAML processing and file processing. Consumer are OSGi services that implement `YamlModelListener<T>` where `T` is a DTO that describes the format. The listeners are injected into the `YamlModelRepository` and whenever a matching model (identified by the root name) is found the listener is notified.\r\n\r\n```\r\npublic interface YamlModelListener<T> {\r\n    void addedModel(String modelName, List<? extends T> elements);\r\n    void updatedModel(String modelName, List<T> elements);\r\n    void removedModel(String modelName, List<T> elements);\r\n    Class<T> getElementClass();\r\n    String getRootName();\r\n}\r\n```\r\n\r\nExample listener (not fully implemented):\r\n\r\n```\r\n@Component(service=YamlModelListener.class)\r\npublic static class TestListener implements YamlModelListener<YamlItem> {\r\n    private final Logger logger = LoggerFactory.getLogger(TestListener.class);\r\n\r\n    @Override\r\n    public void addedModel(String modelName, List<? extends YamlItem> elements) {\r\n        logger.info(\"Added model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void updatedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Updated model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void removedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Removed model {} with elements {}\", modelName, elements); \r\n    }\r\n\r\n    @Override\r\n    public Class<YamlItem> getElementClass() {\r\n        return YamlItem.class;\r\n    }\r\n\r\n    @Override\r\n    public String getRootName() {\r\n        return \"items\";\r\n    }\r\n}\r\n```\r\n\r\nExample DTO:\r\n\r\n```\r\npublic class YamlItem {\r\n    private String name = \"\";\r\n    private String type = \"\";\r\n    private @Nullable String label;\r\n    private @Nullable String category;\r\n    private Set<String> tags = Set.of();\r\n    private List<String> groupNames = List.of();\r\n    private List<YamlLink> links = List.of();\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public @Nullable String getLabel() {\r\n        return label;\r\n    }\r\n\r\n    public @Nullable String getCategory() {\r\n        return category;\r\n    }\r\n\r\n    public Set<String> getTags() {\r\n        return tags;\r\n    }\r\n\r\n    public List<String> getGroupNames() {\r\n        return groupNames;\r\n    }\r\n\r\n    public List<YamlLink> getLinks() {\r\n        return links;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"YamlItem{\" + \"name='\" + name + \"'\" + \", type='\" + type + \"'\" + \", label='\" + label + \"'\"\r\n                + \", category='\" + category + \"'\" + \", tags=\" + tags + \", groupNames=\" + groupNames + \", links=\" + links\r\n                + \"}\";\r\n    }\r\n}\r\n```\r\n\r\nand the file:\r\n\r\n```\r\nversion: 1\r\nitems:\r\n  - name: Outdoor_temp\r\n      type: Number:Temperature\r\n      label: \"Outdoor [%.1f Â°C]\"\r\n      groupNames:               \r\n        - gTemperatures\r\n        - gOutdoor\r\n        - gPersist5\r\n      links:\r\n        - channel: \"deconz:thing1:channel1\"\r\n        - channel: \"deconz:thing2:channel2\"\r\n          profile: \"MyScope:MyProfile\r\n```",
    "issue_word_count": 443,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java"
    ],
    "base_commit": "685264295c62f5e8179d36ba06b60aa55cc9115f",
    "head_commit": "988d049ad99a42de6cd28639a0556333ef905aba",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4747",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4747",
    "dockerfile": "",
    "pr_merged_at": "2025-04-26T06:07:55.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4702",
    "pr_id": 4702,
    "issue_id": 4700,
    "repo": "openhab/openhab-core",
    "problem_statement": "Sort SemanticTags.csv and group children under their parent tag\nFollow up to #4694 and #4695\r\n\r\n- Sort SemanticTags.csv\r\n- Sort the tags in the xsd alphabetically\r\n- Remove Point_Sensor_Tilt to avoid duplicate tags, because a Property_Tilt was added in #4695\r\n",
    "issue_word_count": 29,
    "test_files_count": 1,
    "non_test_files_count": 0,
    "pr_changed_files": [
      "bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/SemanticTagsTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/SemanticTagsTest.java"
    ],
    "base_commit": "693943e7c1f7d96ed882ddfaa08083f331452561",
    "head_commit": "763b0345e75579e28e8420f7183e9c6a7a76959d",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4702",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4702",
    "dockerfile": "",
    "pr_merged_at": "2025-04-05T15:44:28.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4691",
    "pr_id": 4691,
    "issue_id": 3666,
    "repo": "openhab/openhab-core",
    "problem_statement": "RFC: YAML configuration\nAs discussed in #3636 we need configuration for user-defined tags. It was discussed that an easy to understand standard configuration format would be preferable over creating a new DSL. It was also suggested in different issues that it would be nice to be able to copy&paste from UI to files. Main UI uses a YAML representation for things and items, so this would be good choice. We already have a feature for Jackson's YAML parser, so no additional dependencies are needed for that.\r\n\r\nHowever, there are a few things to discuss:\r\n\r\n- Should different things be configured in one file (e.g. items and things) or would be prefer to have different files?\r\n- Should there be a versioning? This would allow us to better handle future upgrades.\r\n\r\nI would suggest to add a `YamlModelRepository` (similar to our XText `ModelRepository`) that is an OSGi service that encapsulates all YAML processing and file processing. Consumer are OSGi services that implement `YamlModelListener<T>` where `T` is a DTO that describes the format. The listeners are injected into the `YamlModelRepository` and whenever a matching model (identified by the root name) is found the listener is notified.\r\n\r\n```\r\npublic interface YamlModelListener<T> {\r\n    void addedModel(String modelName, List<? extends T> elements);\r\n    void updatedModel(String modelName, List<T> elements);\r\n    void removedModel(String modelName, List<T> elements);\r\n    Class<T> getElementClass();\r\n    String getRootName();\r\n}\r\n```\r\n\r\nExample listener (not fully implemented):\r\n\r\n```\r\n@Component(service=YamlModelListener.class)\r\npublic static class TestListener implements YamlModelListener<YamlItem> {\r\n    private final Logger logger = LoggerFactory.getLogger(TestListener.class);\r\n\r\n    @Override\r\n    public void addedModel(String modelName, List<? extends YamlItem> elements) {\r\n        logger.info(\"Added model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void updatedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Updated model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void removedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Removed model {} with elements {}\", modelName, elements); \r\n    }\r\n\r\n    @Override\r\n    public Class<YamlItem> getElementClass() {\r\n        return YamlItem.class;\r\n    }\r\n\r\n    @Override\r\n    public String getRootName() {\r\n        return \"items\";\r\n    }\r\n}\r\n```\r\n\r\nExample DTO:\r\n\r\n```\r\npublic class YamlItem {\r\n    private String name = \"\";\r\n    private String type = \"\";\r\n    private @Nullable String label;\r\n    private @Nullable String category;\r\n    private Set<String> tags = Set.of();\r\n    private List<String> groupNames = List.of();\r\n    private List<YamlLink> links = List.of();\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public @Nullable String getLabel() {\r\n        return label;\r\n    }\r\n\r\n    public @Nullable String getCategory() {\r\n        return category;\r\n    }\r\n\r\n    public Set<String> getTags() {\r\n        return tags;\r\n    }\r\n\r\n    public List<String> getGroupNames() {\r\n        return groupNames;\r\n    }\r\n\r\n    public List<YamlLink> getLinks() {\r\n        return links;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"YamlItem{\" + \"name='\" + name + \"'\" + \", type='\" + type + \"'\" + \", label='\" + label + \"'\"\r\n                + \", category='\" + category + \"'\" + \", tags=\" + tags + \", groupNames=\" + groupNames + \", links=\" + links\r\n                + \"}\";\r\n    }\r\n}\r\n```\r\n\r\nand the file:\r\n\r\n```\r\nversion: 1\r\nitems:\r\n  - name: Outdoor_temp\r\n      type: Number:Temperature\r\n      label: \"Outdoor [%.1f Â°C]\"\r\n      groupNames:               \r\n        - gTemperatures\r\n        - gOutdoor\r\n        - gPersist5\r\n      links:\r\n        - channel: \"deconz:thing1:channel1\"\r\n        - channel: \"deconz:thing2:channel2\"\r\n          profile: \"MyScope:MyProfile\r\n```",
    "issue_word_count": 443,
    "test_files_count": 4,
    "non_test_files_count": 12,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/fileformat/FileFormatResource.java",
      "bundles/org.openhab.core.model.yaml/pom.xml",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElement.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelRepository.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagDTO.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/things/YamlChannelDTO.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/things/YamlThingDTO.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/things/YamlThingProvider.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/things/fileconverter/YamlThingFileConverter.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/util/YamlElementUtils.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/things/YamlChannelDTOTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/things/YamlThingDTOTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/FirstTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/SecondTypeDTO.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/fileconverter/AbstractThingFileGenerator.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/things/YamlChannelDTOTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/things/YamlThingDTOTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/FirstTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/SecondTypeDTO.java"
    ],
    "base_commit": "1c955f3cb3d5e66aa5016822dd8bce197e0664e9",
    "head_commit": "02b1635a9e8ceb72a64e93d2a17c5798cb362c2c",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4691",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4691",
    "dockerfile": "",
    "pr_merged_at": "2025-04-19T20:21:09.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4667",
    "pr_id": 4667,
    "issue_id": 3666,
    "repo": "openhab/openhab-core",
    "problem_statement": "RFC: YAML configuration\nAs discussed in #3636 we need configuration for user-defined tags. It was discussed that an easy to understand standard configuration format would be preferable over creating a new DSL. It was also suggested in different issues that it would be nice to be able to copy&paste from UI to files. Main UI uses a YAML representation for things and items, so this would be good choice. We already have a feature for Jackson's YAML parser, so no additional dependencies are needed for that.\r\n\r\nHowever, there are a few things to discuss:\r\n\r\n- Should different things be configured in one file (e.g. items and things) or would be prefer to have different files?\r\n- Should there be a versioning? This would allow us to better handle future upgrades.\r\n\r\nI would suggest to add a `YamlModelRepository` (similar to our XText `ModelRepository`) that is an OSGi service that encapsulates all YAML processing and file processing. Consumer are OSGi services that implement `YamlModelListener<T>` where `T` is a DTO that describes the format. The listeners are injected into the `YamlModelRepository` and whenever a matching model (identified by the root name) is found the listener is notified.\r\n\r\n```\r\npublic interface YamlModelListener<T> {\r\n    void addedModel(String modelName, List<? extends T> elements);\r\n    void updatedModel(String modelName, List<T> elements);\r\n    void removedModel(String modelName, List<T> elements);\r\n    Class<T> getElementClass();\r\n    String getRootName();\r\n}\r\n```\r\n\r\nExample listener (not fully implemented):\r\n\r\n```\r\n@Component(service=YamlModelListener.class)\r\npublic static class TestListener implements YamlModelListener<YamlItem> {\r\n    private final Logger logger = LoggerFactory.getLogger(TestListener.class);\r\n\r\n    @Override\r\n    public void addedModel(String modelName, List<? extends YamlItem> elements) {\r\n        logger.info(\"Added model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void updatedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Updated model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void removedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Removed model {} with elements {}\", modelName, elements); \r\n    }\r\n\r\n    @Override\r\n    public Class<YamlItem> getElementClass() {\r\n        return YamlItem.class;\r\n    }\r\n\r\n    @Override\r\n    public String getRootName() {\r\n        return \"items\";\r\n    }\r\n}\r\n```\r\n\r\nExample DTO:\r\n\r\n```\r\npublic class YamlItem {\r\n    private String name = \"\";\r\n    private String type = \"\";\r\n    private @Nullable String label;\r\n    private @Nullable String category;\r\n    private Set<String> tags = Set.of();\r\n    private List<String> groupNames = List.of();\r\n    private List<YamlLink> links = List.of();\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public @Nullable String getLabel() {\r\n        return label;\r\n    }\r\n\r\n    public @Nullable String getCategory() {\r\n        return category;\r\n    }\r\n\r\n    public Set<String> getTags() {\r\n        return tags;\r\n    }\r\n\r\n    public List<String> getGroupNames() {\r\n        return groupNames;\r\n    }\r\n\r\n    public List<YamlLink> getLinks() {\r\n        return links;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"YamlItem{\" + \"name='\" + name + \"'\" + \", type='\" + type + \"'\" + \", label='\" + label + \"'\"\r\n                + \", category='\" + category + \"'\" + \", tags=\" + tags + \", groupNames=\" + groupNames + \", links=\" + links\r\n                + \"}\";\r\n    }\r\n}\r\n```\r\n\r\nand the file:\r\n\r\n```\r\nversion: 1\r\nitems:\r\n  - name: Outdoor_temp\r\n      type: Number:Temperature\r\n      label: \"Outdoor [%.1f Â°C]\"\r\n      groupNames:               \r\n        - gTemperatures\r\n        - gOutdoor\r\n        - gPersist5\r\n      links:\r\n        - channel: \"deconz:thing1:channel1\"\r\n        - channel: \"deconz:thing2:channel2\"\r\n          profile: \"MyScope:MyProfile\r\n```",
    "issue_word_count": 443,
    "test_files_count": 1,
    "non_test_files_count": 3,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelListener.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagProvider.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java"
    ],
    "base_commit": "089961ac43804f14b570ada0aed5610425c835b6",
    "head_commit": "9d0772d095a7946a74961047db75bc4ebd3c189e",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4667",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4667",
    "dockerfile": "",
    "pr_merged_at": "2025-04-04T09:23:41.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4654",
    "pr_id": 4654,
    "issue_id": 4645,
    "repo": "openhab/openhab-core",
    "problem_statement": "[persistence] Upgrade to 5.0.0.M1 and later SNAPSHOT cause \"Querying persistence service 'influxdb' to restore takes more than 5000ms\"\nSince updating to OH 5.0.0.M1 (and subsequent SNAPSHOT) I am seeing errors as follows: \n\n```\n2025-03-14 09:13:49.863 [WARN ] [ence.internal.PersistenceManagerImpl] - Querying persistence service 'influxdb' to restore 'TestHueLight' takes more than 5000ms.\n2025-03-14 09:13:54.870 [WARN ] [ence.internal.PersistenceManagerImpl] - Querying persistence service 'influxdb' to restore 'Partition4_PartitionState' takes more than 5000ms.\n```\nI reported the issue on the forums at https://community.openhab.org/t/openhab-5-0-milestone-discussion/162686/26\n\nIt was suggested to log here as it could be related to https://github.com/openhab/openhab-core/pull/4463\n\n## Context\nThis occurs on starting/restarting OH since the update. I have updated to the latest influxdb as well as changed to Eclipse Adoptium\n\n## Your Environment\n* Version used: openHAB 5.0.0 Build #4542\n* Environment name and version (e.g. Chrome 111, Java 17, Node.js 18.15, ...): Java Runtime Eclipse Adoptium 21.0.6 (Temurin-21.0.6+7)\n* Operating System and version: Windows 11/10.0 (amd64)\n\nAlso seeing the following error in wrapper.log (not sure if this is related?)\n\n```\nSTATUS | wrapper  | 2025/03/14 13:18:11 | --> Wrapper Started as Service\nSTATUS | wrapper  | 2025/03/14 13:18:11 | Launching a JVM...\nINFO   | jvm 1    | 2025/03/14 13:18:12 | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org\nINFO   | jvm 1    | 2025/03/14 13:18:12 |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.\nINFO   | jvm 1    | 2025/03/14 13:18:12 | \nINFO   | jvm 1    | 2025/03/14 13:18:13 | 13:18:13.711 [Framework Event Dispatcher: Equinox Container: b0d69dcc-7f74-4ac0-bc41-35d4ad630127] ERROR Events.Framework - FrameworkEvent ERROR\nINFO   | jvm 1    | 2025/03/14 13:18:13 | java.util.zip.ZipException: Exception in opening zip file: C:\\openHAB\\userdata\\cache\\org.eclipse.osgi\\64\\0\\.cp\\lib\\geronimo-osgi-locator.jar\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.framework.util.SecureAction.getZipFile(SecureAction.java:356) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.storage.bundlefile.ZipBundleFile.doOpen(ZipBundleFile.java:51) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.storage.bundlefile.CloseableBundleFile.internalOpen(CloseableBundleFile.java:140) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.storage.bundlefile.CloseableBundleFile.lockOpen(CloseableBundleFile.java:78) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.storage.bundlefile.CloseableBundleFile.getEntry(CloseableBundleFile.java:274) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathEntry.loadManifest(ClasspathEntry.java:230) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathEntry.<init>(ClasspathEntry.java:77) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.ModuleClassLoader.createClassPathEntry(ModuleClassLoader.java:267) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.createClassPathEntry(ClasspathManager.java:343) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.getClasspath(ClasspathManager.java:295) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.addStandardClassPathEntry(ClasspathManager.java:213) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.addClassPathEntry(ClasspathManager.java:205) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findClassPathEntry(ClasspathManager.java:188) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.buildClasspath(ClasspathManager.java:166) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.<init>(ClasspathManager.java:94) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.EquinoxClassLoader.<init>(EquinoxClassLoader.java:54) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.BundleLoader.createClassLoaderPrivledged(BundleLoader.java:345) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.BundleLoader.getModuleClassLoader(BundleLoader.java:262) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxBundle$1.run(EquinoxBundle.java:653) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxBundle$1.run(EquinoxBundle.java:1) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.security.AccessController.doPrivileged(AccessController.java:319) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxBundle.getModuleClassLoader(EquinoxBundle.java:646) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxBundle.getResource(EquinoxBundle.java:588) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.apache.servicemix.specs.activation.Activator.register(Activator.java:58) ~[org.apache.servicemix.specs.activation-api-1.2.1-1.2.1_3.jar:1.2.1_3]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.apache.servicemix.specs.locator.Activator.start(Activator.java:70) ~[org.apache.servicemix.specs.activation-api-1.2.1-1.2.1_3.jar:1.2.1_3]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.apache.servicemix.specs.activation.Activator.start(Activator.java:46) ~[org.apache.servicemix.specs.activation-api-1.2.1-1.2.1_3.jar:1.2.1_3]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.security.AccessController.doPrivileged(AccessController.java:571) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767) [org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.Module.doStart(Module.java:605) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.Module.start(Module.java:468) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1783) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234) [org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345) [org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | Caused by: java.util.zip.ZipException: Invalid CEN header (invalid extra data field size for tag: 0xbfef at 55)\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.zerror(ZipFile.java:1781) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.checkExtraFields(ZipFile.java:1294) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.checkAndAddEntry(ZipFile.java:1233) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.initCEN(ZipFile.java:1720) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.<init>(ZipFile.java:1495) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.get(ZipFile.java:1458) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:724) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile.<init>(ZipFile.java:251) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile.<init>(ZipFile.java:180) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile.<init>(ZipFile.java:194) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.framework.util.SecureAction.getZipFile(SecureAction.java:342) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \t... 43 more\nINFO   | jvm 1    | 2025/03/14 13:18:13 | 13:18:13.868 [Framework Event Dispatcher: Equinox Container: b0d69dcc-7f74-4ac0-bc41-35d4ad630127] ERROR Events.Framework - FrameworkEvent ERROR\nINFO   | jvm 1    | 2025/03/14 13:18:13 | java.util.zip.ZipException: Exception in opening zip file: C:\\openHAB\\userdata\\cache\\org.eclipse.osgi\\64\\0\\.cp\\lib\\geronimo-osgi-locator.jar\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.framework.util.SecureAction.getZipFile(SecureAction.java:356) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.storage.bundlefile.ZipBundleFile.doOpen(ZipBundleFile.java:51) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.storage.bundlefile.CloseableBundleFile.internalOpen(CloseableBundleFile.java:140) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.storage.bundlefile.CloseableBundleFile.lockOpen(CloseableBundleFile.java:78) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.storage.bundlefile.CloseableBundleFile.getEntry(CloseableBundleFile.java:274) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.storage.bundlefile.BundleFile.getResourceURL(BundleFile.java:142) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathEntry.findResource(ClasspathEntry.java:213) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalResourceImpl(ClasspathManager.java:421) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalResourceImpl(ClasspathManager.java:401) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalResource(ClasspathManager.java:372) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalResource(ModuleClassLoader.java:327) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.BundleLoader.findLocalResource(BundleLoader.java:911) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.BundleLoader.findResource(BundleLoader.java:693) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.loader.ModuleClassLoader.getResource(ModuleClassLoader.java:205) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxBundle.getResource(EquinoxBundle.java:590) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.apache.servicemix.specs.activation.Activator.register(Activator.java:58) ~[org.apache.servicemix.specs.activation-api-1.2.1-1.2.1_3.jar:1.2.1_3]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.apache.servicemix.specs.locator.Activator.start(Activator.java:70) ~[org.apache.servicemix.specs.activation-api-1.2.1-1.2.1_3.jar:1.2.1_3]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.apache.servicemix.specs.activation.Activator.start(Activator.java:46) ~[org.apache.servicemix.specs.activation-api-1.2.1-1.2.1_3.jar:1.2.1_3]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:818) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.security.AccessController.doPrivileged(AccessController.java:571) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:810) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:767) [org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1032) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:371) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.Module.doStart(Module.java:605) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.Module.start(Module.java:468) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$2.run(ModuleContainer.java:1847) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$1$1.execute(EquinoxContainerAdaptor.java:136) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1840) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1783) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1745) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1667) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234) [org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345) [org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | Caused by: java.util.zip.ZipException: Invalid CEN header (invalid extra data field size for tag: 0xbfef at 55)\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.zerror(ZipFile.java:1781) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.checkExtraFields(ZipFile.java:1294) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.checkAndAddEntry(ZipFile.java:1233) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.initCEN(ZipFile.java:1720) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.<init>(ZipFile.java:1495) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$Source.get(ZipFile.java:1458) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:724) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile.<init>(ZipFile.java:251) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile.<init>(ZipFile.java:180) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat java.util.zip.ZipFile.<init>(ZipFile.java:194) ~[?:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \tat org.eclipse.osgi.framework.util.SecureAction.getZipFile(SecureAction.java:342) ~[org.eclipse.osgi-3.18.0.jar:?]\nINFO   | jvm 1    | 2025/03/14 13:18:13 | \t... 35 more\n```\n\nThank you.",
    "issue_word_count": 3091,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/QueryablePersistenceService.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java"
    ],
    "base_commit": "2eec58a95fce9f1402666b81791074e81d1b09b7",
    "head_commit": "a5494b21dd975414616ab8120795e58abfd92865",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4654",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4654",
    "dockerfile": "",
    "pr_merged_at": "2025-03-18T20:48:57.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4650",
    "pr_id": 4650,
    "issue_id": 4362,
    "repo": "openhab/openhab-core",
    "problem_statement": "Add profile support to i18n-maven-plugin\nIt would be nice if the i18n-maven-plugin can also generate the default translations for profiles.\r\n\r\nProfile config-descriptions are typically part of transformation add-ons (see [regexProfile.xml](https://github.com/openhab/openhab-addons/blob/84bcb6a4b6f7859fc6cdc091e5908f765c08dae7/bundles/org.openhab.transform.regex/src/main/resources/OH-INF/config/regexProfile.xml#L7-L18) and [regex.properties](https://github.com/openhab/openhab-addons/blob/84bcb6a4b6f7859fc6cdc091e5908f765c08dae7/bundles/org.openhab.transform.regex/src/main/resources/OH-INF/i18n/regex.properties)) but they can also exist in bindings (see [phonebookProfile.xml](https://github.com/openhab/openhab-addons/blob/84bcb6a4b6f7859fc6cdc091e5908f765c08dae7/bundles/org.openhab.binding.tr064/src/main/resources/OH-INF/config/phonebookProfile.xml#L7-L24) and [tr064.properties](https://github.com/openhab/openhab-addons/blob/84bcb6a4b6f7859fc6cdc091e5908f765c08dae7/bundles/org.openhab.binding.tr064/src/main/resources/OH-INF/i18n/tr064.properties#L65-L71)).",
    "issue_word_count": 136,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "tools/i18n-plugin/src/main/java/org/openhab/core/tools/i18n/plugin/GenerateDefaultTranslationsMojo.java",
      "tools/i18n-plugin/src/main/java/org/openhab/core/tools/i18n/plugin/XmlToTranslationsConverter.java",
      "tools/i18n-plugin/src/test/java/org/openhab/core/tools/i18n/plugin/XmlToTranslationsConverterTest.java"
    ],
    "pr_changed_test_files": [
      "tools/i18n-plugin/src/test/java/org/openhab/core/tools/i18n/plugin/XmlToTranslationsConverterTest.java"
    ],
    "base_commit": "2eec58a95fce9f1402666b81791074e81d1b09b7",
    "head_commit": "262227de928f75cc292d80c238b5ac323ba634c1",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4650",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4650",
    "dockerfile": "",
    "pr_merged_at": "2025-04-02T18:03:37.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4648",
    "pr_id": 4648,
    "issue_id": 3666,
    "repo": "openhab/openhab-core",
    "problem_statement": "RFC: YAML configuration\nAs discussed in #3636 we need configuration for user-defined tags. It was discussed that an easy to understand standard configuration format would be preferable over creating a new DSL. It was also suggested in different issues that it would be nice to be able to copy&paste from UI to files. Main UI uses a YAML representation for things and items, so this would be good choice. We already have a feature for Jackson's YAML parser, so no additional dependencies are needed for that.\r\n\r\nHowever, there are a few things to discuss:\r\n\r\n- Should different things be configured in one file (e.g. items and things) or would be prefer to have different files?\r\n- Should there be a versioning? This would allow us to better handle future upgrades.\r\n\r\nI would suggest to add a `YamlModelRepository` (similar to our XText `ModelRepository`) that is an OSGi service that encapsulates all YAML processing and file processing. Consumer are OSGi services that implement `YamlModelListener<T>` where `T` is a DTO that describes the format. The listeners are injected into the `YamlModelRepository` and whenever a matching model (identified by the root name) is found the listener is notified.\r\n\r\n```\r\npublic interface YamlModelListener<T> {\r\n    void addedModel(String modelName, List<? extends T> elements);\r\n    void updatedModel(String modelName, List<T> elements);\r\n    void removedModel(String modelName, List<T> elements);\r\n    Class<T> getElementClass();\r\n    String getRootName();\r\n}\r\n```\r\n\r\nExample listener (not fully implemented):\r\n\r\n```\r\n@Component(service=YamlModelListener.class)\r\npublic static class TestListener implements YamlModelListener<YamlItem> {\r\n    private final Logger logger = LoggerFactory.getLogger(TestListener.class);\r\n\r\n    @Override\r\n    public void addedModel(String modelName, List<? extends YamlItem> elements) {\r\n        logger.info(\"Added model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void updatedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Updated model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void removedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Removed model {} with elements {}\", modelName, elements); \r\n    }\r\n\r\n    @Override\r\n    public Class<YamlItem> getElementClass() {\r\n        return YamlItem.class;\r\n    }\r\n\r\n    @Override\r\n    public String getRootName() {\r\n        return \"items\";\r\n    }\r\n}\r\n```\r\n\r\nExample DTO:\r\n\r\n```\r\npublic class YamlItem {\r\n    private String name = \"\";\r\n    private String type = \"\";\r\n    private @Nullable String label;\r\n    private @Nullable String category;\r\n    private Set<String> tags = Set.of();\r\n    private List<String> groupNames = List.of();\r\n    private List<YamlLink> links = List.of();\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public @Nullable String getLabel() {\r\n        return label;\r\n    }\r\n\r\n    public @Nullable String getCategory() {\r\n        return category;\r\n    }\r\n\r\n    public Set<String> getTags() {\r\n        return tags;\r\n    }\r\n\r\n    public List<String> getGroupNames() {\r\n        return groupNames;\r\n    }\r\n\r\n    public List<YamlLink> getLinks() {\r\n        return links;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"YamlItem{\" + \"name='\" + name + \"'\" + \", type='\" + type + \"'\" + \", label='\" + label + \"'\"\r\n                + \", category='\" + category + \"'\" + \", tags=\" + tags + \", groupNames=\" + groupNames + \", links=\" + links\r\n                + \"}\";\r\n    }\r\n}\r\n```\r\n\r\nand the file:\r\n\r\n```\r\nversion: 1\r\nitems:\r\n  - name: Outdoor_temp\r\n      type: Number:Temperature\r\n      label: \"Outdoor [%.1f Â°C]\"\r\n      groupNames:               \r\n        - gTemperatures\r\n        - gOutdoor\r\n        - gPersist5\r\n      links:\r\n        - channel: \"deconz:thing1:channel1\"\r\n        - channel: \"deconz:thing2:channel2\"\r\n          profile: \"MyScope:MyProfile\r\n```",
    "issue_word_count": 443,
    "test_files_count": 11,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElement.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelWrapper.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/FirstTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/SecondTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/addToModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/addToModelV2ExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileAddedOrRemoved.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdatePost.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdatePre.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modifyModelV2InitialContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/removeFromModelV2ExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/updateInModelV2ExpectedContent.yaml"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/FirstTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/SecondTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/addToModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/addToModelV2ExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileAddedOrRemoved.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdatePost.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelV2FileUpdatePre.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modifyModelV2InitialContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/removeFromModelV2ExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/updateInModelV2ExpectedContent.yaml"
    ],
    "base_commit": "1c33c03cd41b88037f86dfc5025a06711daacee3",
    "head_commit": "8048b3c435de0f0114512d4f1409f4e26e6b5ed9",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4648",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4648",
    "dockerfile": "",
    "pr_merged_at": "2025-04-03T19:22:45.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4567",
    "pr_id": 4567,
    "issue_id": 4555,
    "repo": "openhab/openhab-core",
    "problem_statement": "Reduce SAT warnings\nAddress PMD warnings.\r\nCleanup PMD suppressions, add local `// NOPMD` tags where readability is preferred over PMD rule.\r\n\r\nFor the remaining SimplifyBooleanReturn warnings, no code change should be done. The code looks cleaner if we keep it as it is.\r\nI did not try to silence this warnings yet. The `NOPMD` tag is not well suited, as it needs to be added to the line of the `if`. Looks ugly.\r\n\r\nBefore:\r\n![grafik](https://github.com/user-attachments/assets/968038da-4776-4bb0-927c-601453236882)\r\n\r\n\r\nAfter:\r\n![grafik](https://github.com/user-attachments/assets/65d2301b-4808-45fb-86dd-08fade37e46d)\r\n\r\n\r\n<!--\r\nThanks for contributing to the openHAB project!\r\nPlease describe the goal and effect of your PR here.\r\nPay attention to the below notes and to *the guidelines* for this repository.\r\nFeel free to delete any comment sections in the template (starting with \"<!--\").\r\n\r\nATTENTION: Don't use \"git merge\" when working with your pull request branch!\r\nThis can clutter your Git history and make your PR unusable.\r\nUse \"git rebase\" instead. See this forum post for further details:\r\nhttps://community.openhab.org/t/rebase-your-code-or-how-to-fix-your-git-history-before-requesting-a-pull/129358\r\n\r\nAll PRs should be created using the \"main\" branch as base.\r\nImportant bugfixes are cherry-picked by maintainers to the patch release branch after a PR has been merged.\r\n\r\nIf your PR's code is not backward compatible with previous releases (which\r\nshould be avoided), add a message to the release notes by filing another PR:\r\nhttps://github.com/openhab/openhab-distro/blob/main/distributions/openhab/src/main/resources/bin/update.lst\r\n\r\n# Title\r\n\r\nProvide a short summary in the *Title* above. It will show up in the release notes.\r\nFor example:\r\n- Introduce metadata for all add-ons\r\n- Fix memory leak in ScriptedRuleProvider\r\n\r\n# Description\r\n\r\nPlease give a few sentences describing the overall goals of the pull request.\r\nGive enough details to make the improvement and changes of the PR understandable\r\nto both developers and tech-savy users.\r\n\r\nPlease keep the following in mind:\r\n- What is the classification of the PR, e.g. Bugfix, Improvement, Novel Addition, ... ?\r\n- Did you describe the PRs motivation and goal?\r\n- Did you provide a link to any prior discussion, e.g. an issue or community forum thread?\r\n- Did you describe new features for the end user?\r\n- Did you describe any noteworthy changes in usage for the end user?\r\n- Was the documentation updated accordingly, e.g. the Core README?\r\n- Does your contribution follow the coding guidelines:\r\n  https://www.openhab.org/docs/developer/guidelines.html\r\n- Did you check for any (relevant) issues from the static code analysis?\r\n- Did you sign-off your work:\r\n  https://www.openhab.org/docs/developer/contributing.html#sign-your-work\r\n\r\nIf your pull request contains a new contribution, it will likely take some time\r\nbefore it is reviewed and processed by maintainers.\r\n-->\r\n",
    "issue_word_count": 469,
    "test_files_count": 1,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/CompareConditionHandler.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/TimestampOffsetProfile.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/events/ThreadedEventHandler.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/common/SafeCallerImplTest.java",
      "tools/static-code-analysis/pmd/suppressions.properties"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/common/SafeCallerImplTest.java"
    ],
    "base_commit": "ce374252fa2c821103da888302f930c1c127f73c",
    "head_commit": "432ce996622c7d1fd6b0255db7cdd7c24acabc1a",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4567",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4567",
    "dockerfile": "",
    "pr_merged_at": "2025-02-15T15:23:25.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4563",
    "pr_id": 4563,
    "issue_id": 4562,
    "repo": "openhab/openhab-core",
    "problem_statement": "Improve consistency of calculation functions over sets of QuantityType values\n> Indeed. And as mentioned above, it applies to ALL calculations based on sets of items with mixed units. So to be clear this is not really an issue with `toInvertibleUnit` .. it is rather an issue with the 'sum' algorithm when the set includes items having a non zero point offset.\n\nThat is not correct, as the calculation functions will be done on the absolute scale since https://github.com/openhab/openhab-core/pull/3792. So there is no unpredictability.\n\nLooking at the code of the arithmetic group functions, it looks like items of another dimension than the first are excluded from the sum. So depending on the unit of the first item, you will have a different set of items used in the function if there are invertible units in it. It would probably be better to use the unit of the group base item, instead of the unit of the first item, and then allow the reciprocal unit in the calculation after conversion to the base unit. I notice in the history the use of toInvertibleUnit in that method has explicitly been added to cope with color temperature, but in my view it does not work at all at this time (and that is from reading code, not testing). Also it is not used in all methods, only a few.\n\n_Originally posted by @mherwege in https://github.com/openhab/openhab-core/issues/4561#issuecomment-2599732127_\n            ",
    "issue_word_count": 236,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunction.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunctionTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunctionTest.java"
    ],
    "base_commit": "d3cfba562b385f951b38f96d73352123f91090ed",
    "head_commit": "ee5184f4a03ba7eb9da354f34b21ffa3710c79a9",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4563",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4563",
    "dockerfile": "",
    "pr_merged_at": "2025-02-15T16:52:44.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4548",
    "pr_id": 4548,
    "issue_id": 4547,
    "repo": "openhab/openhab-core",
    "problem_statement": "OH 4.3.0/4.3.1 is never getting past startlevel 30 for some users\n<!-- Provide a general summary of the issue in the *Title* above -->\r\n\r\n<!-- Important: Please contact the openHAB community forum for questions or -->\r\n<!-- for configuration and usage guidance: https://community.openhab.org -->\r\n\r\n<!-- Feel free to delete any comment lines in the template (starting with \"<!--\") -->\r\n\r\n## Expected Behavior\r\n<!-- If you're describing a bug, tell us what should happen -->\r\n<!-- If you're suggesting a change/improvement, tell us how it should work -->\r\nWhen OH starts the rule engine starts and begins executing rules.\r\n\r\n## Current Behavior\r\n<!-- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!-- Include related log information (preferably debug level) and related configs -->\r\n<!-- Use a file attachment for log and config information longer than a few lines -->\r\n<!-- Enclose multi-line log/code snippets with ``` on new lines for proper formatting -->\r\n<!-- If suggesting a change/improvement, explain the difference from current behavior -->\r\n<!-- For improvements, discuss at community.openhab.org first and include link to topic -->\r\n\r\nIt's been reported at least three times now on the forum:\r\n\r\n- https://community.openhab.org/t/rule-cron-blocking-openhab/161469\r\n- https://community.openhab.org/t/rule-engine-does-not-start-after-openhab-restart-due-to-high-amount-of-rules/161440\r\n- https://community.openhab.org/t/rule-engine-not-running-although-bundle-active/161517\r\n\r\nThe first link has the most thorough investigation. I'm not positive that it's the same root problem for all three as they differ in details.\r\n\r\nIn all three cases the problem appeared when upgrading to 4.3.1, but backporting to 4.3.0 does not fix the problem. So it might be a regression from before 4.3.0 release.\r\n\r\nFile based Rules DSL rules seem to be involved in all three cases.\r\n\r\n## Possible Solution\r\n<!-- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!-- or ideas how to implement the addition or change -->\r\n\r\n## Steps to Reproduce (for Bugs)\r\n<!-- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!-- reproduce this bug. Include code to reproduce, if relevant -->\r\nThis is trickly because clearly it's not happening for everyone. \r\n\r\n## Context\r\n<!-- How has this issue affected you? What are you trying to accomplish? -->\r\n<!-- Providing context helps us come up with a solution that is most useful in the real world -->\r\nUsers who face this have no rules running. \r\n\r\nMitigation is to go back to 4.2.\r\n\r\n## Your Environment\r\n<!-- Include as many relevant details about the environment you experienced the bug in -->\r\n* Version used: (e.g., openHAB and add-on versions)\r\n* Environment name and version (e.g. Chrome 111, Java 17, Node.js 18.15, ...):\r\n* Operating System and version (desktop or mobile, Windows 11, Raspbian Bullseye, ...):\r\n",
    "issue_word_count": 441,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/scheduler/CronAdjuster.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/scheduler/CronAdjusterTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/scheduler/CronAdjusterTest.java"
    ],
    "base_commit": "f00c7700cb13b4ab6dbc6a8e493f226d8099689c",
    "head_commit": "52f09a1e17b302144d00c17094f5beb69b12d67c",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4548",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4548",
    "dockerfile": "",
    "pr_merged_at": "2025-01-10T23:39:20.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4544",
    "pr_id": 4544,
    "issue_id": 4543,
    "repo": "openhab/openhab-core",
    "problem_statement": "Upgrade SAT to 0.17.0\nFor release notes, see:\r\n\r\nhttps://github.com/openhab/static-code-analysis/releases/tag/0.17.0",
    "issue_word_count": 16,
    "test_files_count": 4,
    "non_test_files_count": 26,
    "pr_changed_files": [
      "bundles/org.openhab.core.addon.eclipse/src/main/java/org/openhab/core/addon/eclipse/internal/EclipseAddonService.java",
      "bundles/org.openhab.core.addon.marketplace.karaf/src/main/java/org/openhab/core/addon/marketplace/karaf/internal/community/CommunityKarafAddonHandler.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/BundleVersion.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/MarketplaceAddonHandler.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/MarketplaceBundleInstaller.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/MarketplaceConstants.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/MarketplaceHandlerException.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/automation/MarketplaceRuleTemplateProvider.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityBlockLibaryAddonHandler.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityBundleAddonHandler.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityMarketplaceAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityRuleTemplateAddonHandler.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityTransformationAddonHandler.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityUIWidgetAddonHandler.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/SerializedNameAnnotationIntrospector.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/model/DiscourseCategoryResponseDTO.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/model/DiscourseTopicResponseDTO.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/model/AddonEntryDTO.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/BundleVersionTest.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonHandler.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java",
      "bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/Addon.java",
      "bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/AddonDiscoveryMethod.java",
      "bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/AddonEvent.java",
      "bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/AddonEventFactory.java",
      "bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/AddonI18nLocalizationService.java",
      "bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/AddonInfo.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/BundleVersionTest.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonHandler.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java"
    ],
    "base_commit": "7ae5d7aae8c54b1d95c122f6b6719ecbe07d6a97",
    "head_commit": "8fe797963bcee26a91dc628c9ae54a85e197a721",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4544",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4544",
    "dockerfile": "",
    "pr_merged_at": "2025-01-07T20:48:56.000Z",
    "patch": null,
    "test_patch": null,
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4524",
    "pr_id": 4524,
    "issue_id": 4414,
    "repo": "openhab/openhab-core",
    "problem_statement": "Parameters injected to JS transformations are not resetted across further invocations of the transformation script\n## Background\r\n\r\n(I'm on Openhab 4.3.0 M2 on a Raspberry Pi 4. This is the first issue I filed for Openhab, pls bear with me for any mistakes. My Openhabian system is manually upgraded to bullseye, although this is not supported... But I thought this issue still might be worth to get investigated since it is easily reproducible...)\r\n\r\nProblem: When passing adding additional parameters to toItemScript as with `?fig=2` in the following snippet...\r\n\r\n```\r\nNumber:Temperature Refoss_P11d_Temp \"Temperature\" { channel=\"mqtt:topic:openhab:refossp11d:temperature\" [profile=\"transform:JS\",toItemScript=\"significant.js?fig=2\"], expire=\"30m\" }\r\nNumber:ElectricCurrent Refoss_P11d_Current \"Current [%.1f %unit%]\"  { channel=\"mqtt:topic:openhab:refossp11d:current\" [profile=\"transform:JS\",toItemScript=\"significant.js\"], expire=\"30m\"}\r\n\r\n```\r\nthis parameter is *shared* across all invocations of significant.js, i.e. fig is always 2 when significant.js is called, even when it is not explicitly given as in my second item above.\r\nThis is rather surprising behavior, and I was wondering whether it's a bug or a feature in M2 (or before?)\r\n\r\nPS: Update: It seems that one has to manually set the injected variable to *undefined* at the end of the transformation script in order to have reset before the next invocation - IMHO this is not an easily expected behavior that at least should be well documented:\r\n\r\n`fig = undefined; // reset fig to undefined for the next invocation\r\n`\r\n\r\nAs [suggested in the forum](https://community.openhab.org/t/openhab-4-3-milestone-discussion/158139/47) by Florian H. I'm also filing an issue here:\r\n\r\n## Expected Behavior\r\nI'd expect any parameters that are NOT passed specifically (e.g. \"?param1=val1&param2=val2\") always be set to undefined....\r\n\r\n## Current Behavior\r\nWhen passing adding additional parameters (e.g. \"significant.js?param1=val&param2=val\") to a JS transformation script via toItemScript() - as with `?fig=2` above - these parameters are *shared* across all invocations of significant.js, i.e. fig is always 2 when significant.js is called, even when it is not explicitly given as in my second item above\r\n\r\n## Possible Solution\r\nInjected parameters should be implicitly reset to undefined before further invocations of the transformation script\r\n\r\n## Steps to Reproduce (for Bugs)\r\nHere's is a JS transformation to reproduce:\r\n```\r\n// return the input value unchanged, logging arg1 and arg2 if defined\r\n(function(i) {\r\n    // console.log(\"donothing.js: started\");\r\n    var strarg1 = \"\" ;\r\n    var strarg2 = \"\" ;\r\n    if (typeof arg1 !== 'undefined') { \r\n        strarg1 = \"    arg1=\" + arg1.toString() + \" (\" + typeof arg1 + \")\";\r\n    }\r\n    if (typeof arg2 !== 'undefined') { \r\n        strarg2 = \"    arg2=\" + arg2.toString() + \" (\" + typeof arg2 + \")\";\r\n    }\r\n    console.log(\"donothing.js: i=\" + i.toString() + strarg1  + strarg2);\r\n    arg1 = \"UNCHANGED\";\r\n    arg2 = \"UNCHANGED\";\r\n    return i;\r\n})(input)\r\n```\r\n\r\nUse this as sample transformation as in\r\nNumber:Energy Refoss_TotalYesterday \"Total Yesterday [%d %unit%]\" { channel=\"mqtt:topic:openhab:refossp11b:yesterday\"  [profile=\"transform:JS\",toItemScript=\"donothing.js?arg1=ONE\"], expire=\"90m\"  }\r\nNumber:Energy Refoss_TotalToday \"Total Today [%d %unit%]\"  { channel=\"mqtt:topic:openhab:refossp11b:today\" [profile=\"transform:JS\",toItemScript=\"donothing.js?arg2=TWO\"], expire=\"90m\" }\r\n\r\nwill give output like this, showing the behavior:\r\n```\r\n2024-10-13 14:14:11.963 [INFO ] [org.openhab.automation.script       ] - donothing.js: i=0.0    arg1=ONE (string)    arg2=UNCHANGED (string)\r\n2024-10-13 14:14:11.968 [INFO ] [org.openhab.automation.script       ] - donothing.js: i=0.0    arg1=UNCHANGED (string)    arg2=a (string)\r\n2024-10-13 14:31:04.997 [INFO ] [org.openhab.automation.script       ] - donothing.js: i=0.0    arg1=ONE (string)    arg2=UNCHANGED (string)\r\n2024-10-13 14:31:05.003 [INFO ] [org.openhab.automation.script       ] - donothing.js: i=0.0    arg1=UNCHANGED (string)    arg2=a (string)\r\n2024-10-13 14:41:09.819 [INFO ] [org.openhab.automation.script       ] - donothing.js: i=0.0    arg1=ONE (string)    arg2=UNCHANGED (string)\r\n2024-10-13 14:41:09.826 [INFO ] [org.openhab.automation.script       ] - donothing.js: i=0.0    arg1=UNCHANGED (string)    arg2=a (string)\r\n2024-10-13 15:17:07.687 [INFO ] [org.openhab.automation.script       ] - donothing.js: i=0.0    arg1=ONE (string)    arg2=UNCHANGED (string)\r\n2024-10-13 15:17:07.693 [INFO ] [org.openhab.automation.script       ] - donothing.js: i=0.0    arg1=UNCHANGED (string)    arg2=a (string)\r\n```\r\n\r\n## Context/Rationale\r\nBackground: The significant.js script mentioned initially is my transformation script for rounding incoming values from sensors to a more sensible, reduced number of significant figures/digits depending on the unit of the measurement. [ADDED: This would cause fewer updates for the values actually fed into the receiving item.] I want to use fig= to override my unit specific default, e.g. 2 for temperatures.)\r\n\r\n## Your Environment\r\n* OpenHab 4.3 M2 (and maybe before)\r\n* Addons.cfg:\r\n```\r\n[automation = jsscripting\r\nbinding = astro,network,mqtt,tr064,mail,avmfritz,dwdunwetter,exec,amazonechocontrol,amazondashbutton,bluetooth,homeconnect,hpprinter,samsungtv,openweathermap,dwdpollenflug,weathercompany,telegram,mybmw,lgwebos\r\ntransformation = jinja,jsonpath,map,regex,basicprofiles,scale,exec\r\n](url)\r\n```\r\n\r\n* Version on \"Raspbian GNU/Linux 12 (bookworm)\" (manually upgraded from 11, although not officially supported!)\":\r\n```\r\n$ java --version\r\nopenjdk 17.0.12 2024-07-16\r\nOpenJDK Runtime Environment (build 17.0.12+7-Raspbian-2deb12u1rpt1)\r\nOpenJDK Client VM (build 17.0.12+7-Raspbian-2deb12u1rpt1, mixed mode, emulated-client)\r\n\r\n```",
    "issue_word_count": 844,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java",
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java"
    ],
    "base_commit": "1f9ba2b0eea9daf70515cd36b53c3fe1d2f1e54d",
    "head_commit": "e0a854b30584e0ad7c8522e9701e002178db62da",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4524",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4524",
    "dockerfile": "",
    "pr_merged_at": "2024-12-28T11:28:37.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java\nindex 3e88206101b..e494bd53ddc 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java\n@@ -17,6 +17,7 @@\n import java.net.URI;\n import java.net.URLDecoder;\n import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import java.util.Locale;\n@@ -185,8 +186,10 @@ public void deactivate() {\n                         : scriptEngineContainer.getScriptEngine();\n                 ScriptContext executionContext = engine.getContext();\n                 executionContext.setAttribute(\"input\", source, ScriptContext.ENGINE_SCOPE);\n+                ArrayList<String> injectedParams = null;\n \n                 if (params != null) {\n+                    injectedParams = new ArrayList<>();\n                     for (String param : params.split(\"&\")) {\n                         String[] splitString = param.split(\"=\");\n                         if (splitString.length != 2) {\n@@ -197,6 +200,7 @@ public void deactivate() {\n                             param = URLDecoder.decode(splitString[0], StandardCharsets.UTF_8);\n                             String value = URLDecoder.decode(splitString[1], StandardCharsets.UTF_8);\n                             executionContext.setAttribute(param, value, ScriptContext.ENGINE_SCOPE);\n+                            injectedParams.add(param);\n                         }\n                     }\n                 }\n@@ -210,8 +214,15 @@ public void deactivate() {\n                     scriptRecord.compiledScript = compiledScript;\n                 }\n \n-                Object result = compiledScript != null ? compiledScript.eval() : engine.eval(scriptRecord.script);\n-                return result == null ? null : result.toString();\n+                try {\n+                    Object result = compiledScript != null ? compiledScript.eval() : engine.eval(scriptRecord.script);\n+                    return result == null ? null : result.toString();\n+                } finally {\n+                    if (injectedParams != null) {\n+                        injectedParams\n+                                .forEach(param -> executionContext.removeAttribute(param, ScriptContext.ENGINE_SCOPE));\n+                    }\n+                }\n             } catch (ScriptException e) {\n                 throw new TransformationException(\"Failed to execute script.\", e);\n             } catch (IllegalStateException e) {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java\nindex 6752013ef58..e93fc00174c 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java\n@@ -112,7 +112,6 @@ public void scriptExecutionParametersAreInjectedIntoEngineContext() throws Trans\n         verify(scriptContext).setAttribute(eq(\"input\"), eq(\"input\"), eq(ScriptContext.ENGINE_SCOPE));\n         verify(scriptContext).setAttribute(eq(\"param1\"), eq(\"value1\"), eq(ScriptContext.ENGINE_SCOPE));\n         verify(scriptContext).setAttribute(eq(\"param2\"), eq(\"value2\"), eq(ScriptContext.ENGINE_SCOPE));\n-        verifyNoMoreInteractions(scriptContext);\n     }\n \n     @Test\n@@ -122,7 +121,6 @@ public void scriptExecutionParametersAreDecoded() throws TransformationException\n         verify(scriptContext).setAttribute(eq(\"input\"), eq(\"input\"), eq(ScriptContext.ENGINE_SCOPE));\n         verify(scriptContext).setAttribute(eq(\"param1\"), eq(\"&amp;\"), eq(ScriptContext.ENGINE_SCOPE));\n         verify(scriptContext).setAttribute(eq(\"param2\"), eq(\"=value\"), eq(ScriptContext.ENGINE_SCOPE));\n-        verifyNoMoreInteractions(scriptContext);\n     }\n \n     @Test\n@@ -141,7 +139,23 @@ abstract class CompilableScriptEngine implements ScriptEngine, Compilable {\n         inOrder.verify(scriptContext, times(2)).setAttribute(anyString(), anyString(), eq(ScriptContext.ENGINE_SCOPE));\n         inOrder.verify((Compilable) scriptEngine).compile(SCRIPT);\n         inOrder.verify(scriptEngine).eval(SCRIPT);\n-        inOrder.verifyNoMoreInteractions();\n+    }\n+\n+    @Test\n+    public void scriptAttributesRemovedAfterExecution() throws TransformationException, ScriptException {\n+        abstract class CompilableScriptEngine implements ScriptEngine, Compilable {\n+        }\n+        scriptEngine = mock(CompilableScriptEngine.class);\n+\n+        when(scriptEngineContainer.getScriptEngine()).thenReturn(scriptEngine);\n+        when(scriptEngine.getContext()).thenReturn(scriptContext);\n+\n+        InOrder inOrder = inOrder(scriptContext, scriptEngine);\n+\n+        service.transform(SCRIPT_UID + \"?param1=value1\", \"input\");\n+\n+        inOrder.verify(scriptEngine).eval(SCRIPT);\n+        inOrder.verify(scriptContext).removeAttribute(eq(\"param1\"), eq(ScriptContext.ENGINE_SCOPE));\n     }\n \n     @Test\n@@ -150,7 +164,7 @@ public void invalidScriptExecutionParametersAreDiscarded() throws Transformation\n \n         verify(scriptContext).setAttribute(eq(\"input\"), eq(\"input\"), eq(ScriptContext.ENGINE_SCOPE));\n         verify(scriptContext).setAttribute(eq(\"param1\"), eq(\"value1\"), eq(ScriptContext.ENGINE_SCOPE));\n-        verifyNoMoreInteractions(scriptContext);\n+        verify(scriptContext, times(0)).setAttribute(eq(\"invalid\"), any(), eq(ScriptContext.ENGINE_SCOPE));\n     }\n \n     @Test\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4475",
    "pr_id": 4475,
    "issue_id": 4474,
    "repo": "openhab/openhab-core",
    "problem_statement": "Non deterministic tests in the repository\n<!-- Provide a general summary of the issue in the *Title* above -->\r\n\r\n<!-- Important: Please contact the openHAB community forum for questions or -->\r\n<!-- for configuration and usage guidance: https://community.openhab.org -->\r\n\r\n<!-- Feel free to delete any comment lines in the template (starting with \"<!--\") -->\r\n\r\n## Expected Behavior\r\n<!-- If you're describing a bug, tell us what should happen -->\r\n<!-- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nThe repository contains flaky tests that behave inconsistentlyâpassing at times and failing at others for the same code. Ideally, these tests should always pass. To identify the flaky tests, I used the [NonDex](https://github.com/TestingResearchIllinois/NonDex) tool. NonDex operates by systematically randomizing the iteration order of standard Java library classes (e.g., HashSet, HashMap) during test execution. By altering the order of elements each time tests are run, NonDex helps reveal potential bugs caused by dependencies on specific ordering, which could lead to flaky or unreliable tests. Tests that are not flaky should run successfully with this tool, as expected.\r\n\r\n## Current Behavior\r\n<!-- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!-- Include related log information (preferably debug level) and related configs -->\r\n<!-- Use a file attachment for log and config information longer than a few lines -->\r\n<!-- Enclose multi-line log/code snippets with ``` on new lines for proper formatting -->\r\n<!-- If suggesting a change/improvement, explain the difference from current behavior -->\r\n<!-- For improvements, discuss at community.openhab.org first and include link to topic -->\r\nThe repository contains flaky tests that occasionally fail when run with the [NonDex](https://github.com/TestingResearchIllinois/NonDex) tool.\r\n\r\n## Possible Solution\r\n<!-- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!-- or ideas how to implement the addition or change -->\r\n\r\nThe primary cause of this flakiness is that assertEquals enforces order dependency when comparing strings. Instead, if we directly compare the JSON objects or ignore the order while checking for equality, the tests will no longer be flaky.\r\n\r\n## Steps to Reproduce (for Bugs)\r\n\r\nConsider one of the test which i found org.openhab.core.cache.ExpiringCacheMapTest.testValues:\r\n<!-- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!-- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Go to the root of the repository.\r\n2. Build the module which has the flaky test:\r\n`mvn install -pl bundles/org.openhab.core -am -DskipTests`\r\n\r\nThe generalized format of command is : \r\n`mvn install -pl <module-name> -am -DskipTests`\r\n\r\n3. Then, run the regular test to verify that it is not a failing test  but a flaky:\r\n`mvn -pl bundles/org.openhab.core test -Dtest=org.openhab.core.cache.ExpiringCacheMapTest#testValues`\r\n\r\nThe generalized format of command is : \r\n`mvn -pl <module-name> test -Dtest=<test-path>`\r\n\r\n4. To identify the flaky test, execute the following [nondex](https://github.com/TestingResearchIllinois/NonDex) command:\r\n`mvn -pl bundles/org.openhab.core edu.illinois:nondex-maven-plugin:2.1.7:nondex -Dtest=org.openhab.core.cache.ExpiringCacheMapTest#testValues`\r\n\r\nThe generalized format of command is : \r\n`mvn -pl <module-name> [test](edu.illinois:nondex-maven-plugin:2.1.7:nondex) -Dtest=<test-path>`\r\n\r\nFound 26 flaky tests using this tool in the repository.\r\n## Your Environment\r\n<!-- Include as many relevant details about the environment you experienced the bug in -->\r\n* Environment name and version : Java 17, Maven 3.9\r\n* Operating System and version : Ubuntu\r\n",
    "issue_word_count": 558,
    "test_files_count": 7,
    "non_test_files_count": 0,
    "pr_changed_files": [
      "bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/validation/ConfigDescriptionValidatorTest.java",
      "bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/inbox/events/InboxEventFactoryTest.java",
      "bundles/org.openhab.core.io.rest/src/test/java/org/openhab/core/io/rest/Stream2JSONInputStreamTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/link/events/LinkEventFactoryTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/cache/ExpiringCacheMapTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/items/events/ItemEventFactoryTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/validation/ConfigDescriptionValidatorTest.java",
      "bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/inbox/events/InboxEventFactoryTest.java",
      "bundles/org.openhab.core.io.rest/src/test/java/org/openhab/core/io/rest/Stream2JSONInputStreamTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/link/events/LinkEventFactoryTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/cache/ExpiringCacheMapTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/items/events/ItemEventFactoryTest.java"
    ],
    "base_commit": "297d54ed525e4b15b4ed6ac1522b4ca41ef6e0b6",
    "head_commit": "0e2e22b1de23081528e6251fddee6cb2bb176dd7",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4475",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4475",
    "dockerfile": "",
    "pr_merged_at": "2025-04-02T18:01:21.000Z",
    "patch": "",
    "test_patch": "diff --git a/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/validation/ConfigDescriptionValidatorTest.java b/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/validation/ConfigDescriptionValidatorTest.java\nindex 44755518f0f..9579e756e9c 100644\n--- a/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/validation/ConfigDescriptionValidatorTest.java\n+++ b/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/validation/ConfigDescriptionValidatorTest.java\n@@ -14,6 +14,7 @@\n \n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.Mockito.*;\n \n@@ -268,7 +269,7 @@ public void assertValidationThrowsExceptionContainingMessagesForAllRequiredConfi\n         params.put(DECIMAL_REQUIRED_PARAM_NAME, null);\n         ConfigValidationException exception = Assertions.assertThrows(ConfigValidationException.class,\n                 () -> configDescriptionValidator.validate(params, CONFIG_DESCRIPTION_URI));\n-        assertThat(getConfigValidationMessages(exception), is(expected));\n+        assertThat(getConfigValidationMessages(exception), containsInAnyOrder(expected.toArray()));\n     }\n \n     void assertMissingRequired(String parameterName) {\n@@ -352,7 +353,7 @@ public void assertValidationThrowsExceptionContainingMessagesForAllMinMaxConfigP\n         params.put(DECIMAL_MAX_PARAM_NAME, DECIMAL_MAX_VIOLATED);\n         ConfigValidationException exception = Assertions.assertThrows(ConfigValidationException.class,\n                 () -> configDescriptionValidator.validate(params, CONFIG_DESCRIPTION_URI));\n-        assertThat(getConfigValidationMessages(exception), is(expected));\n+        assertThat(getConfigValidationMessages(exception), containsInAnyOrder(expected.toArray()));\n     }\n \n     void assertMinMax(String parameterName, Object value, MessageKey msgKey, String minMax) {\n@@ -405,7 +406,7 @@ public void assertValidationThrowsExceptionContainingMessagesForMultipleInvalidT\n         params.put(DECIMAL_PARAM_NAME, INVALID);\n         ConfigValidationException exception = Assertions.assertThrows(ConfigValidationException.class,\n                 () -> configDescriptionValidator.validate(params, CONFIG_DESCRIPTION_URI));\n-        assertThat(getConfigValidationMessages(exception), is(expected));\n+        assertThat(getConfigValidationMessages(exception), containsInAnyOrder(expected.toArray()));\n     }\n \n     void assertType(String parameterName, Type type) {\n@@ -513,7 +514,7 @@ public void assertValidationThrowsExceptionContainingMultipleVariousViolations()\n         params.put(DECIMAL_MAX_PARAM_NAME, DECIMAL_MAX_VIOLATED);\n         ConfigValidationException exception = Assertions.assertThrows(ConfigValidationException.class,\n                 () -> configDescriptionValidator.validate(params, CONFIG_DESCRIPTION_URI));\n-        assertThat(getConfigValidationMessages(exception), is(expected));\n+        assertThat(getConfigValidationMessages(exception), containsInAnyOrder(expected.toArray()));\n     }\n \n     @Test\n\ndiff --git a/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/inbox/events/InboxEventFactoryTest.java b/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/inbox/events/InboxEventFactoryTest.java\nindex eb233dbe2eb..4d5d3da9b10 100644\n--- a/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/inbox/events/InboxEventFactoryTest.java\n+++ b/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/inbox/events/InboxEventFactoryTest.java\n@@ -25,6 +25,7 @@\n import org.openhab.core.thing.ThingUID;\n \n import com.google.gson.Gson;\n+import com.google.gson.JsonParser;\n \n /**\n  * {@link InboxEventFactoryTest} tests the {@link InboxEventFactory}.\n@@ -71,7 +72,7 @@ public void inboxEventFactoryCreatesInboxAddedEventCorrectly() {\n \n         assertThat(event.getType(), is(INBOX_ADDED_EVENT_TYPE));\n         assertThat(event.getTopic(), is(INBOX_ADDED_EVENT_TOPIC));\n-        assertThat(event.getPayload(), is(INBOX_ADDED_EVENT_PAYLOAD));\n+        assertThat(JsonParser.parseString(event.getPayload()), is(JsonParser.parseString(INBOX_ADDED_EVENT_PAYLOAD)));\n         assertThat(event.getDiscoveryResult(), not(nullValue()));\n         assertThat(event.getDiscoveryResult().thingUID, is(THING_UID.getAsString()));\n     }\n\ndiff --git a/bundles/org.openhab.core.io.rest/src/test/java/org/openhab/core/io/rest/Stream2JSONInputStreamTest.java b/bundles/org.openhab.core.io.rest/src/test/java/org/openhab/core/io/rest/Stream2JSONInputStreamTest.java\nindex e78632602a2..3e4c129f8dc 100644\n--- a/bundles/org.openhab.core.io.rest/src/test/java/org/openhab/core/io/rest/Stream2JSONInputStreamTest.java\n+++ b/bundles/org.openhab.core.io.rest/src/test/java/org/openhab/core/io/rest/Stream2JSONInputStreamTest.java\n@@ -27,6 +27,7 @@\n \n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n+import com.google.gson.JsonParser;\n \n /**\n  * Tests {@link Stream2JSONInputStream}.\n@@ -52,7 +53,8 @@ public void shouldStreamSingleObjectToJSON() throws Exception {\n         List<DummyObject> dummyList = List.of(dummyObject);\n         Stream2JSONInputStream collection2InputStream = new Stream2JSONInputStream(Stream.of(dummyObject));\n \n-        assertThat(inputStreamToString(collection2InputStream), is(GSON.toJson(dummyList)));\n+        assertThat(JsonParser.parseString(inputStreamToString(collection2InputStream)),\n+                is(JsonParser.parseString(GSON.toJson(dummyList))));\n     }\n \n     @Test\n@@ -62,7 +64,8 @@ public void shouldStreamCollectionStreamToJSON() throws Exception {\n         List<DummyObject> dummyCollection = List.of(dummyObject1, dummyObject2);\n         Stream2JSONInputStream collection2InputStream = new Stream2JSONInputStream(dummyCollection.stream());\n \n-        assertThat(inputStreamToString(collection2InputStream), is(GSON.toJson(dummyCollection)));\n+        assertThat(JsonParser.parseString(inputStreamToString(collection2InputStream)),\n+                is(JsonParser.parseString(GSON.toJson(dummyCollection))));\n     }\n \n     private String inputStreamToString(InputStream in) throws IOException {\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java\nindex 9c8285b2f37..13259e1c372 100644\n--- a/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java\n+++ b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java\n@@ -14,6 +14,7 @@\n \n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.*;\n+import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.*;\n \n@@ -41,6 +42,7 @@\n import org.openhab.core.model.yaml.test.FirstTypeDTO;\n import org.openhab.core.model.yaml.test.SecondTypeDTO;\n import org.openhab.core.service.WatchService;\n+import org.yaml.snakeyaml.Yaml;\n \n /**\n  * The {@link YamlModelRepositoryImplTest} contains tests for the {@link YamlModelRepositoryImpl} class.\n@@ -204,8 +206,9 @@ public void testAddElementToModel() throws IOException {\n \n         String actualFileContent = Files.readString(fullModelPath);\n         String expectedFileContent = Files.readString(SOURCE_PATH.resolve(\"addToModelExpectedContent.yaml\"));\n+        Yaml yaml = new Yaml();\n \n-        assertThat(actualFileContent, is(expectedFileContent.replaceAll(\"\\r\\n\", \"\\n\")));\n+        assertThat(yaml.load(actualFileContent), equalTo(yaml.load(expectedFileContent.replaceAll(\"\\r\\n\", \"\\n\"))));\n     }\n \n     @Test\n@@ -220,8 +223,9 @@ public void testUpdateElementInModel() throws IOException {\n \n         String actualFileContent = Files.readString(fullModelPath);\n         String expectedFileContent = Files.readString(SOURCE_PATH.resolve(\"updateInModelExpectedContent.yaml\"));\n+        Yaml yaml = new Yaml();\n \n-        assertThat(actualFileContent, is(expectedFileContent.replaceAll(\"\\r\\n\", \"\\n\")));\n+        assertThat(yaml.load(actualFileContent), equalTo(yaml.load(expectedFileContent.replaceAll(\"\\r\\n\", \"\\n\"))));\n     }\n \n     @Test\n\ndiff --git a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/link/events/LinkEventFactoryTest.java b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/link/events/LinkEventFactoryTest.java\nindex 0983870c1be..d52428201ae 100644\n--- a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/link/events/LinkEventFactoryTest.java\n+++ b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/link/events/LinkEventFactoryTest.java\n@@ -24,6 +24,7 @@\n import org.openhab.core.thing.link.dto.ItemChannelLinkDTO;\n \n import com.google.gson.Gson;\n+import com.google.gson.JsonParser;\n \n /**\n  * {@link LinkEventFactoryTest} tests the {@link LinkEventFactory}.\n@@ -52,7 +53,7 @@ public void testCreateItemChannelLinkAddedEvent() {\n \n         assertEquals(ItemChannelLinkAddedEvent.TYPE, event.getType());\n         assertEquals(LINK_ADDED_EVENT_TOPIC, event.getTopic());\n-        assertEquals(LINK_EVENT_PAYLOAD, event.getPayload());\n+        assertEquals(JsonParser.parseString(LINK_EVENT_PAYLOAD), JsonParser.parseString(event.getPayload()));\n     }\n \n     @Test\n@@ -73,7 +74,7 @@ public void testCreateItemChannelLinkRemovedEvent() {\n \n         assertEquals(ItemChannelLinkRemovedEvent.TYPE, event.getType());\n         assertEquals(LINK_REMOVED_EVENT_TOPIC, event.getTopic());\n-        assertEquals(LINK_EVENT_PAYLOAD, event.getPayload());\n+        assertEquals(JsonParser.parseString(LINK_EVENT_PAYLOAD), JsonParser.parseString(event.getPayload()));\n     }\n \n     @Test\n\ndiff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/cache/ExpiringCacheMapTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/cache/ExpiringCacheMapTest.java\nindex 360c896470b..e9768c6e48b 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/cache/ExpiringCacheMapTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/cache/ExpiringCacheMapTest.java\n@@ -149,7 +149,7 @@ public void testValues() {\n             expectedValues.add(value1);\n \n             final Collection<@Nullable String> values = subject.values();\n-            assertEquals(expectedValues, values);\n+            assertEquals(new LinkedHashSet<>(expectedValues), new LinkedHashSet<>(values));\n         }\n \n         // use another different key\n\ndiff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/items/events/ItemEventFactoryTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/items/events/ItemEventFactoryTest.java\nindex 7335a2504c0..79fafb8d3cf 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/items/events/ItemEventFactoryTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/items/events/ItemEventFactoryTest.java\n@@ -31,6 +31,7 @@\n import org.openhab.core.types.UnDefType;\n \n import com.google.gson.Gson;\n+import com.google.gson.JsonParser;\n \n /**\n  * {@link ItemEventFactoryTest} tests the {@link ItemEventFactory}.\n@@ -96,7 +97,7 @@ public void testCreateCommandEventOnOffType() throws Exception {\n \n         assertEquals(ITEM_COMMAND_EVENT_TYPE, event.getType());\n         assertEquals(ITEM_COMMAND_EVENT_TOPIC, event.getTopic());\n-        assertEquals(ITEM_COMMAND_EVENT_PAYLOAD, event.getPayload());\n+        assertEquals(JsonParser.parseString(ITEM_COMMAND_EVENT_PAYLOAD), JsonParser.parseString(event.getPayload()));\n         assertEquals(ITEM_NAME, event.getItemName());\n         assertEquals(SOURCE, event.getSource());\n         assertEquals(OnOffType.class, event.getItemCommand().getClass());\n@@ -189,7 +190,7 @@ public void testCreateStateEventOnOffType() {\n \n         assertThat(event.getType(), is(ITEM_STATE_EVENT_TYPE));\n         assertThat(event.getTopic(), is(ITEM_STATE_EVENT_TOPIC));\n-        assertThat(event.getPayload(), is(ITEM_STATE_EVENT_PAYLOAD));\n+        assertThat(JsonParser.parseString(event.getPayload()), is(JsonParser.parseString(ITEM_STATE_EVENT_PAYLOAD)));\n         assertThat(event.getItemName(), is(ITEM_NAME));\n         assertThat(event.getSource(), is(SOURCE));\n         assertEquals(OnOffType.class, event.getItemState().getClass());\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4461",
    "pr_id": 4461,
    "issue_id": 4439,
    "repo": "openhab/openhab-core",
    "problem_statement": "Provide Riemann Sum implementation for items\n## Requirement\r\n\r\nI want to calculate the energy consumption of a sensor that only provides me with power data at irregular intervals. This could be, for example, the output of a heat pump, a heat output meter or other time-discrete values. For this, we need to implement an integral function.\r\n\r\n## Suggestion\r\n\r\nProvide a Riemann sum implementation with different alignments (left, right, mid, trapezoidal). Center/mid alignment is the best compromise between accuracy and implementation complexity.\r\n\r\n[Riemann Sums](https://www.statisticshowto.com/calculus-problem-solving/riemann-sums/)\r\n\r\n## Implementation\r\n\r\nI provided a Riemann sum mid implementation in this discussion:\r\n\r\n[Arithmetic mean vs average linear/step interpolation](https://community.openhab.org/t/arithmetic-mean-vs-average-linear-step-interpolation/159892/15)\r\n\r\n## Your Environment\r\n\r\n```\r\nruntimeInfo:\r\n  version: 4.3.0\r\n  buildString: \"Build #4362\"\r\nlocale: en-AT\r\nsystemInfo:\r\n  configFolder: /etc/openhab\r\n  userdataFolder: /var/lib/openhab\r\n  logFolder: /var/log/openhab\r\n  javaVersion: 17.0.12\r\n  javaVendor: Ubuntu\r\n  osName: Linux\r\n  osVersion: 6.8.0-1013-raspi\r\n  osArchitecture: aarch64\r\n  availableProcessors: 4\r\n  freeMemory: 83704192\r\n  totalMemory: 605028352\r\n  uptime: 29022\r\n  startLevel: 100\r\naddons:\r\n  - automation-jsscripting\r\n  - binding-enigma2\r\n  - binding-http\r\n  - binding-mielecloud\r\n  - binding-modbus\r\n  - binding-mqtt\r\n  - binding-netatmo\r\n  - binding-tado\r\n  - misc-openhabcloud\r\n  - persistence-influxdb\r\n  - persistence-mapdb\r\n  - transformation-jsonpath\r\n  - transformation-regex\r\n  - ui-basic\r\nclientInfo:\r\n  device:\r\n    ios: false\r\n    android: false\r\n    androidChrome: false\r\n    desktop: true\r\n    iphone: false\r\n    ipod: false\r\n    ipad: false\r\n    edge: false\r\n    ie: false\r\n    firefox: false\r\n    macos: false\r\n    windows: false\r\n    cordova: false\r\n    phonegap: false\r\n    electron: false\r\n    nwjs: false\r\n    webView: false\r\n    webview: false\r\n    standalone: false\r\n    pixelRatio: 1\r\n    prefersColorScheme: dark\r\n  isSecureContext: false\r\n  locationbarVisible: true\r\n  menubarVisible: true\r\n  navigator:\r\n    cookieEnabled: true\r\n    deviceMemory: N/A\r\n    hardwareConcurrency: 12\r\n    language: en-AT\r\n    languages:\r\n      - en-AT\r\n      - en-GB\r\n      - en-US\r\n      - en\r\n      - de\r\n    onLine: true\r\n    platform: Linux x86_64\r\n  screen:\r\n    width: 3440\r\n    height: 1440\r\n    colorDepth: 24\r\n  support:\r\n    touch: false\r\n    pointerEvents: true\r\n    observer: true\r\n    passiveListener: true\r\n    gestures: false\r\n    intersectionObserver: true\r\n  themeOptions:\r\n    dark: dark\r\n    filled: true\r\n    pageTransitionAnimation: default\r\n    bars: light\r\n    homeNavbar: default\r\n    homeBackground: default\r\n    expandableCardAnimation: default\r\n    blocklyRenderer: geras\r\n  userAgent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\r\n    Gecko) Chrome/130.0.0.0 Safari/537.36\r\ntimestamp: 2024-11-04T16:52:32.492Z\r\n```",
    "issue_word_count": 344,
    "test_files_count": 2,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java"
    ],
    "base_commit": "1465a16b3bddea6599947ac9a86647f0d24b36d7",
    "head_commit": "a58153904cbdee144b07aab6838bca43eacab555",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4461",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4461",
    "dockerfile": "",
    "pr_merged_at": "2025-03-24T18:44:08.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\nindex e4286238b82..6b912efa4a5 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n@@ -34,6 +34,7 @@\n import org.openhab.core.library.items.NumberItem;\n import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.library.types.QuantityType;\n+import org.openhab.core.library.unit.Units;\n import org.openhab.core.persistence.FilterCriteria;\n import org.openhab.core.persistence.FilterCriteria.Ordering;\n import org.openhab.core.persistence.HistoricItem;\n@@ -69,6 +70,7 @@\n  * @author Mark Herwege - handle persisted GroupItem with QuantityType\n  * @author Mark Herwege - add median methods\n  * @author Mark Herwege - use item lastChange and lastUpdate methods if not in peristence\n+ * @author Mark Herwege - add Riemann sum methods\n  */\n @Component(immediate = true)\n @NonNullByDefault\n@@ -78,6 +80,13 @@ public class PersistenceExtensions {\n     private static @Nullable PersistenceServiceConfigurationRegistry configRegistry;\n     private static @Nullable TimeZoneProvider timeZoneProvider;\n \n+    public static enum RiemannType {\n+        LEFT,\n+        MIDPOINT,\n+        RIGHT,\n+        TRAPEZOIDAL\n+    }\n+\n     @Activate\n     public PersistenceExtensions(@Reference PersistenceServiceRegistry registry,\n             @Reference PersistenceServiceConfigurationRegistry configRegistry,\n@@ -1153,6 +1162,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n     /**\n      * Gets the variance of the state of the given {@link Item} since a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The default {@link PersistenceService} is used.\n      *\n      * @param item the {@link Item} to get the variance for\n@@ -1162,11 +1172,27 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         if there is no persisted state for the given <code>item</code> at the given <code>timestamp</code>\n      */\n     public static @Nullable State varianceSince(Item item, ZonedDateTime timestamp) {\n-        return internalVarianceBetween(item, timestamp, null, null);\n+        return internalVarianceBetween(item, timestamp, null, null, null);\n+    }\n+\n+    /**\n+     * Gets the variance of the state of the given {@link Item} since a certain point in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the variance for\n+     * @param timestamp the point in time from which to compute the variance\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the variance between then and now, or <code>null</code> if <code>timestamp</code> is in the future, if\n+     *         there is no default persistence service available, or it is not a {@link QueryablePersistenceService}, or\n+     *         if there is no persisted state for the given <code>item</code> at the given <code>timestamp</code>\n+     */\n+    public static @Nullable State varianceSince(Item item, ZonedDateTime timestamp, @Nullable RiemannType type) {\n+        return internalVarianceBetween(item, timestamp, null, type, null);\n     }\n \n     /**\n      * Gets the variance of the state of the given {@link Item} until a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The default {@link PersistenceService} is used.\n      *\n      * @param item the {@link Item} to get the variance for\n@@ -1176,7 +1202,42 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         if there is no persisted state for the given <code>item</code> at the given <code>timestamp</code>\n      */\n     public static @Nullable State varianceUntil(Item item, ZonedDateTime timestamp) {\n-        return internalVarianceBetween(item, null, timestamp, null);\n+        return internalVarianceBetween(item, null, timestamp, null, null);\n+    }\n+\n+    /**\n+     * Gets the variance of the state of the given {@link Item} until a certain point in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the variance for\n+     * @param timestamp the point in time to which to compute the variance\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the variance between now and then, or <code>null</code> if <code>timestamp</code> is in the past, if\n+     *         there is no default persistence service available, or it is not a {@link QueryablePersistenceService}, or\n+     *         if there is no persisted state for the given <code>item</code> at the given <code>timestamp</code>\n+     */\n+    public static @Nullable State varianceUntil(Item item, ZonedDateTime timestamp, @Nullable RiemannType type) {\n+        return internalVarianceBetween(item, null, timestamp, type, null);\n+    }\n+\n+    /**\n+     * Gets the variance of the state of the given {@link Item} between two points in time.\n+     * A left approximation type is used for the Riemann sum.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the variance for\n+     * @param begin the point in time from which to compute\n+     * @param end the end time for the computation\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the variance between both points of time, or <code>null</code> if <code>begin</code> is after\n+     *         <code>end</code>, if the persistence service given by\n+     *         <code>serviceId</code> is not available, or it is not a {@link QueryablePersistenceService}, or it is not\n+     *         a {@link QueryablePersistenceService}, or if there is no persisted state for the\n+     *         given <code>item</code> between <code>begin</code> and <code>end</code>\n+     */\n+    public static @Nullable State varianceBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable String serviceId) {\n+        return internalVarianceBetween(item, begin, end, null, serviceId);\n     }\n \n     /**\n@@ -1186,17 +1247,20 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      * @param item the {@link Item} to get the variance for\n      * @param begin the point in time from which to compute the variance\n      * @param end the end time for the computation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n      * @return the variance between both points of time, or <code>null</code> if <code>begin</code> is after\n      *         <code>end</code>, if there is no default persistence service available, or it is not a\n      *         {@link QueryablePersistenceService}, or if there is no persisted state for the\n      *         given <code>item</code> between <code>begin</code> and <code>end</code>\n      */\n-    public static @Nullable State varianceBetween(Item item, ZonedDateTime begin, ZonedDateTime end) {\n-        return internalVarianceBetween(item, begin, end, null);\n+    public static @Nullable State varianceBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable RiemannType type) {\n+        return internalVarianceBetween(item, begin, end, type, null);\n     }\n \n     /**\n      * Gets the variance of the state of the given {@link Item} since a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * @param item the {@link Item} to get the variance for\n@@ -1208,11 +1272,30 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         the given <code>timestamp</code>\n      */\n     public static @Nullable State varianceSince(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n-        return internalVarianceBetween(item, timestamp, null, serviceId);\n+        return internalVarianceBetween(item, timestamp, null, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the variance of the state of the given {@link Item} since a certain point in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the variance for\n+     * @param timestamp the point in time from which to compute the variance\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the variance between then and now, or <code>null</code> if <code>timestamp</code> is in the future, if\n+     *         the persistence service given by <code>serviceId</code> is not available, or it is not a\n+     *         {@link QueryablePersistenceService}, or if there is no persisted state for the given <code>item</code> at\n+     *         the given <code>timestamp</code>\n+     */\n+    public static @Nullable State varianceSince(Item item, ZonedDateTime timestamp, @Nullable RiemannType type,\n+            @Nullable String serviceId) {\n+        return internalVarianceBetween(item, timestamp, null, type, serviceId);\n     }\n \n     /**\n      * Gets the variance of the state of the given {@link Item} until a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * @param item the {@link Item} to get the variance for\n@@ -1224,7 +1307,42 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         the given <code>timestamp</code>\n      */\n     public static @Nullable State varianceUntil(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n-        return internalVarianceBetween(item, null, timestamp, serviceId);\n+        return internalVarianceBetween(item, null, timestamp, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the variance of the state of the given {@link Item} until a certain point in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the variance for\n+     * @param timestamp the point in time to which to compute the variance\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the variance between now and then, or <code>null</code> if <code>timestamp</code> is in the past, if the\n+     *         persistence service given by <code>serviceId</code> is not available, or it is not a\n+     *         {@link QueryablePersistenceService}, or if there is no persisted state for the given <code>item</code> at\n+     *         the given <code>timestamp</code>\n+     */\n+    public static @Nullable State varianceUntil(Item item, ZonedDateTime timestamp, @Nullable RiemannType type,\n+            @Nullable String serviceId) {\n+        return internalVarianceBetween(item, null, timestamp, type, serviceId);\n+    }\n+\n+    /**\n+     * Gets the variance of the state of the given {@link Item} between two certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the variance for\n+     * @param begin the point in time from which to compute the variance\n+     * @param end the end time for the computation\n+     * @return the variance between both points of time, or <code>null</code> if <code>begin</code> is after\n+     *         <code>end</code>, if there is no default persistence service available, or it is not a\n+     *         {@link QueryablePersistenceService}, or if there is no persisted state for the\n+     *         given <code>item</code> between <code>begin</code> and <code>end</code>\n+     */\n+    public static @Nullable State varianceBetween(Item item, ZonedDateTime begin, ZonedDateTime end) {\n+        return internalVarianceBetween(item, begin, end, null, null);\n     }\n \n     /**\n@@ -1234,6 +1352,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      * @param item the {@link Item} to get the variance for\n      * @param begin the point in time from which to compute\n      * @param end the end time for the computation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n      * @param serviceId the name of the {@link PersistenceService} to use\n      * @return the variance between both points of time, or <code>null</code> if <code>begin</code> is after\n      *         <code>end</code>, if the persistence service given by\n@@ -1242,12 +1361,12 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         given <code>item</code> between <code>begin</code> and <code>end</code>\n      */\n     public static @Nullable State varianceBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n-            @Nullable String serviceId) {\n-        return internalVarianceBetween(item, begin, end, serviceId);\n+            @Nullable RiemannType type, @Nullable String serviceId) {\n+        return internalVarianceBetween(item, begin, end, type, serviceId);\n     }\n \n     private static @Nullable State internalVarianceBetween(Item item, @Nullable ZonedDateTime begin,\n-            @Nullable ZonedDateTime end, @Nullable String serviceId) {\n+            @Nullable ZonedDateTime end, @Nullable RiemannType type, @Nullable String serviceId) {\n         String effectiveServiceId = serviceId == null ? getDefaultServiceId() : serviceId;\n         if (effectiveServiceId == null) {\n             return null;\n@@ -1256,7 +1375,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         if (result == null) {\n             return null;\n         }\n-        State averageState = internalAverageBetween(item, begin, end, effectiveServiceId);\n+        State averageState = internalAverageBetween(item, begin, end, type, effectiveServiceId);\n \n         if (averageState != null) {\n             Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n@@ -1297,6 +1416,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n     /**\n      * Gets the standard deviation of the state of the given {@link Item} since a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The default {@link PersistenceService} is used.\n      *\n      * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n@@ -1310,11 +1430,31 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         the given <code>timestamp</code>\n      */\n     public static @Nullable State deviationSince(Item item, ZonedDateTime timestamp) {\n-        return internalDeviationBetween(item, timestamp, null, null);\n+        return internalDeviationBetween(item, timestamp, null, null, null);\n+    }\n+\n+    /**\n+     * Gets the standard deviation of the state of the given {@link Item} since a certain point in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n+     * operation. Get the variance only, it is the squared deviation.\n+     *\n+     * @param item the {@link Item} to get the standard deviation for\n+     * @param timestamp the point in time from which to compute the standard deviation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the standard deviation between then and now, or <code>null</code> if <code>timestamp</code> is in the\n+     *         future, if there is no default persistence service available, or it is not a\n+     *         {@link QueryablePersistenceService}, or if there is no persisted state for the given <code>item</code> at\n+     *         the given <code>timestamp</code>\n+     */\n+    public static @Nullable State deviationSince(Item item, ZonedDateTime timestamp, @Nullable RiemannType type) {\n+        return internalDeviationBetween(item, timestamp, null, type, null);\n     }\n \n     /**\n      * Gets the standard deviation of the state of the given {@link Item} until a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The default {@link PersistenceService} is used.\n      *\n      * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n@@ -1328,11 +1468,31 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         the given <code>timestamp</code>\n      */\n     public static @Nullable State deviationUntil(Item item, ZonedDateTime timestamp) {\n-        return internalDeviationBetween(item, timestamp, null, null);\n+        return internalDeviationBetween(item, timestamp, null, null, null);\n+    }\n+\n+    /**\n+     * Gets the standard deviation of the state of the given {@link Item} until a certain point in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n+     * operation. Get the variance only, it is the squared deviation.\n+     *\n+     * @param item the {@link Item} to get the standard deviation for\n+     * @param timestamp the point in time to which to compute the standard deviation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the standard deviation between now and then, or <code>null</code> if <code>timestamp</code> is in the\n+     *         past, if there is no default persistence service available, or it is not a\n+     *         {@link QueryablePersistenceService}, or if there is no persisted state for the given <code>item</code> at\n+     *         the given <code>timestamp</code>\n+     */\n+    public static @Nullable State deviationUntil(Item item, ZonedDateTime timestamp, @Nullable RiemannType type) {\n+        return internalDeviationBetween(item, timestamp, null, type, null);\n     }\n \n     /**\n      * Gets the standard deviation of the state of the given {@link Item} between two points in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The default {@link PersistenceService} is used.\n      *\n      * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n@@ -1347,11 +1507,33 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         given <code>item</code> between <code>begin</code> and <code>end</code>\n      */\n     public static @Nullable State deviationBetween(Item item, ZonedDateTime begin, ZonedDateTime end) {\n-        return internalDeviationBetween(item, begin, end, null);\n+        return internalDeviationBetween(item, begin, end, null, null);\n+    }\n+\n+    /**\n+     * Gets the standard deviation of the state of the given {@link Item} between two points in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n+     * operation. Get the variance only, it is the squared deviation.\n+     *\n+     * @param item the {@link Item} to get the standard deviation for\n+     * @param begin the point in time from which to compute\n+     * @param end the end time for the computation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the standard deviation between both points of time, or <code>null</code> if <code>begin</code> is after\n+     *         <code>end</code>, if there is no default persistence service available, or it is not a\n+     *         {@link QueryablePersistenceService}, or if there is no persisted state for the\n+     *         given <code>item</code> between <code>begin</code> and <code>end</code>\n+     */\n+    public static @Nullable State deviationBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable RiemannType type) {\n+        return internalDeviationBetween(item, begin, end, type, null);\n     }\n \n     /**\n      * Gets the standard deviation of the state of the given {@link Item} since a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n@@ -1366,11 +1548,33 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         the given <code>timestamp</code>\n      */\n     public static @Nullable State deviationSince(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n-        return internalDeviationBetween(item, timestamp, null, serviceId);\n+        return internalDeviationBetween(item, timestamp, null, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the standard deviation of the state of the given {@link Item} since a certain point in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n+     * operation. Get the variance only, it is the squared deviation.\n+     *\n+     * @param item the {@link Item} to get the standard deviation for\n+     * @param timestamp the point in time from which to compute the standard deviation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the standard deviation between then and now, or <code>null</code> if <code>timestamp</code> is in the\n+     *         future, if the persistence service given by <code>serviceId</code> is not available, or it is not a\n+     *         {@link QueryablePersistenceService}, or if there is no persisted state for the given <code>item</code> at\n+     *         the given <code>timestamp</code>\n+     */\n+    public static @Nullable State deviationSince(Item item, ZonedDateTime timestamp, @Nullable RiemannType type,\n+            @Nullable String serviceId) {\n+        return internalDeviationBetween(item, timestamp, null, type, serviceId);\n     }\n \n     /**\n      * Gets the standard deviation of the state of the given {@link Item} until a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n@@ -1385,11 +1589,33 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         the given <code>timestamp</code>\n      */\n     public static @Nullable State deviationUntil(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n-        return internalDeviationBetween(item, null, timestamp, serviceId);\n+        return internalDeviationBetween(item, null, timestamp, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the standard deviation of the state of the given {@link Item} until a certain point in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n+     * operation. Get the variance only, it is the squared deviation.\n+     *\n+     * @param item the {@link Item} to get the standard deviation for\n+     * @param timestamp the point in time to which to compute the standard deviation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the standard deviation between now and then, or <code>null</code> if <code>timestamp</code> is in the\n+     *         past, if the persistence service given by <code>serviceId</code> is not available, or it is not a\n+     *         {@link QueryablePersistenceService}, or if there is no persisted state for the given <code>item</code> at\n+     *         the given <code>timestamp</code>\n+     */\n+    public static @Nullable State deviationUntil(Item item, ZonedDateTime timestamp, @Nullable RiemannType type,\n+            @Nullable String serviceId) {\n+        return internalDeviationBetween(item, null, timestamp, type, serviceId);\n     }\n \n     /**\n      * Gets the standard deviation of the state of the given {@link Item} between two points in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n@@ -1407,16 +1633,39 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      */\n     public static @Nullable State deviationBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n             @Nullable String serviceId) {\n-        return internalDeviationBetween(item, begin, end, serviceId);\n+        return internalDeviationBetween(item, begin, end, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the standard deviation of the state of the given {@link Item} between two points in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * <b>Note:</b> If you need variance and standard deviation at the same time do not query both as it is a costly\n+     * operation. Get the variance only, it is the squared deviation.\n+     *\n+     * @param item the {@link Item} to get the standard deviation for\n+     * @param begin the point in time from which to compute\n+     * @param end the end time for the computation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the standard deviation between both points of time, or <code>null</code> if <code>begin</code> is after\n+     *         <code>end</code>, if the persistence service given by\n+     *         <code>serviceId</code> is not available, or it is not a {@link QueryablePersistenceService}, or it is not\n+     *         a {@link QueryablePersistenceService}, or if there is no persisted state for the\n+     *         given <code>item</code> between <code>begin</code> and <code>end</code>\n+     */\n+    public static @Nullable State deviationBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable RiemannType type, @Nullable String serviceId) {\n+        return internalDeviationBetween(item, begin, end, type, serviceId);\n     }\n \n     private static @Nullable State internalDeviationBetween(Item item, @Nullable ZonedDateTime begin,\n-            @Nullable ZonedDateTime end, @Nullable String serviceId) {\n+            @Nullable ZonedDateTime end, @Nullable RiemannType type, @Nullable String serviceId) {\n         String effectiveServiceId = serviceId == null ? getDefaultServiceId() : serviceId;\n         if (effectiveServiceId == null) {\n             return null;\n         }\n-        State variance = internalVarianceBetween(item, begin, end, effectiveServiceId);\n+        State variance = internalVarianceBetween(item, begin, end, type, effectiveServiceId);\n \n         if (variance != null) {\n             DecimalType dt = variance.as(DecimalType.class);\n@@ -1439,6 +1688,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n     /**\n      * Gets the average value of the state of a given {@link Item} since a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The default {@link PersistenceService} is used.\n      *\n      * @param item the {@link Item} to get the average value for\n@@ -1448,11 +1698,27 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n      */\n     public static @Nullable State averageSince(Item item, ZonedDateTime timestamp) {\n-        return internalAverageBetween(item, timestamp, null, null);\n+        return internalAverageBetween(item, timestamp, null, null, null);\n+    }\n+\n+    /**\n+     * Gets the average value of the state of a given {@link Item} since a certain point in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the average value for\n+     * @param timestamp the point in time from which to search for the average value\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the average value since <code>timestamp</code> or <code>null</code> if no\n+     *         previous states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n+     */\n+    public static @Nullable State averageSince(Item item, ZonedDateTime timestamp, @Nullable RiemannType type) {\n+        return internalAverageBetween(item, timestamp, null, type, null);\n     }\n \n     /**\n      * Gets the average value of the state of a given {@link Item} until a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The default {@link PersistenceService} is used.\n      *\n      * @param item the {@link Item} to get the average value for\n@@ -1462,11 +1728,27 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n      */\n     public static @Nullable State averageUntil(Item item, ZonedDateTime timestamp) {\n-        return internalAverageBetween(item, null, timestamp, null);\n+        return internalAverageBetween(item, null, timestamp, null, null);\n+    }\n+\n+    /**\n+     * Gets the average value of the state of a given {@link Item} until a certain point in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the average value for\n+     * @param timestamp the point in time to which to search for the average value\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the average value until <code>timestamp</code> or <code>null</code> if no\n+     *         future states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n+     */\n+    public static @Nullable State averageUntil(Item item, ZonedDateTime timestamp, @Nullable RiemannType type) {\n+        return internalAverageBetween(item, null, timestamp, type, null);\n     }\n \n     /**\n      * Gets the average value of the state of a given {@link Item} between two certain points in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The default {@link PersistenceService} is used.\n      *\n      * @param item the {@link Item} to get the average value for\n@@ -1477,11 +1759,29 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         {@link QueryablePersistenceService}.\n      */\n     public static @Nullable State averageBetween(Item item, ZonedDateTime begin, ZonedDateTime end) {\n-        return internalAverageBetween(item, begin, end, null);\n+        return internalAverageBetween(item, begin, end, null, null);\n+    }\n+\n+    /**\n+     * Gets the average value of the state of a given {@link Item} between two certain points in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the average value for\n+     * @param begin the point in time from which to start the summation\n+     * @param end the point in time to which to start the summation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the average value between <code>begin</code> and <code>end</code> or <code>null</code> if no\n+     *         states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}.\n+     */\n+    public static @Nullable State averageBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable RiemannType type) {\n+        return internalAverageBetween(item, begin, end, type, null);\n     }\n \n     /**\n      * Gets the average value of the state of a given {@link Item} since a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * @param item the {@link Item} to get the average value for\n@@ -1493,11 +1793,30 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         calculation.\n      */\n     public static @Nullable State averageSince(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n-        return internalAverageBetween(item, timestamp, null, serviceId);\n+        return internalAverageBetween(item, timestamp, null, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the average value of the state of a given {@link Item} since a certain point in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the average value for\n+     * @param timestamp the point in time from which to search for the average value\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the average value since <code>timestamp</code>, or <code>null</code> if no\n+     *         previous states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}. The current state is included in the\n+     *         calculation.\n+     */\n+    public static @Nullable State averageSince(Item item, ZonedDateTime timestamp, @Nullable RiemannType type,\n+            @Nullable String serviceId) {\n+        return internalAverageBetween(item, timestamp, null, type, serviceId);\n     }\n \n     /**\n      * Gets the average value of the state of a given {@link Item} until a certain point in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * @param item the {@link Item} to get the average value for\n@@ -1509,11 +1828,30 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      *         calculation.\n      */\n     public static @Nullable State averageUntil(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n-        return internalAverageBetween(item, null, timestamp, serviceId);\n+        return internalAverageBetween(item, null, timestamp, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the average value of the state of a given {@link Item} until a certain point in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the average value for\n+     * @param timestamp the point in time to which to search for the average value\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the average value until <code>timestamp</code>, or <code>null</code> if no\n+     *         future states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}. The current state is included in the\n+     *         calculation.\n+     */\n+    public static @Nullable State averageUntil(Item item, ZonedDateTime timestamp, @Nullable RiemannType type,\n+            @Nullable String serviceId) {\n+        return internalAverageBetween(item, null, timestamp, type, serviceId);\n     }\n \n     /**\n      * Gets the average value of the state of a given {@link Item} between two certain points in time.\n+     * A left approximation type is used for the Riemann sum.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * @param item the {@link Item} to get the average value for\n@@ -1526,11 +1864,29 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n      */\n     public static @Nullable State averageBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n             @Nullable String serviceId) {\n-        return internalAverageBetween(item, begin, end, serviceId);\n+        return internalAverageBetween(item, begin, end, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the average value of the state of a given {@link Item} between two certain points in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the average value for\n+     * @param begin the point in time from which to start the summation\n+     * @param end the point in time to which to start the summation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the average value between <code>begin</code> and <code>end</code>, or <code>null</code> if no\n+     *         states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}\n+     */\n+    public static @Nullable State averageBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable RiemannType type, @Nullable String serviceId) {\n+        return internalAverageBetween(item, begin, end, type, serviceId);\n     }\n \n     private static @Nullable State internalAverageBetween(Item item, @Nullable ZonedDateTime begin,\n-            @Nullable ZonedDateTime end, @Nullable String serviceId) {\n+            @Nullable ZonedDateTime end, @Nullable RiemannType type, @Nullable String serviceId) {\n         String effectiveServiceId = serviceId == null ? getDefaultServiceId() : serviceId;\n         if (effectiveServiceId == null) {\n             return null;\n@@ -1549,46 +1905,396 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             return null;\n         }\n         Iterator<HistoricItem> it = result.iterator();\n-\n-        BigDecimal sum = BigDecimal.ZERO;\n-\n-        HistoricItem lastItem = null;\n-        ZonedDateTime firstTimestamp = null;\n+        // Remove initial part of history that does not have any values persisted\n+        if (beginTime.isBefore(now)) {\n+            if (it.hasNext()) {\n+                beginTime = it.next().getTimestamp();\n+            }\n+            it = result.iterator();\n+        }\n \n         Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n         Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n \n-        while (it.hasNext()) {\n-            HistoricItem thisItem = it.next();\n-            if (lastItem != null) {\n-                DecimalType dtState = getPersistedValue(lastItem, unit);\n-                if (dtState != null) {\n-                    BigDecimal value = dtState.toBigDecimal();\n-                    BigDecimal weight = BigDecimal\n-                            .valueOf(Duration.between(lastItem.getTimestamp(), thisItem.getTimestamp()).toMillis());\n-                    sum = sum.add(value.multiply(weight));\n-                }\n-            }\n+        BigDecimal sum = riemannSum(beginTime, endTime, it, unit, type);\n+        BigDecimal totalDuration = BigDecimal.valueOf(Duration.between(beginTime, endTime).toMillis());\n+        if (totalDuration.signum() == 0) {\n+            return null;\n+        }\n+        BigDecimal average = sum.divide(totalDuration, MathContext.DECIMAL64);\n+        if (unit != null) {\n+            return new QuantityType<>(average, unit);\n+        }\n+        return new DecimalType(average);\n+    }\n \n-            if (firstTimestamp == null) {\n-                firstTimestamp = thisItem.getTimestamp();\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} since a certain point in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * A left approximation type is used for the Riemann sum.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param timestamp the point in time from which to search for the riemannSum value\n+     * @return the Riemann sum since <code>timestamp</code> or <code>null</code> if no\n+     *         previous states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n+     */\n+    public static @Nullable State riemannSumSince(Item item, ZonedDateTime timestamp) {\n+        return internalRiemannSumBetween(item, timestamp, null, null, null);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} since a certain point in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param timestamp the point in time from which to search for the riemannSum value\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the Riemann sum since <code>timestamp</code> or <code>null</code> if no\n+     *         previous states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n+     */\n+    public static @Nullable State riemannSumSince(Item item, ZonedDateTime timestamp, @Nullable RiemannType type) {\n+        return internalRiemannSumBetween(item, timestamp, null, type, null);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} until a certain point in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * A left approximation type is used for the Riemann sum.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param timestamp the point in time to which to search for the riemannSum value\n+     * @return the Riemann sum until <code>timestamp</code> or <code>null</code> if no\n+     *         future states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n+     */\n+    public static @Nullable State riemannSumUntil(Item item, ZonedDateTime timestamp) {\n+        return internalRiemannSumBetween(item, null, timestamp, null, null);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} until a certain point in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param timestamp the point in time to which to search for the riemannSum value\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the Riemann sum until <code>timestamp</code> or <code>null</code> if no\n+     *         future states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n+     */\n+    public static @Nullable State riemannSumUntil(Item item, ZonedDateTime timestamp, @Nullable RiemannType type) {\n+        return internalRiemannSumBetween(item, null, timestamp, type, null);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} between two certain points in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * A left approximation type is used for the Riemann sum.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param begin the point in time from which to start the summation\n+     * @param end the point in time to which to start the summation\n+     * @return the Riemann sum between <code>begin</code> and <code>end</code> or <code>null</code> if no\n+     *         states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}.\n+     */\n+    public static @Nullable State riemannSumBetween(Item item, ZonedDateTime begin, ZonedDateTime end) {\n+        return internalRiemannSumBetween(item, begin, end, null, null);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} between two certain points in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param begin the point in time from which to start the summation\n+     * @param end the point in time to which to start the summation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @return the Riemann sum between <code>begin</code> and <code>end</code> or <code>null</code> if no\n+     *         states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}.\n+     */\n+    public static @Nullable State riemannSumBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable RiemannType type) {\n+        return internalRiemannSumBetween(item, begin, end, type, null);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} since a certain point in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * A left approximation type is used for the Riemann sum.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param timestamp the point in time from which to search for the riemannSum value\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the Riemann sum since <code>timestamp</code>, or <code>null</code> if no\n+     *         previous states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}. The current state is included in the\n+     *         calculation.\n+     */\n+    public static @Nullable State riemannSumSince(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n+        return internalRiemannSumBetween(item, timestamp, null, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} since a certain point in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param timestamp the point in time from which to search for the riemannSum value\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the Riemann sum since <code>timestamp</code>, or <code>null</code> if no\n+     *         previous states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}. The current state is included in the\n+     *         calculation.\n+     */\n+    public static @Nullable State riemannSumSince(Item item, ZonedDateTime timestamp, @Nullable RiemannType type,\n+            @Nullable String serviceId) {\n+        return internalRiemannSumBetween(item, timestamp, null, type, serviceId);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} until a certain point in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * A left approximation type is used for the Riemann sum.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param timestamp the point in time to which to search for the riemannSum value\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the Riemann sum until <code>timestamp</code>, or <code>null</code> if no\n+     *         future states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}. The current state is included in the\n+     *         calculation.\n+     */\n+    public static @Nullable State riemannSumUntil(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n+        return internalRiemannSumBetween(item, null, timestamp, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} until a certain point in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param timestamp the point in time to which to search for the riemannSum value\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the Riemann sum until <code>timestamp</code>, or <code>null</code> if no\n+     *         future states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}. The current state is included in the\n+     *         calculation.\n+     */\n+    public static @Nullable State riemannSumUntil(Item item, ZonedDateTime timestamp, @Nullable RiemannType type,\n+            @Nullable String serviceId) {\n+        return internalRiemannSumBetween(item, null, timestamp, type, serviceId);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} between two certain points in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * A left approximation type is used for the Riemann sum.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param begin the point in time from which to start the summation\n+     * @param end the point in time to which to start the summation\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the Riemann sum between <code>begin</code> and <code>end</code>, or <code>null</code> if no\n+     *         states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}\n+     */\n+    public static @Nullable State riemannSumBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable String serviceId) {\n+        return internalRiemannSumBetween(item, begin, end, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the Riemann sum of the states of a given {@link Item} between two certain points in time.\n+     * This can be used as an approximation for integrating the curve represented by discrete values.\n+     * The time dimension in the result is in seconds, therefore if you do not use QuantityType results, you may have to\n+     * multiply or divide to get the result in the expected scale.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the riemannSum value for\n+     * @param begin the point in time from which to start the summation\n+     * @param end the point in time to which to start the summation\n+     * @param type LEFT, RIGHT, MIDPOINT or TRAPEZOIDAL representing approximation types for Riemann sums\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the Riemann sum between <code>begin</code> and <code>end</code>, or <code>null</code> if no\n+     *         states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}\n+     */\n+    public static @Nullable State riemannSumBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable RiemannType type, @Nullable String serviceId) {\n+        return internalRiemannSumBetween(item, begin, end, type, serviceId);\n+    }\n+\n+    private static @Nullable State internalRiemannSumBetween(Item item, @Nullable ZonedDateTime begin,\n+            @Nullable ZonedDateTime end, @Nullable RiemannType type, @Nullable String serviceId) {\n+        String effectiveServiceId = serviceId == null ? getDefaultServiceId() : serviceId;\n+        if (effectiveServiceId == null) {\n+            return null;\n+        }\n+        ZonedDateTime now = ZonedDateTime.now();\n+        ZonedDateTime beginTime = Objects.requireNonNullElse(begin, now);\n+        ZonedDateTime endTime = Objects.requireNonNullElse(end, now);\n+\n+        Iterable<HistoricItem> result = getAllStatesBetweenWithBoundaries(item, begin, end, effectiveServiceId);\n+        if (result == null) {\n+            return null;\n+        }\n+        Iterator<HistoricItem> it = result.iterator();\n+        // Remove initial part of history that does not have any values persisted\n+        if (beginTime.isBefore(now)) {\n+            if (it.hasNext()) {\n+                beginTime = it.next().getTimestamp();\n             }\n-            lastItem = thisItem;\n+            it = result.iterator();\n         }\n \n-        if (firstTimestamp != null) {\n-            BigDecimal totalDuration = BigDecimal.valueOf(Duration.between(firstTimestamp, endTime).toMillis());\n-            if (totalDuration.signum() == 0) {\n-                return null;\n+        Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n+        Unit<?> unit = (baseItem instanceof NumberItem numberItem)\n+                && (numberItem.getUnit() instanceof Unit<?> numberItemUnit) ? numberItemUnit.getSystemUnit() : null;\n+        BigDecimal sum = riemannSum(beginTime, endTime, it, unit, type).scaleByPowerOfTen(-3);\n+        if (unit != null) {\n+            return new QuantityType<>(sum, unit.multiply(Units.SECOND));\n+        }\n+        return new DecimalType(sum);\n+    }\n+\n+    private static BigDecimal riemannSum(ZonedDateTime begin, ZonedDateTime end, Iterator<HistoricItem> it,\n+            @Nullable Unit<?> unit, @Nullable RiemannType type) {\n+        RiemannType riemannType = type == null ? RiemannType.LEFT : type;\n+\n+        BigDecimal sum = BigDecimal.ZERO;\n+        HistoricItem prevItem = null;\n+        HistoricItem nextItem = null;\n+        DecimalType prevState = null;\n+        DecimalType nextState = null;\n+        Duration prevDuration = Duration.ZERO;\n+        Duration nextDuration = Duration.ZERO;\n+\n+        boolean midpointStartBucket = true; // The start and end buckets for the midpoint calculation should be\n+                                            // considered for the full length, this flag is used to find the start\n+                                            // bucket\n+        if ((riemannType == RiemannType.MIDPOINT) && it.hasNext()) {\n+            prevItem = it.next();\n+            prevState = getPersistedValue(prevItem, unit);\n+        }\n+\n+        while (it.hasNext()) {\n+            nextItem = it.next();\n+            BigDecimal weight = BigDecimal.ZERO;\n+            BigDecimal value = BigDecimal.ZERO;\n+            switch (riemannType) {\n+                case LEFT:\n+                    if (prevItem != null) {\n+                        prevState = getPersistedValue(prevItem, unit);\n+                        if (prevState != null) {\n+                            value = prevState.toBigDecimal();\n+                            weight = BigDecimal.valueOf(\n+                                    Duration.between(prevItem.getTimestamp(), nextItem.getTimestamp()).toMillis());\n+                        }\n+                    }\n+                    prevItem = nextItem;\n+                    break;\n+                case RIGHT:\n+                    nextState = getPersistedValue(nextItem, unit);\n+                    if (nextState != null) {\n+                        value = nextState.toBigDecimal();\n+                        if (prevItem == null) {\n+                            weight = BigDecimal.valueOf(Duration.between(begin, nextItem.getTimestamp()).toMillis());\n+                        } else {\n+                            weight = BigDecimal.valueOf(\n+                                    Duration.between(prevItem.getTimestamp(), nextItem.getTimestamp()).toMillis());\n+                        }\n+                    }\n+                    prevItem = nextItem;\n+                    break;\n+                case TRAPEZOIDAL:\n+                    if (prevItem != null) {\n+                        prevState = getPersistedValue(prevItem, unit);\n+                        nextState = getPersistedValue(nextItem, unit);\n+                        if (prevState != null && nextState != null) {\n+                            value = prevState.toBigDecimal().add(nextState.toBigDecimal())\n+                                    .divide(BigDecimal.valueOf(2));\n+                            weight = BigDecimal.valueOf(\n+                                    Duration.between(prevItem.getTimestamp(), nextItem.getTimestamp()).toMillis());\n+                        }\n+                    }\n+                    prevItem = nextItem;\n+                    break;\n+                case MIDPOINT:\n+                    if (prevItem != null) {\n+                        DecimalType currentState = getPersistedValue(prevItem, unit);\n+                        if (currentState != null) {\n+                            value = currentState.toBigDecimal();\n+                            if (midpointStartBucket && !prevDuration.isZero() && prevState != null) {\n+                                // Add half of the start bucket with the start value (left approximation)\n+                                sum = sum.add(prevState.toBigDecimal()\n+                                        .multiply(BigDecimal.valueOf(prevDuration.dividedBy(2).toMillis())));\n+                                midpointStartBucket = false;\n+                            }\n+                            nextDuration = Duration.between(prevItem.getTimestamp(), nextItem.getTimestamp());\n+                            weight = prevDuration.isZero() || nextDuration.isZero() ? BigDecimal.ZERO\n+                                    : BigDecimal.valueOf(prevDuration.plus(nextDuration).dividedBy(2).toMillis());\n+                            if (!nextDuration.isZero()) {\n+                                prevDuration = nextDuration;\n+                            }\n+                            prevState = currentState;\n+                        }\n+                    }\n+                    prevItem = nextItem;\n+                    break;\n             }\n-            BigDecimal average = sum.divide(totalDuration, MathContext.DECIMAL64);\n-            if (unit != null) {\n-                return new QuantityType<>(average, unit);\n+            sum = sum.add(value.multiply(weight));\n+        }\n+\n+        if ((riemannType == RiemannType.MIDPOINT) && (prevItem != null)) {\n+            // Add half of the end bucket with the end value (right approximation)\n+            DecimalType dtState = getPersistedValue(prevItem, unit);\n+            if (dtState != null) {\n+                BigDecimal value = dtState.toBigDecimal();\n+                BigDecimal weight = BigDecimal.valueOf(prevDuration.dividedBy(2).toMillis());\n+                sum = sum.add(value.multiply(weight));\n             }\n-            return new DecimalType(average);\n         }\n \n-        return null;\n+        return sum;\n     }\n \n     /**\n@@ -1727,6 +2433,8 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n     /**\n      * Gets the sum of the state of a given <code>item</code> since a certain point in time.\n+     * This method does not calculate a Riemann sum and therefore cannot be used as an approximation for the integral\n+     * value.\n      * The default persistence service is used.\n      *\n      * @param item the item for which we will sum its persisted state values since <code>timestamp</code>\n@@ -1740,6 +2448,8 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n     /**\n      * Gets the sum of the state of a given <code>item</code> until a certain point in time.\n+     * This method does not calculate a Riemann sum and therefore cannot be used as an approximation for the integral\n+     * value.\n      * The default persistence service is used.\n      *\n      * @param item the item for which we will sum its persisted state values to <code>timestamp</code>\n@@ -1753,6 +2463,8 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n     /**\n      * Gets the sum of the state of a given <code>item</code> between two certain points in time.\n+     * This method does not calculate a Riemann sum and therefore cannot be used as an approximation for the integral\n+     * value.\n      * The default persistence service is used.\n      *\n      * @param item the item for which we will sum its persisted state values between <code>begin</code> and\n@@ -1769,6 +2481,8 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n     /**\n      * Gets the sum of the state of a given <code>item</code> since a certain point in time.\n+     * This method does not calculate a Riemann sum and therefore cannot be used as an approximation for the integral\n+     * value.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * @param item the item for which we will sum its persisted state values since <code>timestamp</code>\n@@ -1783,6 +2497,8 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n     /**\n      * Gets the sum of the state of a given <code>item</code> until a certain point in time.\n+     * This method does not calculate a Riemann sum and therefore cannot be used as an approximation for the integral\n+     * value.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * @param item the item for which we will sum its persisted state values to <code>timestamp</code>\n@@ -1797,6 +2513,8 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n     /**\n      * Gets the sum of the state of a given <code>item</code> between two certain points in time.\n+     * This method does not calculate a Riemann sum and therefore cannot be used as an approximation for the integral\n+     * value.\n      * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n      *\n      * @param item the item for which we will sum its persisted state values between <code>begin</code> and\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\nindex ecf1745efdc..ea17eea623c 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n@@ -53,6 +53,7 @@\n import org.openhab.core.persistence.HistoricItem;\n import org.openhab.core.persistence.PersistenceService;\n import org.openhab.core.persistence.PersistenceServiceRegistry;\n+import org.openhab.core.persistence.extensions.PersistenceExtensions.RiemannType;\n import org.openhab.core.persistence.registry.PersistenceServiceConfigurationRegistry;\n import org.openhab.core.types.State;\n \n@@ -67,6 +68,7 @@\n  * @author Mark Herwege - handle persisted GroupItem with QuantityType\n  * @author Mark Herwege - add median methods\n  * @author Mark Herwege - Implement aliases\n+ * @author Mark Herwege - add Riemann sum methods\n  */\n @ExtendWith(MockitoExtension.class)\n @MockitoSettings(strictness = Strictness.LENIENT)\n@@ -890,7 +892,7 @@ public void testMinimumSinceOnOffType() {\n     public void testVarianceSinceDecimalType() {\n         ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        double expectedAverage = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, null);\n \n         double expected = DoubleStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END)\n@@ -912,7 +914,7 @@ public void testVarianceSinceDecimalType() {\n     public void testVarianceUntilDecimalType() {\n         ZonedDateTime endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage = testAverage(null, FUTURE_INTERMEDIATE_VALUE_3);\n \n         double expected = DoubleStream\n                 .concat(DoubleStream.of(STATE.doubleValue()),\n@@ -937,7 +939,7 @@ public void testVarianceBetweenDecimalType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage1 = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expectedAverage1 = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n \n         double expected = IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2)\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage1, 2)).sum()\n@@ -951,7 +953,7 @@ public void testVarianceBetweenDecimalType() {\n \n         startStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage2 = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        double expectedAverage2 = testAverage(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         expected = IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4)\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage2, 2)).sum()\n@@ -965,7 +967,7 @@ public void testVarianceBetweenDecimalType() {\n \n         startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage3 = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage3 = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         expected = IntStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END),\n@@ -988,7 +990,7 @@ public void testVarianceBetweenDecimalType() {\n     public void testVarianceSinceQuantityType() {\n         ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        double expectedAverage = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, null);\n \n         double expected = DoubleStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END)\n@@ -1011,7 +1013,7 @@ public void testVarianceSinceQuantityType() {\n     public void testVarianceUntilQuantityType() {\n         ZonedDateTime endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage = testAverage(null, FUTURE_INTERMEDIATE_VALUE_3);\n \n         double expected = DoubleStream\n                 .concat(DoubleStream.of(STATE.doubleValue()),\n@@ -1037,7 +1039,7 @@ public void testVarianceBetweenQuantityType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage1 = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expectedAverage1 = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n \n         double expected = IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2)\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage1, 2)).sum()\n@@ -1052,7 +1054,7 @@ public void testVarianceBetweenQuantityType() {\n \n         startStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage2 = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        double expectedAverage2 = testAverage(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         expected = IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4)\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage2, 2)).sum()\n@@ -1067,7 +1069,7 @@ public void testVarianceBetweenQuantityType() {\n \n         startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage3 = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage3 = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         expected = IntStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END),\n@@ -1091,7 +1093,7 @@ public void testVarianceBetweenQuantityType() {\n     public void testVarianceSinceGroupQuantityType() {\n         ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        double expectedAverage = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, null);\n \n         double expected = DoubleStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END)\n@@ -1114,7 +1116,7 @@ public void testVarianceSinceGroupQuantityType() {\n     public void testVarianceUntilGroupQuantityType() {\n         ZonedDateTime endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage = testAverage(null, FUTURE_INTERMEDIATE_VALUE_3);\n \n         double expected = DoubleStream\n                 .concat(DoubleStream.of(STATE.doubleValue()),\n@@ -1140,7 +1142,7 @@ public void testVarianceBetweenGroupQuantityType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage1 = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expectedAverage1 = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n \n         double expected = IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2)\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage1, 2)).sum()\n@@ -1155,7 +1157,7 @@ public void testVarianceBetweenGroupQuantityType() {\n \n         startStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage2 = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        double expectedAverage2 = testAverage(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         expected = IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4)\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage2, 2)).sum()\n@@ -1170,7 +1172,7 @@ public void testVarianceBetweenGroupQuantityType() {\n \n         startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage3 = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage3 = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         expected = IntStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END),\n@@ -1194,7 +1196,7 @@ public void testVarianceBetweenGroupQuantityType() {\n     public void testDeviationSinceDecimalType() {\n         ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        double expectedAverage = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, null);\n \n         double expected = Math.sqrt(DoubleStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END)\n@@ -1216,7 +1218,7 @@ public void testDeviationSinceDecimalType() {\n     public void testDeviationUntilDecimalType() {\n         ZonedDateTime endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage = testAverage(null, FUTURE_INTERMEDIATE_VALUE_3);\n \n         double expected = Math.sqrt(DoubleStream\n                 .concat(DoubleStream.of(STATE.doubleValue()),\n@@ -1241,7 +1243,7 @@ public void testDeviationBetweenDecimalType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expectedAverage = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n \n         double expected = Math.sqrt(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2)\n                 .mapToDouble(i -> Double.parseDouble(Integer.toString(i))).map(d -> Math.pow(d - expectedAverage, 2))\n@@ -1254,7 +1256,7 @@ public void testDeviationBetweenDecimalType() {\n \n         startStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage2 = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        double expectedAverage2 = testAverage(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         expected = Math.sqrt(IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4)\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage2, 2)).sum()\n@@ -1268,7 +1270,7 @@ public void testDeviationBetweenDecimalType() {\n \n         startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage3 = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage3 = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         expected = Math.sqrt(IntStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END),\n@@ -1291,7 +1293,7 @@ public void testDeviationBetweenDecimalType() {\n     public void testDeviationSinceQuantityType() {\n         ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        double expectedAverage = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, null);\n \n         double expected = Math.sqrt(DoubleStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END)\n@@ -1314,7 +1316,7 @@ public void testDeviationSinceQuantityType() {\n     public void testDeviationUntilQuantityType() {\n         ZonedDateTime endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage = testAverage(null, FUTURE_INTERMEDIATE_VALUE_3);\n \n         double expected = Math.sqrt(DoubleStream\n                 .concat(DoubleStream.of(STATE.doubleValue()),\n@@ -1340,7 +1342,7 @@ public void testDeviationBetweenQuantityType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expectedAverage = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n \n         double expected = Math.sqrt(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2)\n                 .mapToDouble(i -> Double.parseDouble(Integer.toString(i))).map(d -> Math.pow(d - expectedAverage, 2))\n@@ -1354,7 +1356,7 @@ public void testDeviationBetweenQuantityType() {\n \n         startStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage2 = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        double expectedAverage2 = testAverage(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         expected = Math.sqrt(IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4)\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage2, 2)).sum()\n@@ -1369,7 +1371,7 @@ public void testDeviationBetweenQuantityType() {\n \n         startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage3 = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage3 = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         expected = Math.sqrt(IntStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END),\n@@ -1393,7 +1395,7 @@ public void testDeviationBetweenQuantityType() {\n     public void testDeviationSinceGroupQuantityType() {\n         ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        double expectedAverage = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, null);\n \n         double expected = Math.sqrt(DoubleStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END)\n@@ -1416,7 +1418,7 @@ public void testDeviationSinceGroupQuantityType() {\n     public void testDeviationUntilGroupQuantityType() {\n         ZonedDateTime endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage = testAverage(null, FUTURE_INTERMEDIATE_VALUE_3);\n \n         double expected = Math.sqrt(DoubleStream\n                 .concat(DoubleStream.of(STATE.doubleValue()),\n@@ -1442,7 +1444,7 @@ public void testDeviationBetweenGroupQuantityType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expectedAverage = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n \n         double expected = Math.sqrt(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2)\n                 .mapToDouble(i -> Double.parseDouble(Integer.toString(i))).map(d -> Math.pow(d - expectedAverage, 2))\n@@ -1456,7 +1458,7 @@ public void testDeviationBetweenGroupQuantityType() {\n \n         startStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage2 = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        double expectedAverage2 = testAverage(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         expected = Math.sqrt(IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4)\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage2, 2)).sum()\n@@ -1471,7 +1473,7 @@ public void testDeviationBetweenGroupQuantityType() {\n \n         startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expectedAverage3 = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expectedAverage3 = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         expected = Math.sqrt(IntStream\n                 .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END),\n@@ -1491,10 +1493,457 @@ public void testDeviationBetweenGroupQuantityType() {\n         assertNull(deviation);\n     }\n \n+    @Test\n+    public void testRiemannSumSinceDecimalType() {\n+        RiemannType type = RiemannType.LEFT;\n+\n+        ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = testRiemannSum(BEFORE_START, null, type);\n+        State sum = PersistenceExtensions.riemannSumSince(numberItem, start, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        DecimalType dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+        start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, null, type);\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type);\n+        assertNull(sum);\n+\n+        type = RiemannType.RIGHT;\n+\n+        start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(BEFORE_START, null, type);\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+        start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, null, type);\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type);\n+        assertNull(sum);\n+\n+        type = RiemannType.TRAPEZOIDAL;\n+\n+        start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(BEFORE_START, null, type);\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+        start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, null, type);\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type);\n+        assertNull(sum);\n+\n+        type = RiemannType.MIDPOINT;\n+\n+        start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(BEFORE_START, null, type);\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+        start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, null, type);\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 1 min difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 60.0);\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, start, type);\n+        assertNull(sum);\n+    }\n+\n+    @Test\n+    public void testRiemannSumUntilDecimalType() {\n+        RiemannType type = RiemannType.LEFT;\n+\n+        ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = testRiemannSum(null, FUTURE_INTERMEDIATE_VALUE_3, type);\n+        State sum = PersistenceExtensions.riemannSumUntil(numberItem, end, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        DecimalType dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumUntil(numberItem, end, type);\n+        assertNull(sum);\n+\n+        type = RiemannType.RIGHT;\n+\n+        end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(null, FUTURE_INTERMEDIATE_VALUE_3, type);\n+        sum = PersistenceExtensions.riemannSumUntil(numberItem, end, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumUntil(numberItem, end, type);\n+        assertNull(sum);\n+\n+        type = RiemannType.TRAPEZOIDAL;\n+\n+        end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(null, FUTURE_INTERMEDIATE_VALUE_3, type);\n+        sum = PersistenceExtensions.riemannSumUntil(numberItem, end, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumUntil(numberItem, end, type);\n+        assertNull(sum);\n+\n+        type = RiemannType.MIDPOINT;\n+\n+        end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(null, FUTURE_INTERMEDIATE_VALUE_3, type);\n+        sum = PersistenceExtensions.riemannSumUntil(numberItem, end, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        // Allow max 5s difference between method and test, required as both expected and method tested retrieve\n+        // now from system\n+        assertEquals(expected, dt.doubleValue(), HISTORIC_END * 5.0);\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumUntil(numberItem, end, type);\n+        assertNull(sum);\n+    }\n+\n+    @Test\n+    public void testRiemannSumBetweenDecimalType() {\n+        RiemannType type = RiemannType.LEFT;\n+\n+        ZonedDateTime beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2, type);\n+        State sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        DecimalType dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertEquals(expected, dt.doubleValue(), 0.01);\n+\n+        beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4, type);\n+\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3, type);\n+\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type);\n+        assertNull(sum);\n+\n+        type = RiemannType.RIGHT;\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2, type);\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertEquals(expected, dt.doubleValue(), 0.01);\n+\n+        beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4, type);\n+\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3, type);\n+\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type);\n+        assertNull(sum);\n+\n+        type = RiemannType.TRAPEZOIDAL;\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2, type);\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertEquals(expected, dt.doubleValue(), 0.01);\n+\n+        beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4, type);\n+\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3, type);\n+\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type);\n+        assertNull(sum);\n+\n+        type = RiemannType.MIDPOINT;\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2, type);\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertEquals(expected, dt.doubleValue(), 0.01);\n+\n+        beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4, type);\n+\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = testRiemannSum(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3, type);\n+\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type, SERVICE_ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.riemannSumBetween(numberItem, beginStored, endStored, type);\n+        assertNull(sum);\n+    }\n+\n+    @Test\n+    public void testRiemannSumBetweenQuantityType() {\n+        for (RiemannType type : RiemannType.values()) {\n+            ZonedDateTime beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                    ZoneId.systemDefault());\n+            ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n+                    ZoneId.systemDefault());\n+            double expected = testRiemannSumCelsius(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2, type);\n+            State sum = PersistenceExtensions.riemannSumBetween(quantityItem, beginStored, endStored, type, SERVICE_ID);\n+\n+            assertNotNull(sum);\n+            QuantityType<?> qt = sum.as(QuantityType.class);\n+            assertNotNull(qt);\n+            assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+            assertEquals(Units.KELVIN.multiply(Units.SECOND), qt.getUnit());\n+\n+            beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+            endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+            expected = testRiemannSumCelsius(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4, type);\n+\n+            sum = PersistenceExtensions.riemannSumBetween(quantityItem, beginStored, endStored, type, SERVICE_ID);\n+            assertNotNull(sum);\n+            qt = sum.as(QuantityType.class);\n+            assertNotNull(qt);\n+            assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+            assertEquals(Units.KELVIN.multiply(Units.SECOND), qt.getUnit());\n+\n+            beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+            endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+            expected = testRiemannSumCelsius(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3, type);\n+\n+            sum = PersistenceExtensions.riemannSumBetween(quantityItem, beginStored, endStored, type, SERVICE_ID);\n+            assertNotNull(sum);\n+            qt = sum.as(QuantityType.class);\n+            assertNotNull(qt);\n+            assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+            assertEquals(Units.KELVIN.multiply(Units.SECOND), qt.getUnit());\n+\n+            // default persistence service\n+            sum = PersistenceExtensions.riemannSumBetween(quantityItem, beginStored, endStored, type);\n+            assertNull(sum);\n+        }\n+    }\n+\n+    @Test\n+    public void testRiemannSumSinceDecimalTypeIrregularTimespans() {\n+        RiemannType type = RiemannType.LEFT;\n+\n+        ZonedDateTime now = ZonedDateTime.now();\n+        int historicHours = 27;\n+        int futureHours = 0;\n+\n+        // Persistence will contain following entries:\n+        // 0 - 27 hours back in time\n+        // 100 - 26 hours back in time\n+        // 0 - 25 hours back in time\n+        // 50 - 2 hours back in time\n+        // 0 - 1 hour back in time\n+        createTestCachedValuesPersistenceService(now, historicHours, futureHours);\n+\n+        // Testing that riemannSum calculates the correct Riemann sum over the last 27 hours\n+        State sum = PersistenceExtensions.riemannSumSince(numberItem, now.minusHours(historicHours), type,\n+                TestCachedValuesPersistenceService.ID);\n+        assertNotNull(sum);\n+        DecimalType dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(100.0 * 3600 + 50.0 * 3600, 0.01)));\n+\n+        // Testing that riemannSum calculates the correct Riemann sum over the last 24 hours\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, now.minusHours(historicHours).plusHours(3), type,\n+                TestCachedValuesPersistenceService.ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(50.0 * 3600, 0.01)));\n+\n+        // Testing that riemannSum calculates the correct Riemann sum over the last 30 minutes\n+        sum = PersistenceExtensions.riemannSumSince(numberItem, now.minusMinutes(30), type,\n+                TestCachedValuesPersistenceService.ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(0, 0.01)));\n+    }\n+\n+    @Test\n+    public void testRiemannSumUntilDecimalTypeIrregularTimespans() {\n+        RiemannType type = RiemannType.LEFT;\n+\n+        ZonedDateTime now = ZonedDateTime.now();\n+        int historicHours = 0;\n+        int futureHours = 27;\n+\n+        // Persistence will contain following entries:\n+        // 0 - 1 hour forward in time\n+        // 50 - 2 hours forward in time\n+        // 0 - 3 hours forward in time\n+        // 100 - 25 hours forward in time\n+        // 0 - 26 hour forward in time\n+        createTestCachedValuesPersistenceService(now, historicHours, futureHours);\n+\n+        // Testing that riemannSum calculates the correct Riemann sum over the next 27 hours\n+        State sum = PersistenceExtensions.riemannSumUntil(numberItem, now.plusHours(futureHours), type,\n+                TestCachedValuesPersistenceService.ID);\n+        assertNotNull(sum);\n+        DecimalType dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(100.0 * 3600 + 50.0 * 3600, 0.01)));\n+\n+        // Testing that riemannSum calculates the correct Riemann sum over the next 25 hours\n+        sum = PersistenceExtensions.riemannSumUntil(numberItem, now.plusHours(futureHours).minusHours(2), type,\n+                TestCachedValuesPersistenceService.ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(50.0 * 3600, 0.01)));\n+\n+        // Testing that riemannSum calculates the correct Riemann sum over the next 30 minutes hours\n+        sum = PersistenceExtensions.riemannSumUntil(numberItem, now.plusMinutes(30), type,\n+                TestCachedValuesPersistenceService.ID);\n+        assertNotNull(sum);\n+        dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(0, 0.01)));\n+    }\n+\n+    @Test\n+    public void testRiemannSumBetweenZeroDuration() {\n+        ZonedDateTime now = ZonedDateTime.now();\n+        State sum = PersistenceExtensions.riemannSumBetween(numberItem, now, now, SERVICE_ID);\n+        assertNotNull(sum);\n+        DecimalType dt = sum.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(0, 0.01)));\n+    }\n+\n     @Test\n     public void testAverageSinceDecimalType() {\n         ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = average(BEFORE_START, null);\n+        double expected = testAverage(BEFORE_START, null);\n         State average = PersistenceExtensions.averageSince(numberItem, start, SERVICE_ID);\n         assertNotNull(average);\n         DecimalType dt = average.as(DecimalType.class);\n@@ -1502,7 +1951,7 @@ public void testAverageSinceDecimalType() {\n         assertEquals(expected, dt.doubleValue(), 0.01);\n \n         start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        expected = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, null);\n         average = PersistenceExtensions.averageSince(numberItem, start, SERVICE_ID);\n         assertNotNull(average);\n         dt = average.as(DecimalType.class);\n@@ -1517,7 +1966,7 @@ public void testAverageSinceDecimalType() {\n     @Test\n     public void testAverageUntilDecimalType() {\n         ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expected = testAverage(null, FUTURE_INTERMEDIATE_VALUE_3);\n         State average = PersistenceExtensions.averageUntil(numberItem, end, SERVICE_ID);\n         assertNotNull(average);\n         DecimalType dt = average.as(DecimalType.class);\n@@ -1536,7 +1985,7 @@ public void testAverageBetweenDecimalType() {\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n \n-        double expected = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expected = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n         State average = PersistenceExtensions.averageBetween(numberItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(average);\n         DecimalType dt = average.as(DecimalType.class);\n@@ -1545,7 +1994,7 @@ public void testAverageBetweenDecimalType() {\n \n         beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        expected = testAverage(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         average = PersistenceExtensions.averageBetween(numberItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(average);\n@@ -1555,7 +2004,7 @@ public void testAverageBetweenDecimalType() {\n \n         beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        expected = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         average = PersistenceExtensions.averageBetween(numberItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(average);\n@@ -1564,14 +2013,14 @@ public void testAverageBetweenDecimalType() {\n         assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n \n         // default persistence service\n-        average = PersistenceExtensions.averageBetween(quantityItem, beginStored, endStored);\n+        average = PersistenceExtensions.averageBetween(numberItem, beginStored, endStored);\n         assertNull(average);\n     }\n \n     @Test\n     public void testAverageSinceQuantityType() {\n         ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = average(BEFORE_START, null);\n+        double expected = testAverage(BEFORE_START, null);\n         State average = PersistenceExtensions.averageSince(quantityItem, start, SERVICE_ID);\n         assertNotNull(average);\n         QuantityType<?> qt = average.as(QuantityType.class);\n@@ -1580,7 +2029,7 @@ public void testAverageSinceQuantityType() {\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n         start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        expected = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, null);\n         average = PersistenceExtensions.averageSince(quantityItem, start, SERVICE_ID);\n         assertNotNull(average);\n         qt = average.as(QuantityType.class);\n@@ -1596,7 +2045,7 @@ public void testAverageSinceQuantityType() {\n     @Test\n     public void testAverageUntilQuantityType() {\n         ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expected = testAverage(null, FUTURE_INTERMEDIATE_VALUE_3);\n         State average = PersistenceExtensions.averageUntil(quantityItem, end, SERVICE_ID);\n         assertNotNull(average);\n         QuantityType<?> qt = average.as(QuantityType.class);\n@@ -1615,7 +2064,7 @@ public void testAverageBetweenQuantityType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expected = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expected = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n         State average = PersistenceExtensions.averageBetween(quantityItem, beginStored, endStored, SERVICE_ID);\n \n         assertNotNull(average);\n@@ -1626,7 +2075,7 @@ public void testAverageBetweenQuantityType() {\n \n         beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        expected = testAverage(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         average = PersistenceExtensions.averageBetween(quantityItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(average);\n@@ -1637,7 +2086,7 @@ public void testAverageBetweenQuantityType() {\n \n         beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        expected = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         average = PersistenceExtensions.averageBetween(quantityItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(average);\n@@ -1654,7 +2103,7 @@ public void testAverageBetweenQuantityType() {\n     @Test\n     public void testAverageSinceGroupQuantityType() {\n         ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = average(BEFORE_START, null);\n+        double expected = testAverage(BEFORE_START, null);\n         State average = PersistenceExtensions.averageSince(groupQuantityItem, start, SERVICE_ID);\n         assertNotNull(average);\n         QuantityType<?> qt = average.as(QuantityType.class);\n@@ -1663,7 +2112,7 @@ public void testAverageSinceGroupQuantityType() {\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n         start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        expected = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, null);\n         average = PersistenceExtensions.averageSince(groupQuantityItem, start, SERVICE_ID);\n         assertNotNull(average);\n         qt = average.as(QuantityType.class);\n@@ -1679,7 +2128,7 @@ public void testAverageSinceGroupQuantityType() {\n     @Test\n     public void testAverageUntilGroupQuantityType() {\n         ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expected = testAverage(null, FUTURE_INTERMEDIATE_VALUE_3);\n         State average = PersistenceExtensions.averageUntil(groupQuantityItem, end, SERVICE_ID);\n         assertNotNull(average);\n         QuantityType<?> qt = average.as(QuantityType.class);\n@@ -1698,7 +2147,7 @@ public void testAverageBetweenGroupQuantityType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expected = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expected = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n         State average = PersistenceExtensions.averageBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n \n         assertNotNull(average);\n@@ -1709,7 +2158,7 @@ public void testAverageBetweenGroupQuantityType() {\n \n         beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        expected = testAverage(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         average = PersistenceExtensions.averageBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(average);\n@@ -1720,7 +2169,7 @@ public void testAverageBetweenGroupQuantityType() {\n \n         beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        expected = testAverage(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         average = PersistenceExtensions.averageBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(average);\n@@ -1821,8 +2270,15 @@ public void testAverageSinceDecimalTypeIrregularTimespans() {\n         int historicHours = 27;\n         int futureHours = 0;\n \n+        // Persistence will contain following entries:\n+        // 0 - 27 hours back in time\n+        // 100 - 26 hours back in time\n+        // 0 - 25 hours back in time\n+        // 50 - 2 hours back in time\n+        // 0 - 1 hour back in time\n         createTestCachedValuesPersistenceService(now, historicHours, futureHours);\n \n+        // Testing that average calculates the correct average over the last 27 hours\n         State average = PersistenceExtensions.averageSince(numberItem, now.minusHours(historicHours),\n                 TestCachedValuesPersistenceService.ID);\n         assertNotNull(average);\n@@ -1830,6 +2286,7 @@ public void testAverageSinceDecimalTypeIrregularTimespans() {\n         assertNotNull(dt);\n         assertThat(dt.doubleValue(), is(closeTo((100.0 + 50.0) / historicHours, 0.01)));\n \n+        // Testing that average calculates the correct average over the last 24 hours\n         average = PersistenceExtensions.averageSince(numberItem, now.minusHours(historicHours).plusHours(3),\n                 TestCachedValuesPersistenceService.ID);\n         assertNotNull(average);\n@@ -1837,6 +2294,7 @@ public void testAverageSinceDecimalTypeIrregularTimespans() {\n         assertNotNull(dt);\n         assertThat(dt.doubleValue(), is(closeTo(50.0 / (historicHours - 3.0), 0.01)));\n \n+        // Testing that average calculates the correct average over the last 30 minutes\n         average = PersistenceExtensions.averageSince(numberItem, now.minusMinutes(30),\n                 TestCachedValuesPersistenceService.ID);\n         assertNotNull(average);\n@@ -1851,8 +2309,15 @@ public void testAverageUntilDecimalTypeIrregularTimespans() {\n         int historicHours = 0;\n         int futureHours = 27;\n \n+        // Persistence will contain following entries:\n+        // 0 - 1 hour forward in time\n+        // 50 - 2 hours forward in time\n+        // 0 - 3 hours forward in time\n+        // 100 - 25 hours forward in time\n+        // 0 - 26 hour forward in time\n         createTestCachedValuesPersistenceService(now, historicHours, futureHours);\n \n+        // Testing that average calculates the correct average over the next 27 hours\n         State average = PersistenceExtensions.averageUntil(numberItem, now.plusHours(futureHours),\n                 TestCachedValuesPersistenceService.ID);\n         assertNotNull(average);\n@@ -1860,6 +2325,7 @@ public void testAverageUntilDecimalTypeIrregularTimespans() {\n         assertNotNull(dt);\n         assertThat(dt.doubleValue(), is(closeTo((100.0 + 50.0) / futureHours, 0.01)));\n \n+        // Testing that average calculates the correct average over the next 25 hours\n         average = PersistenceExtensions.averageUntil(numberItem, now.plusHours(futureHours).minusHours(2),\n                 TestCachedValuesPersistenceService.ID);\n         assertNotNull(average);\n@@ -1867,6 +2333,7 @@ public void testAverageUntilDecimalTypeIrregularTimespans() {\n         assertNotNull(dt);\n         assertThat(dt.doubleValue(), is(closeTo(50.0 / (futureHours - 2.0), 0.01)));\n \n+        // Testing that average calculates the correct average over the next 30 minutes hours\n         average = PersistenceExtensions.averageUntil(numberItem, now.plusMinutes(30),\n                 TestCachedValuesPersistenceService.ID);\n         assertNotNull(average);\n@@ -1889,7 +2356,7 @@ public void testAverageBetweenZeroDuration() {\n     @Test\n     public void testMedianSinceDecimalType() {\n         ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = median(BEFORE_START, null);\n+        double expected = testMedian(BEFORE_START, null);\n         State median = PersistenceExtensions.medianSince(numberItem, start, SERVICE_ID);\n         assertNotNull(median);\n         DecimalType dt = median.as(DecimalType.class);\n@@ -1897,7 +2364,7 @@ public void testMedianSinceDecimalType() {\n         assertEquals(expected, dt.doubleValue(), 0.01);\n \n         start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        expected = testMedian(HISTORIC_INTERMEDIATE_VALUE_1, null);\n         median = PersistenceExtensions.medianSince(numberItem, start, SERVICE_ID);\n         assertNotNull(median);\n         dt = median.as(DecimalType.class);\n@@ -1912,7 +2379,7 @@ public void testMedianSinceDecimalType() {\n     @Test\n     public void testMedianUntilDecimalType() {\n         ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = median(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expected = testMedian(null, FUTURE_INTERMEDIATE_VALUE_3);\n         State median = PersistenceExtensions.medianUntil(numberItem, end, SERVICE_ID);\n         assertNotNull(median);\n         DecimalType dt = median.as(DecimalType.class);\n@@ -1931,7 +2398,7 @@ public void testMedianBetweenDecimalType() {\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n \n-        double expected = median(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expected = testMedian(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n         State median = PersistenceExtensions.medianBetween(numberItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(median);\n         DecimalType dt = median.as(DecimalType.class);\n@@ -1940,7 +2407,7 @@ public void testMedianBetweenDecimalType() {\n \n         beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = median(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        expected = testMedian(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         median = PersistenceExtensions.medianBetween(numberItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(median);\n@@ -1950,7 +2417,7 @@ public void testMedianBetweenDecimalType() {\n \n         beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        expected = testMedian(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         median = PersistenceExtensions.medianBetween(numberItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(median);\n@@ -1966,7 +2433,7 @@ public void testMedianBetweenDecimalType() {\n     @Test\n     public void testMedianSinceQuantityType() {\n         ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = median(BEFORE_START, null);\n+        double expected = testMedian(BEFORE_START, null);\n         State median = PersistenceExtensions.medianSince(quantityItem, start, SERVICE_ID);\n         assertNotNull(median);\n         QuantityType<?> qt = median.as(QuantityType.class);\n@@ -1975,7 +2442,7 @@ public void testMedianSinceQuantityType() {\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n         start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        expected = testMedian(HISTORIC_INTERMEDIATE_VALUE_1, null);\n         median = PersistenceExtensions.medianSince(quantityItem, start, SERVICE_ID);\n         assertNotNull(median);\n         qt = median.as(QuantityType.class);\n@@ -1991,7 +2458,7 @@ public void testMedianSinceQuantityType() {\n     @Test\n     public void testMedianUntilQuantityType() {\n         ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = median(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expected = testMedian(null, FUTURE_INTERMEDIATE_VALUE_3);\n         State median = PersistenceExtensions.medianUntil(quantityItem, end, SERVICE_ID);\n         assertNotNull(median);\n         QuantityType<?> qt = median.as(QuantityType.class);\n@@ -2010,7 +2477,7 @@ public void testMedianBetweenQuantityType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expected = median(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expected = testMedian(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n         State median = PersistenceExtensions.medianBetween(quantityItem, beginStored, endStored, SERVICE_ID);\n \n         assertNotNull(median);\n@@ -2021,7 +2488,7 @@ public void testMedianBetweenQuantityType() {\n \n         beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = median(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        expected = testMedian(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         median = PersistenceExtensions.medianBetween(quantityItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(median);\n@@ -2032,7 +2499,7 @@ public void testMedianBetweenQuantityType() {\n \n         beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        expected = testMedian(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         median = PersistenceExtensions.medianBetween(quantityItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(median);\n@@ -2049,7 +2516,7 @@ public void testMedianBetweenQuantityType() {\n     @Test\n     public void testMedianSinceGroupQuantityType() {\n         ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = median(BEFORE_START, null);\n+        double expected = testMedian(BEFORE_START, null);\n         State median = PersistenceExtensions.medianSince(groupQuantityItem, start, SERVICE_ID);\n         assertNotNull(median);\n         QuantityType<?> qt = median.as(QuantityType.class);\n@@ -2058,7 +2525,7 @@ public void testMedianSinceGroupQuantityType() {\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n         start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        expected = testMedian(HISTORIC_INTERMEDIATE_VALUE_1, null);\n         median = PersistenceExtensions.medianSince(groupQuantityItem, start, SERVICE_ID);\n         assertNotNull(median);\n         qt = median.as(QuantityType.class);\n@@ -2074,7 +2541,7 @@ public void testMedianSinceGroupQuantityType() {\n     @Test\n     public void testMedianUntilGroupQuantityType() {\n         ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        double expected = median(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        double expected = testMedian(null, FUTURE_INTERMEDIATE_VALUE_3);\n         State median = PersistenceExtensions.medianUntil(groupQuantityItem, end, SERVICE_ID);\n         assertNotNull(median);\n         QuantityType<?> qt = median.as(QuantityType.class);\n@@ -2093,7 +2560,7 @@ public void testMedianBetweenGroupQuantityType() {\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n-        double expected = median(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        double expected = testMedian(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n         State median = PersistenceExtensions.medianBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n \n         assertNotNull(median);\n@@ -2104,7 +2571,7 @@ public void testMedianBetweenGroupQuantityType() {\n \n         beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = median(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+        expected = testMedian(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n \n         median = PersistenceExtensions.medianBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(median);\n@@ -2115,7 +2582,7 @@ public void testMedianBetweenGroupQuantityType() {\n \n         beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n         endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n-        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+        expected = testMedian(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n \n         median = PersistenceExtensions.medianBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n         assertNotNull(median);\n\ndiff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java\nindex de38ec5a317..8c85be248e6 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java\n@@ -41,6 +41,7 @@\n import org.openhab.core.persistence.HistoricItem;\n import org.openhab.core.persistence.PersistenceItemInfo;\n import org.openhab.core.persistence.QueryablePersistenceService;\n+import org.openhab.core.persistence.extensions.PersistenceExtensions.RiemannType;\n import org.openhab.core.persistence.strategy.PersistenceStrategy;\n import org.openhab.core.types.State;\n \n@@ -49,6 +50,7 @@\n  *\n  * @author Kai Kreuzer - Initial contribution\n  * @author Mark Herwege - Allow future values\n+ * @author Mark Herwege - Adapt test expected value logic for Riemann sums\n  */\n @NonNullByDefault\n public class TestPersistenceService implements QueryablePersistenceService {\n@@ -87,6 +89,8 @@ public class TestPersistenceService implements QueryablePersistenceService {\n     static final int AFTER_END = 2110;\n     static final DecimalType STATE = new DecimalType(HISTORIC_END);\n \n+    static final double KELVIN_OFFSET = 273.15;\n+\n     private final ItemRegistry itemRegistry;\n \n     public TestPersistenceService(ItemRegistry itemRegistry) {\n@@ -176,6 +180,7 @@ public String getName() {\n                 }\n                 final int year = i;\n                 results.add(new HistoricItem() {\n+\n                     @Override\n                     public ZonedDateTime getTimestamp() {\n                         return ZonedDateTime.of(year, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n@@ -201,6 +206,7 @@ public String getName() {\n             if (filter.getOrdering() == Ordering.DESCENDING) {\n                 Collections.reverse(results);\n             }\n+\n             Stream<HistoricItem> stream = results.stream();\n             if (filter.getPageNumber() > 0) {\n                 stream = stream.skip(filter.getPageSize() * filter.getPageNumber());\n@@ -234,20 +240,171 @@ static OnOffType switchValue(int hour) {\n     }\n \n     static DecimalType value(long year) {\n+        return value(year, false);\n+    }\n+\n+    private static DecimalType value(long year, boolean kelvinOffset) {\n         if (year < HISTORIC_START) {\n             return DecimalType.ZERO;\n         } else if (year <= HISTORIC_END) {\n-            return new DecimalType(year);\n+            return new DecimalType(year + (kelvinOffset ? KELVIN_OFFSET : 0));\n         } else if (year < FUTURE_START) {\n-            return new DecimalType(HISTORIC_END);\n+            return new DecimalType(HISTORIC_END + (kelvinOffset ? KELVIN_OFFSET : 0));\n         } else if (year <= FUTURE_END) {\n-            return new DecimalType(year);\n+            return new DecimalType(year + (kelvinOffset ? KELVIN_OFFSET : 0));\n         } else {\n-            return new DecimalType(FUTURE_END);\n+            return new DecimalType(FUTURE_END + (kelvinOffset ? KELVIN_OFFSET : 0));\n+        }\n+    }\n+\n+    static double testRiemannSum(@Nullable Integer beginYear, @Nullable Integer endYear, RiemannType type) {\n+        return testRiemannSum(beginYear, endYear, type, false);\n+    }\n+\n+    static double testRiemannSumCelsius(@Nullable Integer beginYear, @Nullable Integer endYear, RiemannType type) {\n+        return testRiemannSum(beginYear, endYear, type, true);\n+    }\n+\n+    private static double testRiemannSum(@Nullable Integer beginYear, @Nullable Integer endYear, RiemannType type,\n+            boolean kelvinOffset) {\n+        ZonedDateTime now = ZonedDateTime.now();\n+        int begin = beginYear != null ? (beginYear < HISTORIC_START ? HISTORIC_START : beginYear) : now.getYear() + 1;\n+        int end = endYear != null ? endYear : now.getYear();\n+        double sum = 0;\n+        int index = begin;\n+        long duration = 0;\n+        long nextDuration = 0;\n+        switch (type) {\n+            case LEFT:\n+                if (beginYear == null) {\n+                    duration = Duration\n+                            .between(now, ZonedDateTime.of(now.getYear() + 1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n+                            .toSeconds();\n+                }\n+                while (index < end) {\n+                    int bucketStart = index;\n+                    double value = value(index, kelvinOffset).doubleValue();\n+                    while ((index < end - 1) && (value(index).longValue() == value(index + 1).longValue())) {\n+                        index++;\n+                    }\n+                    index++;\n+                    duration += Duration\n+                            .between(ZonedDateTime.of(bucketStart, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                                    ZonedDateTime.of(index, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n+                            .toSeconds();\n+                    if (endYear == null && index == end) {\n+                        duration += Duration\n+                                .between(ZonedDateTime.of(now.getYear(), 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), now)\n+                                .toSeconds();\n+                    }\n+                    sum += value * duration;\n+                    duration = 0;\n+                }\n+                break;\n+            case RIGHT:\n+                if (beginYear == null) {\n+                    duration = Duration\n+                            .between(now, ZonedDateTime.of(now.getYear() + 1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n+                            .toSeconds();\n+                }\n+                while (index < end) {\n+                    int bucketStart = index;\n+                    while ((index < end - 1) && (value(index).longValue() == value(index + 1).longValue())) {\n+                        index++;\n+                    }\n+                    index++;\n+                    double value = value(index, kelvinOffset).doubleValue();\n+                    duration += Duration\n+                            .between(ZonedDateTime.of(bucketStart, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                                    ZonedDateTime.of(index, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n+                            .toSeconds();\n+                    if (endYear == null && index == end) {\n+                        duration += Duration\n+                                .between(ZonedDateTime.of(now.getYear(), 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), now)\n+                                .toSeconds();\n+                    }\n+                    sum += value * duration;\n+                    duration = 0;\n+                }\n+                break;\n+            case TRAPEZOIDAL:\n+                if (beginYear == null) {\n+                    duration = Duration\n+                            .between(now, ZonedDateTime.of(now.getYear() + 1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n+                            .toSeconds();\n+                }\n+                while (index < end) {\n+                    int bucketStart = index;\n+                    double value = value(index, kelvinOffset).doubleValue();\n+                    while ((index < end - 1) && (value(index).longValue() == value(index + 1).longValue())) {\n+                        index++;\n+                    }\n+                    index++;\n+                    value = (value + value(index, kelvinOffset).doubleValue()) / 2.0;\n+                    duration += Duration\n+                            .between(ZonedDateTime.of(bucketStart, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                                    ZonedDateTime.of(index, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n+                            .toSeconds();\n+                    if (endYear == null && index == end) {\n+                        duration += Duration\n+                                .between(ZonedDateTime.of(now.getYear(), 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), now)\n+                                .toSeconds();\n+                    }\n+                    sum += value * duration;\n+                    duration = 0;\n+                }\n+                break;\n+            case MIDPOINT:\n+                int nextIndex = begin;\n+                boolean startBucket = true;\n+                double startValue = value(begin, kelvinOffset).doubleValue();\n+                if (beginYear == null) {\n+                    duration = Duration.between(now, ZonedDateTime.of(begin, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n+                            .toSeconds();\n+                }\n+                while (index < end - 1 && nextIndex < end) {\n+                    int bucketStart = index;\n+                    while ((index < end - 1) && (value(index).longValue() == value(index + 1).longValue())) {\n+                        index++;\n+                    }\n+                    index++;\n+                    double value = value(index, kelvinOffset).doubleValue();\n+                    duration += Duration\n+                            .between(ZonedDateTime.of(bucketStart, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                                    ZonedDateTime.of(index, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n+                            .toSeconds();\n+                    if (startBucket) {\n+                        sum += startValue * duration / 2.0;\n+                        startBucket = false;\n+                    }\n+                    bucketStart = index;\n+                    nextIndex = index;\n+                    while ((nextIndex < end - 1)\n+                            && (value(nextIndex).longValue() == value(nextIndex + 1).longValue())) {\n+                        nextIndex++;\n+                    }\n+                    nextIndex++;\n+                    nextDuration = Duration\n+                            .between(ZonedDateTime.of(bucketStart, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                                    ZonedDateTime.of(nextIndex, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n+                            .toSeconds();\n+                    if (endYear == null && nextIndex == end) {\n+                        nextDuration += Duration\n+                                .between(ZonedDateTime.of(now.getYear(), 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), now)\n+                                .toSeconds();\n+                    }\n+                    sum += value * (duration + nextDuration) / 2.0;\n+                    duration = 0;\n+                }\n+                double endValue = value(end, kelvinOffset).doubleValue();\n+                long endDuration = nextDuration;\n+                sum += endValue * endDuration / 2.0;\n+                break;\n         }\n+        return sum;\n     }\n \n-    static double average(@Nullable Integer beginYear, @Nullable Integer endYear) {\n+    static double testAverage(@Nullable Integer beginYear, @Nullable Integer endYear) {\n         ZonedDateTime now = ZonedDateTime.now();\n         ZonedDateTime beginDate = beginYear != null\n                 ? ZonedDateTime.of(beginYear >= HISTORIC_START ? beginYear : HISTORIC_START, 1, 1, 0, 0, 0, 0,\n@@ -255,22 +412,12 @@ static double average(@Nullable Integer beginYear, @Nullable Integer endYear) {\n                 : now;\n         ZonedDateTime endDate = endYear != null ? ZonedDateTime.of(endYear, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault())\n                 : now;\n-        int begin = beginYear != null ? beginYear : now.getYear() + 1;\n-        int end = endYear != null ? endYear : now.getYear();\n-        long sum = LongStream.range(begin, end).map(y -> value(y).longValue() * Duration\n-                .between(ZonedDateTime.of(Long.valueOf(y).intValue(), 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n-                        ZonedDateTime.of(Long.valueOf(y + 1).intValue(), 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()))\n-                .toMillis()).sum();\n-        sum += beginYear == null ? value(now.getYear()).longValue() * Duration\n-                .between(now, ZonedDateTime.of(now.getYear() + 1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault())).toMillis()\n-                : 0;\n-        sum += endYear == null ? value(now.getYear()).longValue() * Duration\n-                .between(ZonedDateTime.of(now.getYear(), 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), now).toMillis() : 0;\n-        long duration = Duration.between(beginDate, endDate).toMillis();\n+        double sum = testRiemannSum(beginYear, endYear, RiemannType.LEFT);\n+        long duration = Duration.between(beginDate, endDate).toSeconds();\n         return 1.0 * sum / duration;\n     }\n \n-    static double median(@Nullable Integer beginYear, @Nullable Integer endYear) {\n+    static double testMedian(@Nullable Integer beginYear, @Nullable Integer endYear) {\n         ZonedDateTime now = ZonedDateTime.now();\n         int begin = beginYear != null ? beginYear : now.getYear() + 1;\n         int end = endYear != null ? endYear : now.getYear();\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4429",
    "pr_id": 4429,
    "issue_id": 3891,
    "repo": "openhab/openhab-core",
    "problem_statement": "[Sitemap] Widget for color temperature\n### Is your feature request related to a problem? Please describe.\r\n<!--\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n-->\r\nFor some time I created two sliders for lightbulbs that can change their color temperature. One for brightness, one for color temperature.\r\nRecently I acquired a Nanoleaf Elements light (LEDs with brightness and color temperature settings). The binding allows to use a color picker to control both brightness and color temperature settings. All colors expect in the range cold white to warm white are ignored by the binding, but I can control both with just one widget.\r\n\r\n### Describe the solution you'd like\r\n<!--\r\nA clear and concise description of what you want to happen.\r\n-->\r\nAdd a new option to the `Color` widget (e.g. `temperatureOnly`) that limits the color selection from cold white to warm white.\r\n\r\nExample from the Ikea Tradfri app:\r\n![tradfri](https://github.com/openhab/openhab-core/assets/22525368/ca066cb6-1936-4817-a89a-7e2d770b83c1)\r\n\r\n\r\n### Describe alternatives you've considered\r\n<!--\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n-->\r\n\r\n### Additional context\r\n<!--\r\nAdd any other context or screenshots about the feature request here.\r\n-->\r\n\r\n### Coordination between maintainers\r\n<!--\r\nDon't edit or remove this section.\r\n-->\r\n\r\nNotify maintainers of other UIs:\r\n@openhab/webui-maintainers \r\n@openhab/android-maintainers \r\n@openhab/ios-maintainers \r\n\r\nChecklist for implementation:\r\n- [x] Core\r\n- [x] Basic UI\r\n- [x] Main UI\r\n- [x] Android app\r\n- [ ] iOS app\r\n- [x] Docs\r\n",
    "issue_word_count": 241,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java"
    ],
    "base_commit": "63788b061bc6f778784a46f4e4589998d8c5278c",
    "head_commit": "aa8a240ba8508e83e0709fb528097cd9c184f3bf",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4429",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4429",
    "dockerfile": "",
    "pr_merged_at": "2024-10-29T05:23:08.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java\nindex d7b1499e3c4..f62bf463848 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java\n@@ -692,6 +692,106 @@ public Point closest(Point p) {\n      */\n     private static final double[][] KELVIN_TO_XY_LOOKUP_TABLE = {\n         //@formatter:off\n+        { 1000, 0.652750055750174, 0.34446222719737 },\n+        { 1010, 0.651338820005714, 0.345710187476526 },\n+        { 1020, 0.64993006787286, 0.346948777634801 },\n+        { 1030, 0.648523859077325, 0.348177799899612 },\n+        { 1040, 0.647120247807274, 0.349397065326079 },\n+        { 1050, 0.645719283115238, 0.350606393540134 },\n+        { 1060, 0.644321009299518, 0.351805612493099 },\n+        { 1070, 0.642925466265835, 0.352994558226964 },\n+        { 1080, 0.64153268986994, 0.3541730746497 },\n+        { 1090, 0.640142712241891, 0.355341013319936 },\n+        { 1100, 0.638755562092687, 0.356498233240403 },\n+        { 1110, 0.637371265003916, 0.357644600659585 },\n+        { 1120, 0.63598984370109, 0.358779988881019 },\n+        { 1130, 0.634611318311292, 0.359904278079781 },\n+        { 1140, 0.633235706605755, 0.361017355125666 },\n+        { 1150, 0.631863024228, 0.362119113412632 },\n+        { 1160, 0.630493284908101, 0.363209452694114 },\n+        { 1170, 0.629126500663671, 0.36428827892381 },\n+        { 1180, 0.627762681988133, 0.365355504101598 },\n+        { 1190, 0.626401838026807, 0.366411046124246 },\n+        { 1200, 0.625043976741368, 0.367454828640607 },\n+        { 1210, 0.623689105063183, 0.368486780911013 },\n+        { 1220, 0.622337229036024, 0.369506837670598 },\n+        { 1230, 0.620988353948665, 0.370514938996308 },\n+        { 1240, 0.619642484457822, 0.371511030177355 },\n+        { 1250, 0.618299624701903, 0.372495061588915 },\n+        { 1260, 0.616959778406011, 0.37346698856886 },\n+        { 1270, 0.61562294897864, 0.374426771297343 },\n+        { 1280, 0.614289139600468, 0.375374374679072 },\n+        { 1290, 0.612958353305667, 0.376309768228112 },\n+        { 1300, 0.611630593056105, 0.377232925955066 },\n+        { 1310, 0.610305861808828, 0.378143826256513 },\n+        { 1320, 0.608984162577174, 0.379042451806574 },\n+        { 1330, 0.607665498485884, 0.379928789450492 },\n+        { 1340, 0.606349872820529, 0.380802830100132 },\n+        { 1350, 0.605037289071589, 0.381664568631302 },\n+        { 1360, 0.603727750973495, 0.38251400378281 },\n+        { 1370, 0.60242126253892, 0.383351138057187 },\n+        { 1380, 0.601117828088629, 0.384175977622988 },\n+        { 1390, 0.599817452277141, 0.384988532218637 },\n+        { 1400, 0.598520140114478, 0.385788815057729 },\n+        { 1410, 0.597225896984257, 0.386576842735756 },\n+        { 1420, 0.595934728658356, 0.387352635138207 },\n+        { 1430, 0.594646641308391, 0.38811621535 },\n+        { 1440, 0.59336164151423, 0.38886760956621 },\n+        { 1450, 0.592079736269747, 0.389606847004059 },\n+        { 1460, 0.590800932986013, 0.390333959816145 },\n+        { 1470, 0.589525239492135, 0.391048983004883 },\n+        { 1480, 0.588252664033903, 0.391751954338129 },\n+        { 1490, 0.586983215270435, 0.392442914265982 },\n+        { 1500, 0.585716902268969, 0.393121905838739 },\n+        { 1510, 0.584453734497981, 0.393788974625991 },\n+        { 1520, 0.583193721818756, 0.394444168636845 },\n+        { 1530, 0.581936874475565, 0.395087538241273 },\n+        { 1540, 0.580683203084578, 0.395719136092572 },\n+        { 1550, 0.579432718621644, 0.396339017050928 },\n+        { 1560, 0.578185432409047, 0.396947238108083 },\n+        { 1570, 0.576941356101364, 0.397543858313098 },\n+        { 1580, 0.575700501670519, 0.398128938699214 },\n+        { 1590, 0.574462881390147, 0.398702542211806 },\n+        { 1600, 0.573228507819347, 0.39926473363742 },\n+        { 1610, 0.571997393785926, 0.399815579533917 },\n+        { 1620, 0.570769552369208, 0.400355148161688 },\n+        { 1630, 0.569544996882493, 0.400883509415978 },\n+        { 1640, 0.568323740855237, 0.401400734760292 },\n+        { 1650, 0.567105798015014, 0.401906897160888 },\n+        { 1660, 0.565891182269338, 0.402402071022378 },\n+        { 1670, 0.564679907687394, 0.402886332124401 },\n+        { 1680, 0.563471988481735, 0.403359757559409 },\n+        { 1690, 0.562267438989995, 0.403822425671539 },\n+        { 1700, 0.561066273656675, 0.40427441599657 },\n+        { 1710, 0.559868507015037, 0.404715809202991 },\n+        { 1720, 0.558674153669138, 0.405146687034153 },\n+        { 1730, 0.557483228276071, 0.405567132251513 },\n+        { 1740, 0.556295745528408, 0.405977228578975 },\n+        { 1750, 0.555111720136911, 0.406377060648321 },\n+        { 1760, 0.553931166813512, 0.40676671394573 },\n+        { 1770, 0.552754100254617, 0.407146274759384 },\n+        { 1780, 0.55158053512472, 0.407515830128156 },\n+        { 1790, 0.550410486040386, 0.407875467791389 },\n+        { 1800, 0.54924396755459, 0.408225276139745 },\n+        { 1810, 0.548080994141461, 0.40856534416712 },\n+        { 1820, 0.5469215801814, 0.408895761423654 },\n+        { 1830, 0.545765739946639, 0.409216617969775 },\n+        { 1840, 0.544613487587208, 0.409528004331327 },\n+        { 1850, 0.543464837117342, 0.409830011455734 },\n+        { 1860, 0.542319802402326, 0.410122730669222 },\n+        { 1870, 0.541178397145793, 0.410406253635074 },\n+        { 1880, 0.540040634877467, 0.410680672312926 },\n+        { 1890, 0.538906528941369, 0.410946078919076 },\n+        { 1900, 0.537776092484472, 0.411202565887823 },\n+        { 1910, 0.53664933844583, 0.411450225833805 },\n+        { 1920, 0.535526279546149, 0.411689151515339 },\n+        { 1930, 0.534406928277829, 0.411919435798755 },\n+        { 1940, 0.533291296895457, 0.412141171623705 },\n+        { 1950, 0.532179397406758, 0.412354451969443 },\n+        { 1960, 0.53107124156399, 0.412559369822065 },\n+        { 1970, 0.529966840855793, 0.412756018142703 },\n+        { 1980, 0.52886620649948, 0.412944489836645 },\n+        { 1990, 0.527769349433755, 0.413124877723394 },\n         { 2000, 0.526676280311873, 0.41329727450763 },\n         { 2010, 0.52558700949522, 0.413461772751086 },\n         { 2020, 0.524501547047308, 0.413618464845305 },\n@@ -1147,6 +1247,352 @@ public Point closest(Point p) {\n         { 6520, 0.313214100311644, 0.323323912550187 },\n         { 6530, 0.313059507478705, 0.323172994053855 },\n         { 6540, 0.312905465587415, 0.323022475478352 },\n+        { 6550, 0.31275197202918, 0.322872355656855 },\n+        { 6560, 0.312599024210234, 0.322722633424208 },\n+        { 6570, 0.312446619551539, 0.322573307616957 },\n+        { 6580, 0.312294755488698, 0.322424377073377 },\n+        { 6590, 0.312143429471856, 0.322275840633505 },\n+        { 6600, 0.311992638965609, 0.322127697139172 },\n+        { 6610, 0.311842381448913, 0.321979945434026 },\n+        { 6620, 0.311692654414993, 0.321832584363568 },\n+        { 6630, 0.31154345537125, 0.321685612775174 },\n+        { 6640, 0.311394781839175, 0.321539029518129 },\n+        { 6650, 0.311246631354252, 0.321392833443645 },\n+        { 6660, 0.311099001465878, 0.321247023404895 },\n+        { 6670, 0.310951889737268, 0.321101598257035 },\n+        { 6680, 0.31080529374537, 0.320956556857231 },\n+        { 6690, 0.310659211080778, 0.320811898064682 },\n+        { 6700, 0.310513639347644, 0.320667620740643 },\n+        { 6710, 0.310368576163594, 0.320523723748453 },\n+        { 6720, 0.310224019159638, 0.320380205953551 },\n+        { 6730, 0.310079965980093, 0.320237066223504 },\n+        { 6740, 0.309936414282491, 0.320094303428028 },\n+        { 6750, 0.309793361737498, 0.319951916439007 },\n+        { 6760, 0.309650806028835, 0.319809904130516 },\n+        { 6770, 0.309508744853186, 0.319668265378839 },\n+        { 6780, 0.309367175920125, 0.319526999062492 },\n+        { 6790, 0.309226096952031, 0.31938610406224 },\n+        { 6800, 0.309085505684005, 0.319245579261116 },\n+        { 6810, 0.308945399863794, 0.319105423544441 },\n+        { 6820, 0.308805777251706, 0.318965635799842 },\n+        { 6830, 0.308666635620536, 0.318826214917265 },\n+        { 6840, 0.308527972755481, 0.318687159788999 },\n+        { 6850, 0.308389786454069, 0.318548469309687 },\n+        { 6860, 0.308252074526075, 0.318410142376346 },\n+        { 6870, 0.308114834793446, 0.318272177888381 },\n+        { 6880, 0.307978065090227, 0.3181345747476 },\n+        { 6890, 0.307841763262478, 0.317997331858229 },\n+        { 6900, 0.307705927168207, 0.317860448126929 },\n+        { 6910, 0.307570554677287, 0.317723922462805 },\n+        { 6920, 0.307435643671386, 0.317587753777427 },\n+        { 6930, 0.307301192043892, 0.317451940984837 },\n+        { 6940, 0.307167197699838, 0.317316483001564 },\n+        { 6950, 0.30703365855583, 0.317181378746639 },\n+        { 6960, 0.306900572539974, 0.317046627141604 },\n+        { 6970, 0.306767937591803, 0.316912227110525 },\n+        { 6980, 0.306635751662207, 0.316778177580004 },\n+        { 6990, 0.306504012713361, 0.316644477479192 },\n+        { 7000, 0.306372718718652, 0.316511125739794 },\n+        { 7010, 0.306241867662613, 0.316378121296087 },\n+        { 7020, 0.306111457540851, 0.316245463084923 },\n+        { 7030, 0.305981486359977, 0.316113150045747 },\n+        { 7040, 0.305851952137536, 0.315981181120599 },\n+        { 7050, 0.305722852901944, 0.315849555254126 },\n+        { 7060, 0.305594186692414, 0.315718271393593 },\n+        { 7070, 0.305465951558892, 0.315587328488887 },\n+        { 7080, 0.305338145561988, 0.315456725492532 },\n+        { 7090, 0.305210766772912, 0.315326461359691 },\n+        { 7100, 0.305083813273404, 0.315196535048174 },\n+        { 7110, 0.304957283155673, 0.315066945518451 },\n+        { 7120, 0.304831174522328, 0.314937691733654 },\n+        { 7130, 0.304705485486314, 0.314808772659583 },\n+        { 7140, 0.304580214170851, 0.31468018726472 },\n+        { 7150, 0.304455358709365, 0.314551934520226 },\n+        { 7160, 0.304330917245426, 0.314424013399953 },\n+        { 7170, 0.304206887932689, 0.314296422880449 },\n+        { 7180, 0.304083268934824, 0.314169161940962 },\n+        { 7190, 0.303960058425462, 0.314042229563446 },\n+        { 7200, 0.303837254588126, 0.313915624732567 },\n+        { 7210, 0.303714855616174, 0.313789346435707 },\n+        { 7220, 0.303592859712737, 0.313663393662969 },\n+        { 7230, 0.303471265090658, 0.313537765407179 },\n+        { 7240, 0.303350069972432, 0.313412460663896 },\n+        { 7250, 0.303229272590146, 0.313287478431408 },\n+        { 7260, 0.30310887118542, 0.313162817710744 },\n+        { 7270, 0.302988864009348, 0.313038477505671 },\n+        { 7280, 0.30286924932244, 0.312914456822699 },\n+        { 7290, 0.302750025394565, 0.312790754671087 },\n+        { 7300, 0.302631190504886, 0.31266737006284 },\n+        { 7310, 0.302512742941815, 0.31254430201272 },\n+        { 7320, 0.302394681002945, 0.312421549538238 },\n+        { 7330, 0.302277002994998, 0.312299111659668 },\n+        { 7340, 0.302159707233771, 0.312176987400037 },\n+        { 7350, 0.302042792044074, 0.312055175785137 },\n+        { 7360, 0.30192625575968, 0.31193367584352 },\n+        { 7370, 0.301810096723269, 0.311812486606503 },\n+        { 7380, 0.30169431328637, 0.311691607108169 },\n+        { 7390, 0.301578903809311, 0.311571036385366 },\n+        { 7400, 0.301463866661161, 0.31145077347771 },\n+        { 7410, 0.301349200219681, 0.311330817427585 },\n+        { 7420, 0.301234902871264, 0.311211167280144 },\n+        { 7430, 0.301120973010891, 0.31109182208331 },\n+        { 7440, 0.30100740904207, 0.310972780887773 },\n+        { 7450, 0.300894209376788, 0.310854042746996 },\n+        { 7460, 0.300781372435461, 0.310735606717209 },\n+        { 7470, 0.300668896646876, 0.310617471857414 },\n+        { 7480, 0.300556780448148, 0.31049963722938 },\n+        { 7490, 0.300445022284661, 0.310382101897646 },\n+        { 7500, 0.300333620610026, 0.310264864929518 },\n+        { 7510, 0.300222573886023, 0.310147925395073 },\n+        { 7520, 0.300111880582555, 0.310031282367149 },\n+        { 7530, 0.300001539177601, 0.309914934921353 },\n+        { 7540, 0.299891548157161, 0.309798882136056 },\n+        { 7550, 0.299781906015211, 0.309683123092391 },\n+        { 7560, 0.299672611253656, 0.309567656874254 },\n+        { 7570, 0.299563662382277, 0.3094524825683 },\n+        { 7580, 0.299455057918686, 0.309337599263943 },\n+        { 7590, 0.299346796388279, 0.309223006053353 },\n+        { 7600, 0.299238876324188, 0.309108702031455 },\n+        { 7610, 0.299131296267236, 0.308994686295927 },\n+        { 7620, 0.299024054765886, 0.308880957947196 },\n+        { 7630, 0.298917150376198, 0.30876751608844 },\n+        { 7640, 0.298810581661782, 0.308654359825579 },\n+        { 7650, 0.298704347193756, 0.308541488267281 },\n+        { 7660, 0.298598445550693, 0.30842890052495 },\n+        { 7670, 0.298492875318583, 0.308316595712732 },\n+        { 7680, 0.298387635090787, 0.308204572947506 },\n+        { 7690, 0.298282723467988, 0.308092831348884 },\n+        { 7700, 0.298178139058152, 0.307981370039207 },\n+        { 7710, 0.298073880476482, 0.307870188143544 },\n+        { 7720, 0.297969946345376, 0.307759284789684 },\n+        { 7730, 0.29786633529438, 0.307648659108138 },\n+        { 7740, 0.297763045960149, 0.307538310232133 },\n+        { 7750, 0.297660076986403, 0.307428237297609 },\n+        { 7760, 0.297557427023885, 0.307318439443216 },\n+        { 7770, 0.297455094730317, 0.307208915810307 },\n+        { 7780, 0.29735307877036, 0.307099665542941 },\n+        { 7790, 0.297251377815571, 0.306990687787871 },\n+        { 7800, 0.297149990544364, 0.306881981694548 },\n+        { 7810, 0.297048915641968, 0.306773546415111 },\n+        { 7820, 0.296948151800384, 0.306665381104387 },\n+        { 7830, 0.296847697718348, 0.306557484919884 },\n+        { 7840, 0.296747552101289, 0.306449857021788 },\n+        { 7850, 0.296647713661287, 0.306342496572958 },\n+        { 7860, 0.296548181117039, 0.306235402738925 },\n+        { 7870, 0.296448953193814, 0.306128574687882 },\n+        { 7880, 0.296350028623417, 0.306022011590684 },\n+        { 7890, 0.296251406144149, 0.305915712620842 },\n+        { 7900, 0.296153084500768, 0.305809676954518 },\n+        { 7910, 0.29605506244445, 0.305703903770521 },\n+        { 7920, 0.295957338732757, 0.3055983922503 },\n+        { 7930, 0.295859912129586, 0.305493141577943 },\n+        { 7940, 0.295762781405147, 0.305388150940171 },\n+        { 7950, 0.295665945335915, 0.305283419526329 },\n+        { 7960, 0.295569402704596, 0.305178946528389 },\n+        { 7970, 0.295473152300089, 0.305074731140935 },\n+        { 7980, 0.295377192917454, 0.304970772561169 },\n+        { 7990, 0.295281523357868, 0.304867069988894 },\n+        { 8000, 0.295186142428596, 0.304763622626521 },\n+        { 8010, 0.29509104894295, 0.304660429679051 },\n+        { 8020, 0.294996241720257, 0.304557490354083 },\n+        { 8030, 0.29490171958582, 0.304454803861798 },\n+        { 8040, 0.294807481370887, 0.304352369414959 },\n+        { 8050, 0.294713525912612, 0.304250186228902 },\n+        { 8060, 0.294619852054023, 0.304148253521536 },\n+        { 8070, 0.294526458643984, 0.304046570513333 },\n+        { 8080, 0.294433344537166, 0.303945136427322 },\n+        { 8090, 0.294340508594008, 0.303843950489089 },\n+        { 8100, 0.294247949680687, 0.303743011926761 },\n+        { 8110, 0.294155666669081, 0.303642319971013 },\n+        { 8120, 0.294063658436738, 0.303541873855053 },\n+        { 8130, 0.293971923866841, 0.303441672814619 },\n+        { 8140, 0.293880461848177, 0.303341716087973 },\n+        { 8150, 0.293789271275103, 0.303242002915899 },\n+        { 8160, 0.293698351047513, 0.30314253254169 },\n+        { 8170, 0.293607700070806, 0.303043304211147 },\n+        { 8180, 0.293517317255857, 0.302944317172572 },\n+        { 8190, 0.293427201518978, 0.302845570676761 },\n+        { 8200, 0.293337351781895, 0.302747063977001 },\n+        { 8210, 0.293247766971707, 0.302648796329059 },\n+        { 8220, 0.293158446020866, 0.302550766991182 },\n+        { 8230, 0.293069387867134, 0.302452975224084 },\n+        { 8240, 0.292980591453561, 0.302355420290948 },\n+        { 8250, 0.29289205572845, 0.302258101457411 },\n+        { 8260, 0.292803779645329, 0.302161017991565 },\n+        { 8270, 0.292715762162918, 0.302064169163948 },\n+        { 8280, 0.2926280022451, 0.301967554247537 },\n+        { 8290, 0.292540498860893, 0.301871172517742 },\n+        { 8300, 0.292453250984416, 0.301775023252403 },\n+        { 8310, 0.292366257594866, 0.301679105731779 },\n+        { 8320, 0.292279517676482, 0.301583419238544 },\n+        { 8330, 0.292193030218519, 0.30148796305778 },\n+        { 8340, 0.292106794215219, 0.301392736476973 },\n+        { 8350, 0.292020808665784, 0.301297738786003 },\n+        { 8360, 0.291935072574342, 0.301202969277141 },\n+        { 8370, 0.291849584949925, 0.301108427245038 },\n+        { 8380, 0.291764344806436, 0.301014111986725 },\n+        { 8390, 0.291679351162625, 0.300920022801602 },\n+        { 8400, 0.291594603042056, 0.300826158991431 },\n+        { 8410, 0.291510099473085, 0.300732519860334 },\n+        { 8420, 0.291425839488828, 0.300639104714781 },\n+        { 8430, 0.291341822127138, 0.300545912863589 },\n+        { 8440, 0.291258046430574, 0.300452943617909 },\n+        { 8450, 0.291174511446374, 0.300360196291229 },\n+        { 8460, 0.291091216226434, 0.300267670199355 },\n+        { 8470, 0.291008159827273, 0.300175364660416 },\n+        { 8480, 0.290925341310012, 0.300083278994851 },\n+        { 8490, 0.290842759740348, 0.299991412525404 },\n+        { 8500, 0.290760414188525, 0.299899764577117 },\n+        { 8510, 0.290678303729309, 0.299808334477325 },\n+        { 8520, 0.290596427441963, 0.299717121555647 },\n+        { 8530, 0.290514784410223, 0.299626125143983 },\n+        { 8540, 0.290433373722268, 0.299535344576503 },\n+        { 8550, 0.290352194470698, 0.299444779189643 },\n+        { 8560, 0.29027124575251, 0.299354428322098 },\n+        { 8570, 0.290190526669069, 0.299264291314815 },\n+        { 8580, 0.290110036326088, 0.299174367510987 },\n+        { 8590, 0.290029773833599, 0.299084656256047 },\n+        { 8600, 0.289949738305931, 0.298995156897657 },\n+        { 8610, 0.289869928861685, 0.29890586878571 },\n+        { 8620, 0.28979034462371, 0.298816791272313 },\n+        { 8630, 0.28971098471908, 0.298727923711788 },\n+        { 8640, 0.289631848279069, 0.298639265460663 },\n+        { 8650, 0.289552934439125, 0.298550815877663 },\n+        { 8660, 0.289474242338851, 0.298462574323709 },\n+        { 8670, 0.289395771121979, 0.298374540161904 },\n+        { 8680, 0.289317519936349, 0.298286712757532 },\n+        { 8690, 0.289239487933881, 0.29819909147805 },\n+        { 8700, 0.289161674270557, 0.298111675693081 },\n+        { 8710, 0.289084078106396, 0.298024464774405 },\n+        { 8720, 0.289006698605431, 0.297937458095957 },\n+        { 8730, 0.288929534935688, 0.297850655033815 },\n+        { 8740, 0.288852586269164, 0.2977640549662 },\n+        { 8750, 0.2887758517818, 0.297677657273462 },\n+        { 8760, 0.288699330653466, 0.29759146133808 },\n+        { 8770, 0.288623022067933, 0.29750546654465 },\n+        { 8780, 0.288546925212856, 0.29741967227988 },\n+        { 8790, 0.288471039279747, 0.297334077932587 },\n+        { 8800, 0.28839536346396, 0.297248682893685 },\n+        { 8810, 0.288319896964663, 0.297163486556181 },\n+        { 8820, 0.288244638984821, 0.297078488315167 },\n+        { 8830, 0.288169588731173, 0.296993687567818 },\n+        { 8840, 0.288094745414214, 0.296909083713378 },\n+        { 8850, 0.288020108248168, 0.296824676153158 },\n+        { 8860, 0.287945676450972, 0.29674046429053 },\n+        { 8870, 0.287871449244258, 0.296656447530918 },\n+        { 8880, 0.287797425853324, 0.296572625281792 },\n+        { 8890, 0.287723605507121, 0.296488996952662 },\n+        { 8900, 0.28764998743823, 0.296405561955071 },\n+        { 8910, 0.287576570882842, 0.296322319702588 },\n+        { 8920, 0.287503355080738, 0.296239269610805 },\n+        { 8930, 0.287430339275271, 0.296156411097322 },\n+        { 8940, 0.287357522713342, 0.29607374358175 },\n+        { 8950, 0.287284904645384, 0.2959912664857 },\n+        { 8960, 0.287212484325343, 0.295908979232774 },\n+        { 8970, 0.287140261010655, 0.295826881248565 },\n+        { 8980, 0.287068233962231, 0.295744971960642 },\n+        { 8990, 0.286996402444435, 0.295663250798553 },\n+        { 9000, 0.286924765725065, 0.295581717193809 },\n+        { 9010, 0.286853323075337, 0.295500370579886 },\n+        { 9020, 0.286782073769861, 0.295419210392211 },\n+        { 9030, 0.28671101708663, 0.295338236068163 },\n+        { 9040, 0.286640152306992, 0.295257447047059 },\n+        { 9050, 0.28656947871564, 0.295176842770153 },\n+        { 9060, 0.286498995600591, 0.295096422680627 },\n+        { 9070, 0.286428702253164, 0.295016186223586 },\n+        { 9080, 0.286358597967967, 0.294936132846049 },\n+        { 9090, 0.286288682042877, 0.294856261996946 },\n+        { 9100, 0.286218953779022, 0.29477657312711 },\n+        { 9110, 0.286149412480764, 0.29469706568927 },\n+        { 9120, 0.286080057455679, 0.294617739138044 },\n+        { 9130, 0.286010888014543, 0.294538592929935 },\n+        { 9140, 0.285941903471314, 0.294459626523322 },\n+        { 9150, 0.285873103143111, 0.294380839378458 },\n+        { 9160, 0.285804486350202, 0.294302230957458 },\n+        { 9170, 0.285736052415981, 0.294223800724294 },\n+        { 9180, 0.285667800666959, 0.294145548144794 },\n+        { 9190, 0.285599730432738, 0.294067472686628 },\n+        { 9200, 0.285531841046001, 0.293989573819307 },\n+        { 9210, 0.285464131842494, 0.293911851014174 },\n+        { 9220, 0.285396602161005, 0.293834303744401 },\n+        { 9230, 0.285329251343354, 0.293756931484977 },\n+        { 9240, 0.285262078734374, 0.293679733712708 },\n+        { 9250, 0.28519508368189, 0.293602709906207 },\n+        { 9260, 0.285128265536713, 0.293525859545888 },\n+        { 9270, 0.285061623652614, 0.293449182113962 },\n+        { 9280, 0.284995157386314, 0.293372677094427 },\n+        { 9290, 0.284928866097465, 0.293296343973068 },\n+        { 9300, 0.284862749148637, 0.293220182237442 },\n+        { 9310, 0.284796805905298, 0.293144191376881 },\n+        { 9320, 0.284731035735806, 0.293068370882479 },\n+        { 9330, 0.284665438011384, 0.29299272024709 },\n+        { 9340, 0.284600012106111, 0.292917238965319 },\n+        { 9350, 0.284534757396907, 0.292841926533518 },\n+        { 9360, 0.284469673263512, 0.29276678244978 },\n+        { 9370, 0.284404759088479, 0.29269180621393 },\n+        { 9380, 0.28434001425715, 0.292616997327523 },\n+        { 9390, 0.28427543815765, 0.292542355293834 },\n+        { 9400, 0.284211030180865, 0.292467879617856 },\n+        { 9410, 0.284146789720432, 0.292393569806291 },\n+        { 9420, 0.284082716172722, 0.292319425367545 },\n+        { 9430, 0.284018808936825, 0.29224544581172 },\n+        { 9440, 0.283955067414537, 0.292171630650613 },\n+        { 9450, 0.283891491010347, 0.292097979397706 },\n+        { 9460, 0.283828079131417, 0.292024491568159 },\n+        { 9470, 0.283764831187574, 0.291951166678808 },\n+        { 9480, 0.283701746591293, 0.291878004248157 },\n+        { 9490, 0.283638824757684, 0.291805003796371 },\n+        { 9500, 0.283576065104475, 0.291732164845274 },\n+        { 9510, 0.283513467052003, 0.291659486918337 },\n+        { 9520, 0.283451030023197, 0.291586969540678 },\n+        { 9530, 0.283388753443564, 0.291514612239054 },\n+        { 9540, 0.283326636741177, 0.291442414541852 },\n+        { 9550, 0.283264679346662, 0.291370375979089 },\n+        { 9560, 0.283202880693181, 0.291298496082403 },\n+        { 9570, 0.283141240216422, 0.291226774385047 },\n+        { 9580, 0.283079757354586, 0.291155210421883 },\n+        { 9590, 0.28301843154837, 0.291083803729378 },\n+        { 9600, 0.282957262240958, 0.291012553845598 },\n+        { 9610, 0.282896248878006, 0.290941460310199 },\n+        { 9620, 0.282835390907627, 0.290870522664427 },\n+        { 9630, 0.282774687780384, 0.290799740451108 },\n+        { 9640, 0.282714138949271, 0.290729113214642 },\n+        { 9650, 0.282653743869704, 0.290658640501001 },\n+        { 9660, 0.282593501999504, 0.29058832185772 },\n+        { 9670, 0.282533412798892, 0.290518156833893 },\n+        { 9680, 0.282473475730468, 0.290448144980167 },\n+        { 9690, 0.282413690259205, 0.290378285848737 },\n+        { 9700, 0.282354055852432, 0.290308578993338 },\n+        { 9710, 0.282294571979826, 0.290239023969243 },\n+        { 9720, 0.282235238113395, 0.290169620333256 },\n+        { 9730, 0.282176053727471, 0.290100367643704 },\n+        { 9740, 0.282117018298692, 0.290031265460436 },\n+        { 9750, 0.282058131305996, 0.289962313344814 },\n+        { 9760, 0.281999392230606, 0.289893510859708 },\n+        { 9770, 0.281940800556016, 0.289824857569495 },\n+        { 9780, 0.281882355767985, 0.289756353040044 },\n+        { 9790, 0.281824057354519, 0.289687996838722 },\n+        { 9800, 0.281765904805865, 0.289619788534379 },\n+        { 9810, 0.281707897614492, 0.289551727697349 },\n+        { 9820, 0.28165003527509, 0.28948381389944 },\n+        { 9830, 0.281592317284549, 0.289416046713933 },\n+        { 9840, 0.281534743141951, 0.289348425715574 },\n+        { 9850, 0.28147731234856, 0.289280950480568 },\n+        { 9860, 0.281420024407811, 0.289213620586576 },\n+        { 9870, 0.281362878825294, 0.289146435612708 },\n+        { 9880, 0.281305875108749, 0.289079395139519 },\n+        { 9890, 0.281249012768051, 0.289012498749002 },\n+        { 9900, 0.281192291315202, 0.288945746024584 },\n+        { 9910, 0.281135710264316, 0.28887913655112 },\n+        { 9920, 0.281079269131611, 0.288812669914892 },\n+        { 9930, 0.2810229674354, 0.288746345703594 },\n+        { 9940, 0.280966804696075, 0.288680163506339 },\n+        { 9950, 0.280910780436102, 0.288614122913642 },\n+        { 9960, 0.280854894180004, 0.288548223517426 },\n+        { 9970, 0.280799145454357, 0.288482464911009 },\n+        { 9980, 0.280743533787776, 0.288416846689099 },\n+        { 9990, 0.280688058710905, 0.288351368447796 },\n+        { 10000, 0.280632719756407, 0.288286029784579 }\n         //@formatter:on\n     };\n \n@@ -1199,6 +1645,9 @@ public static double[] kelvinToXY(double kelvin) throws IndexOutOfBoundsExceptio\n      * Convert a point in the CIE XY colour space to a colour temperature in Kelvin.\n      * Uses McCamy's approximation as described <a href=\n      * \"https://www.waveformlighting.com/tech/calculate-color-temperature-cct-from-cie-1931-xy-coordinates\">here</a>.\n+     * <p>\n+     * Note that McCamy's approximation is accurate to better than 1% from 2000 K to 10000 K\n+     * but below 2000 K the approximation error increases rapidly and exponentially.\n      * \n      * @param xy an array with the CIE colour XY values to be converted\n      * @return the colour temperature in K\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java\nindex dde2def9f3c..aba78da5235 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java\n@@ -389,7 +389,7 @@ public Stream<? extends Arguments> provideArguments(@Nullable ExtensionContext c\n      */\n     private static Stream<Arguments> allHSB() {\n         List<Arguments> result = new ArrayList<>();\n-        final double step = 5.0;\n+        final double step = 20.0;\n         for (double h = 0; h < 360; h = h + step) {\n             for (double s = 0; s <= 100; s = s + step) {\n                 for (double b = 0; b <= 100; b = b + step) {\n@@ -435,7 +435,7 @@ private static Stream<Arguments> allXY() {\n      */\n     private static Stream<Arguments> allRGBW() {\n         List<Arguments> result = new ArrayList<>();\n-        final double step = 5.0;\n+        final double step = 20.0;\n         for (double r = 0; r <= 100; r = r + step) {\n             for (double g = 0; g <= 100; g = g + step) {\n                 for (double b = 0; b <= 100; b = b + step) {\n@@ -448,6 +448,21 @@ private static Stream<Arguments> allRGBW() {\n         return result.stream();\n     }\n \n+    /*\n+     * Return an extended stream of Kelvin color temperature values.\n+     * <p>\n+     * Note that McCamy's approximation is accurate to better than 1% from 2000 K to 10000 K but below 2000 K the\n+     * approximation error increases rapidly and exponentially. So we exclude those low values from the tests.\n+     */\n+    private static Stream<Arguments> allKelvin() {\n+        List<Arguments> result = new ArrayList<>();\n+        final double step = 5.0;\n+        for (double kelvin = 2000; kelvin <= 10000; kelvin = kelvin + step) {\n+            result.add(Arguments.of(kelvin));\n+        }\n+        return result.stream();\n+    }\n+\n     /* Helper functions */\n \n     /**\n@@ -658,20 +673,24 @@ public void rgbwToHsb2hsbToRgbw(double[] rgbw) {\n     }\n \n     /**\n-     * Test conversion between colour temperature in Kelvin and points on the colour\n-     * temperature locus in the CIE XY colour space\n+     * Test conversion between colour temperature in Kelvin and points on the colour temperature locus in the CIE XY\n+     * colour space. Specifically test the minimum and maximum limits 1000 .. 100 Mirek i.e. 1000 .. 10000 K\n      */\n     @Test\n-    void testKelvinXyConversion() {\n-        // test minimum and maximum limits 500..153 Mirek i.e. 2000..6536 Kelvin\n-        assertThrows(IndexOutOfBoundsException.class, () -> ColorUtil.kelvinToXY(1000000 / 501));\n-        assertDoesNotThrow(() -> ColorUtil.kelvinToXY(1000000 / 500));\n-        assertDoesNotThrow(() -> ColorUtil.kelvinToXY(1000000 / 153));\n-        assertThrows(IndexOutOfBoundsException.class, () -> ColorUtil.kelvinToXY(1000000 / 152));\n-\n-        // test round trips K => XY => K\n-        for (double kelvin = 2000; kelvin <= 6536; kelvin += 5) {\n-            assertEquals(kelvin, ColorUtil.xyToKelvin(ColorUtil.kelvinToXY(kelvin)), 15);\n-        }\n+    void testKelvinXyConversionLimits() {\n+        assertThrows(IndexOutOfBoundsException.class, () -> ColorUtil.kelvinToXY(1000000 / 1001));\n+        assertDoesNotThrow(() -> ColorUtil.kelvinToXY(1000000 / 1000));\n+        assertDoesNotThrow(() -> ColorUtil.kelvinToXY(1000000 / 100));\n+        assertThrows(IndexOutOfBoundsException.class, () -> ColorUtil.kelvinToXY(1000000 / 99));\n+    }\n+\n+    /**\n+     * Test conversion between colour temperature in Kelvin and points on the colour temperature locus in the CIE XY\n+     * colour space. Specifically test round trip conversions K => XY => K\n+     */\n+    @ParameterizedTest\n+    @MethodSource(\"allKelvin\")\n+    public void testKelvinXyRoundTrip(double kelvin) {\n+        assertEquals(kelvin, ColorUtil.xyToKelvin(ColorUtil.kelvinToXY(kelvin)), kelvin / 100);\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4392",
    "pr_id": 4392,
    "issue_id": 1745,
    "repo": "openhab/openhab-core",
    "problem_statement": "[automation] Binding actions cannot be configured by UIs\nThis is a follow-up issue of https://github.com/eclipse-archived/smarthome/issues/6602 as no solution has been implemented yet and we need to track it for OH3 release.\r\n\r\nWhile implementing and testing my port of the Pushover add-on (https://github.com/openhab/openhab-addons/pull/8586) I again stumbled upon this missing feature. Currently it is not possible to configure inputs for Binding actions based on `ThingActions`. The annotated inputs are not visible in UIs.\r\n\r\n![image](https://user-images.githubusercontent.com/5131747/96733029-499f8280-13b9-11eb-89c9-ec4342cd8a54.png)\r\n\r\n```java\r\n    @RuleAction(label = \"@text/sendHTMLMessageActionLabel\", description = \"@text/sendHTMLMessageActionDescription\")\r\n    public @ActionOutput(name = \"sent\", label = \"@text/sendMessageActionOutputLabel\", description = \"@text/sendMessageActionOutputDescription\", type = \"java.lang.Boolean\") Boolean sendHtmlMessage(\r\n            @ActionInput(name = \"message\", label = \"@text/sendMessageActionInputMessageLabel\", description = \"@text/sendMessageActionInputMessageDescription\", type = \"java.lang.String\", required = true) String message,\r\n            @ActionInput(name = \"title\", label = \"@text/sendMessageActionInputTitleLabel\", description = \"@text/sendMessageActionInputTitleDescription\", type = \"java.lang.String\") @Nullable String title) {\r\n        logger.trace(\"ThingAction 'sendHtmlMessage' called with value(s): message='{}', title='{}'\", message, title);\r\n        return send(getDefaultPushoverMessageBuilder(message).withHtmlFormatting(), title);\r\n    }\r\n```\r\n\r\nInternal automation actions like `say` or `playSound` define next to the inputs a list of configuration descriptions matching their inputs.\r\n\r\nConclusions of https://github.com/eclipse-archived/smarthome/issues/6602 are:\r\n\r\n- No short term solution to add support for input in the UIs. Proposal is to hide all ThingActions.\r\n- The is uncertainty about when to use inputs and when to use configuration descriptions (e.g. currently all existing core actions for NGRE defined them twice, an input and a related configuration).\r\n\r\nQuestion is how to proceed? Should we hide all `ThingActions` in the near future? Or would it be an option to introduce a way to add configuration descriptions to `ThingActions` (e.g. by adding a new annotation for it)?\r\n\r\nA previous private discussion between @kaikreuzer , @ghys , @openhab-5iver and myself resulted in the following brainstorming:\r\n\r\n- Displaying inputs along with config parameters should be doable to configure an action instance in a rule.\r\n- Apparently inputs have a type which is referenced in the API as a Java type (like java.lang.String or org.eclipse.smarthome.core.types.Command or org.eclipse.smarthome.core.events.Event), thatâs a little bit different to the config parameters whose type is âTEXTâ etc. Supporting anything other than primitive types in the UI could be tricky.\r\n- Given a module type like:\r\n![image](https://community-openhab-org.s3.dualstack.eu-central-1.amazonaws.com/original/3X/a/8/a8bb67408bd1e0d4d226f21c280c7d89705f2743.png)\r\n\r\n    and a rule like:\r\n![image](https://community-openhab-org.s3.dualstack.eu-central-1.amazonaws.com/original/3X/2/a/2a1f0e99141f02f579902586b9001bf672544ff7.png)\r\n\r\n    Iâm not sure how inputs are to be configured here, I suppose in the simplest case itâs something like below, with what the user configured in input boxes. But what if you want to use an output from another module?\r\n\r\n```\r\n\"inputs\": {\r\n  \"topic\": \"some/topic\",\r\n  \"value\": \"somevalue\"\r\n}\r\n```\r\n\r\n- It is also IMO not exactly clear which inputs are to be presented to the user and which are âtechnicalâ (for example âeventâ in GenericEventCondition or âinputâ in CompareCondition).\r\n- The ItemCommandAction module type has both a âcommandâ input and a âcommandâ config parameter described as âthe default command to be sent if none is passed as an input valueâ - this would be confusing for users if both were displayed.",
    "issue_word_count": 551,
    "test_files_count": 3,
    "non_test_files_count": 7,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/ThingActionsResource.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/AnnotationActionHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/provider/AnnotatedActionModuleTypeProvider.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/module/provider/AnnotationActionModuleTypeHelper.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProvider.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/util/ActionInputsHelper.java",
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/provider/AnnotationActionModuleTypeProviderTest.java",
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProviderTest.java",
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/util/ActionInputHelperTest.java",
      "bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigDescriptionParameter.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/provider/AnnotationActionModuleTypeProviderTest.java",
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProviderTest.java",
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/util/ActionInputHelperTest.java"
    ],
    "base_commit": "6d0a3b330c48cdb1d6112bcf001bed3f11ed4094",
    "head_commit": "7ebd1573e49f26b64870f87c452553c41d190a20",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4392",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4392",
    "dockerfile": "",
    "pr_merged_at": "2024-10-20T10:39:30.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/ThingActionsResource.java b/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/ThingActionsResource.java\nindex eca85f72948..16f8c92a719 100644\n--- a/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/ThingActionsResource.java\n+++ b/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/ThingActionsResource.java\n@@ -44,8 +44,12 @@\n import org.openhab.core.automation.type.Input;\n import org.openhab.core.automation.type.ModuleTypeRegistry;\n import org.openhab.core.automation.type.Output;\n+import org.openhab.core.automation.util.ActionInputsHelper;\n import org.openhab.core.automation.util.ModuleBuilder;\n+import org.openhab.core.config.core.ConfigDescriptionParameter;\n import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.config.core.dto.ConfigDescriptionDTOMapper;\n+import org.openhab.core.config.core.dto.ConfigDescriptionParameterDTO;\n import org.openhab.core.io.rest.LocaleService;\n import org.openhab.core.io.rest.RESTConstants;\n import org.openhab.core.io.rest.RESTResource;\n@@ -77,6 +81,7 @@\n  * The {@link ThingActionsResource} allows retrieving and executing thing actions via REST API\n  *\n  * @author Jan N. Klug - Initial contribution\n+ * @author Laurent Garnier - API enhanced to be able to run thing actions in Main UI\n  */\n @Component\n @JaxrsResource\n@@ -91,15 +96,17 @@ public class ThingActionsResource implements RESTResource {\n \n     private final LocaleService localeService;\n     private final ModuleTypeRegistry moduleTypeRegistry;\n+    private final ActionInputsHelper actionInputsHelper;\n \n     Map<ThingUID, Map<String, ThingActions>> thingActionsMap = new ConcurrentHashMap<>();\n     private List<ModuleHandlerFactory> moduleHandlerFactories = new ArrayList<>();\n \n     @Activate\n     public ThingActionsResource(@Reference LocaleService localeService,\n-            @Reference ModuleTypeRegistry moduleTypeRegistry) {\n+            @Reference ModuleTypeRegistry moduleTypeRegistry, @Reference ActionInputsHelper actionInputsHelper) {\n         this.localeService = localeService;\n         this.moduleTypeRegistry = moduleTypeRegistry;\n+        this.actionInputsHelper = actionInputsHelper;\n     }\n \n     @Reference(policy = ReferencePolicy.DYNAMIC, cardinality = ReferenceCardinality.MULTIPLE)\n@@ -171,11 +178,27 @@ public Response getActions(@PathParam(\"thingUID\") @Parameter(description = \"thin\n                     continue;\n                 }\n \n+                // Filter the configuration description parameters that correspond to inputs\n+                List<ConfigDescriptionParameter> inputParameters = new ArrayList<>();\n+                for (ConfigDescriptionParameter parameter : actionType.getConfigurationDescriptions()) {\n+                    if (actionType.getInputs().stream().anyMatch(i -> i.getName().equals(parameter.getName()))) {\n+                        inputParameters.add(parameter);\n+                    }\n+                }\n+                // If the resulting list of configuration description parameters is empty while the list of\n+                // inputs is not empty, this is because the conversion of inputs into configuration description\n+                // parameters failed for at least one input\n+                if (inputParameters.isEmpty() && !actionType.getInputs().isEmpty()) {\n+                    inputParameters = null;\n+                }\n+\n                 ThingActionDTO actionDTO = new ThingActionDTO();\n                 actionDTO.actionUid = actionType.getUID();\n                 actionDTO.description = actionType.getDescription();\n                 actionDTO.label = actionType.getLabel();\n                 actionDTO.inputs = actionType.getInputs();\n+                actionDTO.inputConfigDescriptions = inputParameters == null ? null\n+                        : ConfigDescriptionDTOMapper.mapParameters(inputParameters);\n                 actionDTO.outputs = actionType.getOutputs();\n                 actions.add(actionDTO);\n             }\n@@ -221,7 +244,9 @@ public Response executeThingAction(@PathParam(\"thingUID\") @Parameter(description\n         }\n \n         try {\n-            Map<String, Object> returnValue = Objects.requireNonNullElse(handler.execute(actionInputs), Map.of());\n+            Map<String, Object> returnValue = Objects.requireNonNullElse(\n+                    handler.execute(actionInputsHelper.mapSerializedInputsToActionInputs(actionType, actionInputs)),\n+                    Map.of());\n             moduleHandlerFactory.ungetHandler(action, ruleUID, handler);\n             return Response.ok(returnValue).build();\n         } catch (Exception e) {\n@@ -245,6 +270,9 @@ private static class ThingActionDTO {\n         public @Nullable String description;\n \n         public List<Input> inputs = new ArrayList<>();\n+\n+        public @Nullable List<ConfigDescriptionParameterDTO> inputConfigDescriptions;\n+\n         public List<Output> outputs = new ArrayList<>();\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/AnnotationActionHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/AnnotationActionHandler.java\nindex 9d1715dcf9a..53f3716f245 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/AnnotationActionHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/AnnotationActionHandler.java\n@@ -29,6 +29,7 @@\n import org.openhab.core.automation.type.ActionType;\n import org.openhab.core.automation.type.Input;\n import org.openhab.core.automation.type.Output;\n+import org.openhab.core.automation.util.ActionInputsHelper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -36,6 +37,7 @@\n  * ActionHandler which is dynamically created upon annotation on services\n  *\n  * @author Stefan Triller - Initial contribution\n+ * @author Laurent Garnier - Added ActionInputsHelper\n  */\n @NonNullByDefault\n public class AnnotationActionHandler extends BaseActionModuleHandler {\n@@ -47,13 +49,16 @@ public class AnnotationActionHandler extends BaseActionModuleHandler {\n     private final Method method;\n     private final ActionType moduleType;\n     private final Object actionProvider;\n+    private final ActionInputsHelper actionInputsHelper;\n \n-    public AnnotationActionHandler(Action module, ActionType mt, Method method, Object actionProvider) {\n+    public AnnotationActionHandler(Action module, ActionType mt, Method method, Object actionProvider,\n+            ActionInputsHelper actionInputsHelper) {\n         super(module);\n \n         this.method = method;\n         this.moduleType = mt;\n         this.actionProvider = actionProvider;\n+        this.actionInputsHelper = actionInputsHelper;\n     }\n \n     @Override\n@@ -69,7 +74,21 @@ public AnnotationActionHandler(Action module, ActionType mt, Method method, Obje\n                 if (annotationsOnParam[0] instanceof ActionInput inputAnnotation) {\n                     // check if the moduleType has a configdescription with this input\n                     if (hasInput(moduleType, inputAnnotation.name())) {\n-                        args.add(i, context.get(inputAnnotation.name()));\n+                        Object value = context.get(inputAnnotation.name());\n+                        // fallback to configuration as this is where the UI stores the input values\n+                        if (value == null) {\n+                            Object configValue = module.getConfiguration().get(inputAnnotation.name());\n+                            if (configValue != null) {\n+                                try {\n+                                    value = actionInputsHelper.mapSerializedInputToActionInput(\n+                                            moduleType.getInputs().get(i), configValue);\n+                                } catch (IllegalArgumentException e) {\n+                                    logger.debug(\"{} Input parameter is ignored.\", e.getMessage());\n+                                    // Ignore it and keep null in value\n+                                }\n+                            }\n+                        }\n+                        args.add(i, value);\n                     } else {\n                         logger.error(\n                                 \"Annotated method defines input '{}' but the module type '{}' does not specify an input with this name.\",\n@@ -84,8 +103,20 @@ public AnnotationActionHandler(Action module, ActionType mt, Method method, Obje\n         }\n \n         Object result = null;\n+        Object @Nullable [] arguments = args.toArray();\n+        if (arguments.length > 0 && logger.isDebugEnabled()) {\n+            logger.debug(\"Calling action method {} with the following arguments:\", method.getName());\n+            for (int i = 0; i < arguments.length; i++) {\n+                if (arguments[i] == null) {\n+                    logger.debug(\"  - Argument {}: null\", i);\n+                } else {\n+                    logger.debug(\"  - Argument {}: type {} value {}\", i, arguments[i].getClass().getCanonicalName(),\n+                            arguments[i]);\n+                }\n+            }\n+        }\n         try {\n-            result = method.invoke(this.actionProvider, args.toArray());\n+            result = method.invoke(this.actionProvider, arguments);\n         } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n             logger.error(\"Could not call method '{}' from module type '{}'.\", method, moduleType.getUID(), e);\n         }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/provider/AnnotatedActionModuleTypeProvider.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/provider/AnnotatedActionModuleTypeProvider.java\nindex 8e0d8a11b05..9febb5d03cc 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/provider/AnnotatedActionModuleTypeProvider.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/provider/AnnotatedActionModuleTypeProvider.java\n@@ -37,6 +37,7 @@\n import org.openhab.core.automation.type.ActionType;\n import org.openhab.core.automation.type.ModuleType;\n import org.openhab.core.automation.type.ModuleTypeProvider;\n+import org.openhab.core.automation.util.ActionInputsHelper;\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.osgi.framework.Bundle;\n import org.osgi.framework.FrameworkUtil;\n@@ -52,6 +53,7 @@\n  * from them\n  *\n  * @author Stefan Triller - Initial contribution\n+ * @author Laurent Garnier - Injected components AnnotationActionModuleTypeHelper and ActionInputsHelper\n  */\n @NonNullByDefault\n @Component(service = { ModuleTypeProvider.class, ModuleHandlerFactory.class })\n@@ -59,13 +61,17 @@ public class AnnotatedActionModuleTypeProvider extends BaseModuleHandlerFactory\n \n     private final Collection<ProviderChangeListener<ModuleType>> changeListeners = ConcurrentHashMap.newKeySet();\n     private final Map<String, Set<ModuleInformation>> moduleInformation = new ConcurrentHashMap<>();\n-    private final AnnotationActionModuleTypeHelper helper = new AnnotationActionModuleTypeHelper();\n-\n+    private final AnnotationActionModuleTypeHelper helper;\n     private final ModuleTypeI18nService moduleTypeI18nService;\n+    private final ActionInputsHelper actionInputsHelper;\n \n     @Activate\n-    public AnnotatedActionModuleTypeProvider(final @Reference ModuleTypeI18nService moduleTypeI18nService) {\n+    public AnnotatedActionModuleTypeProvider(final @Reference ModuleTypeI18nService moduleTypeI18nService,\n+            final @Reference AnnotationActionModuleTypeHelper helper,\n+            final @Reference ActionInputsHelper actionInputsHelper) {\n         this.moduleTypeI18nService = moduleTypeI18nService;\n+        this.helper = helper;\n+        this.actionInputsHelper = actionInputsHelper;\n     }\n \n     @Override\n@@ -219,7 +225,7 @@ public Collection<String> getTypes() {\n                         return null;\n                     }\n                     return new AnnotationActionHandler(actionModule, moduleType, finalMI.getMethod(),\n-                            finalMI.getActionProvider());\n+                            finalMI.getActionProvider(), actionInputsHelper);\n                 }\n             }\n         }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/module/provider/AnnotationActionModuleTypeHelper.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/module/provider/AnnotationActionModuleTypeHelper.java\nindex 1daa68052b2..055bd1812a6 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/module/provider/AnnotationActionModuleTypeHelper.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/module/provider/AnnotationActionModuleTypeHelper.java\n@@ -39,11 +39,15 @@\n import org.openhab.core.automation.type.Input;\n import org.openhab.core.automation.type.ModuleTypeProvider;\n import org.openhab.core.automation.type.Output;\n+import org.openhab.core.automation.util.ActionInputsHelper;\n import org.openhab.core.config.core.ConfigDescriptionParameter;\n import org.openhab.core.config.core.ConfigDescriptionParameter.Type;\n import org.openhab.core.config.core.ConfigDescriptionParameterBuilder;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.config.core.ParameterOption;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -51,8 +55,11 @@\n  * Helper methods for {@link AnnotatedActions} {@link ModuleTypeProvider}\n  *\n  * @author Stefan Triller - Initial contribution\n+ * @author Florian Hotze - Added configuration description parameters for thing modules\n+ * @author Laurent Garnier - Converted into a an OSGi component\n  */\n @NonNullByDefault\n+@Component(service = AnnotationActionModuleTypeHelper.class)\n public class AnnotationActionModuleTypeHelper {\n \n     private final Logger logger = LoggerFactory.getLogger(AnnotationActionModuleTypeHelper.class);\n@@ -61,6 +68,13 @@ public class AnnotationActionModuleTypeHelper {\n     private static final String SELECT_THING_LABEL = \"Select Thing\";\n     public static final String CONFIG_PARAM = \"config\";\n \n+    private final ActionInputsHelper actionInputsHelper;\n+\n+    @Activate\n+    public AnnotationActionModuleTypeHelper(final @Reference ActionInputsHelper actionInputsHelper) {\n+        this.actionInputsHelper = actionInputsHelper;\n+    }\n+\n     public Collection<ModuleInformation> parseAnnotations(Object actionProvider) {\n         Class<?> clazz = actionProvider.getClass();\n         if (clazz.isAnnotationPresent(ActionScope.class)) {\n@@ -77,7 +91,7 @@ public Collection<ModuleInformation> parseAnnotations(String name, Object action\n         for (Method method : methods) {\n             if (method.isAnnotationPresent(RuleAction.class)) {\n                 List<Input> inputs = getInputsFromAction(method);\n-                List<Output> outputs = getOutputsFromMethod(method);\n+                List<Output> outputs = getOutputsFromAction(method);\n \n                 RuleAction ruleAction = method.getAnnotation(RuleAction.class);\n                 String uid = name + \".\" + method.getName();\n@@ -86,10 +100,7 @@ public Collection<ModuleInformation> parseAnnotations(String name, Object action\n                 ModuleInformation mi = new ModuleInformation(uid, actionProvider, method);\n                 mi.setLabel(ruleAction.label());\n                 mi.setDescription(ruleAction.description());\n-                // We temporarily want to hide all ThingActions in UIs as we do not have a proper solution to enter\n-                // their input values (see https://github.com/openhab/openhab-core/issues/1745)\n-                // mi.setVisibility(ruleAction.visibility());\n-                mi.setVisibility(Visibility.HIDDEN);\n+                mi.setVisibility(ruleAction.visibility());\n                 mi.setInputs(inputs);\n                 mi.setOutputs(outputs);\n                 mi.setTags(tags);\n@@ -132,7 +143,7 @@ private List<Input> getInputsFromAction(Method method) {\n         return inputs;\n     }\n \n-    private List<Output> getOutputsFromMethod(Method method) {\n+    private List<Output> getOutputsFromAction(Method method) {\n         List<Output> outputs = new ArrayList<>();\n         if (method.isAnnotationPresent(ActionOutputs.class)) {\n             for (ActionOutput ruleActionOutput : method.getAnnotationsByType(ActionOutput.class)) {\n@@ -170,8 +181,25 @@ private List<Output> getOutputsFromMethod(Method method) {\n             if (configParam != null) {\n                 configDescriptions.add(configParam);\n             }\n-            return new ActionType(uid, configDescriptions, mi.getLabel(), mi.getDescription(), mi.getTags(),\n-                    mi.getVisibility(), mi.getInputs(), mi.getOutputs());\n+\n+            Visibility visibility = mi.getVisibility();\n+\n+            if (kind == ActionModuleKind.THING) {\n+                // we have a Thing module, so we have to map the inputs to config description parameters for the UI\n+                try {\n+                    List<ConfigDescriptionParameter> inputConfigDescriptions = actionInputsHelper\n+                            .mapActionInputsToConfigDescriptionParameters(mi.getInputs());\n+                    configDescriptions.addAll(inputConfigDescriptions);\n+                } catch (IllegalArgumentException e) {\n+                    // we have an input without a supported type, so hide the Thing action\n+                    visibility = Visibility.HIDDEN;\n+                    logger.debug(\"{} Thing action {} has an input with an unsupported type, hiding it in the UI.\",\n+                            e.getMessage(), uid);\n+                }\n+            }\n+\n+            return new ActionType(uid, configDescriptions, mi.getLabel(), mi.getDescription(), mi.getTags(), visibility,\n+                    mi.getInputs(), mi.getOutputs());\n         }\n         return null;\n     }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProvider.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProvider.java\nindex b942a6896a7..9adc32af98b 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProvider.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProvider.java\n@@ -35,6 +35,7 @@\n import org.openhab.core.automation.type.ActionType;\n import org.openhab.core.automation.type.ModuleType;\n import org.openhab.core.automation.type.ModuleTypeProvider;\n+import org.openhab.core.automation.util.ActionInputsHelper;\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.thing.binding.ThingActions;\n import org.openhab.core.thing.binding.ThingActionsScope;\n@@ -54,6 +55,7 @@\n  * ModuleTypeProvider that collects actions for {@link ThingHandler}s\n  *\n  * @author Stefan Triller - Initial contribution\n+ * @author Laurent Garnier - Injected components AnnotationActionModuleTypeHelper and ActionInputsHelper\n  */\n @NonNullByDefault\n @Component(service = { ModuleTypeProvider.class, ModuleHandlerFactory.class })\n@@ -63,13 +65,17 @@ public class AnnotatedThingActionModuleTypeProvider extends BaseModuleHandlerFac\n \n     private final Collection<ProviderChangeListener<ModuleType>> changeListeners = ConcurrentHashMap.newKeySet();\n     private final Map<String, Set<ModuleInformation>> moduleInformation = new ConcurrentHashMap<>();\n-    private final AnnotationActionModuleTypeHelper helper = new AnnotationActionModuleTypeHelper();\n-\n+    private final AnnotationActionModuleTypeHelper helper;\n     private final ModuleTypeI18nService moduleTypeI18nService;\n+    private final ActionInputsHelper actionInputsHelper;\n \n     @Activate\n-    public AnnotatedThingActionModuleTypeProvider(final @Reference ModuleTypeI18nService moduleTypeI18nService) {\n+    public AnnotatedThingActionModuleTypeProvider(final @Reference ModuleTypeI18nService moduleTypeI18nService,\n+            final @Reference AnnotationActionModuleTypeHelper helper,\n+            final @Reference ActionInputsHelper actionInputsHelper) {\n         this.moduleTypeI18nService = moduleTypeI18nService;\n+        this.helper = helper;\n+        this.actionInputsHelper = actionInputsHelper;\n     }\n \n     @Override\n@@ -236,7 +242,7 @@ public Collection<String> getTypes() {\n                         return null;\n                     }\n                     return new AnnotationActionHandler(actionModule, moduleType, finalMI.getMethod(),\n-                            finalMI.getActionProvider());\n+                            finalMI.getActionProvider(), actionInputsHelper);\n                 }\n             }\n         }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/util/ActionInputsHelper.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/util/ActionInputsHelper.java\nnew file mode 100644\nindex 00000000000..01c84ac661a\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/util/ActionInputsHelper.java\n@@ -0,0 +1,293 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.util;\n+\n+import java.math.BigDecimal;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import javax.measure.Quantity;\n+import javax.measure.Unit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.automation.type.ActionType;\n+import org.openhab.core.automation.type.Input;\n+import org.openhab.core.config.core.ConfigDescriptionParameter;\n+import org.openhab.core.config.core.ConfigDescriptionParameterBuilder;\n+import org.openhab.core.i18n.UnitProvider;\n+import org.openhab.core.library.types.DecimalType;\n+import org.openhab.core.library.types.QuantityType;\n+import org.openhab.core.types.util.UnitUtils;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is an utility class to convert the {@link Input}s of a {@link ActionType} into a list of\n+ * {@link ConfigDescriptionParameter}s and to convert serialised inputs to the Java types required by the\n+ * {@link Input}s of a {@link ActionType}.\n+ *\n+ * @author Laurent Garnier & Florian Hotze - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(service = ActionInputsHelper.class)\n+public class ActionInputsHelper {\n+    private static final Pattern QUANTITY_TYPE_PATTERN = Pattern\n+            .compile(\"([a-z0-9]+\\\\.)*QuantityType<([a-z0-9]+\\\\.)*(?<dimension>[A-Z][a-zA-Z0-9]*)>\");\n+\n+    private final Logger logger = LoggerFactory.getLogger(ActionInputsHelper.class);\n+\n+    private final UnitProvider unitProvider;\n+\n+    @Activate\n+    public ActionInputsHelper(final @Reference UnitProvider unitProvider) {\n+        this.unitProvider = unitProvider;\n+    }\n+\n+    /**\n+     * Maps a list of {@link Input}s to a list of {@link ConfigDescriptionParameter}s.\n+     *\n+     * @param inputs the list of inputs to map to config description parameters\n+     * @return the list of config description parameters\n+     * @throws IllegalArgumentException if at least one of the input parameters has an unsupported type\n+     */\n+    public List<ConfigDescriptionParameter> mapActionInputsToConfigDescriptionParameters(List<Input> inputs)\n+            throws IllegalArgumentException {\n+        List<ConfigDescriptionParameter> configDescriptionParameters = new ArrayList<>();\n+\n+        for (Input input : inputs) {\n+            configDescriptionParameters.add(mapActionInputToConfigDescriptionParameter(input));\n+        }\n+\n+        return configDescriptionParameters;\n+    }\n+\n+    /**\n+     * Maps an {@link Input} to a {@link ConfigDescriptionParameter}.\n+     *\n+     * @param input the input to map to a config description parameter\n+     * @return the config description parameter\n+     * @throws IllegalArgumentException if the input parameter has an unsupported type\n+     */\n+    public ConfigDescriptionParameter mapActionInputToConfigDescriptionParameter(Input input)\n+            throws IllegalArgumentException {\n+        ConfigDescriptionParameter.Type parameterType = ConfigDescriptionParameter.Type.TEXT;\n+        String defaultValue = null;\n+        Unit<?> unit = null;\n+        boolean required = false;\n+        String context = null;\n+        Matcher matcher = QUANTITY_TYPE_PATTERN.matcher(input.getType());\n+        if (matcher.matches()) {\n+            parameterType = ConfigDescriptionParameter.Type.DECIMAL;\n+            try {\n+                unit = getDefaultUnit(matcher.group(\"dimension\"));\n+            } catch (IllegalArgumentException e) {\n+                throw new IllegalArgumentException(\"Input parameter '\" + input.getName() + \"' with type \"\n+                        + input.getType() + \"cannot be converted into a config description parameter!\", e);\n+            }\n+        } else {\n+            switch (input.getType()) {\n+                case \"boolean\":\n+                    defaultValue = \"false\";\n+                    required = true;\n+                case \"java.lang.Boolean\":\n+                    parameterType = ConfigDescriptionParameter.Type.BOOLEAN;\n+                    break;\n+                case \"byte\":\n+                case \"short\":\n+                case \"int\":\n+                case \"long\":\n+                    defaultValue = \"0\";\n+                    required = true;\n+                case \"java.lang.Byte\":\n+                case \"java.lang.Short\":\n+                case \"java.lang.Integer\":\n+                case \"java.lang.Long\":\n+                    parameterType = ConfigDescriptionParameter.Type.INTEGER;\n+                    break;\n+                case \"float\":\n+                case \"double\":\n+                    defaultValue = \"0\";\n+                    required = true;\n+                case \"java.lang.Float\":\n+                case \"java.lang.Double\":\n+                case \"java.lang.Number\":\n+                case \"org.openhab.core.library.types.DecimalType\":\n+                    parameterType = ConfigDescriptionParameter.Type.DECIMAL;\n+                    break;\n+                case \"java.lang.String\":\n+                    break;\n+                case \"java.time.LocalDate\":\n+                    context = \"date\";\n+                    break;\n+                case \"java.time.LocalTime\":\n+                    context = \"time\";\n+                    break;\n+                case \"java.time.LocalDateTime\":\n+                case \"java.util.Date\":\n+                    context = \"datetime\";\n+                    break;\n+                case \"java.time.ZonedDateTime\":\n+                case \"java.time.Instant\":\n+                case \"java.time.Duration\":\n+                    // There is no available configuration parameter context for these types.\n+                    // A text parameter is used. The expected value must respect a particular format specific\n+                    // to each of these types.\n+                    break;\n+                default:\n+                    throw new IllegalArgumentException(\"Input parameter '\" + input.getName() + \"' with type \"\n+                            + input.getType() + \"cannot be converted into a config description parameter!\");\n+            }\n+        }\n+\n+        ConfigDescriptionParameterBuilder builder = ConfigDescriptionParameterBuilder\n+                .create(input.getName(), parameterType).withLabel(input.getLabel())\n+                .withDescription(input.getDescription()).withReadOnly(false)\n+                .withRequired(required || input.isRequired()).withContext(context);\n+        if (input.getDefaultValue() != null && !input.getDefaultValue().isEmpty()) {\n+            builder = builder.withDefault(input.getDefaultValue());\n+        } else if (defaultValue != null) {\n+            builder = builder.withDefault(defaultValue);\n+        }\n+        if (unit != null) {\n+            builder = builder.withUnit(unit.getSymbol());\n+        }\n+        return builder.build();\n+    }\n+\n+    /**\n+     * Maps serialised inputs to the Java types required by the {@link Input}s of the given {@link ActionType}.\n+     *\n+     * @param actionType the action type whose inputs to consider\n+     * @param arguments the serialised arguments\n+     * @return the mapped arguments\n+     */\n+    public Map<String, Object> mapSerializedInputsToActionInputs(ActionType actionType, Map<String, Object> arguments) {\n+        Map<String, Object> newArguments = new HashMap<>();\n+        for (Input input : actionType.getInputs()) {\n+            Object value = arguments.get(input.getName());\n+            if (value != null) {\n+                try {\n+                    newArguments.put(input.getName(), mapSerializedInputToActionInput(input, value));\n+                } catch (IllegalArgumentException e) {\n+                    logger.warn(\"{} Input parameter is ignored.\", e.getMessage());\n+                }\n+            }\n+        }\n+        return newArguments;\n+    }\n+\n+    /**\n+     * Maps a serialised input to the Java type required by the given {@link Input}.\n+     *\n+     * @param input the input whose type to consider\n+     * @param argument the serialised argument\n+     * @return the mapped argument\n+     * @throws IllegalArgumentException if the mapping failed\n+     */\n+    public Object mapSerializedInputToActionInput(Input input, Object argument) throws IllegalArgumentException {\n+        try {\n+            Matcher matcher = QUANTITY_TYPE_PATTERN.matcher(input.getType());\n+            if (argument instanceof Double valueDouble) {\n+                // When an integer value is provided as input value, the value type in the Map is Double.\n+                // We have to convert Double type into the target type.\n+                if (matcher.matches()) {\n+                    return new QuantityType<>(valueDouble, getDefaultUnit(matcher.group(\"dimension\")));\n+                } else {\n+                    return switch (input.getType()) {\n+                        case \"byte\", \"java.lang.Byte\" -> Byte.valueOf(valueDouble.byteValue());\n+                        case \"short\", \"java.lang.Short\" -> Short.valueOf(valueDouble.shortValue());\n+                        case \"int\", \"java.lang.Integer\" -> Integer.valueOf(valueDouble.intValue());\n+                        case \"long\", \"java.lang.Long\" -> Long.valueOf(valueDouble.longValue());\n+                        case \"float\", \"java.lang.Float\" -> Float.valueOf(valueDouble.floatValue());\n+                        case \"org.openhab.core.library.types.DecimalType\" -> new DecimalType(valueDouble);\n+                        default -> argument;\n+                    };\n+                }\n+            } else if (argument instanceof String valueString) {\n+                // String value is accepted to instantiate few target types\n+                if (matcher.matches()) {\n+                    // The string can contain either a simple decimal value without unit or a decimal value with\n+                    // unit\n+                    try {\n+                        BigDecimal bigDecimal = new BigDecimal(valueString);\n+                        return new QuantityType<>(bigDecimal, getDefaultUnit(matcher.group(\"dimension\")));\n+                    } catch (NumberFormatException e) {\n+                        return new QuantityType<>(valueString);\n+                    }\n+                } else {\n+                    return switch (input.getType()) {\n+                        case \"boolean\", \"java.lang.Boolean\" -> Boolean.valueOf(valueString.toLowerCase());\n+                        case \"byte\", \"java.lang.Byte\" -> Byte.valueOf(valueString);\n+                        case \"short\", \"java.lang.Short\" -> Short.valueOf(valueString);\n+                        case \"int\", \"java.lang.Integer\" -> Integer.valueOf(valueString);\n+                        case \"long\", \"java.lang.Long\" -> Long.valueOf(valueString);\n+                        case \"float\", \"java.lang.Float\" -> Float.valueOf(valueString);\n+                        case \"double\", \"java.lang.Double\", \"java.lang.Number\" -> Double.valueOf(valueString);\n+                        case \"org.openhab.core.library.types.DecimalType\" -> new DecimalType(valueString);\n+                        case \"java.time.LocalDate\" ->\n+                            // Accepted format is: 2007-12-03\n+                            LocalDate.parse(valueString);\n+                        case \"java.time.LocalTime\" ->\n+                            // Accepted format is: 10:15:30\n+                            LocalTime.parse(valueString);\n+                        case \"java.time.LocalDateTime\" ->\n+                            // Accepted format is: 2007-12-03 10:15:30\n+                            LocalDateTime.parse(valueString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));\n+                        case \"java.util.Date\" ->\n+                            // Accepted format is: 2007-12-03 10:15:30\n+                            new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(valueString);\n+                        case \"java.time.ZonedDateTime\" ->\n+                            // Accepted format is: 2007-12-03T10:15:30+01:00[Europe/Paris]\n+                            ZonedDateTime.parse(valueString);\n+                        case \"java.time.Instant\" ->\n+                            // Accepted format is: 2007-12-03T10:15:30.00Z\n+                            Instant.parse(valueString);\n+                        case \"java.time.Duration\" ->\n+                            // Accepted format is: P2DT17H25M30.5S\n+                            Duration.parse(valueString);\n+                        default -> argument;\n+                    };\n+                }\n+            }\n+            return argument;\n+        } catch (IllegalArgumentException | DateTimeParseException | ParseException e) {\n+            throw new IllegalArgumentException(\"Input parameter '\" + input.getName() + \"': converting value '\"\n+                    + argument.toString() + \"' into type \" + input.getType() + \" failed!\");\n+        }\n+    }\n+\n+    private Unit<?> getDefaultUnit(String dimensionName) throws IllegalArgumentException {\n+        Class<? extends Quantity<?>> dimension = UnitUtils.parseDimension(dimensionName);\n+        if (dimension == null) {\n+            throw new IllegalArgumentException(\"Unknown dimension \" + dimensionName);\n+        }\n+        return unitProvider.getUnit((Class<? extends Quantity>) dimension);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigDescriptionParameter.java b/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigDescriptionParameter.java\nindex 8889aeaee18..0e4885e2f3f 100644\n--- a/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigDescriptionParameter.java\n+++ b/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigDescriptionParameter.java\n@@ -37,6 +37,7 @@\n  * @author Christoph Knauf - Added default constructor, changed Boolean\n  *         getter to return primitive types\n  * @author Thomas HÃ¶fer - Added unit\n+ * @author Laurent Garnier - Removed constraint on unit value\n  */\n public class ConfigDescriptionParameter {\n \n@@ -182,9 +183,6 @@ public ConfigDescriptionParameter() {\n             throw new IllegalArgumentException(\n                     \"Unit or unit label must only be set for integer or decimal configuration parameters\");\n         }\n-        if (unit != null && !UNITS.contains(unit)) {\n-            throw new IllegalArgumentException(\"The given unit is invalid.\");\n-        }\n \n         this.name = name;\n         this.type = type;\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/provider/AnnotationActionModuleTypeProviderTest.java b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/provider/AnnotationActionModuleTypeProviderTest.java\nindex 5505fe94b82..e56869f13b0 100644\n--- a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/provider/AnnotationActionModuleTypeProviderTest.java\n+++ b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/provider/AnnotationActionModuleTypeProviderTest.java\n@@ -41,6 +41,7 @@\n import org.openhab.core.automation.type.Input;\n import org.openhab.core.automation.type.ModuleType;\n import org.openhab.core.automation.type.Output;\n+import org.openhab.core.automation.util.ActionInputsHelper;\n import org.openhab.core.config.core.ConfigDescriptionParameter;\n import org.openhab.core.config.core.ParameterOption;\n import org.openhab.core.test.java.JavaTest;\n@@ -74,6 +75,7 @@ public class AnnotationActionModuleTypeProviderTest extends JavaTest {\n     private static final String ACTION_OUTPUT2_TYPE = \"java.lang.String\";\n \n     private @Mock @NonNullByDefault({}) ModuleTypeI18nService moduleTypeI18nServiceMock;\n+    private @Mock @NonNullByDefault({}) ActionInputsHelper actionInputsHelperMock;\n \n     private AnnotatedActions actionProviderConf1 = new TestActionProvider();\n     private AnnotatedActions actionProviderConf2 = new TestActionProvider();\n@@ -86,7 +88,8 @@ public void setUp() {\n \n     @Test\n     public void testMultiServiceAnnotationActions() {\n-        AnnotatedActionModuleTypeProvider prov = new AnnotatedActionModuleTypeProvider(moduleTypeI18nServiceMock);\n+        AnnotatedActionModuleTypeProvider prov = new AnnotatedActionModuleTypeProvider(moduleTypeI18nServiceMock,\n+                new AnnotationActionModuleTypeHelper(actionInputsHelperMock), actionInputsHelperMock);\n \n         Map<String, Object> properties1 = Map.of(OpenHAB.SERVICE_CONTEXT, \"conf1\");\n         prov.addActionProvider(actionProviderConf1, properties1);\n\ndiff --git a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProviderTest.java b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProviderTest.java\nindex 72f72ab9f6a..bed80a27ae8 100644\n--- a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProviderTest.java\n+++ b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/thingsupport/AnnotatedThingActionModuleTypeProviderTest.java\n@@ -39,6 +39,7 @@\n import org.openhab.core.automation.type.Input;\n import org.openhab.core.automation.type.ModuleType;\n import org.openhab.core.automation.type.Output;\n+import org.openhab.core.automation.util.ActionInputsHelper;\n import org.openhab.core.config.core.ConfigDescriptionParameter;\n import org.openhab.core.config.core.ParameterOption;\n import org.openhab.core.test.java.JavaTest;\n@@ -79,6 +80,7 @@ public class AnnotatedThingActionModuleTypeProviderTest extends JavaTest {\n     private static final String ACTION_OUTPUT2_TYPE = \"java.lang.String\";\n \n     private @Mock @NonNullByDefault({}) ModuleTypeI18nService moduleTypeI18nServiceMock;\n+    private @Mock @NonNullByDefault({}) ActionInputsHelper actionInputsHelperMock;\n     private @Mock @NonNullByDefault({}) ThingHandler handler1Mock;\n     private @Mock @NonNullByDefault({}) ThingHandler handler2Mock;\n \n@@ -104,7 +106,8 @@ public void setUp() {\n     @Test\n     public void testMultiServiceAnnotationActions() {\n         AnnotatedThingActionModuleTypeProvider prov = new AnnotatedThingActionModuleTypeProvider(\n-                moduleTypeI18nServiceMock);\n+                moduleTypeI18nServiceMock, new AnnotationActionModuleTypeHelper(actionInputsHelperMock),\n+                actionInputsHelperMock);\n \n         prov.addAnnotatedThingActions(actionProviderConf1);\n \n\ndiff --git a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/util/ActionInputHelperTest.java b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/util/ActionInputHelperTest.java\nnew file mode 100644\nindex 00000000000..f93632a33d4\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/util/ActionInputHelperTest.java\n@@ -0,0 +1,556 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.util;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.measure.Quantity;\n+import javax.measure.Unit;\n+import javax.measure.quantity.Temperature;\n+import javax.measure.spi.SystemOfUnits;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.core.automation.type.ActionType;\n+import org.openhab.core.automation.type.Input;\n+import org.openhab.core.config.core.ConfigDescriptionParameter;\n+import org.openhab.core.i18n.UnitProvider;\n+import org.openhab.core.internal.i18n.I18nProviderImpl;\n+import org.openhab.core.library.types.DecimalType;\n+import org.openhab.core.library.types.QuantityType;\n+import org.openhab.core.library.unit.SIUnits;\n+\n+/**\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ActionInputHelperTest {\n+    private static final String PARAM_NAME = \"Param\";\n+    private static final String PARAM_LABEL = \"Label Parameter\";\n+    private static final String PARAM_DESCRIPTION = \"Description parameter\";\n+\n+    private UnitProvider unitProvider = new TestUnitProvider();\n+    private ActionInputsHelper helper = new ActionInputsHelper(unitProvider);\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenBoolean() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.lang.Boolean\")),\n+                ConfigDescriptionParameter.Type.BOOLEAN, false, null, null, null);\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"boolean\")),\n+                ConfigDescriptionParameter.Type.BOOLEAN, true, \"false\", null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenByte() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.lang.Byte\")),\n+                ConfigDescriptionParameter.Type.INTEGER, false, null, null, null);\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"byte\")),\n+                ConfigDescriptionParameter.Type.INTEGER, true, \"0\", null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenShort() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.lang.Short\")),\n+                ConfigDescriptionParameter.Type.INTEGER, false, null, null, null);\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"short\")),\n+                ConfigDescriptionParameter.Type.INTEGER, true, \"0\", null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenInteger() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.lang.Integer\")),\n+                ConfigDescriptionParameter.Type.INTEGER, false, null, null, null);\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"int\")),\n+                ConfigDescriptionParameter.Type.INTEGER, true, \"0\", null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenLong() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.lang.Long\")),\n+                ConfigDescriptionParameter.Type.INTEGER, false, null, null, null);\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"long\")),\n+                ConfigDescriptionParameter.Type.INTEGER, true, \"0\", null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenFloat() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.lang.Float\")),\n+                ConfigDescriptionParameter.Type.DECIMAL, false, null, null, null);\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"float\")),\n+                ConfigDescriptionParameter.Type.DECIMAL, true, \"0\", null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenDouble() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.lang.Double\")),\n+                ConfigDescriptionParameter.Type.DECIMAL, false, null, null, null);\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"double\")),\n+                ConfigDescriptionParameter.Type.DECIMAL, true, \"0\", null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenNumber() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.lang.Number\")),\n+                ConfigDescriptionParameter.Type.DECIMAL, false, null, null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenDecimalType() {\n+        checkParameter(\n+                helper.mapActionInputToConfigDescriptionParameter(\n+                        buildInput(\"org.openhab.core.library.types.DecimalType\")),\n+                ConfigDescriptionParameter.Type.DECIMAL, false, null, null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenQuantityType() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"QuantityType<Temperature>\")),\n+                ConfigDescriptionParameter.Type.DECIMAL, false, null, null, \"Â°C\");\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenString() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.lang.String\")),\n+                ConfigDescriptionParameter.Type.TEXT, false, null, null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenLocalDate() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.time.LocalDate\")),\n+                ConfigDescriptionParameter.Type.TEXT, false, null, \"date\", null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenLocalTime() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.time.LocalTime\")),\n+                ConfigDescriptionParameter.Type.TEXT, false, null, \"time\", null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenLocalDateTime() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.time.LocalDateTime\")),\n+                ConfigDescriptionParameter.Type.TEXT, false, null, \"datetime\", null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenDate() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.util.Date\")),\n+                ConfigDescriptionParameter.Type.TEXT, false, null, \"datetime\", null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenZonedDateTime() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.time.ZonedDateTime\")),\n+                ConfigDescriptionParameter.Type.TEXT, false, null, null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenInstant() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.time.Instant\")),\n+                ConfigDescriptionParameter.Type.TEXT, false, null, null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenDuration() {\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(buildInput(\"java.time.Duration\")),\n+                ConfigDescriptionParameter.Type.TEXT, false, null, null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenDefaultValue() {\n+        Input input = new Input(PARAM_NAME, \"int\", PARAM_LABEL, PARAM_DESCRIPTION, null, false, null, \"-1\");\n+        checkParameter(helper.mapActionInputToConfigDescriptionParameter(input),\n+                ConfigDescriptionParameter.Type.INTEGER, true, \"-1\", null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputToConfigDescriptionParameterWhenUnsupportedType() {\n+        assertThrows(IllegalArgumentException.class,\n+                () -> helper.mapActionInputToConfigDescriptionParameter(buildInput(\"List<String>\")));\n+    }\n+\n+    @Test\n+    public void testMapActionInputsToConfigDescriptionParametersWhenOk() {\n+        Input input1 = buildInput(\"Boolean\", \"boolean\");\n+        Input input2 = buildInput(\"String\", \"java.lang.String\");\n+        List<ConfigDescriptionParameter> params = helper\n+                .mapActionInputsToConfigDescriptionParameters(List.of(input1, input2));\n+        assertThat(params.size(), is(2));\n+        checkParameter(params.get(0), \"Boolean\", ConfigDescriptionParameter.Type.BOOLEAN, PARAM_LABEL,\n+                PARAM_DESCRIPTION, true, \"false\", null, null);\n+        checkParameter(params.get(1), \"String\", ConfigDescriptionParameter.Type.TEXT, PARAM_LABEL, PARAM_DESCRIPTION,\n+                false, null, null, null);\n+    }\n+\n+    @Test\n+    public void testMapActionInputsToConfigDescriptionParametersWhenUnsupportedType() {\n+        Input input1 = buildInput(\"Boolean\", \"boolean\");\n+        Input input2 = buildInput(\"List\", \"List<String>\");\n+        assertThrows(IllegalArgumentException.class,\n+                () -> helper.mapActionInputsToConfigDescriptionParameters(List.of(input1, input2)));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenBoolean() {\n+        Input input = buildInput(\"java.lang.Boolean\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, true), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, false), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, Boolean.TRUE), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, Boolean.FALSE), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"true\"), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"True\"), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"TRUE\"), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"false\"), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"False\"), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"FALSE\"), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"other\"), is(Boolean.FALSE));\n+\n+        Input input2 = buildInput(\"boolean\");\n+        assertThat(helper.mapSerializedInputToActionInput(input2, true), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, false), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, Boolean.TRUE), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, Boolean.FALSE), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"true\"), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"True\"), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"TRUE\"), is(Boolean.TRUE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"false\"), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"False\"), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"FALSE\"), is(Boolean.FALSE));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"other\"), is(Boolean.FALSE));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenByte() {\n+        byte val = 127;\n+        Byte valAsByte = Byte.valueOf(val);\n+\n+        Input input = buildInput(\"java.lang.Byte\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(valAsByte));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsByte), is(valAsByte));\n+        assertThat(helper.mapSerializedInputToActionInput(input, Double.valueOf(val)), is(valAsByte));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"127\"), is(valAsByte));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input, \"128\"));\n+\n+        Input input2 = buildInput(\"byte\");\n+        assertThat(helper.mapSerializedInputToActionInput(input2, val), is(valAsByte));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, valAsByte), is(valAsByte));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, Double.valueOf(val)), is(valAsByte));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"127\"), is(valAsByte));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input2, \"128\"));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenShort() {\n+        short val = 32767;\n+        Short valAsShort = Short.valueOf(val);\n+\n+        Input input = buildInput(\"java.lang.Short\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(valAsShort));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsShort), is(valAsShort));\n+        assertThat(helper.mapSerializedInputToActionInput(input, Double.valueOf(val)), is(valAsShort));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"32767\"), is(valAsShort));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input, \"32768\"));\n+\n+        Input input2 = buildInput(\"short\");\n+        assertThat(helper.mapSerializedInputToActionInput(input2, val), is(valAsShort));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, valAsShort), is(valAsShort));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, Double.valueOf(val)), is(valAsShort));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"32767\"), is(valAsShort));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input2, \"32768\"));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenInteger() {\n+        int val = 123456789;\n+        Integer valAsInteger = Integer.valueOf(val);\n+\n+        Input input = buildInput(\"java.lang.Integer\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(valAsInteger));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsInteger), is(valAsInteger));\n+        assertThat(helper.mapSerializedInputToActionInput(input, Double.valueOf(val)), is(valAsInteger));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"123456789\"), is(valAsInteger));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input, \"wrong\"));\n+\n+        Input input2 = buildInput(\"int\");\n+        assertThat(helper.mapSerializedInputToActionInput(input2, val), is(valAsInteger));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, valAsInteger), is(valAsInteger));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, Double.valueOf(val)), is(valAsInteger));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"123456789\"), is(valAsInteger));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input2, \"wrong\"));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenLong() {\n+        long val = 123456789;\n+        Long valAsLong = Long.valueOf(val);\n+\n+        Input input = buildInput(\"java.lang.Long\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(valAsLong));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsLong), is(valAsLong));\n+        assertThat(helper.mapSerializedInputToActionInput(input, Double.valueOf(val)), is(valAsLong));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"123456789\"), is(valAsLong));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input, \"wrong\"));\n+\n+        Input input2 = buildInput(\"long\");\n+        assertThat(helper.mapSerializedInputToActionInput(input2, val), is(valAsLong));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, valAsLong), is(valAsLong));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, Double.valueOf(val)), is(valAsLong));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"123456789\"), is(valAsLong));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input2, \"wrong\"));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenFloat() {\n+        Float val = 456.789f;\n+        Float valAsFloat = Float.valueOf(val);\n+\n+        Input input = buildInput(\"java.lang.Float\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(valAsFloat));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsFloat), is(valAsFloat));\n+        assertThat(helper.mapSerializedInputToActionInput(input, Double.valueOf(val)), is(valAsFloat));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"456.789\"), is(valAsFloat));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input, \"wrong\"));\n+\n+        Input input2 = buildInput(\"float\");\n+        assertThat(helper.mapSerializedInputToActionInput(input2, val), is(valAsFloat));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, valAsFloat), is(valAsFloat));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, Double.valueOf(val)), is(valAsFloat));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"456.789\"), is(valAsFloat));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input2, \"wrong\"));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenDouble() {\n+        Double val = 456.789d;\n+        Double valAsDouble = Double.valueOf(val);\n+\n+        Input input = buildInput(\"java.lang.Double\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(valAsDouble));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsDouble), is(valAsDouble));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"456.789\"), is(valAsDouble));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input, \"wrong\"));\n+\n+        Input input2 = buildInput(\"double\");\n+        assertThat(helper.mapSerializedInputToActionInput(input2, val), is(valAsDouble));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, valAsDouble), is(valAsDouble));\n+        assertThat(helper.mapSerializedInputToActionInput(input2, \"456.789\"), is(valAsDouble));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input2, \"wrong\"));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenDecimalType() {\n+        DecimalType val = new DecimalType(23.45);\n+        Input input = buildInput(\"org.openhab.core.library.types.DecimalType\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, val.doubleValue()), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"23.45\"), is(val));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input, \"wrong\"));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenQuantityType() {\n+        QuantityType<Temperature> val = new QuantityType<>(19.7, SIUnits.CELSIUS);\n+        Input input = buildInput(\"QuantityType<Temperature>\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, 19.7d), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"19.7\"), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, \"19.7 Â°C\"), is(val));\n+        assertThrows(IllegalArgumentException.class, () -> helper.mapSerializedInputToActionInput(input, \"19.7 XXX\"));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenLocalDate() {\n+        String valAsString = \"2024-08-31\";\n+        LocalDate val = LocalDate.parse(valAsString);\n+        Input input = buildInput(\"java.time.LocalDate\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsString), is(val));\n+        assertThrows(IllegalArgumentException.class,\n+                () -> helper.mapSerializedInputToActionInput(input, valAsString.replaceAll(\"-\", \" \")));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenLocalTime() {\n+        String valAsString = \"08:30:55\";\n+        LocalTime val = LocalTime.parse(valAsString);\n+        Input input = buildInput(\"java.time.LocalTime\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsString), is(val));\n+        assertThrows(IllegalArgumentException.class,\n+                () -> helper.mapSerializedInputToActionInput(input, valAsString.replaceAll(\":\", \" \")));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenLocalDateTime() {\n+        String valAsString = \"2024-07-01 20:30:45\";\n+        LocalDateTime val = LocalDateTime.parse(valAsString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));\n+        Input input = buildInput(\"java.time.LocalDateTime\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsString), is(val));\n+        assertThrows(IllegalArgumentException.class,\n+                () -> helper.mapSerializedInputToActionInput(input, valAsString.replaceAll(\" \", \"T\")));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenZonedDateTime() {\n+        String valAsString = \"2007-12-03T10:15:30+01:00[Europe/Paris]\";\n+        ZonedDateTime val = ZonedDateTime.parse(valAsString);\n+        Input input = buildInput(\"java.time.ZonedDateTime\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsString), is(val));\n+        assertThrows(IllegalArgumentException.class,\n+                () -> helper.mapSerializedInputToActionInput(input, valAsString.replaceAll(\"T\", \" \")));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenDate() {\n+        String valAsString = \"2024-11-05 09:45:12\";\n+        Date val;\n+        try {\n+            val = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(valAsString);\n+        } catch (IllegalArgumentException | ParseException e) {\n+            val = null;\n+        }\n+        assertNotNull(val);\n+        Input input = buildInput(\"java.util.Date\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsString), is(val));\n+        assertThrows(IllegalArgumentException.class,\n+                () -> helper.mapSerializedInputToActionInput(input, valAsString.replaceAll(\" \", \"T\")));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenInstant() {\n+        String valAsString = \"2017-12-09T20:15:30.00Z\";\n+        Instant val = Instant.parse(valAsString);\n+        Input input = buildInput(\"java.time.Instant\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsString), is(val));\n+        assertThrows(IllegalArgumentException.class,\n+                () -> helper.mapSerializedInputToActionInput(input, valAsString.replaceAll(\"T\", \" \")));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenDuration() {\n+        String valAsString = \"P2DT17H25M30.5S\";\n+        Duration val = Duration.parse(valAsString);\n+        Input input = buildInput(\"java.time.Duration\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+        assertThat(helper.mapSerializedInputToActionInput(input, valAsString), is(val));\n+        assertThrows(IllegalArgumentException.class,\n+                () -> helper.mapSerializedInputToActionInput(input, valAsString.replaceAll(\"T\", \" \")));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputToActionInputWhenAnyOtherType() {\n+        List<String> val = List.of(\"Value 1\", \"Value 2\");\n+        Input input = buildInput(\"List<String>\");\n+        assertThat(helper.mapSerializedInputToActionInput(input, val), is(val));\n+    }\n+\n+    @Test\n+    public void testMapSerializedInputsToActionInputs() {\n+        Input input1 = buildInput(\"BooleanParam\", \"java.lang.Boolean\");\n+        Input input2 = buildInput(\"DoubleParam\", \"java.lang.Double\");\n+        Input input3 = buildInput(\"StringParam\", \"java.lang.String\");\n+        ActionType action = new ActionType(\"action\", null, List.of(input1, input2, input3));\n+\n+        Map<String, Object> result = helper.mapSerializedInputsToActionInputs(action,\n+                Map.of(\"BooleanParam\", true, \"OtherParam\", \"other\", \"DoubleParam\", \"invalid\", \"StringParam\", \"test\"));\n+        assertThat(result.size(), is(2));\n+        assertThat(result.get(\"BooleanParam\"), is(Boolean.TRUE));\n+        assertNull(result.get(\"DoubleParam\"));\n+        assertThat(result.get(\"StringParam\"), is(\"test\"));\n+    }\n+\n+    private Input buildInput(String type) {\n+        return buildInput(PARAM_NAME, type);\n+    }\n+\n+    private Input buildInput(String name, String type) {\n+        return new Input(name, type, PARAM_LABEL, PARAM_DESCRIPTION, null, false, null, null);\n+    }\n+\n+    private void checkParameter(ConfigDescriptionParameter param, ConfigDescriptionParameter.Type type,\n+            boolean required, @Nullable String defaultValue, @Nullable String context, @Nullable String unit) {\n+        checkParameter(param, PARAM_NAME, type, PARAM_LABEL, PARAM_DESCRIPTION, required, defaultValue, context, unit);\n+    }\n+\n+    private void checkParameter(ConfigDescriptionParameter param, String name, ConfigDescriptionParameter.Type type,\n+            String label, String description, boolean required, @Nullable String defaultValue, @Nullable String context,\n+            @Nullable String unit) {\n+        assertThat(param.getName(), is(name));\n+        assertThat(param.getLabel(), is(label));\n+        assertThat(param.getDescription(), is(description));\n+        assertThat(param.getType(), is(type));\n+        assertThat(param.isReadOnly(), is(false));\n+        assertThat(param.isRequired(), is(required));\n+        if (defaultValue == null) {\n+            assertNull(param.getDefault());\n+        } else {\n+            assertThat(param.getDefault(), is(defaultValue));\n+        }\n+        if (context == null) {\n+            assertNull(param.getContext());\n+        } else {\n+            assertThat(param.getContext(), is(context));\n+        }\n+        if (unit == null) {\n+            assertNull(param.getUnit());\n+        } else {\n+            assertNotNull(param.getUnit());\n+        }\n+    }\n+\n+    public class TestUnitProvider implements UnitProvider {\n+\n+        private final Map<Class<? extends Quantity<?>>, Map<SystemOfUnits, Unit<? extends Quantity<?>>>> dimensionMap = I18nProviderImpl\n+                .getDimensionMap();\n+\n+        @Override\n+        @SuppressWarnings(\"unchecked\")\n+        public <T extends Quantity<T>> Unit<T> getUnit(Class<T> dimension) {\n+            return Objects.requireNonNull(\n+                    (Unit<T>) dimensionMap.getOrDefault(dimension, Map.of()).get(SIUnits.getInstance()));\n+        }\n+\n+        @Override\n+        public SystemOfUnits getMeasurementSystem() {\n+            return SIUnits.getInstance();\n+        }\n+\n+        @Override\n+        public Collection<Class<? extends Quantity<?>>> getAllDimensions() {\n+            return Set.of();\n+        }\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4389",
    "pr_id": 4389,
    "issue_id": 4388,
    "repo": "openhab/openhab-core",
    "problem_statement": "Start discovery with a parameter (like a pairing code in case of Matter)\nThe Matter binding being developed by @digitaldan requires to fill a pairing code when scanning for a new device.\r\nMy feeling is that we need a new optional input field in Main UI to fill this parameter just before clicking the Scan button.\r\n\r\n![image](https://github.com/user-attachments/assets/01ae6732-de0e-4e7a-9004-9dcdad45f045)\r\n\r\nMain UI will then pass this parameter, if filled by user, to the REST API.\r\n\r\n@digitaldan : please first confirm that it is THE solution.\r\n\r\nIf we go in that direction, I can do the work in core framework (enhancing REST API with a new parameter and handling this parameter in the discovery stuff), keeping a backward compatibility for all existing binding discovery (parameter will be ignored). But then we would need for your help @florian-h05 to update this screen. Are you volunteer for that?\r\n\r\n@digitaldan : finally you will just have to override in your binding a new method `void startScan(String scanParameter)` in your discovery class.\r\n\r\nWDYT ?",
    "issue_word_count": 176,
    "test_files_count": 2,
    "non_test_files_count": 8,
    "pr_changed_files": [
      "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractDiscoveryService.java",
      "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractThingHandlerDiscoveryService.java",
      "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryService.java",
      "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistry.java",
      "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryServiceRegistryImpl.java",
      "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/console/DiscoveryConsoleCommandExtension.java",
      "bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/AbstractDiscoveryServiceTest.java",
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/discovery/DiscoveryInfoDTO.java",
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/discovery/DiscoveryResource.java",
      "itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistryOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/AbstractDiscoveryServiceTest.java",
      "itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistryOSGiTest.java"
    ],
    "base_commit": "a5c488d8c82f75b5ade26385c23b501c723fe637",
    "head_commit": "a80378efbaee0aeeb6f52a28f65ee933e2e9d596",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4389",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4389",
    "dockerfile": "",
    "pr_merged_at": "2024-09-29T12:08:29.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractDiscoveryService.java b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractDiscoveryService.java\nindex 0f980bdb6e7..c9a52d4d72f 100644\n--- a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractDiscoveryService.java\n+++ b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractDiscoveryService.java\n@@ -49,6 +49,7 @@\n  * @author Kai Kreuzer - Refactored API\n  * @author Dennis Nobel - Added background discovery configuration through Configuration Admin\n  * @author Andre Fuechsel - Added removeOlderResults\n+ * @author Laurent Garnier - Added discovery with an optional input parameter\n  */\n @NonNullByDefault\n public abstract class AbstractDiscoveryService implements DiscoveryService {\n@@ -64,6 +65,9 @@ public abstract class AbstractDiscoveryService implements DiscoveryService {\n \n     private boolean backgroundDiscoveryEnabled;\n \n+    private @Nullable String scanInputLabel;\n+    private @Nullable String scanInputDescription;\n+\n     private final Map<ThingUID, DiscoveryResult> cachedResults = new HashMap<>();\n \n     private final Set<ThingTypeUID> supportedThingTypes;\n@@ -84,20 +88,44 @@ public abstract class AbstractDiscoveryService implements DiscoveryService {\n      *            service automatically stops its forced discovery process (>= 0).\n      * @param backgroundDiscoveryEnabledByDefault defines, whether the default for this discovery service is to\n      *            enable background discovery or not.\n+     * @param scanInputLabel the label of the optional input parameter to start the discovery or null if no input\n+     *            parameter supported\n+     * @param scanInputDescription the description of the optional input parameter to start the discovery or null if no\n+     *            input parameter supported\n      * @throws IllegalArgumentException if {@code timeout < 0}\n      */\n     protected AbstractDiscoveryService(@Nullable Set<ThingTypeUID> supportedThingTypes, int timeout,\n-            boolean backgroundDiscoveryEnabledByDefault) throws IllegalArgumentException {\n+            boolean backgroundDiscoveryEnabledByDefault, @Nullable String scanInputLabel,\n+            @Nullable String scanInputDescription) throws IllegalArgumentException {\n         if (timeout < 0) {\n             throw new IllegalArgumentException(\"The timeout must be >= 0!\");\n         }\n         this.supportedThingTypes = supportedThingTypes == null ? Set.of() : Set.copyOf(supportedThingTypes);\n         this.timeout = timeout;\n         this.backgroundDiscoveryEnabled = backgroundDiscoveryEnabledByDefault;\n+        this.scanInputLabel = scanInputLabel;\n+        this.scanInputDescription = scanInputDescription;\n+    }\n+\n+    /**\n+     * Creates a new instance of this class with the specified parameters and no input parameter supported to start the\n+     * discovery.\n+     *\n+     * @param supportedThingTypes the list of Thing types which are supported (can be null)\n+     * @param timeout the discovery timeout in seconds after which the discovery\n+     *            service automatically stops its forced discovery process (>= 0).\n+     * @param backgroundDiscoveryEnabledByDefault defines, whether the default for this discovery service is to\n+     *            enable background discovery or not.\n+     * @throws IllegalArgumentException if {@code timeout < 0}\n+     */\n+    protected AbstractDiscoveryService(@Nullable Set<ThingTypeUID> supportedThingTypes, int timeout,\n+            boolean backgroundDiscoveryEnabledByDefault) throws IllegalArgumentException {\n+        this(supportedThingTypes, timeout, backgroundDiscoveryEnabledByDefault, null, null);\n     }\n \n     /**\n-     * Creates a new instance of this class with the specified parameters and background discovery enabled.\n+     * Creates a new instance of this class with the specified parameters and background discovery enabled\n+     * and no input parameter supported to start the discovery.\n      *\n      * @param supportedThingTypes the list of Thing types which are supported (can be null)\n      * @param timeout the discovery timeout in seconds after which the discovery service\n@@ -111,7 +139,8 @@ protected AbstractDiscoveryService(@Nullable Set<ThingTypeUID> supportedThingTyp\n     }\n \n     /**\n-     * Creates a new instance of this class with the specified parameters and background discovery enabled.\n+     * Creates a new instance of this class with the specified parameters and background discovery enabled\n+     * and no input parameter supported to start the discovery.\n      *\n      * @param timeout the discovery timeout in seconds after which the discovery service\n      *            automatically stops its forced discovery process (>= 0).\n@@ -133,6 +162,21 @@ public Set<ThingTypeUID> getSupportedThingTypes() {\n         return supportedThingTypes;\n     }\n \n+    @Override\n+    public boolean isScanInputSupported() {\n+        return scanInputLabel != null && scanInputDescription != null;\n+    }\n+\n+    @Override\n+    public @Nullable String getScanInputLabel() {\n+        return scanInputLabel;\n+    }\n+\n+    @Override\n+    public @Nullable String getScanInputDescription() {\n+        return scanInputDescription;\n+    }\n+\n     /**\n      * Returns the amount of time in seconds after which the discovery service automatically\n      * stops its forced discovery process.\n@@ -168,7 +212,16 @@ public void removeDiscoveryListener(@Nullable DiscoveryListener listener) {\n     }\n \n     @Override\n-    public synchronized void startScan(@Nullable ScanListener listener) {\n+    public void startScan(@Nullable ScanListener listener) {\n+        startScanInternal(null, listener);\n+    }\n+\n+    @Override\n+    public void startScan(String input, @Nullable ScanListener listener) {\n+        startScanInternal(input, listener);\n+    }\n+\n+    private synchronized void startScanInternal(@Nullable String input, @Nullable ScanListener listener) {\n         synchronized (this) {\n             // we first stop any currently running scan and its scheduled stop\n             // call\n@@ -194,7 +247,11 @@ public synchronized void startScan(@Nullable ScanListener listener) {\n             timestampOfLastScan = Instant.now();\n \n             try {\n-                startScan();\n+                if (isScanInputSupported() && input != null) {\n+                    startScan(input);\n+                } else {\n+                    startScan();\n+                }\n             } catch (Exception ex) {\n                 scheduledStop = this.scheduledStop;\n                 if (scheduledStop != null) {\n@@ -232,6 +289,11 @@ public synchronized void abortScan() {\n      */\n     protected abstract void startScan();\n \n+    // An abstract method would have required a change in all existing bindings implementing a DiscoveryService\n+    protected void startScan(String input) {\n+        logger.warn(\"Discovery with input parameter not implemented by service '{}'!\", this.getClass().getName());\n+    }\n+\n     /**\n      * This method cleans up after a scan, i.e. it removes listeners and other required operations.\n      */\n\ndiff --git a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractThingHandlerDiscoveryService.java b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractThingHandlerDiscoveryService.java\nindex 0dd7aa12594..2924db68394 100644\n--- a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractThingHandlerDiscoveryService.java\n+++ b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/AbstractThingHandlerDiscoveryService.java\n@@ -32,6 +32,7 @@\n  * It handles the injection of the {@link ThingHandler}\n  *\n  * @author Jan N. Klug - Initial contribution\n+ * @author Laurent Garnier - Added discovery with an optional input parameter\n  */\n @NonNullByDefault\n public abstract class AbstractThingHandlerDiscoveryService<T extends ThingHandler> extends AbstractDiscoveryService\n@@ -45,12 +46,18 @@ public abstract class AbstractThingHandlerDiscoveryService<T extends ThingHandle\n     protected @NonNullByDefault({}) T thingHandler = (@NonNull T) null;\n \n     protected AbstractThingHandlerDiscoveryService(Class<T> thingClazz, @Nullable Set<ThingTypeUID> supportedThingTypes,\n-            int timeout, boolean backgroundDiscoveryEnabledByDefault) throws IllegalArgumentException {\n-        super(supportedThingTypes, timeout, backgroundDiscoveryEnabledByDefault);\n+            int timeout, boolean backgroundDiscoveryEnabledByDefault, @Nullable String scanInputLabel,\n+            @Nullable String scanInputDescription) throws IllegalArgumentException {\n+        super(supportedThingTypes, timeout, backgroundDiscoveryEnabledByDefault, scanInputLabel, scanInputDescription);\n         this.thingClazz = thingClazz;\n         this.backgroundDiscoveryEnabled = backgroundDiscoveryEnabledByDefault;\n     }\n \n+    protected AbstractThingHandlerDiscoveryService(Class<T> thingClazz, @Nullable Set<ThingTypeUID> supportedThingTypes,\n+            int timeout, boolean backgroundDiscoveryEnabledByDefault) throws IllegalArgumentException {\n+        this(thingClazz, supportedThingTypes, timeout, backgroundDiscoveryEnabledByDefault, null, null);\n+    }\n+\n     protected AbstractThingHandlerDiscoveryService(Class<T> thingClazz, @Nullable Set<ThingTypeUID> supportedThingTypes,\n             int timeout) throws IllegalArgumentException {\n         this(thingClazz, supportedThingTypes, timeout, true);\n\ndiff --git a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryService.java b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryService.java\nindex 14eb273b9b9..f6b91d37b05 100644\n--- a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryService.java\n+++ b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryService.java\n@@ -39,6 +39,7 @@\n  * @author Michael Grammling - Initial contribution\n  * @author Kai Kreuzer - Refactored API\n  * @author Dennis Nobel - Added background discovery configuration through Configuration Admin\n+ * @author Laurent Garnier - Added discovery with an optional input parameter\n  *\n  * @see DiscoveryListener\n  * @see DiscoveryServiceRegistry\n@@ -60,6 +61,31 @@ public interface DiscoveryService {\n      */\n     Collection<ThingTypeUID> getSupportedThingTypes();\n \n+    /**\n+     * Returns {@code true} if the discovery supports an optional input parameter to run, otherwise {@code false}.\n+     *\n+     * @return true if the discovery supports an optional input parameter to run, otherwise false\n+     */\n+    boolean isScanInputSupported();\n+\n+    /**\n+     * Returns the label of the supported input parameter to start the discovery.\n+     *\n+     * @return the label of the supported input parameter to start the discovery or null if input parameter not\n+     *         supported\n+     */\n+    @Nullable\n+    String getScanInputLabel();\n+\n+    /**\n+     * Returns the description of the supported input parameter to start the discovery.\n+     *\n+     * @return the description of the supported input parameter to start the discovery or null if input parameter not\n+     *         supported\n+     */\n+    @Nullable\n+    String getScanInputDescription();\n+\n     /**\n      * Returns the amount of time in seconds after which an active scan ends.\n      *\n@@ -87,6 +113,20 @@ public interface DiscoveryService {\n      */\n     void startScan(@Nullable ScanListener listener);\n \n+    /**\n+     * Triggers this service to start an active scan for new devices using an input parameter for that.<br>\n+     * This method must not block any calls such as {@link #abortScan()} and\n+     * must return fast.\n+     * <p>\n+     * If started, any registered {@link DiscoveryListener} must be notified about {@link DiscoveryResult}s.\n+     * <p>\n+     * If there is already a scan running, it is aborted and a new scan is triggered.\n+     *\n+     * @param input an input parameter to be used during discovery scan\n+     * @param listener a listener that is notified about errors or termination of the scan\n+     */\n+    void startScan(String input, @Nullable ScanListener listener);\n+\n     /**\n      * Stops an active scan for devices.<br>\n      * This method must not block any calls such as {@link #startScan} and must\n\ndiff --git a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistry.java b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistry.java\nindex 19b6248d672..289fa357aa9 100644\n--- a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistry.java\n+++ b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistry.java\n@@ -13,6 +13,7 @@\n package org.openhab.core.config.discovery;\n \n import java.util.List;\n+import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -29,6 +30,7 @@\n  *\n  * @author Michael Grammling - Initial contribution\n  * @author Ivaylo Ivanov - Added getMaxScanTimeout\n+ * @author Laurent Garnier - Added discovery with an optional input parameter\n  *\n  * @see DiscoveryService\n  * @see DiscoveryListener\n@@ -44,6 +46,7 @@ public interface DiscoveryServiceRegistry {\n      *\n      * @param thingTypeUID the Thing type UID pointing to collection of discovery\n      *            services to be forced to start a discovery\n+     * @param input an optional input parameter to be used during discovery scan, can be null.\n      * @param listener a callback to inform about errors or termination, can be null.\n      *            If more than one discovery service is started, the {@link ScanListener#onFinished()} callback is\n      *            called after all\n@@ -54,7 +57,7 @@ public interface DiscoveryServiceRegistry {\n      * @return true if a t least one discovery service could be found and forced\n      *         to start a discovery, otherwise false\n      */\n-    boolean startScan(ThingTypeUID thingTypeUID, @Nullable ScanListener listener);\n+    boolean startScan(ThingTypeUID thingTypeUID, @Nullable String input, @Nullable ScanListener listener);\n \n     /**\n      * Forces the associated {@link DiscoveryService}s to start a discovery for\n@@ -65,6 +68,7 @@ public interface DiscoveryServiceRegistry {\n      *\n      * @param bindingId the binding id pointing to one or more discovery services to\n      *            be forced to start a discovery\n+     * @param input an optional input parameter to be used during discovery scan, can be null.\n      * @param listener a callback to inform about errors or termination, can be null.\n      *            If more than one discovery service is started, the {@link ScanListener#onFinished()} callback is\n      *            called after all\n@@ -75,7 +79,7 @@ public interface DiscoveryServiceRegistry {\n      * @return true if a t least one discovery service could be found and forced\n      *         to start a discovery, otherwise false\n      */\n-    boolean startScan(String bindingId, @Nullable ScanListener listener);\n+    boolean startScan(String bindingId, @Nullable String input, @Nullable ScanListener listener);\n \n     /**\n      * Aborts a started discovery on all {@link DiscoveryService}s for the given\n@@ -163,6 +167,13 @@ public interface DiscoveryServiceRegistry {\n      */\n     List<String> getSupportedBindings();\n \n+    /**\n+     * Returns the list of all {@link DiscoveryService}s, that discover thing types of the given binding id.\n+     *\n+     * @return list of discovery services, that discover thing types of the given binding id\n+     */\n+    Set<DiscoveryService> getDiscoveryServices(String bindingId) throws IllegalStateException;\n+\n     /**\n      * Returns the maximum discovery timeout from all discovery services registered for the specified thingTypeUID\n      *\n\ndiff --git a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryServiceRegistryImpl.java b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryServiceRegistryImpl.java\nindex 0601c3a305c..c7a88d73755 100644\n--- a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryServiceRegistryImpl.java\n+++ b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryServiceRegistryImpl.java\n@@ -56,6 +56,7 @@\n  * @author Kai Kreuzer - Refactored API\n  * @author Andre Fuechsel - Added removeOlderResults\n  * @author Ivaylo Ivanov - Added getMaxScanTimeout\n+ * @author Laurent Garnier - Added discovery with an optional input parameter\n  *\n  * @see DiscoveryServiceRegistry\n  * @see DiscoveryListener\n@@ -189,7 +190,8 @@ public void addDiscoveryListener(DiscoveryListener listener) throws IllegalState\n     }\n \n     @Override\n-    public boolean startScan(ThingTypeUID thingTypeUID, @Nullable ScanListener listener) throws IllegalStateException {\n+    public boolean startScan(ThingTypeUID thingTypeUID, @Nullable String input, @Nullable ScanListener listener)\n+            throws IllegalStateException {\n         Set<DiscoveryService> discoveryServicesForThingType = getDiscoveryServices(thingTypeUID);\n \n         if (discoveryServicesForThingType.isEmpty()) {\n@@ -197,11 +199,12 @@ public boolean startScan(ThingTypeUID thingTypeUID, @Nullable ScanListener liste\n             return false;\n         }\n \n-        return startScans(discoveryServicesForThingType, listener);\n+        return startScans(discoveryServicesForThingType, input, listener);\n     }\n \n     @Override\n-    public boolean startScan(String bindingId, final @Nullable ScanListener listener) throws IllegalStateException {\n+    public boolean startScan(String bindingId, @Nullable String input, @Nullable ScanListener listener)\n+            throws IllegalStateException {\n         final Set<DiscoveryService> discoveryServicesForBinding = getDiscoveryServices(bindingId);\n \n         if (discoveryServicesForBinding.isEmpty()) {\n@@ -209,7 +212,7 @@ public boolean startScan(String bindingId, final @Nullable ScanListener listener\n             return false;\n         }\n \n-        return startScans(discoveryServicesForBinding, listener);\n+        return startScans(discoveryServicesForBinding, input, listener);\n     }\n \n     @Override\n@@ -326,7 +329,8 @@ private boolean abortScans(Set<DiscoveryService> discoveryServices) {\n         return allServicesAborted;\n     }\n \n-    private boolean startScans(Set<DiscoveryService> discoveryServices, @Nullable ScanListener listener) {\n+    private boolean startScans(Set<DiscoveryService> discoveryServices, @Nullable String input,\n+            @Nullable ScanListener listener) {\n         boolean atLeastOneDiscoveryServiceHasBeenStarted = false;\n \n         if (discoveryServices.size() > 1) {\n@@ -334,7 +338,7 @@ private boolean startScans(Set<DiscoveryService> discoveryServices, @Nullable Sc\n             AggregatingScanListener aggregatingScanListener = new AggregatingScanListener(discoveryServices.size(),\n                     listener);\n             for (DiscoveryService discoveryService : discoveryServices) {\n-                if (startScan(discoveryService, aggregatingScanListener)) {\n+                if (startScan(discoveryService, input, aggregatingScanListener)) {\n                     atLeastOneDiscoveryServiceHasBeenStarted = true;\n                 } else {\n                     logger.debug(\n@@ -343,7 +347,7 @@ private boolean startScans(Set<DiscoveryService> discoveryServices, @Nullable Sc\n                 }\n             }\n         } else {\n-            if (startScan(discoveryServices.iterator().next(), listener)) {\n+            if (startScan(discoveryServices.iterator().next(), input, listener)) {\n                 atLeastOneDiscoveryServiceHasBeenStarted = true;\n             }\n         }\n@@ -351,13 +355,18 @@ private boolean startScans(Set<DiscoveryService> discoveryServices, @Nullable Sc\n         return atLeastOneDiscoveryServiceHasBeenStarted;\n     }\n \n-    private boolean startScan(DiscoveryService discoveryService, @Nullable ScanListener listener) {\n+    private boolean startScan(DiscoveryService discoveryService, @Nullable String input,\n+            @Nullable ScanListener listener) {\n         Collection<ThingTypeUID> supportedThingTypes = discoveryService.getSupportedThingTypes();\n         try {\n             logger.debug(\"Triggering scan for thing types '{}' on '{}'...\", supportedThingTypes,\n                     discoveryService.getClass().getSimpleName());\n \n-            discoveryService.startScan(listener);\n+            if (discoveryService.isScanInputSupported() && input != null) {\n+                discoveryService.startScan(input, listener);\n+            } else {\n+                discoveryService.startScan(listener);\n+            }\n             return true;\n         } catch (Exception ex) {\n             logger.error(\"Cannot trigger scan for thing types '{}' on '{}'!\", supportedThingTypes,\n@@ -380,7 +389,8 @@ private synchronized Set<DiscoveryService> getDiscoveryServices(ThingTypeUID thi\n         return discoveryServices;\n     }\n \n-    private synchronized Set<DiscoveryService> getDiscoveryServices(String bindingId) throws IllegalStateException {\n+    @Override\n+    public synchronized Set<DiscoveryService> getDiscoveryServices(String bindingId) throws IllegalStateException {\n         Set<DiscoveryService> discoveryServices = new HashSet<>();\n \n         for (DiscoveryService discoveryService : this.discoveryServices) {\n\ndiff --git a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/console/DiscoveryConsoleCommandExtension.java b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/console/DiscoveryConsoleCommandExtension.java\nindex 31c98d7f8b2..2ec68426c3d 100644\n--- a/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/console/DiscoveryConsoleCommandExtension.java\n+++ b/bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/console/DiscoveryConsoleCommandExtension.java\n@@ -18,6 +18,7 @@\n import java.util.List;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.config.discovery.DiscoveryService;\n import org.openhab.core.config.discovery.DiscoveryServiceRegistry;\n import org.openhab.core.io.console.Console;\n@@ -37,6 +38,7 @@\n  *\n  * @author Kai Kreuzer - Initial contribution\n  * @author Dennis Nobel - Added background discovery commands\n+ * @author Laurent Garnier - Updated command to start discovery with a new optional input parameter\n  */\n @Component(immediate = true, service = ConsoleCommandExtension.class)\n @NonNullByDefault\n@@ -69,9 +71,9 @@ public void execute(String[] args, Console console) {\n                         String arg1 = args[1];\n                         if (arg1.contains(\":\")) {\n                             ThingTypeUID thingTypeUID = new ThingTypeUID(arg1);\n-                            runDiscoveryForThingType(console, thingTypeUID);\n+                            runDiscoveryForThingType(console, thingTypeUID, args.length > 2 ? args[2] : null);\n                         } else {\n-                            runDiscoveryForBinding(console, arg1);\n+                            runDiscoveryForBinding(console, arg1, args.length > 2 ? args[2] : null);\n                         }\n                     } else {\n                         console.println(\"Specify thing type id or binding id to discover: discovery \"\n@@ -123,18 +125,18 @@ private void configureBackgroundDiscovery(Console console, String discoveryServi\n         }\n     }\n \n-    private void runDiscoveryForThingType(Console console, ThingTypeUID thingTypeUID) {\n-        discoveryServiceRegistry.startScan(thingTypeUID, null);\n+    private void runDiscoveryForThingType(Console console, ThingTypeUID thingTypeUID, @Nullable String input) {\n+        discoveryServiceRegistry.startScan(thingTypeUID, input, null);\n     }\n \n-    private void runDiscoveryForBinding(Console console, String bindingId) {\n-        discoveryServiceRegistry.startScan(bindingId, null);\n+    private void runDiscoveryForBinding(Console console, String bindingId, @Nullable String input) {\n+        discoveryServiceRegistry.startScan(bindingId, input, null);\n     }\n \n     @Override\n     public List<String> getUsages() {\n         return List.of(\n-                buildCommandUsage(SUBCMD_START + \" <thingTypeUID|bindingID>\",\n+                buildCommandUsage(SUBCMD_START + \" <thingTypeUID|bindingID> [<code>]\",\n                         \"runs a discovery on a given thing type or binding\"),\n                 buildCommandUsage(SUBCMD_BACKGROUND_DISCOVERY_ENABLE + \" <PID>\",\n                         \"enables background discovery for the discovery service with the given PID\"),\n\ndiff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/discovery/DiscoveryInfoDTO.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/discovery/DiscoveryInfoDTO.java\nnew file mode 100644\nindex 00000000000..958a590f014\n--- /dev/null\n+++ b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/discovery/DiscoveryInfoDTO.java\n@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.core.discovery;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+/**\n+ * This is a data transfer object that is used to serialize the information about binding discovery.\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+@NonNullByDefault\n+public class DiscoveryInfoDTO {\n+\n+    public boolean inputSupported;\n+    public @Nullable String inputLabel;\n+    public @Nullable String inputDescription;\n+\n+    public DiscoveryInfoDTO(boolean inputSupported, @Nullable String inputLabel, @Nullable String inputDescription) {\n+        this.inputSupported = inputSupported;\n+        this.inputLabel = inputLabel;\n+        this.inputDescription = inputDescription;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/discovery/DiscoveryResource.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/discovery/DiscoveryResource.java\nindex 83a7fb640db..248df7b3e40 100644\n--- a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/discovery/DiscoveryResource.java\n+++ b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/discovery/DiscoveryResource.java\n@@ -14,23 +14,37 @@\n \n import java.util.Collection;\n import java.util.LinkedHashSet;\n+import java.util.Locale;\n+import java.util.Set;\n \n import javax.annotation.security.RolesAllowed;\n import javax.ws.rs.GET;\n+import javax.ws.rs.HeaderParam;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.Response.Status;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.auth.Role;\n+import org.openhab.core.config.discovery.DiscoveryService;\n import org.openhab.core.config.discovery.DiscoveryServiceRegistry;\n import org.openhab.core.config.discovery.ScanListener;\n+import org.openhab.core.i18n.I18nUtil;\n+import org.openhab.core.i18n.TranslationProvider;\n+import org.openhab.core.io.rest.JSONResponse;\n+import org.openhab.core.io.rest.LocaleService;\n import org.openhab.core.io.rest.RESTConstants;\n import org.openhab.core.io.rest.RESTResource;\n+import org.openhab.core.io.rest.core.discovery.DiscoveryInfoDTO;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.FrameworkUtil;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n import org.osgi.service.component.annotations.Reference;\n@@ -62,6 +76,7 @@\n  * @author Franck Dechavanne - Added DTOs to ApiResponses\n  * @author Markus Rathgeb - Migrated to JAX-RS Whiteboard Specification\n  * @author Wouter Born - Migrated to OpenAPI annotations\n+ * @author Laurent Garnier - Added discovery with an optional input parameter\n  */\n @Component(service = { RESTResource.class, DiscoveryResource.class })\n @JaxrsResource\n@@ -81,10 +96,15 @@ public class DiscoveryResource implements RESTResource {\n     private final Logger logger = LoggerFactory.getLogger(DiscoveryResource.class);\n \n     private final DiscoveryServiceRegistry discoveryServiceRegistry;\n+    private final LocaleService localeService;\n+    private final TranslationProvider i18nProvider;\n \n     @Activate\n-    public DiscoveryResource(final @Reference DiscoveryServiceRegistry discoveryServiceRegistry) {\n+    public DiscoveryResource(final @Reference DiscoveryServiceRegistry discoveryServiceRegistry,\n+            final @Reference TranslationProvider translationProvider, final @Reference LocaleService localeService) {\n         this.discoveryServiceRegistry = discoveryServiceRegistry;\n+        this.i18nProvider = translationProvider;\n+        this.localeService = localeService;\n     }\n \n     @GET\n@@ -96,13 +116,59 @@ public Response getDiscoveryServices() {\n         return Response.ok(new LinkedHashSet<>(supportedBindings)).build();\n     }\n \n+    @GET\n+    @Path(\"/bindings/{bindingId}/info\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Operation(operationId = \"getDiscoveryServicesInfo\", summary = \"Gets information about the discovery services for a binding.\", responses = {\n+            @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(schema = @Schema(implementation = DiscoveryInfoDTO.class))),\n+            @ApiResponse(responseCode = \"404\", description = \"Discovery service not found\") })\n+    public Response getDiscoveryServicesInfo(\n+            @PathParam(\"bindingId\") @Parameter(description = \"binding Id\") final String bindingId,\n+            @HeaderParam(HttpHeaders.ACCEPT_LANGUAGE) @Parameter(description = \"language\") @Nullable String language) {\n+        final Locale locale = localeService.getLocale(language);\n+        String label = null;\n+        String description = null;\n+        boolean supported = false;\n+        Set<DiscoveryService> discoveryServices = discoveryServiceRegistry.getDiscoveryServices(bindingId);\n+\n+        if (discoveryServices.isEmpty()) {\n+            return JSONResponse.createResponse(Status.NOT_FOUND, null,\n+                    \"No discovery service found for binding \" + bindingId);\n+        }\n+\n+        for (DiscoveryService discoveryService : discoveryServices) {\n+            if (discoveryService.isScanInputSupported()) {\n+                Bundle bundle = FrameworkUtil.getBundle(discoveryService.getClass());\n+                label = discoveryService.getScanInputLabel();\n+                if (label != null) {\n+                    label = i18nProvider.getText(bundle, I18nUtil.stripConstant(label), label, locale);\n+                }\n+                description = discoveryService.getScanInputDescription();\n+                if (description != null) {\n+                    description = i18nProvider.getText(bundle, I18nUtil.stripConstant(description), description,\n+                            locale);\n+                }\n+                supported = true;\n+                break;\n+            }\n+        }\n+        return Response.ok(new DiscoveryInfoDTO(supported, label, description)).build();\n+    }\n+\n     @POST\n     @Path(\"/bindings/{bindingId}/scan\")\n     @Produces(MediaType.TEXT_PLAIN)\n     @Operation(operationId = \"scan\", summary = \"Starts asynchronous discovery process for a binding and returns the timeout in seconds of the discovery operation.\", responses = {\n-            @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(schema = @Schema(implementation = Integer.class))) })\n-    public Response scan(@PathParam(\"bindingId\") @Parameter(description = \"bindingId\") final String bindingId) {\n-        discoveryServiceRegistry.startScan(bindingId, new ScanListener() {\n+            @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(schema = @Schema(implementation = Integer.class))),\n+            @ApiResponse(responseCode = \"404\", description = \"Discovery service not found\") })\n+    public Response scan(@PathParam(\"bindingId\") @Parameter(description = \"binding Id\") final String bindingId,\n+            @QueryParam(\"input\") @Parameter(description = \"input parameter to start the discovery\") @Nullable String input) {\n+        if (discoveryServiceRegistry.getDiscoveryServices(bindingId).isEmpty()) {\n+            return JSONResponse.createResponse(Status.NOT_FOUND, null,\n+                    \"No discovery service found for binding \" + bindingId);\n+        }\n+\n+        discoveryServiceRegistry.startScan(bindingId, input, new ScanListener() {\n             @Override\n             public void onErrorOccurred(@Nullable Exception exception) {\n                 logger.error(\"Error occurred while scanning for binding '{}'\", bindingId, exception);\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/AbstractDiscoveryServiceTest.java b/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/AbstractDiscoveryServiceTest.java\nindex 6e19183f784..83ed03d8c14 100644\n--- a/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/AbstractDiscoveryServiceTest.java\n+++ b/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/AbstractDiscoveryServiceTest.java\n@@ -15,7 +15,7 @@\n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.collection.IsMapContaining.hasEntry;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.*;\n \n import java.util.Collection;\n import java.util.Locale;\n@@ -35,6 +35,7 @@\n  * Tests the {@link DiscoveryResultBuilder}.\n  *\n  * @author Laurent Garnier - Initial contribution\n+ * @author Laurent Garnier - Added test for discovery with an input parameter\n  */\n @NonNullByDefault\n public class AbstractDiscoveryServiceTest implements DiscoveryListener {\n@@ -46,6 +47,7 @@ public class AbstractDiscoveryServiceTest implements DiscoveryListener {\n     private static final ThingUID THING_UID2 = new ThingUID(THING_TYPE_UID, \"thingId2\");\n     private static final ThingUID THING_UID3 = new ThingUID(THING_TYPE_UID, BRIDGE_UID, \"thingId3\");\n     private static final ThingUID THING_UID4 = new ThingUID(THING_TYPE_UID, \"thingId4\");\n+    private static final ThingUID THING_UID5 = new ThingUID(THING_TYPE_UID, BRIDGE_UID, \"thingId5\");\n     private static final String KEY1 = \"key1\";\n     private static final String KEY2 = \"key2\";\n     private static final String VALUE1 = \"value1\";\n@@ -58,9 +60,12 @@ public class AbstractDiscoveryServiceTest implements DiscoveryListener {\n     private static final String DISCOVERY_LABEL = \"Result Test\";\n     private static final String DISCOVERY_LABEL_KEY1 = \"@text/test\";\n     private static final String DISCOVERY_LABEL_KEY2 = \"@text/test2 [ \\\"50\\\", \\\"number\\\" ]\";\n+    private static final String DISCOVERY_LABEL_CODE = \"Result Test with pairing code\";\n     private static final String PROPERTY_LABEL1 = \"Label from property (text key)\";\n     private static final String PROPERTY_LABEL2 = \"Label from property (infered key)\";\n     private static final String PROPERTY_LABEL3 = \"Label from property (parameters 50 and number)\";\n+    private static final String PAIRING_CODE_LABEL = \"Pairing Code\";\n+    private static final String PAIRING_CODE_DESCR = \"The pairing code\";\n \n     private TranslationProvider i18nProvider = new TranslationProvider() {\n         @Override\n@@ -134,6 +139,28 @@ protected void startScan() {\n         }\n     }\n \n+    class TestDiscoveryServiceWithRequiredCode extends AbstractDiscoveryService {\n+\n+        public TestDiscoveryServiceWithRequiredCode(TranslationProvider i18nProvider, LocaleProvider localeProvider)\n+                throws IllegalArgumentException {\n+            super(Set.of(THING_TYPE_UID), 1, false, PAIRING_CODE_LABEL, PAIRING_CODE_DESCR);\n+            this.i18nProvider = i18nProvider;\n+            this.localeProvider = localeProvider;\n+        }\n+\n+        @Override\n+        protected void startScan() {\n+        }\n+\n+        @Override\n+        protected void startScan(String input) {\n+            DiscoveryResult discoveryResult = DiscoveryResultBuilder.create(THING_UID5).withThingType(THING_TYPE_UID)\n+                    .withProperties(properties).withRepresentationProperty(KEY1).withBridge(BRIDGE_UID)\n+                    .withLabel(DISCOVERY_LABEL_CODE).build();\n+            thingDiscovered(discoveryResult);\n+        }\n+    }\n+\n     @Override\n     public void thingDiscovered(DiscoveryService source, DiscoveryResult result) {\n         assertThat(result.getThingTypeUID(), is(THING_TYPE_UID));\n@@ -156,6 +183,9 @@ public void thingDiscovered(DiscoveryService source, DiscoveryResult result) {\n         } else if (THING_UID4.equals(result.getThingUID())) {\n             assertNull(result.getBridgeUID());\n             assertThat(result.getLabel(), is(PROPERTY_LABEL3));\n+        } else if (THING_UID5.equals(result.getThingUID())) {\n+            assertThat(result.getBridgeUID(), is(BRIDGE_UID));\n+            assertThat(result.getLabel(), is(DISCOVERY_LABEL_CODE));\n         }\n     }\n \n@@ -172,7 +202,21 @@ public void thingRemoved(DiscoveryService source, ThingUID thingUID) {\n     @Test\n     public void testDiscoveryResults() {\n         TestDiscoveryService discoveryService = new TestDiscoveryService(i18nProvider, localeProvider);\n+        assertFalse(discoveryService.isScanInputSupported());\n+        assertNull(discoveryService.getScanInputLabel());\n+        assertNull(discoveryService.getScanInputDescription());\n         discoveryService.addDiscoveryListener(this);\n         discoveryService.startScan();\n     }\n+\n+    @Test\n+    public void testDiscoveryResultsWhenCodeRequired() {\n+        TestDiscoveryServiceWithRequiredCode discoveryService = new TestDiscoveryServiceWithRequiredCode(i18nProvider,\n+                localeProvider);\n+        assertTrue(discoveryService.isScanInputSupported());\n+        assertThat(discoveryService.getScanInputLabel(), is(PAIRING_CODE_LABEL));\n+        assertThat(discoveryService.getScanInputDescription(), is(PAIRING_CODE_DESCR));\n+        discoveryService.addDiscoveryListener(this);\n+        discoveryService.startScan(\"code\");\n+    }\n }\n\ndiff --git a/itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistryOSGiTest.java b/itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistryOSGiTest.java\nindex 44de79656e2..3b77e09bc19 100644\n--- a/itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistryOSGiTest.java\n+++ b/itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/DiscoveryServiceRegistryOSGiTest.java\n@@ -160,17 +160,19 @@ public void afterEach() throws Exception {\n \n     @Test\n     public void testStartScanNonExisting() {\n-        assertFalse(discoveryServiceRegistry.startScan(new ThingTypeUID(\"bindingId\", \"thingType\"), null));\n+        assertFalse(discoveryServiceRegistry.startScan(new ThingTypeUID(\"bindingId\", \"thingType\"), null, null));\n     }\n \n     @Test\n     public void testStartScanExisting() {\n-        assertTrue(discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null));\n+        assertTrue(\n+                discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null, null));\n     }\n \n     @Test\n     public void testScanFaulty() {\n-        assertFalse(discoveryServiceRegistry.startScan(new ThingTypeUID(FAULTY_BINDING_ID, FAULTY_THING_TYPE), null));\n+        assertFalse(\n+                discoveryServiceRegistry.startScan(new ThingTypeUID(FAULTY_BINDING_ID, FAULTY_THING_TYPE), null, null));\n     }\n \n     @Test\n@@ -182,7 +184,7 @@ public void testAbortScanNonExisting() {\n     public void testAbortScanKnown() {\n         ScanListener mockScanListener = mock(ScanListener.class);\n \n-        assertTrue(discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1),\n+        assertTrue(discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null,\n                 mockScanListener));\n         assertTrue(discoveryServiceRegistry.abortScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1)));\n \n@@ -195,7 +197,8 @@ public void testThingDiscovered() {\n         ScanListener mockScanListener = mock(ScanListener.class);\n \n         discoveryServiceRegistry.addDiscoveryListener(discoveryListenerMock);\n-        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), mockScanListener);\n+        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null,\n+                mockScanListener);\n \n         waitForAssert(() -> verify(mockScanListener, times(1)).onFinished());\n         verify(discoveryListenerMock, times(1)).thingDiscovered(any(), any());\n@@ -221,8 +224,10 @@ public void testRemoveOlderResultsWorks() {\n         ScanListener mockScanListener2 = mock(ScanListener.class);\n \n         discoveryServiceRegistry.addDiscoveryListener(discoveryListenerMock);\n-        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), mockScanListener1);\n-        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_2, ANY_THING_TYPE_2), mockScanListener2);\n+        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null,\n+                mockScanListener1);\n+        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_2, ANY_THING_TYPE_2), null,\n+                mockScanListener2);\n \n         waitForAssert(() -> verify(mockScanListener1, times(1)).onFinished());\n         waitForAssert(() -> verify(mockScanListener2, times(1)).onFinished());\n@@ -234,7 +239,8 @@ public void testRemoveOlderResultsWorks() {\n         assertThat(inbox.getAll().size(), is(2));\n \n         // start discovery again\n-        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), mockScanListener1);\n+        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null,\n+                mockScanListener1);\n         waitForAssert(() -> verify(mockScanListener1, times(2)).onFinished());\n         verify(discoveryListenerMock, times(3)).thingDiscovered(any(), any());\n \n@@ -250,7 +256,8 @@ public void testRemoveOlderResultsOnlySameService() {\n         ScanListener mockScanListener1 = mock(ScanListener.class);\n \n         discoveryServiceRegistry.addDiscoveryListener(discoveryListenerMock);\n-        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), mockScanListener1);\n+        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null,\n+                mockScanListener1);\n \n         waitForAssert(() -> verify(mockScanListener1, times(1)).onFinished());\n         verify(discoveryListenerMock, times(1)).thingDiscovered(any(), any());\n@@ -264,7 +271,8 @@ public void testRemoveOlderResultsOnlySameService() {\n                 anotherDiscoveryServiceMockForBinding1, null));\n \n         // start discovery again\n-        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), mockScanListener1);\n+        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null,\n+                mockScanListener1);\n         waitForAssert(() -> verify(mockScanListener1, times(2)).onFinished());\n         verify(discoveryListenerMock, times(3)).thingDiscovered(any(), any());\n \n@@ -288,7 +296,7 @@ public void testRemoveOlderResultsOnlyOfSpecificBridge() {\n         ScanListener mockScanListener1 = mock(ScanListener.class);\n \n         discoveryServiceRegistry.addDiscoveryListener(discoveryListenerMock);\n-        discoveryServiceRegistry.startScan(ANY_BINDING_ID_3_ANY_THING_TYPE_3_UID, mockScanListener1);\n+        discoveryServiceRegistry.startScan(ANY_BINDING_ID_3_ANY_THING_TYPE_3_UID, null, mockScanListener1);\n \n         waitForAssert(() -> verify(mockScanListener1, times(1)).onFinished());\n         verify(discoveryListenerMock, times(2)).thingDiscovered(any(), any());\n@@ -311,7 +319,8 @@ public void testRemoveOlderResultsOnlyOfSpecificBridge() {\n         assertThat(inbox.getAll().size(), is(2));\n \n         // start discovery again\n-        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_3, ANY_THING_TYPE_3), mockScanListener1);\n+        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_3, ANY_THING_TYPE_3), null,\n+                mockScanListener1);\n \n         waitForAssert(() -> verify(mockScanListener1, times(1)).onFinished());\n         verify(discoveryListenerMock, times(4)).thingDiscovered(any(), any());\n@@ -343,7 +352,8 @@ public void testThingDiscoveredRemovedListener() {\n         ScanListener mockScanListener1 = mock(ScanListener.class);\n         discoveryServiceRegistry.addDiscoveryListener(discoveryListenerMock);\n         discoveryServiceRegistry.removeDiscoveryListener(discoveryListenerMock);\n-        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), mockScanListener1);\n+        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null,\n+                mockScanListener1);\n \n         waitForAssert(() -> verify(mockScanListener1, times(1)).onFinished());\n         verifyNoMoreInteractions(discoveryListenerMock);\n@@ -357,7 +367,8 @@ public void testStartScanTwoDiscoveryServices() {\n         serviceRegs.add(\n                 bundleContext.registerService(DiscoveryService.class.getName(), anotherDiscoveryServiceMock, null));\n         discoveryServiceRegistry.addDiscoveryListener(discoveryListenerMock);\n-        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), mockScanListener1);\n+        discoveryServiceRegistry.startScan(new ThingTypeUID(ANY_BINDING_ID_1, ANY_THING_TYPE_1), null,\n+                mockScanListener1);\n \n         waitForAssert(mockScanListener1::onFinished);\n         verify(discoveryListenerMock, times(2)).thingDiscovered(any(), any());\n@@ -366,7 +377,7 @@ public void testStartScanTwoDiscoveryServices() {\n     @Test\n     public void testStartScanBindingId() {\n         ScanListener mockScanListener1 = mock(ScanListener.class);\n-        discoveryServiceRegistry.startScan(ANY_BINDING_ID_1, mockScanListener1);\n+        discoveryServiceRegistry.startScan(ANY_BINDING_ID_1, null, mockScanListener1);\n \n         waitForAssert(() -> verify(mockScanListener1, times(1)).onFinished());\n     }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4386",
    "pr_id": 4386,
    "issue_id": 4385,
    "repo": "openhab/openhab-core",
    "problem_statement": "Add XOR ArithmeticGroupFunction\nIt would be nice to be able to XOR (not just AND, OR, NAND, NOR) states.",
    "issue_word_count": 19,
    "test_files_count": 1,
    "non_test_files_count": 3,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java"
    ],
    "base_commit": "437a885d8256673b466605c601cd0ce812f2ef19",
    "head_commit": "5ec5fe059644c2447528278f5980ffae277b83e5",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4386",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4386",
    "dockerfile": "",
    "pr_merged_at": "2024-09-26T06:28:08.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext b/bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext\nindex 266d585cc73..503dc3a7232 100644\n--- a/bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext\n+++ b/bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext\n@@ -27,7 +27,7 @@ ModelGroupItem:\n ;\n \n enum ModelGroupFunction:\n-\tEQUALITY='EQUALITY' | AND='AND' | OR='OR' | NAND='NAND' | NOR='NOR' | AVG='AVG' | MEDIAN='MEDIAN' | SUM='SUM' | MAX='MAX' | MIN='MIN' | COUNT='COUNT' | LATEST='LATEST' | EARLIEST='EARLIEST'\n+\tEQUALITY='EQUALITY' | AND='AND' | OR='OR' | NAND='NAND' | NOR='NOR' | XOR='XOR' | AVG='AVG' | MEDIAN='MEDIAN' | SUM='SUM' | MAX='MAX' | MIN='MIN' | COUNT='COUNT' | LATEST='LATEST' | EARLIEST='EARLIEST'\n ;\n \n ModelNormalItem:\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java\nindex 0fdc4e165be..20757d9b3d7 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java\n@@ -140,6 +140,14 @@ private GroupFunction createDefaultGroupFunction(GroupFunctionDTO function, @Nul\n                     logger.error(\"Group function 'NOT OR' requires two arguments. Using Equality instead.\");\n                 }\n                 break;\n+            case \"XOR\":\n+                args = parseStates(baseItem, function.params);\n+                if (args.size() == 2) {\n+                    return new ArithmeticGroupFunction.Xor(args.get(0), args.get(1));\n+                } else {\n+                    logger.error(\"Group function 'XOR' requires two arguments. Using Equality instead.\");\n+                }\n+                break;\n             case \"COUNT\":\n                 if (function.params != null && function.params.length == 1) {\n                     State countParam = new StringType(function.params[0]);\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java\nindex 9abec496149..7a7314d809b 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java\n@@ -35,6 +35,7 @@\n  * @author Kai Kreuzer - Initial contribution\n  * @author Thomas EichstÃ¤dt-Engelen - Added \"N\" functions\n  * @author GaÃ«l L'hopital - Added count function\n+ * @author Fabian Vollmann - Added XOR function\n  */\n @NonNullByDefault\n public interface ArithmeticGroupFunction extends GroupFunction {\n@@ -212,6 +213,82 @@ public State calculate(@Nullable Set<Item> items) {\n         }\n     }\n \n+    /**\n+     * This does a logical 'xor' operation. If exactly one item is of 'activeState' this\n+     * is returned, otherwise the 'passiveState' is returned.\n+     *\n+     * Through the getStateAs() method, it can be determined, how many\n+     * items actually are in the 'activeState'.\n+     */\n+    class Xor implements GroupFunction {\n+\n+        protected final State activeState;\n+        protected final State passiveState;\n+\n+        public Xor(@Nullable State activeValue, @Nullable State passiveValue) {\n+            if (activeValue == null || passiveValue == null) {\n+                throw new IllegalArgumentException(\"Parameters must not be null!\");\n+            }\n+            this.activeState = activeValue;\n+            this.passiveState = passiveValue;\n+        }\n+\n+        @Override\n+        public State calculate(@Nullable Set<Item> items) {\n+            if (items != null) {\n+                boolean foundOne = false;\n+\n+                for (Item item : items) {\n+                    if (activeState.equals(item.getStateAs(activeState.getClass()))) {\n+                        if (foundOne) {\n+                            return passiveState;\n+                        } else {\n+                            foundOne = true;\n+                        }\n+                    }\n+                }\n+                if (foundOne) {\n+                    return activeState;\n+                }\n+            }\n+\n+            return passiveState;\n+        }\n+\n+        @Override\n+        public @Nullable <T extends State> T getStateAs(@Nullable Set<Item> items, Class<T> stateClass) {\n+            State state = calculate(items);\n+            if (stateClass.isInstance(state)) {\n+                return stateClass.cast(state);\n+            } else {\n+                if (stateClass == DecimalType.class) {\n+                    if (items != null) {\n+                        return stateClass.cast(new DecimalType(count(items, activeState)));\n+                    } else {\n+                        return stateClass.cast(DecimalType.ZERO);\n+                    }\n+                } else {\n+                    return null;\n+                }\n+            }\n+        }\n+\n+        private int count(Set<Item> items, State state) {\n+            int count = 0;\n+            for (Item item : items) {\n+                if (state.equals(item.getStateAs(state.getClass()))) {\n+                    count++;\n+                }\n+            }\n+            return count;\n+        }\n+\n+        @Override\n+        public State[] getParameters() {\n+            return new State[] { activeState, passiveState };\n+        }\n+    }\n+\n     /**\n      * This calculates the numeric average over all item states of decimal type.\n      */\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java\nindex dd15f2553e0..e079d642968 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java\n@@ -206,6 +206,58 @@ public void testNAndFunctionNegative() {\n         assertEquals(OpenClosedType.OPEN, state);\n     }\n \n+    @Test\n+    public void testXorFunction() {\n+        Set<Item> items = new HashSet<>();\n+        items.add(new TestItem(\"TestItem1\", OpenClosedType.OPEN));\n+        items.add(new TestItem(\"TestItem2\", OpenClosedType.CLOSED));\n+\n+        GroupFunction function = new ArithmeticGroupFunction.Xor(OpenClosedType.OPEN, OpenClosedType.CLOSED);\n+        State state = function.calculate(items);\n+\n+        assertEquals(OpenClosedType.OPEN, state);\n+    }\n+\n+    @Test\n+    public void testXorFunctionMultiple() {\n+        Set<Item> items = new HashSet<>();\n+        items.add(new TestItem(\"TestItem1\", OpenClosedType.CLOSED));\n+        items.add(new TestItem(\"TestItem2\", OpenClosedType.CLOSED));\n+        items.add(new TestItem(\"TestItem3\", OpenClosedType.OPEN));\n+        items.add(new TestItem(\"TestItem4\", OpenClosedType.CLOSED));\n+\n+        GroupFunction function = new ArithmeticGroupFunction.Xor(OpenClosedType.OPEN, OpenClosedType.CLOSED);\n+        State state = function.calculate(items);\n+\n+        assertEquals(OpenClosedType.OPEN, state);\n+    }\n+\n+    @Test\n+    public void testXorFunctionNegative() {\n+        Set<Item> items = new HashSet<>();\n+        items.add(new TestItem(\"TestItem1\", OpenClosedType.OPEN));\n+        items.add(new TestItem(\"TestItem2\", OpenClosedType.OPEN));\n+\n+        GroupFunction function = new ArithmeticGroupFunction.Xor(OpenClosedType.OPEN, OpenClosedType.CLOSED);\n+        State state = function.calculate(items);\n+\n+        assertEquals(OpenClosedType.CLOSED, state);\n+    }\n+\n+    @Test\n+    public void testXorFunctionNegativeMultiple() {\n+        Set<Item> items = new HashSet<>();\n+        items.add(new TestItem(\"TestItem1\", OpenClosedType.CLOSED));\n+        items.add(new TestItem(\"TestItem2\", OpenClosedType.OPEN));\n+        items.add(new TestItem(\"TestItem3\", OpenClosedType.OPEN));\n+        items.add(new TestItem(\"TestItem4\", OpenClosedType.CLOSED));\n+\n+        GroupFunction function = new ArithmeticGroupFunction.Xor(OpenClosedType.OPEN, OpenClosedType.CLOSED);\n+        State state = function.calculate(items);\n+\n+        assertEquals(OpenClosedType.CLOSED, state);\n+    }\n+\n     @Test\n     public void testAvgFunction() {\n         Set<Item> items = new HashSet<>();\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4375",
    "pr_id": 4375,
    "issue_id": 3965,
    "repo": "openhab/openhab-core",
    "problem_statement": "Add alternative utility class for apache subnetutils\nWe try to get rid of dependencies to apache libs per https://github.com/openhab/openhab-addons/issues/7722\r\n\r\nwe made great progress with https://github.com/openhab/openhab-core/pull/3738\r\nNow there are 5 bindings that make use of subnetutils. I suggest a similar approach here, I can create an alternative util class in core to prevent code duplication. will be based on https://github.com/openhab/openhab-addons/pull/14430#issuecomment-1869707020 where the implementation was confirmed working as expected.\r\n\r\n@openhab/core-maintainers any thoughts before I start working on it?",
    "issue_word_count": 101,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/net/NetUtil.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/net/NetUtilTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/net/NetUtilTest.java"
    ],
    "base_commit": "bcda209ec9ecde42074b4c06b9dba62d09abcebf",
    "head_commit": "2798068acce62a4ae498e129b1ff8491af30f907",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4375",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4375",
    "dockerfile": "",
    "pr_merged_at": "2024-10-07T21:54:52.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/net/NetUtil.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/net/NetUtil.java\nindex 7e3eec50191..378934cebf8 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/net/NetUtil.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/net/NetUtil.java\n@@ -19,6 +19,7 @@\n import java.net.NetworkInterface;\n import java.net.SocketException;\n import java.net.UnknownHostException;\n+import java.nio.ByteBuffer;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -34,6 +35,7 @@\n import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.TimeUnit;\n import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -55,6 +57,7 @@\n  * @author Stefan Triller - Converted to OSGi service with primary ipv4 conf\n  * @author Gary Tse - Network address change listener\n  * @author Tim Roberts - Added primary address change to network address change listener\n+ * @author Leo Siepel - Added methods to improve support for network scanning\n  */\n @Component(configurationPid = \"org.openhab.network\", property = { \"service.pid=org.openhab.network\",\n         \"service.config.description.uri=system:network\", \"service.config.label=Network Settings\",\n@@ -386,7 +389,7 @@ public static String networkPrefixLengthToNetmask(int prefixLength) {\n     /**\n      * Get the network address a specific ip address is in\n      *\n-     * @param ipAddressString ipv4 address of the device (i.e. 192.168.5.1)\n+     * @param ipAddressString IPv4 address of the device (i.e. 192.168.5.1)\n      * @param netMask netmask in bits (i.e. 24)\n      * @return network a device is in (i.e. 192.168.5.0)\n      * @throws IllegalArgumentException if parameters are wrong\n@@ -422,7 +425,7 @@ public static String getIpv4NetAddress(String ipAddressString, short netMask) {\n     /**\n      * Get the network broadcast address of the subnet a specific ip address is in\n      *\n-     * @param ipAddressString ipv4 address of the device (i.e. 192.168.5.1)\n+     * @param ipAddressString IPv4 address of the device (i.e. 192.168.5.1)\n      * @param prefix network prefix in bits (i.e. 24)\n      * @return network broadcast address of the network the device is in (i.e. 192.168.5.255)\n      * @throws IllegalArgumentException if parameters are wrong\n@@ -595,4 +598,92 @@ private boolean getConfigParameter(Map<String, Object> parameters, String parame\n             return defaultValue;\n         }\n     }\n+\n+    /**\n+     * For all network interfaces (except loopback) all IPv4 addresses are returned.\n+     * This list can for example, be used to scan the network for available devices.\n+     * \n+     * @return A full list of IP {@link InetAddress} (except network and broadcast)\n+     */\n+    public static List<InetAddress> getFullRangeOfAddressesToScan() {\n+        List<InetAddress> addressesToScan = List.of();\n+        List<CidrAddress> ipV4InterfaceAddresses = NetUtil.getAllInterfaceAddresses().stream()\n+                .filter(a -> a.getAddress() instanceof Inet4Address).collect(Collectors.toList());\n+\n+        for (CidrAddress i : ipV4InterfaceAddresses) {\n+            addressesToScan.addAll(getAddressesRangeByCidrAddress(i, i.getPrefix()));\n+        }\n+        return addressesToScan;\n+    }\n+\n+    /**\n+     * For the given {@link CidrAddress} all IPv4 addresses are returned.\n+     * This list can, for example, be used to scan the network for available devices.\n+     * \n+     * @param iFaceAddress The {@link CidrAddress} of the network interface\n+     * @param maxAllowedPrefixLength Control the maximum allowed prefix length of the network (e.g. 24 for class C).\n+     *            iFaceAddress's with a larger prefix are ignored and return an empty result.\n+     * @return A full list of IP {@link InetAddress} (except network and broadcast)\n+     */\n+    public static List<InetAddress> getAddressesRangeByCidrAddress(CidrAddress iFaceAddress,\n+            int maxAllowedPrefixLength) {\n+        if (!(iFaceAddress.getAddress() instanceof Inet4Address) || iFaceAddress.getPrefix() < maxAllowedPrefixLength) {\n+            return List.of();\n+        }\n+\n+        List<byte[]> addresses = getAddressesInSubnet(iFaceAddress.getAddress().getAddress(), iFaceAddress.getPrefix());\n+        if (addresses.size() > 2) {\n+            addresses.remove(0); // remove network address\n+            addresses.remove(addresses.size() - 1); // remove broadcast address\n+        }\n+\n+        return addresses.stream().map(m -> {\n+            try {\n+                return InetAddress.getByAddress(m);\n+            } catch (UnknownHostException e) {\n+                return null;\n+            }\n+        }).filter(f -> f != null).sorted((a, b) -> {\n+            byte[] aOct = a.getAddress();\n+            byte[] bOct = b.getAddress();\n+            int r = 0;\n+            for (int i = 0; i < aOct.length && i < bOct.length; i++) {\n+                r = Integer.compare(aOct[i] & 0xff, bOct[i] & 0xff);\n+                if (r != 0) {\n+                    return r;\n+                }\n+            }\n+            return r;\n+        }).collect(Collectors.toList());\n+    }\n+\n+    /**\n+     * Calculate each IP address within a subnet\n+     * \n+     * @param address IPv4 address in byte array form (i.e. 127.0.0.1 = 01111111 00000000 00000000 00000001)\n+     * @param maskLength Network mask length (i.e. the number after the forward-slash, '/', in CIDR notation)\n+     * @return A list of all possible IP addresses in byte array form\n+     */\n+    private static List<byte[]> getAddressesInSubnet(byte[] address, int maskLength) {\n+        byte[] lowestAddress = address.clone();\n+        for (int bit = maskLength; bit < 32; bit++) {\n+            lowestAddress[bit / 8] &= ~(1 << (bit % 8));\n+        }\n+        int lowestAddressAsLong = ByteBuffer.wrap(lowestAddress).getInt(); // big-endian by default\n+\n+        byte[] highestAddress = address.clone();\n+        for (int bit = maskLength; bit < 32; bit++) {\n+            highestAddress[bit / 8] |= ~(1 << (bit % 8));\n+        }\n+        int highestAddressAsLong = ByteBuffer.wrap(highestAddress).getInt();\n+\n+        List<byte[]> addresses = new ArrayList<byte[]>();\n+        for (int i = lowestAddressAsLong; i <= highestAddressAsLong; i++) {\n+            ByteBuffer dbuf = ByteBuffer.allocate(4);\n+            dbuf.putInt(i);\n+            addresses.add(dbuf.array());\n+        }\n+\n+        return addresses;\n+    }\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/net/NetUtilTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/net/NetUtilTest.java\nindex ef8151cdc25..65c468911ef 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/net/NetUtilTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/net/NetUtilTest.java\n@@ -14,6 +14,11 @@\n \n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.List;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.Test;\n@@ -116,4 +121,35 @@ public void testBroadcastAddress() {\n             assertThat(iae.getMessage(), is(\"IP 'SOME_TEXT' is not a valid IPv4 address\"));\n         }\n     }\n+\n+    @Test\n+    public void checkValidRangeCountAndSort() throws UnknownHostException {\n+        InetAddress testableAddress = InetAddress.getByName(\"192.168.1.4\");\n+        List<InetAddress> addresses = NetUtil\n+                .getAddressesRangeByCidrAddress(new CidrAddress(testableAddress, (short) 24), 24);\n+\n+        assertEquals(254, addresses.size());\n+        assertEquals(\"192.168.1.1\", addresses.get(0).getHostAddress());\n+        assertEquals(\"192.168.1.254\", addresses.get(253).getHostAddress());\n+    }\n+\n+    @Test\n+    public void checkValidLargeRangeCountAndSort() throws UnknownHostException {\n+        InetAddress testableAddress = InetAddress.getByName(\"127.0.1.12\");\n+        List<InetAddress> addresses = NetUtil\n+                .getAddressesRangeByCidrAddress(new CidrAddress(testableAddress, (short) 16), 16);\n+\n+        assertEquals(65534, addresses.size());\n+        assertEquals(\"127.0.0.1\", addresses.get(0).getHostAddress());\n+        assertEquals(\"127.0.255.254\", addresses.get(65533).getHostAddress());\n+    }\n+\n+    @Test\n+    public void checkNotAllowedPrefixLength() throws UnknownHostException {\n+        InetAddress testableAddress = InetAddress.getByName(\"192.168.1.0\");\n+        List<InetAddress> addresses = NetUtil\n+                .getAddressesRangeByCidrAddress(new CidrAddress(testableAddress, (short) 16), 24);\n+\n+        assertEquals(0, addresses.size());\n+    }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4367",
    "pr_id": 4367,
    "issue_id": 4369,
    "repo": "openhab/openhab-core",
    "problem_statement": "[ColorUtil] Add conversions between colour temperature and CIE XY colour space coordinates\nThere has been a discussion on the forum about a need in the Zigbee binding for converting a colour temperature in Kelvin to the respective coordinate on the colour temperature locus in the CIE colour space, and vice-versa.\r\n\r\nSee https://community.openhab.org/t/dimmer-and-color-item-to-same-channel/157241\r\n\r\nSigned-off-by: AndrewFG [software@whitebear.ch](mailto:software@whitebear.ch)",
    "issue_word_count": 76,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java"
    ],
    "base_commit": "72753be8cc9af029c3e656a89b29064f4624c73f",
    "head_commit": "8909a4aaac0473301d452e9481065b6c0bb65bc9",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4367",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4367",
    "dockerfile": "",
    "pr_merged_at": "2024-09-16T23:01:51.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java\nindex 2e6be3d54ab..1f05311d7d4 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java\n@@ -650,4 +650,530 @@ public Point closest(Point p) {\n             return retVal;\n         }\n     }\n+\n+    /**\n+     * Lookup table for converting colour temperatures in Kelvin to a point in the CIE XY colour space.\n+     * Elements of the array comprise three parts: colour temperature (K), X coordinate, Y coordinate.\n+     */\n+    private static final double[][] KELVIN_TO_XY_LOOKUP_TABLE = {\n+        //@formatter:off\n+        { 2000, 0.526676280311873, 0.41329727450763 },\n+        { 2010, 0.52558700949522, 0.413461772751086 },\n+        { 2020, 0.524501547047308, 0.413618464845305 },\n+        { 2030, 0.523419902728187, 0.413767442985273 },\n+        { 2040, 0.522342085989252, 0.413908799143933 },\n+        { 2050, 0.521268105968449, 0.414042625047528 },\n+        { 2060, 0.520197971485871, 0.414169012151805 },\n+        { 2070, 0.519131691039726, 0.414288051619026 },\n+        { 2080, 0.518069272802678, 0.414399834295808 },\n+        { 2090, 0.51701072461855, 0.41450445069175 },\n+        { 2100, 0.515956053999373, 0.414601990958848 },\n+        { 2110, 0.514905268122789, 0.414692544871688 },\n+        { 2120, 0.513858373829776, 0.414776201808388 },\n+        { 2130, 0.512815377622702, 0.414853050732289 },\n+        { 2140, 0.511776285663697, 0.414923180174373 },\n+        { 2150, 0.510741103773325, 0.414986678216401 },\n+        { 2160, 0.509709837429556, 0.415043632474748 },\n+        { 2170, 0.508682491767023, 0.415094130084932 },\n+        { 2180, 0.507659071576558, 0.415138257686807 },\n+        { 2190, 0.506639581304996, 0.415176101410431 },\n+        { 2200, 0.505624025055233, 0.415207746862562 },\n+        { 2210, 0.504612406586543, 0.415233279113804 },\n+        { 2220, 0.50360472931513, 0.415252782686356 },\n+        { 2230, 0.502600996314909, 0.415266341542373 },\n+        { 2240, 0.501601210318512, 0.41527403907292 },\n+        { 2250, 0.500605373718514, 0.415275958087495 },\n+        { 2260, 0.499613488568853, 0.415272180804119 },\n+        { 2270, 0.498625556586457, 0.415262788839981 },\n+        { 2280, 0.497641579153048, 0.415247863202608 },\n+        { 2290, 0.496661557317139, 0.415227484281571 },\n+        { 2300, 0.495685491796189, 0.415201731840687 },\n+        { 2310, 0.494713382978936, 0.415170685010734 },\n+        { 2320, 0.49374523092787, 0.415134422282633 },\n+        { 2330, 0.492781035381868, 0.415093021501115 },\n+        { 2340, 0.491820795758963, 0.415046559858839 },\n+        { 2350, 0.490864511159246, 0.414995113890958 },\n+        { 2360, 0.489912180367896, 0.414938759470118 },\n+        { 2370, 0.488963801858331, 0.414877571801882 },\n+        { 2380, 0.488019373795462, 0.414811625420557 },\n+        { 2390, 0.48707889403907, 0.41474099418543 },\n+        { 2400, 0.486142360147258, 0.414665751277374 },\n+        { 2410, 0.485209769380024, 0.414585969195845 },\n+        { 2420, 0.484281118702893, 0.41450171975623 },\n+        { 2430, 0.483356404790651, 0.414413074087558 },\n+        { 2440, 0.482435624031141, 0.41432010263054 },\n+        { 2450, 0.481518772529133, 0.414222875135951 },\n+        { 2460, 0.480605846110259, 0.414121460663327 },\n+        { 2470, 0.479696840325004, 0.414015927579967 },\n+        { 2480, 0.478791750452749, 0.413906343560247 },\n+        { 2490, 0.477890571505866, 0.413792775585208 },\n+        { 2500, 0.476993298233858, 0.413675289942435 },\n+        { 2510, 0.476099925127525, 0.413553952226202 },\n+        { 2520, 0.475210446423188, 0.413428827337877 },\n+        { 2530, 0.474324856106916, 0.413299979486579 },\n+        { 2540, 0.473443147918802, 0.413167472190078 },\n+        { 2550, 0.472565315357245, 0.413031368275923 },\n+        { 2560, 0.471691351683258, 0.412891729882807 },\n+        { 2570, 0.470821249924792, 0.412748618462133 },\n+        { 2580, 0.469955002881062, 0.412602094779799 },\n+        { 2590, 0.469092603126886, 0.412452218918178 },\n+        { 2600, 0.468234043017033, 0.41229905027829 },\n+        { 2610, 0.46737931469056, 0.412142647582159 },\n+        { 2620, 0.466528410075157, 0.411983068875347 },\n+        { 2630, 0.465681320891482, 0.411820371529656 },\n+        { 2640, 0.464838038657489, 0.411654612245991 },\n+        { 2650, 0.463998554692746, 0.411485847057383 },\n+        { 2660, 0.463162860122743, 0.411314131332149 },\n+        { 2670, 0.462330945883173, 0.411139519777208 },\n+        { 2680, 0.461502802724214, 0.41096206644152 },\n+        { 2690, 0.460678421214773, 0.410781824719658 },\n+        { 2700, 0.459857791746717, 0.410598847355503 },\n+        { 2710, 0.459040904539081, 0.410413186446054 },\n+        { 2720, 0.458227749642249, 0.410224893445347 },\n+        { 2730, 0.457418316942099, 0.410034019168485 },\n+        { 2740, 0.456612596164132, 0.409840613795755 },\n+        { 2750, 0.455810576877562, 0.409644726876854 },\n+        { 2760, 0.455012248499377, 0.409446407335191 },\n+        { 2770, 0.45421760029836, 0.40924570347228 },\n+        { 2780, 0.453426621399085, 0.409042662972206 },\n+        { 2790, 0.452639300785869, 0.408837332906172 },\n+        { 2800, 0.451855627306685, 0.408629759737106 },\n+        { 2810, 0.451075589677048, 0.408419989324343 },\n+        { 2820, 0.450299176483844, 0.408208066928357 },\n+        { 2830, 0.449526376189136, 0.407994037215556 },\n+        { 2840, 0.448757177133914, 0.407777944263126 },\n+        { 2850, 0.447991567541816, 0.407559831563923 },\n+        { 2860, 0.447229535522791, 0.407339742031414 },\n+        { 2870, 0.446471069076735, 0.407117718004646 },\n+        { 2880, 0.445716156097067, 0.406893801253269 },\n+        { 2890, 0.444964784374273, 0.406668032982576 },\n+        { 2900, 0.444216941599399, 0.406440453838584 },\n+        { 2910, 0.443472615367494, 0.406211103913138 },\n+        { 2920, 0.442731793181017, 0.405980022749035 },\n+        { 2930, 0.441994462453189, 0.405747249345174 },\n+        { 2940, 0.441260610511305, 0.405512822161723 },\n+        { 2950, 0.440530224599989, 0.405276779125295 },\n+        { 2960, 0.439803291884415, 0.405039157634144 },\n+        { 2970, 0.439079799453468, 0.404799994563365 },\n+        { 2980, 0.438359734322871, 0.404559326270101 },\n+        { 2990, 0.437643083438248, 0.404317188598758 },\n+        { 3000, 0.436929833678155, 0.404073616886221 },\n+        { 3010, 0.436219971857052, 0.403828645967064 },\n+        { 3020, 0.435513484728235, 0.403582310178768 },\n+        { 3030, 0.434810358986718, 0.403334643366923 },\n+        { 3040, 0.434110581272061, 0.403085678890438 },\n+        { 3050, 0.433414138171168, 0.402835449626724 },\n+        { 3060, 0.432721016221012, 0.402583987976887 },\n+        { 3070, 0.43203120191134, 0.402331325870893 },\n+        { 3080, 0.431344681687312, 0.402077494772728 },\n+        { 3090, 0.4306614419521, 0.401822525685539 },\n+        { 3100, 0.429981469069442, 0.401566449156763 },\n+        { 3110, 0.429304749366147, 0.401309295283229 },\n+        { 3120, 0.428631269134558, 0.401051093716253 },\n+        { 3130, 0.427961014634963, 0.400791873666696 },\n+        { 3140, 0.427293972097967, 0.400531663910017 },\n+        { 3150, 0.426630127726814, 0.400270492791288 },\n+        { 3160, 0.425969467699671, 0.400008388230194 },\n+        { 3170, 0.425311978171859, 0.399745377726 },\n+        { 3180, 0.424657645278049, 0.399481488362498 },\n+        { 3190, 0.424006455134406, 0.399216746812922 },\n+        { 3200, 0.423358393840696, 0.398951179344833 },\n+        { 3210, 0.422713447482352, 0.39868481182498 },\n+        { 3220, 0.422071602132489, 0.398417669724122 },\n+        { 3230, 0.421432843853882, 0.39814977812183 },\n+        { 3240, 0.420797158700909, 0.397881161711245 },\n+        { 3250, 0.42016453272144, 0.39761184480381 },\n+        { 3260, 0.419534951958697, 0.397341851333969 },\n+        { 3270, 0.418908402453069, 0.397071204863828 },\n+        { 3280, 0.418284870243884, 0.396799928587787 },\n+        { 3290, 0.41766434137115, 0.396528045337128 },\n+        { 3300, 0.417046801877253, 0.396255577584578 },\n+        { 3310, 0.416432237808611, 0.395982547448827 },\n+        { 3320, 0.415820635217303, 0.395708976699012 },\n+        { 3330, 0.415211980162654, 0.395434886759171 },\n+        { 3340, 0.414606258712775, 0.395160298712644 },\n+        { 3350, 0.414003456946084, 0.394885233306455 },\n+        { 3360, 0.41340356095278, 0.394609710955639 },\n+        { 3370, 0.41280655683628, 0.394333751747546 },\n+        { 3380, 0.412212430714629, 0.39405737544609 },\n+        { 3390, 0.411621168721873, 0.393780601495975 },\n+        { 3400, 0.411032757009395, 0.393503449026874 },\n+        { 3410, 0.410447181747219, 0.393225936857565 },\n+        { 3420, 0.409864429125286, 0.392948083500039 },\n+        { 3430, 0.409284485354692, 0.392669907163558 },\n+        { 3440, 0.408707336668894, 0.39239142575868 },\n+        { 3450, 0.408132969324891, 0.39211265690124 },\n+        { 3460, 0.407561369604368, 0.391833617916295 },\n+        { 3470, 0.406992523814813, 0.391554325842027 },\n+        { 3480, 0.406426418290599, 0.391274797433607 },\n+        { 3490, 0.405863039394048, 0.390995049167019 },\n+        { 3500, 0.405302373516452, 0.390715097242847 },\n+        { 3510, 0.404744407079075, 0.390434957590016 },\n+        { 3520, 0.404189126534126, 0.390154645869498 },\n+        { 3530, 0.403636518365702, 0.389874177477982 },\n+        { 3540, 0.403086569090702, 0.389593567551495 },\n+        { 3550, 0.402539265259722, 0.389312830968992 },\n+        { 3560, 0.401994593457919, 0.389031982355903 },\n+        { 3570, 0.401452540305847, 0.388751036087639 },\n+        { 3580, 0.400913092460274, 0.388470006293066 },\n+        { 3590, 0.400376236614968, 0.388188906857933 },\n+        { 3600, 0.399841959501467, 0.387907751428262 },\n+        { 3610, 0.399310247889814, 0.387626553413704 },\n+        { 3620, 0.398781088589278, 0.387345325990855 },\n+        { 3630, 0.398254468449049, 0.387064082106531 },\n+        { 3640, 0.397730374358909, 0.386782834481003 },\n+        { 3650, 0.397208793249882, 0.386501595611205 },\n+        { 3660, 0.396689712094866, 0.386220377773894 },\n+        { 3670, 0.396173117909235, 0.385939193028774 },\n+        { 3680, 0.395658997751428, 0.385658053221589 },\n+        { 3690, 0.395147338723516, 0.385376969987172 },\n+        { 3700, 0.394638127971748, 0.38509595475246 },\n+        { 3710, 0.394131352687072, 0.384815018739475 },\n+        { 3720, 0.393627000105649, 0.384534172968266 },\n+        { 3730, 0.393125057509339, 0.384253428259816 },\n+        { 3740, 0.392625512226168, 0.383972795238911 },\n+        { 3750, 0.392128351630781, 0.383692284336979 },\n+        { 3760, 0.391633563144876, 0.383411905794889 },\n+        { 3770, 0.391141134237623, 0.383131669665717 },\n+        { 3780, 0.390651052426057, 0.382851585817475 },\n+        { 3790, 0.390163305275465, 0.382571663935814 },\n+        { 3800, 0.389677880399752, 0.382291913526683 },\n+        { 3810, 0.389194765461792, 0.382012343918955 },\n+        { 3820, 0.388713948173757, 0.38173296426703 },\n+        { 3830, 0.388235416297444, 0.381453783553394 },\n+        { 3840, 0.387759157644574, 0.38117481059115 },\n+        { 3850, 0.387285160077084, 0.380896054026513 },\n+        { 3860, 0.386813411507402, 0.380617522341278 },\n+        { 3870, 0.386343899898705, 0.380339223855255 },\n+        { 3880, 0.385876613265173, 0.380061166728665 },\n+        { 3890, 0.385411539672215, 0.379783358964516 },\n+        { 3900, 0.384948667236696, 0.37950580841094 },\n+        { 3910, 0.384487984127144, 0.3792285227635 },\n+        { 3920, 0.384029478563943, 0.378951509567474 },\n+        { 3930, 0.383573138819519, 0.378674776220096 },\n+        { 3940, 0.383118953218507, 0.37839832997278 },\n+        { 3950, 0.382666910137919, 0.378122177933306 },\n+        { 3960, 0.382216998007281, 0.377846327067982 },\n+        { 3970, 0.38176920530878, 0.377570784203772 },\n+        { 3980, 0.381323520577382, 0.377295556030402 },\n+        { 3990, 0.380879932400953, 0.377020649102431 },\n+        { 4000, 0.380438429420364, 0.376746069841299 },\n+        { 4010, 0.379999000329579, 0.376471824537343 },\n+        { 4020, 0.379561633875749, 0.376197919351794 },\n+        { 4030, 0.37912631885928, 0.375924360318735 },\n+        { 4040, 0.378693044133903, 0.37565115334704 },\n+        { 4050, 0.378261798606731, 0.375378304222286 },\n+        { 4060, 0.377832571238301, 0.37510581860864 },\n+        { 4070, 0.377405351042622, 0.374833702050712 },\n+        { 4080, 0.376980127087195, 0.374561959975396 },\n+        { 4090, 0.376556888493043, 0.37429059769367 },\n+        { 4100, 0.376135624434723, 0.374019620402386 },\n+        { 4110, 0.37571632414033, 0.373749033186026 },\n+        { 4120, 0.375298976891495, 0.373478841018437 },\n+        { 4130, 0.37488357202338, 0.373209048764539 },\n+        { 4140, 0.374470098924658, 0.372939661182012 },\n+        { 4150, 0.374058547037489, 0.372670682922962 },\n+        { 4160, 0.373648905857491, 0.372402118535558 },\n+        { 4170, 0.373241164933703, 0.372133972465647 },\n+        { 4180, 0.372835313868541, 0.371866249058352 },\n+        { 4190, 0.372431342317747, 0.371598952559641 },\n+        { 4200, 0.372029239990332, 0.371332087117875 },\n+        { 4210, 0.371628996648516, 0.371065656785341 },\n+        { 4220, 0.371230602107658, 0.370799665519753 },\n+        { 4230, 0.37083404623618, 0.370534117185738 },\n+        { 4240, 0.370439318955492, 0.370269015556301 },\n+        { 4250, 0.370046410239904, 0.370004364314267 },\n+        { 4260, 0.369655310116535, 0.369740167053704 },\n+        { 4270, 0.369266008665223, 0.369476427281325 },\n+        { 4280, 0.368878496018416, 0.369213148417869 },\n+        { 4290, 0.368492762361075, 0.368950333799466 },\n+        { 4300, 0.368108797930561, 0.368687986678976 },\n+        { 4310, 0.36772659301652, 0.36842611022732 },\n+        { 4320, 0.367346137960767, 0.368164707534776 },\n+        { 4330, 0.36696742315716, 0.36790378161227 },\n+        { 4340, 0.366590439051477, 0.367643335392644 },\n+        { 4350, 0.366215176141282, 0.367383371731904 },\n+        { 4360, 0.36584162497579, 0.36712389341045 },\n+        { 4370, 0.365469776155733, 0.366864903134292 },\n+        { 4380, 0.365099620333213, 0.366606403536243 },\n+        { 4390, 0.364731148211558, 0.366348397177103 },\n+        { 4400, 0.364364350545175, 0.366090886546814 },\n+        { 4410, 0.363999218139393, 0.365833874065608 },\n+        { 4420, 0.363635741850315, 0.365577362085137 },\n+        { 4430, 0.363273912584652, 0.365321352889581 },\n+        { 4440, 0.362913721299567, 0.365065848696745 },\n+        { 4450, 0.362555159002508, 0.36481085165914 },\n+        { 4460, 0.362198216751042, 0.364556363865043 },\n+        { 4470, 0.361842885652686, 0.36430238733955 },\n+        { 4480, 0.361489156864733, 0.364048924045607 },\n+        { 4490, 0.36113702159408, 0.363795975885023 },\n+        { 4500, 0.360786471097048, 0.363543544699483 },\n+        { 4510, 0.360437496679207, 0.363291632271526 },\n+        { 4520, 0.36009008969519, 0.363040240325526 },\n+        { 4530, 0.359744241548512, 0.362789370528647 },\n+        { 4540, 0.359399943691386, 0.362539024491787 },\n+        { 4550, 0.35905718762453, 0.362289203770517 },\n+        { 4560, 0.358715964896985, 0.36203990986599 },\n+        { 4570, 0.35837626710592, 0.361791144225849 },\n+        { 4580, 0.358038085896437, 0.361542908245116 },\n+        { 4590, 0.357701412961382, 0.361295203267073 },\n+        { 4600, 0.357366240041146, 0.361048030584121 },\n+        { 4610, 0.357032558923467, 0.360801391438638 },\n+        { 4620, 0.356700361443233, 0.360555287023811 },\n+        { 4630, 0.356369639482281, 0.360309718484469 },\n+        { 4640, 0.356040384969197, 0.360064686917893 },\n+        { 4650, 0.355712589879109, 0.359820193374621 },\n+        { 4660, 0.35538624623349, 0.359576238859237 },\n+        { 4670, 0.355061346099949, 0.359332824331149 },\n+        { 4680, 0.354737881592023, 0.359089950705356 },\n+        { 4690, 0.354415844868975, 0.358847618853204 },\n+        { 4700, 0.354095228135586, 0.358605829603133 },\n+        { 4710, 0.353776023641942, 0.358364583741404 },\n+        { 4720, 0.353458223683228, 0.358123882012824 },\n+        { 4730, 0.353141820599519, 0.357883725121459 },\n+        { 4740, 0.352826806775565, 0.357644113731333 },\n+        { 4750, 0.352513174640586, 0.357405048467119 },\n+        { 4760, 0.35220091666805, 0.357166529914816 },\n+        { 4770, 0.351890025375474, 0.356928558622422 },\n+        { 4780, 0.351580493324198, 0.356691135100592 },\n+        { 4790, 0.351272313119179, 0.356454259823288 },\n+        { 4800, 0.350965477408777, 0.356217933228418 },\n+        { 4810, 0.350659978884535, 0.355982155718466 },\n+        { 4820, 0.350355810280973, 0.355746927661114 },\n+        { 4830, 0.350052964375366, 0.355512249389855 },\n+        { 4840, 0.349751433987532, 0.355278121204588 },\n+        { 4850, 0.349451211979616, 0.355044543372218 },\n+        { 4860, 0.349152291255876, 0.35481151612724 },\n+        { 4870, 0.348854664762465, 0.354579039672309 },\n+        { 4880, 0.348558325487217, 0.35434711417881 },\n+        { 4890, 0.348263266459433, 0.354115739787415 },\n+        { 4900, 0.347969480749661, 0.353884916608634 },\n+        { 4910, 0.347676961469483, 0.353654644723354 },\n+        { 4920, 0.3473857017713, 0.353424924183371 },\n+        { 4930, 0.347095694848114, 0.353195755011921 },\n+        { 4940, 0.346806933933317, 0.352967137204187 },\n+        { 4950, 0.346519412300469, 0.352739070727817 },\n+        { 4960, 0.346233123263089, 0.352511555523418 },\n+        { 4970, 0.345948060174438, 0.352284591505058 },\n+        { 4980, 0.345664216427301, 0.352058178560741 },\n+        { 4990, 0.345381585453779, 0.351832316552895 },\n+        { 5000, 0.345100160725069, 0.35160700531884 },\n+        { 5010, 0.344819935751253, 0.35138224467125 },\n+        { 5020, 0.344540904081086, 0.351158034398612 },\n+        { 5030, 0.344263059301778, 0.350934374265679 },\n+        { 5040, 0.343986395038783, 0.350711264013907 },\n+        { 5050, 0.343710904955591, 0.350488703361895 },\n+        { 5060, 0.34343658275351, 0.350266692005812 },\n+        { 5070, 0.343163422171456, 0.350045229619827 },\n+        { 5080, 0.342891416985746, 0.349824315856515 },\n+        { 5090, 0.34262056100988, 0.349603950347275 },\n+        { 5100, 0.342350848094336, 0.349384132702732 },\n+        { 5110, 0.342082272126361, 0.349164862513132 },\n+        { 5120, 0.341814827029758, 0.348946139348737 },\n+        { 5130, 0.34154850676468, 0.348727962760208 },\n+        { 5140, 0.341283305327422, 0.348510332278986 },\n+        { 5150, 0.341019216750211, 0.348293247417664 },\n+        { 5160, 0.340756235101003, 0.348076707670355 },\n+        { 5170, 0.340494354483275, 0.347860712513058 },\n+        { 5180, 0.340233569035817, 0.347645261404009 },\n+        { 5190, 0.339973872932533, 0.347430353784033 },\n+        { 5200, 0.339715260382228, 0.347215989076895 },\n+        { 5210, 0.339457725628414, 0.347002166689633 },\n+        { 5220, 0.339201262949099, 0.346788886012898 },\n+        { 5230, 0.33894586665659, 0.346576146421281 },\n+        { 5240, 0.338691531097289, 0.346363947273638 },\n+        { 5250, 0.338438250651491, 0.346152287913411 },\n+        { 5260, 0.338186019733187, 0.345941167668941 },\n+        { 5270, 0.337934832789862, 0.34573058585378 },\n+        { 5280, 0.337684684302299, 0.345520541766991 },\n+        { 5290, 0.337435568784377, 0.345311034693453 },\n+        { 5300, 0.337187480782876, 0.345102063904155 },\n+        { 5310, 0.336940414877284, 0.344893628656486 },\n+        { 5320, 0.336694365679595, 0.344685728194521 },\n+        { 5330, 0.336449327834117, 0.344478361749302 },\n+        { 5340, 0.336205296017281, 0.34427152853912 },\n+        { 5350, 0.335962264937442, 0.344065227769781 },\n+        { 5360, 0.335720229334691, 0.34385945863488 },\n+        { 5370, 0.335479183980662, 0.343654220316063 },\n+        { 5380, 0.335239123678341, 0.343449511983289 },\n+        { 5390, 0.335000043261875, 0.343245332795082 },\n+        { 5400, 0.334761937596386, 0.343041681898789 },\n+        { 5410, 0.334524801577778, 0.342838558430825 },\n+        { 5420, 0.334288630132555, 0.342635961516917 },\n+        { 5430, 0.33405341821763, 0.342433890272344 },\n+        { 5440, 0.33381916082014, 0.342232343802175 },\n+        { 5450, 0.333585852957265, 0.342031321201502 },\n+        { 5460, 0.333353489676037, 0.341830821555668 },\n+        { 5470, 0.333122066053165, 0.341630843940493 },\n+        { 5480, 0.332891577194843, 0.341431387422495 },\n+        { 5490, 0.33266201823658, 0.341232451059109 },\n+        { 5500, 0.332433384343009, 0.341034033898904 },\n+        { 5510, 0.332205670707715, 0.34083613498179 },\n+        { 5520, 0.331978872553048, 0.34063875333923 },\n+        { 5530, 0.331752985129957, 0.340441887994442 },\n+        { 5540, 0.3315280037178, 0.340245537962605 },\n+        { 5550, 0.331303923624177, 0.340049702251049 },\n+        { 5560, 0.331080740184751, 0.339854379859459 },\n+        { 5570, 0.330858448763073, 0.339659569780063 },\n+        { 5580, 0.330637044750413, 0.339465270997818 },\n+        { 5590, 0.330416523565582, 0.339271482490602 },\n+        { 5600, 0.330196880654761, 0.339078203229392 },\n+        { 5610, 0.329978111491335, 0.338885432178446 },\n+        { 5620, 0.329760211575718, 0.338693168295479 },\n+        { 5630, 0.329543176435188, 0.338501410531837 },\n+        { 5640, 0.329327001623714, 0.338310157832671 },\n+        { 5650, 0.329111682721794, 0.338119409137101 },\n+        { 5660, 0.328897215336285, 0.337929163378386 },\n+        { 5670, 0.32868359510024, 0.337739419484084 },\n+        { 5680, 0.328470817672741, 0.337550176376214 },\n+        { 5690, 0.328258878738739, 0.337361432971415 },\n+        { 5700, 0.328047774008889, 0.337173188181098 },\n+        { 5710, 0.327837499219387, 0.3369854409116 },\n+        { 5720, 0.32762805013181, 0.336798190064338 },\n+        { 5730, 0.32741942253296, 0.33661143453595 },\n+        { 5740, 0.327211612234699, 0.336425173218445 },\n+        { 5750, 0.327004615073793, 0.336239404999346 },\n+        { 5760, 0.326798426911756, 0.336054128761828 },\n+        { 5770, 0.326593043634692, 0.335869343384858 },\n+        { 5780, 0.326388461153141, 0.33568504774333 },\n+        { 5790, 0.326184675401921, 0.3355012407082 },\n+        { 5800, 0.325981682339978, 0.335317921146619 },\n+        { 5810, 0.325779477950234, 0.335135087922056 },\n+        { 5820, 0.325578058239428, 0.334952739894432 },\n+        { 5830, 0.325377419237973, 0.334770875920243 },\n+        { 5840, 0.325177556999802, 0.334589494852681 },\n+        { 5850, 0.324978467602219, 0.334408595541759 },\n+        { 5860, 0.324780147145748, 0.334228176834424 },\n+        { 5870, 0.324582591753991, 0.33404823757468 },\n+        { 5880, 0.324385797573479, 0.333868776603699 },\n+        { 5890, 0.324189760773522, 0.333689792759937 },\n+        { 5900, 0.323994477546069, 0.333511284879243 },\n+        { 5910, 0.323799944105563, 0.333333251794967 },\n+        { 5920, 0.323606156688797, 0.33315569233807 },\n+        { 5930, 0.32341311155477, 0.332978605337232 },\n+        { 5940, 0.323220804984549, 0.332801989618949 },\n+        { 5950, 0.323029233281125, 0.33262584400764 },\n+        { 5960, 0.322838392769274, 0.332450167325745 },\n+        { 5970, 0.322648279795422, 0.332274958393826 },\n+        { 5980, 0.322458890727498, 0.332100216030663 },\n+        { 5990, 0.322270221954808, 0.331925939053347 },\n+        { 6000, 0.322082269887888, 0.331752126277376 },\n+        { 6010, 0.321895030958374, 0.331578776516748 },\n+        { 6020, 0.321708501618868, 0.331405888584047 },\n+        { 6030, 0.321522678342801, 0.331233461290538 },\n+        { 6040, 0.3213375576243, 0.331061493446248 },\n+        { 6050, 0.32115313597806, 0.330889983860056 },\n+        { 6060, 0.320969409939206, 0.330718931339777 },\n+        { 6070, 0.320786376063166, 0.330548334692243 },\n+        { 6080, 0.320604030925542, 0.330378192723386 },\n+        { 6090, 0.32042237112198, 0.330208504238316 },\n+        { 6100, 0.32024139326804, 0.330039268041404 },\n+        { 6110, 0.320061093999071, 0.329870482936352 },\n+        { 6120, 0.319881469970083, 0.329702147726276 },\n+        { 6130, 0.319702517855622, 0.329534261213777 },\n+        { 6140, 0.319524234349642, 0.329366822201013 },\n+        { 6150, 0.319346616165388, 0.329199829489774 },\n+        { 6160, 0.319169660035263, 0.32903328188155 },\n+        { 6170, 0.318993362710712, 0.328867178177603 },\n+        { 6180, 0.3188177209621, 0.328701517179031 },\n+        { 6190, 0.318642731578585, 0.32853629768684 },\n+        { 6200, 0.318468391368004, 0.328371518502004 },\n+        { 6210, 0.318294697156752, 0.328207178425535 },\n+        { 6220, 0.31812164578966, 0.328043276258542 },\n+        { 6230, 0.31794923412988, 0.327879810802294 },\n+        { 6240, 0.317777459058767, 0.327716780858286 },\n+        { 6250, 0.317606317475763, 0.32755418522829 },\n+        { 6260, 0.317435806298278, 0.32739202271442 },\n+        { 6270, 0.317265922461579, 0.327230292119189 },\n+        { 6280, 0.317096662918675, 0.327068992245565 },\n+        { 6290, 0.316928024640201, 0.326908121897025 },\n+        { 6300, 0.316760004614306, 0.326747679877612 },\n+        { 6310, 0.316592599846543, 0.326587664991987 },\n+        { 6320, 0.316425807359756, 0.326428076045483 },\n+        { 6330, 0.316259624193968, 0.326268911844154 },\n+        { 6340, 0.316094047406274, 0.326110171194829 },\n+        { 6350, 0.315929074070729, 0.325951852905159 },\n+        { 6360, 0.315764701278241, 0.325793955783666 },\n+        { 6370, 0.315600926136464, 0.325636478639792 },\n+        { 6380, 0.315437745769688, 0.325479420283945 },\n+        { 6390, 0.315275157318735, 0.325322779527545 },\n+        { 6400, 0.315113157940854, 0.325166555183068 },\n+        { 6410, 0.314951744809611, 0.325010746064094 },\n+        { 6420, 0.314790915114793, 0.324855350985344 },\n+        { 6430, 0.314630666062295, 0.324700368762729 },\n+        { 6440, 0.314470994874025, 0.324545798213387 },\n+        { 6450, 0.314311898787797, 0.324391638155726 },\n+        { 6460, 0.314153375057231, 0.324237887409465 },\n+        { 6470, 0.31399542095165, 0.324084544795669 },\n+        { 6480, 0.313838033755984, 0.323931609136792 },\n+        { 6490, 0.313681210770667, 0.323779079256713 },\n+        { 6500, 0.313524949311538, 0.323626953980771 },\n+        { 6510, 0.313369246709745, 0.323475232135805 },\n+        { 6520, 0.313214100311644, 0.323323912550187 },\n+        { 6530, 0.313059507478705, 0.323172994053855 },\n+        { 6540, 0.312905465587415, 0.323022475478352 },\n+        //@formatter:on\n+    };\n+\n+    /**\n+     * Search the 'KELVIN_TO_XY_LOOKUP_TABLE' for the XY entry closest to the given colour temperature.\n+     * Uses a recursive 'QuickSearch' algorithm.\n+     * \n+     * @param kelvin the colour temperature in K to find\n+     * @param min the first index in the lookup table\n+     * @param max the last index in the lookup table\n+     * @return an array with the found CIE colour XY values\n+     * @throws IndexOutOfBoundsException if the colour temperature is out of range 'min' .. 'max'\n+     */\n+    private static double[] kelvinToXY(double kelvin, int min, int max) throws IndexOutOfBoundsException {\n+        if (min < 0 || max < min || max >= KELVIN_TO_XY_LOOKUP_TABLE.length) {\n+            throw new IndexOutOfBoundsException(\"kelvinToXY() 'min' or 'max' index out of bounds\");\n+        }\n+        int mid = (min + max) / 2;\n+        double delta = kelvin - KELVIN_TO_XY_LOOKUP_TABLE[mid][0];\n+        if (delta >= 10) {\n+            return kelvinToXY(kelvin, mid + 1, max);\n+        }\n+        if (delta <= -10) {\n+            return kelvinToXY(kelvin, min, mid - 1);\n+        }\n+        return new double[] { KELVIN_TO_XY_LOOKUP_TABLE[mid][1], KELVIN_TO_XY_LOOKUP_TABLE[mid][2] };\n+    }\n+\n+    /**\n+     * Convert a colour temperature in Kelvin to a point in the CIE XY colour space.\n+     * Uses a lookup table as described <a href=\n+     * \"https://www.waveformlighting.com/tech/calculate-cie-1931-xy-coordinates-from-cct\">here</a>.\n+     * \n+     * @param kelvin the colour temperature in K to be converted\n+     * @return an array with the found CIE colour XY values\n+     * @throws IndexOutOfBoundsException if the colour temperature is out of range 2000K .. 6500K\n+     */\n+    public static double[] kelvinToXY(double kelvin) throws IndexOutOfBoundsException {\n+        int indexMax = KELVIN_TO_XY_LOOKUP_TABLE.length - 1;\n+        double kelvinMin = KELVIN_TO_XY_LOOKUP_TABLE[0][0];\n+        double kelvinMax = KELVIN_TO_XY_LOOKUP_TABLE[indexMax][0];\n+        if (kelvin < kelvinMin || kelvin > kelvinMax) {\n+            throw new IndexOutOfBoundsException(\n+                    String.format(\"kelvinToXY() %.0f K out of range %.0f K .. %.0f K\", kelvin, kelvinMin, kelvinMax));\n+        }\n+        return kelvinToXY(kelvin, 0, indexMax);\n+    }\n+\n+    /**\n+     * Convert a point in the CIE XY colour space to a colour temperature in Kelvin.\n+     * Uses McCamy's approximation as described <a href=\n+     * \"https://www.waveformlighting.com/tech/calculate-color-temperature-cct-from-cie-1931-xy-coordinates\">here</a>.\n+     * \n+     * @param xy an array with the CIE colour XY values to be converted\n+     * @return the colour temperature in K\n+     * @throws IndexOutOfBoundsException if the wrong number of arguments is provided\n+     */\n+    public static double xyToKelvin(double[] xy) {\n+        if (xy.length != 2) {\n+            throw new IllegalArgumentException(\"xyToKelvin() requires 2 arguments\");\n+        }\n+        double n = (xy[0] - 0.3320) / (0.1858 - xy[1]);\n+        return (437 * Math.pow(n, 3)) + (3601 * Math.pow(n, 2)) + (6861 * n) + 5517;\n+    }\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java\nindex 62e06e25cfa..881dca54e74 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java\n@@ -16,6 +16,7 @@\n import static org.hamcrest.Matchers.is;\n import static org.hamcrest.Matchers.lessThan;\n import static org.hamcrest.Matchers.lessThanOrEqualTo;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -641,4 +642,22 @@ public void rgbwToHsb2hsbToRgbw(double[] rgbw) {\n                             rgbw2[3].doubleValue() / 100, e.getMessage()));\n         }\n     }\n+\n+    /**\n+     * Test conversion between colour temperature in Kelvin and points on the colour\n+     * temperature locus in the CIE XY colour space\n+     */\n+    @Test\n+    void testKelvinXyConversion() {\n+        // test minimum and maximum limits 500..153 Mirek i.e. 2000..6536 Kelvin\n+        assertThrows(IndexOutOfBoundsException.class, () -> ColorUtil.kelvinToXY(1000000 / 501));\n+        assertDoesNotThrow(() -> ColorUtil.kelvinToXY(1000000 / 500));\n+        assertDoesNotThrow(() -> ColorUtil.kelvinToXY(1000000 / 153));\n+        assertThrows(IndexOutOfBoundsException.class, () -> ColorUtil.kelvinToXY(1000000 / 152));\n+\n+        // test round trips K => XY => K\n+        for (double kelvin = 2000; kelvin <= 6536; kelvin += 5) {\n+            assertEquals(kelvin, ColorUtil.xyToKelvin(ColorUtil.kelvinToXY(kelvin)), 15);\n+        }\n+    }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4363",
    "pr_id": 4363,
    "issue_id": 4359,
    "repo": "openhab/openhab-core",
    "problem_statement": "PersistenceExtensions ignores item persistence aliases\n## Expected Behavior\r\n\r\n`PersistenceExtensions.lastUpdate(item)` should work for any supplied item, even if aliased\r\n\r\n## Current Behavior\r\n\r\nAs code directly reaches into persistence services using a query filter, it bypasses any alias configuration, so if the item has an alias then the filter misses it as it uses the item name directly.\r\n\r\n## Possible Solution\r\nApply alias to the filter prior to executing it.",
    "issue_word_count": 67,
    "test_files_count": 3,
    "non_test_files_count": 14,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java",
      "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java",
      "bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/Persistence.xtext",
      "bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/internal/PersistenceModelManager.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/FilterCriteria.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/ModifiablePersistenceService.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/PersistenceItemConfiguration.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/QueryablePersistenceService.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceItemConfigurationDTO.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceServiceConfigurationDTO.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfiguration.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationDTOMapper.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java",
      "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/chart/defaultchartprovider/DefaultChartProvider.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java"
    ],
    "base_commit": "e41db78804fa92f9deb2e7ab10df4d9af76c7840",
    "head_commit": "bb50b92fdbe13b4b939fe66f250249a52a4d7a6e",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4363",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4363",
    "dockerfile": "",
    "pr_merged_at": "2025-02-18T17:30:49.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java\nindex 7cb4f68e4a3..de683d44403 100644\n--- a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java\n+++ b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java\n@@ -16,9 +16,13 @@\n import java.time.LocalDateTime;\n import java.time.ZonedDateTime;\n import java.util.ArrayList;\n+import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n \n import javax.annotation.security.RolesAllowed;\n import javax.ws.rs.Consumes;\n@@ -104,6 +108,7 @@\n  * @author Lyubomir Papazov - Change java.util.Date references to be of type java.time.ZonedDateTime\n  * @author Markus Rathgeb - Migrated to JAX-RS Whiteboard Specification\n  * @author Wouter Born - Migrated to OpenAPI annotations\n+ * @author Mark Herwege - Implement aliases\n  */\n @Component\n @JaxrsResource\n@@ -181,9 +186,10 @@ public Response httpGetPersistenceServiceConfiguration(@Context HttpHeaders head\n             PersistenceService service = persistenceServiceRegistry.get(serviceId);\n             if (service != null) {\n                 List<PersistenceStrategy> strategies = service.getDefaultStrategies();\n-                List<PersistenceItemConfiguration> configs = List.of(\n-                        new PersistenceItemConfiguration(List.of(new PersistenceAllConfig()), null, strategies, null));\n-                configuration = new PersistenceServiceConfiguration(serviceId, configs, strategies, strategies,\n+                List<PersistenceItemConfiguration> configs = List\n+                        .of(new PersistenceItemConfiguration(List.of(new PersistenceAllConfig()), strategies, null));\n+                Map<String, String> aliases = Map.of();\n+                configuration = new PersistenceServiceConfiguration(serviceId, configs, aliases, strategies, strategies,\n                         List.of());\n                 editable = true;\n             }\n@@ -368,6 +374,9 @@ private Response getItemHistoryDTO(@Nullable String serviceId, String itemName,\n         // If serviceId is null, then use the default service\n         PersistenceService service;\n         String effectiveServiceId = serviceId != null ? serviceId : persistenceServiceRegistry.getDefaultId();\n+        if (effectiveServiceId == null) {\n+            return null;\n+        }\n         service = persistenceServiceRegistry.get(effectiveServiceId);\n \n         if (service == null) {\n@@ -416,6 +425,8 @@ private Response getItemHistoryDTO(@Nullable String serviceId, String itemName,\n \n         ItemHistoryDTO dto = new ItemHistoryDTO();\n         dto.name = itemName;\n+        PersistenceServiceConfiguration config = persistenceServiceConfigurationRegistry.get(effectiveServiceId);\n+        String alias = config != null ? config.getAliases().get(itemName) : null;\n \n         // If \"boundary\" is true then we want to get one value before and after the requested period\n         // This is necessary for values that don't change often otherwise data will start after the start of the graph\n@@ -427,7 +438,7 @@ private Response getItemHistoryDTO(@Nullable String serviceId, String itemName,\n             filterBeforeStart.setEndDate(dateTimeBegin);\n             filterBeforeStart.setPageSize(1);\n             filterBeforeStart.setOrdering(Ordering.DESCENDING);\n-            result = qService.query(filterBeforeStart);\n+            result = qService.query(filterBeforeStart, alias);\n             if (result.iterator().hasNext()) {\n                 dto.addData(dateTimeBegin.toInstant().toEpochMilli(), result.iterator().next().getState());\n                 quantity++;\n@@ -446,7 +457,7 @@ private Response getItemHistoryDTO(@Nullable String serviceId, String itemName,\n         filter.setBeginDate(dateTimeBegin);\n         filter.setEndDate(dateTimeEnd);\n         filter.setOrdering(Ordering.ASCENDING);\n-        result = qService.query(filter);\n+        result = qService.query(filter, alias);\n         Iterator<HistoricItem> it = result.iterator();\n \n         // Iterate through the data\n@@ -478,7 +489,7 @@ private Response getItemHistoryDTO(@Nullable String serviceId, String itemName,\n             filterAfterEnd.setBeginDate(dateTimeEnd);\n             filterAfterEnd.setPageSize(1);\n             filterAfterEnd.setOrdering(Ordering.ASCENDING);\n-            result = qService.query(filterAfterEnd);\n+            result = qService.query(filterAfterEnd, alias);\n             if (result.iterator().hasNext()) {\n                 dto.addData(dateTimeEnd.toInstant().toEpochMilli(), result.iterator().next().getState());\n                 quantity++;\n@@ -544,26 +555,60 @@ private List<PersistenceServiceDTO> getPersistenceServiceList(Locale locale) {\n     private Response getServiceItemList(@Nullable String serviceId) {\n         // If serviceId is null, then use the default service\n         PersistenceService service;\n-        if (serviceId == null) {\n-            service = persistenceServiceRegistry.getDefault();\n-        } else {\n-            service = persistenceServiceRegistry.get(serviceId);\n+        String effectiveServiceId = serviceId != null ? serviceId : persistenceServiceRegistry.getDefaultId();\n+        if (effectiveServiceId == null) {\n+            logger.debug(\"Persistence service not found '{}'.\", effectiveServiceId);\n+            return JSONResponse.createErrorResponse(Status.BAD_REQUEST,\n+                    \"Persistence service not found: \" + effectiveServiceId);\n         }\n+        service = persistenceServiceRegistry.get(effectiveServiceId);\n \n         if (service == null) {\n-            logger.debug(\"Persistence service not found '{}'.\", serviceId);\n-            return JSONResponse.createErrorResponse(Status.BAD_REQUEST, \"Persistence service not found: \" + serviceId);\n+            logger.debug(\"Persistence service not found '{}'.\", effectiveServiceId);\n+            return JSONResponse.createErrorResponse(Status.BAD_REQUEST,\n+                    \"Persistence service not found: \" + effectiveServiceId);\n         }\n \n         if (!(service instanceof QueryablePersistenceService)) {\n-            logger.debug(\"Persistence service not queryable '{}'.\", serviceId);\n+            logger.debug(\"Persistence service not queryable '{}'.\", effectiveServiceId);\n             return JSONResponse.createErrorResponse(Status.BAD_REQUEST,\n-                    \"Persistence service not queryable: \" + serviceId);\n+                    \"Persistence service not queryable: \" + effectiveServiceId);\n         }\n \n         QueryablePersistenceService qService = (QueryablePersistenceService) service;\n \n-        return JSONResponse.createResponse(Status.OK, qService.getItemInfo(), \"\");\n+        PersistenceServiceConfiguration config = persistenceServiceConfigurationRegistry.get(effectiveServiceId);\n+        Map<String, String> aliases = config != null ? config.getAliases() : Map.of();\n+        Set<PersistenceItemInfo> itemInfo = qService.getItemInfo().stream().map(info -> {\n+            String alias = aliases.get(info.getName());\n+            if (alias != null) {\n+                return new PersistenceItemInfo() {\n+\n+                    @Override\n+                    public String getName() {\n+                        return alias;\n+                    }\n+\n+                    @Override\n+                    public @Nullable Integer getCount() {\n+                        return info.getCount();\n+                    }\n+\n+                    @Override\n+                    public @Nullable Date getEarliest() {\n+                        return info.getEarliest();\n+                    }\n+\n+                    @Override\n+                    public @Nullable Date getLatest() {\n+                        return info.getLatest();\n+                    }\n+                };\n+            } else {\n+                return info;\n+            }\n+        }).collect(Collectors.toSet());\n+        return JSONResponse.createResponse(Status.OK, itemInfo, \"\");\n     }\n \n     private Response deletePersistenceItemData(@Nullable String serviceId, String itemName, @Nullable String timeBegin,\n@@ -601,13 +646,15 @@ private Response deletePersistenceItemData(@Nullable String serviceId, String it\n         // This is necessary for values that don't change often otherwise data will start after the start of the graph\n         // (or not at all if there's no change during the graph period)\n         FilterCriteria filter = new FilterCriteria();\n+        PersistenceServiceConfiguration config = persistenceServiceConfigurationRegistry.get(serviceId);\n+        String alias = config != null ? config.getAliases().get(itemName) : null;\n         filter.setItemName(itemName);\n         filter.setBeginDate(dateTimeBegin);\n         filter.setEndDate(dateTimeEnd);\n \n         ModifiablePersistenceService mService = (ModifiablePersistenceService) service;\n         try {\n-            mService.remove(filter);\n+            mService.remove(filter, alias);\n         } catch (IllegalArgumentException e) {\n             return JSONResponse.createErrorResponse(Status.BAD_REQUEST, \"Invalid filter parameters.\");\n         }\n@@ -620,7 +667,7 @@ private Response putItemState(@Nullable String serviceId, String itemName, Strin\n         String effectiveServiceId = serviceId != null ? serviceId : persistenceServiceRegistry.getDefaultId();\n \n         PersistenceService service = persistenceServiceRegistry.get(effectiveServiceId);\n-        if (service == null) {\n+        if (effectiveServiceId == null || service == null) {\n             logger.warn(\"Persistence service not found '{}'.\", effectiveServiceId);\n             return JSONResponse.createErrorResponse(Status.BAD_REQUEST,\n                     \"Persistence service not found: \" + effectiveServiceId);\n@@ -658,7 +705,9 @@ private Response putItemState(@Nullable String serviceId, String itemName, Strin\n         }\n \n         ModifiablePersistenceService mService = (ModifiablePersistenceService) service;\n-        mService.store(item, dateTime, state);\n+        PersistenceServiceConfiguration config = persistenceServiceConfigurationRegistry.get(effectiveServiceId);\n+        String alias = config != null ? config.getAliases().get(itemName) : null;\n+        mService.store(item, dateTime, state, alias);\n \n         persistenceManager.handleExternalPersistenceDataChange(mService, item);\n \n\ndiff --git a/bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/Persistence.xtext b/bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/Persistence.xtext\nindex a1513a44b70..f46d46c6496 100644\n--- a/bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/Persistence.xtext\n+++ b/bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/Persistence.xtext\n@@ -11,6 +11,7 @@ PersistenceModel:\n \t'}'\n \t('Filters' '{' filters+=Filter* '}')?\n \t('Items' '{' configs+=PersistenceConfiguration* '}')?\n+\t('Aliases' '{' aliases+=AliasConfiguration* '}')?\n ;\n \n Strategy:\n@@ -57,7 +58,7 @@ NotIncludeFilter:\n \n PersistenceConfiguration:\n \titems+=(AllConfig | ItemConfig | GroupConfig | ItemExcludeConfig | GroupExcludeConfig)\n-\t   (',' items+=(AllConfig | ItemConfig | GroupConfig | ItemExcludeConfig | GroupExcludeConfig))* ('->' alias=STRING)? \n+\t   (',' items+=(AllConfig | ItemConfig | GroupConfig | ItemExcludeConfig | GroupExcludeConfig))* \n \t((':' ('strategy' '=' strategies+=[Strategy|ID] (',' strategies+=[Strategy|ID])*)? \n \t\t ('filter' '=' filters+=[Filter|ID] (',' filters+=[Filter|ID])*)?) \n \t\t| ';')\n@@ -84,6 +85,10 @@ GroupExcludeConfig:\n     '!' groupExclude=ID '*'\n ;\n \n+AliasConfiguration:\n+    item=ID '->' alias=(ID|STRING)\n+;\n+\n DECIMAL returns ecore::EBigDecimal :\n \t'-'? INT ('.' INT)?\n ;\n\ndiff --git a/bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/internal/PersistenceModelManager.java b/bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/internal/PersistenceModelManager.java\nindex 9ee3a8f342c..40ac2980ec0 100644\n--- a/bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/internal/PersistenceModelManager.java\n+++ b/bundles/org.openhab.core.model.persistence/src/org/openhab/core/model/persistence/internal/PersistenceModelManager.java\n@@ -13,6 +13,7 @@\n package org.openhab.core.model.persistence.internal;\n \n import java.util.Collection;\n+import java.util.HashMap;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n@@ -24,6 +25,7 @@\n import org.openhab.core.model.core.EventType;\n import org.openhab.core.model.core.ModelRepository;\n import org.openhab.core.model.core.ModelRepositoryChangeListener;\n+import org.openhab.core.model.persistence.persistence.AliasConfiguration;\n import org.openhab.core.model.persistence.persistence.AllConfig;\n import org.openhab.core.model.persistence.persistence.CronStrategy;\n import org.openhab.core.model.persistence.persistence.EqualsFilter;\n@@ -71,6 +73,7 @@\n  * @author Kai Kreuzer - Initial contribution\n  * @author Markus Rathgeb - Move non-model logic to core.persistence\n  * @author Jan N. Klug - Refactored to {@link PersistenceServiceConfigurationProvider}\n+ * @author Mark Herwege - Separate alias handling\n  */\n @Component(immediate = true, service = PersistenceServiceConfigurationProvider.class)\n @NonNullByDefault\n@@ -112,8 +115,9 @@ public void modelChanged(String modelName, EventType type) {\n \n                 if (model != null) {\n                     PersistenceServiceConfiguration newConfiguration = new PersistenceServiceConfiguration(serviceName,\n-                            mapConfigs(model.getConfigs()), mapStrategies(model.getDefaults()),\n-                            mapStrategies(model.getStrategies()), mapFilters(model.getFilters()));\n+                            mapConfigs(model.getConfigs()), mapAliases(model.getAliases()),\n+                            mapStrategies(model.getDefaults()), mapStrategies(model.getStrategies()),\n+                            mapFilters(model.getFilters()));\n                     PersistenceServiceConfiguration oldConfiguration = configurations.put(serviceName,\n                             newConfiguration);\n                     if (oldConfiguration == null) {\n@@ -167,10 +171,18 @@ private PersistenceItemConfiguration mapConfig(PersistenceConfiguration config)\n                 items.add(new PersistenceItemExcludeConfig(itemExcludeConfig.getItemExclude()));\n             }\n         }\n-        return new PersistenceItemConfiguration(items, config.getAlias(), mapStrategies(config.getStrategies()),\n+        return new PersistenceItemConfiguration(items, mapStrategies(config.getStrategies()),\n                 mapFilters(config.getFilters()));\n     }\n \n+    private Map<String, String> mapAliases(List<AliasConfiguration> aliases) {\n+        final Map<String, String> map = new HashMap<>();\n+        for (final AliasConfiguration alias : aliases) {\n+            map.put(alias.getItem(), alias.getAlias());\n+        }\n+        return map;\n+    }\n+\n     private List<PersistenceStrategy> mapStrategies(List<Strategy> strategies) {\n         final List<PersistenceStrategy> lst = new LinkedList<>();\n         for (final Strategy strategy : strategies) {\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/FilterCriteria.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/FilterCriteria.java\nindex 15f61da8280..5b6cda3acb2 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/FilterCriteria.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/FilterCriteria.java\n@@ -35,8 +35,8 @@\n  * a filter.\n  *\n  * @author Kai Kreuzer - Initial contribution\n- * @author Lyubomir Papazov - Deprecate methods using java.util and add methods\n- *         that use Java8's ZonedDateTime\n+ * @author Lyubomir Papazov - Deprecate methods using java.util and add methods that use Java8's ZonedDateTime\n+ * @author Mark Herwege - Copy constructor\n  */\n @NonNullByDefault\n public class FilterCriteria {\n@@ -91,6 +91,20 @@ public enum Ordering {\n     /** Filter result to only contain entries that evaluate to true with the given operator and state */\n     private @Nullable State state;\n \n+    public FilterCriteria() {\n+    }\n+\n+    public FilterCriteria(FilterCriteria filter) {\n+        this.itemName = filter.itemName;\n+        this.beginDate = filter.beginDate;\n+        this.endDate = filter.endDate;\n+        this.pageNumber = filter.pageNumber;\n+        this.pageSize = filter.pageSize;\n+        this.operator = filter.operator;\n+        this.ordering = filter.ordering;\n+        this.state = filter.state;\n+    }\n+\n     public @Nullable String getItemName() {\n         return itemName;\n     }\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/ModifiablePersistenceService.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/ModifiablePersistenceService.java\nindex 5ebee260fab..1ed32db967c 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/ModifiablePersistenceService.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/ModifiablePersistenceService.java\n@@ -25,6 +25,7 @@\n  * and then periodically provide it to the server to be accommodated.\n  *\n  * @author Chris Jackson - Initial contribution\n+ * @author Mark Herwege - Implement aliases\n  */\n @NonNullByDefault\n public interface ModifiablePersistenceService extends QueryablePersistenceService {\n@@ -70,10 +71,35 @@ public interface ModifiablePersistenceService extends QueryablePersistenceServic\n      * Removes data associated with an item from a persistence service.\n      * If all data is removed for the specified item, the persistence service should free any resources associated with\n      * the item (e.g. remove any tables or delete files from the storage).\n+     * If the persistence service implementing this method supports aliases for item names, the default implementation\n+     * of {@link #remove(FilterCriteria, String)} should be overriden as well.\n      *\n      * @param filter the filter to apply to the data removal. ItemName can not be null.\n      * @return true if the query executed successfully\n      * @throws IllegalArgumentException if item name is null.\n      */\n     boolean remove(FilterCriteria filter) throws IllegalArgumentException;\n+\n+    /**\n+     * Removes data associated with an item from a persistence service.\n+     * If all data is removed for the specified item, the persistence service should free any resources associated with\n+     * the item (e.g. remove any tables or delete files from the storage).\n+     * Persistence services supporting aliases, and relying on lookups in the item registry, should override the default\n+     * implementation from this interface.\n+     *\n+     * @param filter the filter to apply to the data removal. ItemName can not be null.\n+     * @param alias for item name in database\n+     * @return true if the query executed successfully\n+     * @throws IllegalArgumentException if item name is null.\n+     */\n+    default boolean remove(FilterCriteria filter, @Nullable String alias) throws IllegalArgumentException {\n+        // Default implementation changes the filter to have the alias as itemName.\n+        // This gives correct results as long as the persistence service does not rely on a lookup in the item registry\n+        // (in which case the item will not be found).\n+        if (alias != null) {\n+            FilterCriteria aliasFilter = new FilterCriteria(filter).setItemName(alias);\n+            return remove(aliasFilter);\n+        }\n+        return remove(filter);\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/PersistenceItemConfiguration.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/PersistenceItemConfiguration.java\nindex b24fa553473..43e6fb02def 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/PersistenceItemConfiguration.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/PersistenceItemConfiguration.java\n@@ -25,15 +25,15 @@\n  * This class holds the configuration of a persistence strategy for specific items.\n  *\n  * @author Markus Rathgeb - Initial contribution\n+ * @author Mark Herwege - Extract alias configuration\n  */\n @NonNullByDefault\n-public record PersistenceItemConfiguration(List<PersistenceConfig> items, @Nullable String alias,\n-        List<PersistenceStrategy> strategies, List<PersistenceFilter> filters) {\n+public record PersistenceItemConfiguration(List<PersistenceConfig> items, List<PersistenceStrategy> strategies,\n+        List<PersistenceFilter> filters) {\n \n-    public PersistenceItemConfiguration(final List<PersistenceConfig> items, @Nullable final String alias,\n+    public PersistenceItemConfiguration(final List<PersistenceConfig> items,\n             @Nullable final List<PersistenceStrategy> strategies, @Nullable final List<PersistenceFilter> filters) {\n         this.items = items;\n-        this.alias = alias;\n         this.strategies = Objects.requireNonNullElse(strategies, List.of());\n         this.filters = Objects.requireNonNullElse(filters, List.of());\n     }\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/QueryablePersistenceService.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/QueryablePersistenceService.java\nindex 8fb63e31f2c..53f5a24e42e 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/QueryablePersistenceService.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/QueryablePersistenceService.java\n@@ -15,6 +15,8 @@\n import java.time.ZonedDateTime;\n import java.util.Iterator;\n import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -29,23 +31,68 @@\n  * @author Kai Kreuzer - Initial contribution\n  * @author Chris Jackson - Added getItems method\n  * @author Mark Herwege - Added methods to retrieve lastUpdate, lastChange and lastState from persistence\n+ * @author Mark Herwege - Implement aliases\n  */\n @NonNullByDefault\n public interface QueryablePersistenceService extends PersistenceService {\n \n     /**\n      * Queries the {@link PersistenceService} for historic data with a given {@link FilterCriteria}.\n+     * If the persistence service implementing this class supports using aliases for item names, the default\n+     * implementation of {@link #query(FilterCriteria, String)} should be overridden as well.\n      *\n      * @param filter the filter to apply to the query\n      * @return a time series of items\n      */\n     Iterable<HistoricItem> query(FilterCriteria filter);\n \n+    /**\n+     * Queries the {@link PersistenceService} for historic data with a given {@link FilterCriteria}.\n+     * If the persistence service implementing this interface supports aliases and relies on item registry lookups, the\n+     * default implementation should be overridden to query the database with the aliased name.\n+     *\n+     * @param filter the filter to apply to the query\n+     * @param alias for item name in database\n+     * @return a time series of items\n+     */\n+    default Iterable<HistoricItem> query(FilterCriteria filter, @Nullable String alias) {\n+        // Default implementation changes the filter to have the alias as itemName and sets it back in the returned\n+        // result.\n+        // This gives correct results as long as the persistence service does not rely on a lookup in the item registry\n+        // (in which case the item will not be found).\n+        String itemName = filter.getItemName();\n+        if (itemName != null && alias != null) {\n+            FilterCriteria aliasFilter = new FilterCriteria(filter).setItemName(alias);\n+            return StreamSupport.stream(query(aliasFilter).spliterator(), false).map(hi -> new HistoricItem() {\n+\n+                @Override\n+                public ZonedDateTime getTimestamp() {\n+                    return hi.getTimestamp();\n+                }\n+\n+                @Override\n+                public State getState() {\n+                    return hi.getState();\n+                }\n+\n+                @Override\n+                public String getName() {\n+                    return itemName;\n+                }\n+            }).collect(Collectors.toList());\n+        }\n+        return query(filter);\n+    }\n+\n     /**\n      * Returns a set of {@link PersistenceItemInfo} about items that are stored in the persistence service. This allows\n      * the persistence service to return information about items that are no long available as an\n-     * {@link org.openhab.core.items.Item} in\n-     * openHAB. If it is not possible to retrieve the information an empty set should be returned.\n+     * {@link org.openhab.core.items.Item} in openHAB. If it is not possible to retrieve the information an empty set\n+     * should be returned.\n+     *\n+     * Note that implementations for method callers that this method may return an alias for an existing item if the\n+     * database does not store the mapping between item name and alias or the reverse mapping is not implemented in the\n+     * persistence service.\n      *\n      * @return a set of information about the persisted items\n      */\n@@ -58,9 +105,12 @@ public interface QueryablePersistenceService extends PersistenceService {\n      * persisted state. Persistence services can override this default implementation with a more specific or efficient\n      * algorithm.\n      *\n+     * @param itemName name of item\n+     * @param alias alias of item\n+     *\n      * @return a {@link PersistedItem} or null if the item has not been persisted\n      */\n-    default @Nullable PersistedItem persistedItem(String itemName) {\n+    default @Nullable PersistedItem persistedItem(String itemName, @Nullable String alias) {\n         State currentState = UnDefType.NULL;\n         State previousState = null;\n         ZonedDateTime lastUpdate = null;\n@@ -69,7 +119,7 @@ public interface QueryablePersistenceService extends PersistenceService {\n         int pageNumber = 0;\n         FilterCriteria filter = new FilterCriteria().setItemName(itemName).setEndDate(ZonedDateTime.now())\n                 .setOrdering(Ordering.DESCENDING).setPageSize(1000).setPageNumber(pageNumber);\n-        Iterable<HistoricItem> items = query(filter);\n+        Iterable<HistoricItem> items = query(filter, alias);\n         while (items != null) {\n             Iterator<HistoricItem> it = items.iterator();\n             int itemCount = 0;\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceItemConfigurationDTO.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceItemConfigurationDTO.java\nindex 2cbe267eccb..8e956ed778f 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceItemConfigurationDTO.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceItemConfigurationDTO.java\n@@ -16,7 +16,6 @@\n import java.util.List;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n \n /**\n  * The {@link org.openhab.core.persistence.dto.PersistenceItemConfigurationDTO} is used for transferring persistence\n@@ -29,5 +28,4 @@ public class PersistenceItemConfigurationDTO {\n     public Collection<String> items = List.of();\n     public Collection<String> strategies = List.of();\n     public Collection<String> filters = List.of();\n-    public @Nullable String alias;\n }\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceServiceConfigurationDTO.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceServiceConfigurationDTO.java\nindex 3460b0583a5..001f75ef549 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceServiceConfigurationDTO.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/dto/PersistenceServiceConfigurationDTO.java\n@@ -14,6 +14,7 @@\n \n import java.util.Collection;\n import java.util.List;\n+import java.util.Map;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n \n@@ -26,6 +27,7 @@\n public class PersistenceServiceConfigurationDTO {\n     public String serviceId = \"\";\n     public Collection<PersistenceItemConfigurationDTO> configs = List.of();\n+    public Map<String, String> aliases = Map.of();\n     public Collection<String> defaults = List.of();\n     public Collection<PersistenceCronStrategyDTO> cronStrategies = List.of();\n     public Collection<PersistenceFilterDTO> thresholdFilters = List.of();\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\nindex 1fc56661a3c..e4286238b82 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n@@ -41,6 +41,8 @@\n import org.openhab.core.persistence.PersistenceService;\n import org.openhab.core.persistence.PersistenceServiceRegistry;\n import org.openhab.core.persistence.QueryablePersistenceService;\n+import org.openhab.core.persistence.registry.PersistenceServiceConfiguration;\n+import org.openhab.core.persistence.registry.PersistenceServiceConfigurationRegistry;\n import org.openhab.core.types.State;\n import org.openhab.core.types.TimeSeries;\n import org.openhab.core.types.TypeParser;\n@@ -73,12 +75,15 @@\n public class PersistenceExtensions {\n \n     private static @Nullable PersistenceServiceRegistry registry;\n+    private static @Nullable PersistenceServiceConfigurationRegistry configRegistry;\n     private static @Nullable TimeZoneProvider timeZoneProvider;\n \n     @Activate\n     public PersistenceExtensions(@Reference PersistenceServiceRegistry registry,\n+            @Reference PersistenceServiceConfigurationRegistry configRegistry,\n             @Reference TimeZoneProvider timeZoneProvider) {\n         PersistenceExtensions.registry = registry;\n+        PersistenceExtensions.configRegistry = configRegistry;\n         PersistenceExtensions.timeZoneProvider = timeZoneProvider;\n     }\n \n@@ -109,7 +114,7 @@ private static void internalPersist(Item item, @Nullable String serviceId) {\n         }\n         PersistenceService service = getService(effectiveServiceId);\n         if (service != null) {\n-            service.store(item);\n+            service.store(item, getAlias(item, effectiveServiceId));\n             return;\n         }\n         LoggerFactory.getLogger(PersistenceExtensions.class)\n@@ -148,7 +153,7 @@ private static void internalPersist(Item item, ZonedDateTime timestamp, State st\n         }\n         PersistenceService service = getService(effectiveServiceId);\n         if (service instanceof ModifiablePersistenceService modifiableService) {\n-            modifiableService.store(item, timestamp, state);\n+            modifiableService.store(item, timestamp, state, getAlias(item, effectiveServiceId));\n             return;\n         }\n         LoggerFactory.getLogger(PersistenceExtensions.class)\n@@ -226,8 +231,9 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n                 internalRemoveAllStatesBetween(item, timeSeries.getBegin().atZone(timeZone),\n                         timeSeries.getEnd().atZone(timeZone), serviceId);\n             }\n+            String alias = getAlias(item, effectiveServiceId);\n             timeSeries.getStates()\n-                    .forEach(s -> modifiableService.store(item, s.timestamp().atZone(timeZone), s.state()));\n+                    .forEach(s -> modifiableService.store(item, s.timestamp().atZone(timeZone), s.state(), alias));\n             return;\n         }\n         LoggerFactory.getLogger(PersistenceExtensions.class)\n@@ -316,10 +322,11 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         if (service instanceof QueryablePersistenceService qService) {\n             FilterCriteria filter = new FilterCriteria();\n             filter.setEndDate(timestamp);\n+            String alias = getAlias(item, effectiveServiceId);\n             filter.setItemName(item.getName());\n             filter.setPageSize(1);\n             filter.setOrdering(Ordering.DESCENDING);\n-            Iterable<HistoricItem> result = qService.query(filter);\n+            Iterable<HistoricItem> result = qService.query(filter, alias);\n             if (result.iterator().hasNext()) {\n                 return result.iterator().next();\n             }\n@@ -453,6 +460,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         PersistenceService service = getService(effectiveServiceId);\n         if (service instanceof QueryablePersistenceService qService) {\n             FilterCriteria filter = new FilterCriteria();\n+            String alias = getAlias(item, effectiveServiceId);\n             filter.setItemName(item.getName());\n             if (forward) {\n                 filter.setBeginDate(ZonedDateTime.now());\n@@ -465,7 +473,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             int startPage = 0;\n             filter.setPageNumber(startPage);\n \n-            Iterable<HistoricItem> items = qService.query(filter);\n+            Iterable<HistoricItem> items = qService.query(filter, alias);\n             while (items != null) {\n                 Iterator<HistoricItem> itemIterator = items.iterator();\n                 int itemCount = 0;\n@@ -496,7 +504,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n                         }\n                         if (itemCount == filter.getPageSize()) {\n                             filter.setPageNumber(++startPage);\n-                            items = qService.query(filter);\n+                            items = qService.query(filter, alias);\n                         } else {\n                             items = null;\n                         }\n@@ -625,6 +633,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         PersistenceService service = getService(effectiveServiceId);\n         if (service instanceof QueryablePersistenceService qService) {\n             FilterCriteria filter = new FilterCriteria();\n+            String alias = getAlias(item, effectiveServiceId);\n             filter.setItemName(item.getName());\n             if (forward) {\n                 filter.setBeginDate(ZonedDateTime.now());\n@@ -637,7 +646,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             int startPage = 0;\n             filter.setPageNumber(startPage);\n \n-            Iterable<HistoricItem> items = qService.query(filter);\n+            Iterable<HistoricItem> items = qService.query(filter, alias);\n             while (items != null) {\n                 Iterator<HistoricItem> itemIterator = items.iterator();\n                 int itemCount = 0;\n@@ -650,7 +659,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n                 }\n                 if (itemCount == filter.getPageSize()) {\n                     filter.setPageNumber(++startPage);\n-                    items = qService.query(filter);\n+                    items = qService.query(filter, alias);\n                 } else {\n                     items = null;\n                 }\n@@ -2547,10 +2556,11 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             } else {\n                 filter.setEndDate(ZonedDateTime.now());\n             }\n+            String alias = getAlias(item, effectiveServiceId);\n             filter.setItemName(item.getName());\n             filter.setOrdering(Ordering.ASCENDING);\n \n-            return qService.query(filter);\n+            return qService.query(filter, alias);\n         } else {\n             LoggerFactory.getLogger(PersistenceExtensions.class)\n                     .warn(\"There is no queryable persistence service registered with the id '{}'\", effectiveServiceId);\n@@ -2663,10 +2673,11 @@ private static void internalRemoveAllStatesBetween(Item item, @Nullable ZonedDat\n             } else {\n                 filter.setEndDate(ZonedDateTime.now());\n             }\n+            String alias = getAlias(item, effectiveServiceId);\n             filter.setItemName(item.getName());\n             filter.setOrdering(Ordering.ASCENDING);\n \n-            mService.remove(filter);\n+            mService.remove(filter, alias);\n         } else {\n             LoggerFactory.getLogger(PersistenceExtensions.class)\n                     .warn(\"There is no modifiable persistence service registered with the id '{}'\", effectiveServiceId);\n@@ -2743,6 +2754,15 @@ private static void internalRemoveAllStatesBetween(Item item, @Nullable ZonedDat\n         return null;\n     }\n \n+    private static @Nullable String getAlias(Item item, String serviceId) {\n+        PersistenceServiceConfigurationRegistry reg = configRegistry;\n+        if (reg != null) {\n+            PersistenceServiceConfiguration config = reg.get(serviceId);\n+            return config != null ? config.getAliases().get(item.getName()) : null;\n+        }\n+        return null;\n+    }\n+\n     private static @Nullable DecimalType getItemValue(Item item) {\n         Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n         if (baseItem instanceof NumberItem numberItem) {\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java\nindex 653ef2577c1..81f127fc6f0 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java\n@@ -188,7 +188,7 @@ private void handleStateEvent(Item item, boolean changed) {\n                         .filter(itemConfig -> itemConfig.filters().stream().allMatch(filter -> filter.apply(item)))\n                         .forEach(itemConfig -> {\n                             itemConfig.filters().forEach(filter -> filter.persisted(item));\n-                            container.getPersistenceService().store(item, itemConfig.alias());\n+                            container.getPersistenceService().store(item, container.getAlias(item));\n                         }));\n     }\n \n@@ -353,7 +353,7 @@ public void timeSeriesUpdated(Item item, TimeSeries timeSeries) {\n                                 ZonedDateTime end = timeSeries.getEnd().atZone(ZoneId.systemDefault());\n                                 FilterCriteria removeFilter = new FilterCriteria().setItemName(item.getName())\n                                         .setBeginDate(begin).setEndDate(end);\n-                                service.remove(removeFilter);\n+                                service.remove(removeFilter, container.getAlias(item));\n                                 ScheduledCompletableFuture<?> forecastJob = container.forecastJobs.get(item.getName());\n                                 if (forecastJob != null && forecastJob.getScheduledTime().isAfter(begin)\n                                         && forecastJob.getScheduledTime().isBefore(end)) {\n@@ -478,12 +478,17 @@ public Stream<PersistenceItemConfiguration> getMatchingConfigurations(Persistenc\n             }).stream());\n         }\n \n+        public @Nullable String getAlias(Item item) {\n+            return configuration.getAliases().get(item.getName());\n+        }\n+\n         private PersistenceServiceConfiguration getDefaultConfig() {\n             List<PersistenceStrategy> strategies = persistenceService.getDefaultStrategies();\n             List<PersistenceItemConfiguration> configs = List\n-                    .of(new PersistenceItemConfiguration(List.of(new PersistenceAllConfig()), null, strategies, null));\n-            return new PersistenceServiceConfiguration(persistenceService.getId(), configs, strategies, strategies,\n-                    List.of());\n+                    .of(new PersistenceItemConfiguration(List.of(new PersistenceAllConfig()), strategies, null));\n+            Map<String, String> aliases = Map.of();\n+            return new PersistenceServiceConfiguration(persistenceService.getId(), configs, aliases, strategies,\n+                    strategies, List.of());\n         }\n \n         /**\n@@ -550,6 +555,7 @@ public void removeItem(String itemName) {\n \n         private void restoreItemStateIfPossible(Item item) {\n             QueryablePersistenceService queryService = (QueryablePersistenceService) persistenceService;\n+            String alias = getAlias(item);\n \n             PersistedItem persistedItem = safeCaller.create(queryService, QueryablePersistenceService.class)\n                     .onTimeout(\n@@ -558,8 +564,9 @@ private void restoreItemStateIfPossible(Item item) {\n                     .onException(e -> logger.error(\n                             \"Exception occurred while querying persistence service '{}' to restore '{}': {}\",\n                             queryService.getId(), item.getName(), e.getMessage(), e))\n-                    .build().persistedItem(item.getName());\n+                    .build().persistedItem(item.getName(), alias);\n             if (persistedItem == null) {\n+                // in case of an exception or timeout, the safe caller returns null\n                 return;\n             }\n             GenericItem genericItem = (GenericItem) item;\n@@ -590,6 +597,7 @@ public void scheduleNextForecastForItem(String itemName, Instant time, State sta\n         public void scheduleNextPersistedForecastForItem(String itemName) {\n             Item item = itemRegistry.get(itemName);\n             if (item instanceof GenericItem) {\n+                String alias = getAlias(item);\n                 QueryablePersistenceService queryService = (QueryablePersistenceService) persistenceService;\n                 FilterCriteria filter = new FilterCriteria().setItemName(itemName).setBeginDate(ZonedDateTime.now())\n                         .setOrdering(ASCENDING);\n@@ -598,7 +606,7 @@ public void scheduleNextPersistedForecastForItem(String itemName) {\n                                 queryService.getId(), SafeCaller.DEFAULT_TIMEOUT))\n                         .onException(e -> logger.error(\"Exception occurred while querying persistence service '{}': {}\",\n                                 queryService.getId(), e.getMessage(), e))\n-                        .build().query(filter).iterator();\n+                        .build().query(filter, alias).iterator();\n                 while (result.hasNext()) {\n                     HistoricItem next = result.next();\n                     Instant timestamp = next.getInstant();\n@@ -624,7 +632,7 @@ private void persistJob(List<PersistenceItemConfiguration> itemConfigs) {\n                     if (itemConfig.filters().stream().allMatch(filter -> filter.apply(item))) {\n                         long startTime = System.nanoTime();\n                         itemConfig.filters().forEach(filter -> filter.persisted(item));\n-                        persistenceService.store(item, itemConfig.alias());\n+                        persistenceService.store(item, getAlias(item));\n                         logger.trace(\"Storing item '{}' with persistence service '{}' took {}ms\", item.getName(),\n                                 configuration.getUID(), TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime));\n                     }\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfiguration.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfiguration.java\nindex a714a7f2256..90be4693812 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfiguration.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfiguration.java\n@@ -14,6 +14,7 @@\n \n import java.util.Collection;\n import java.util.List;\n+import java.util.Map;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.openhab.core.common.registry.Identifiable;\n@@ -25,20 +26,23 @@\n  * The {@link PersistenceServiceConfiguration} represents the configuration for a persistence service.\n  *\n  * @author Jan N. Klug - Initial contribution\n+ * @author Mark Herwege - Implement aliases\n  */\n @NonNullByDefault\n public class PersistenceServiceConfiguration implements Identifiable<String> {\n     private final String serviceId;\n     private final List<PersistenceItemConfiguration> configs;\n+    private final Map<String, String> aliases;\n     private final List<PersistenceStrategy> defaults;\n     private final List<PersistenceStrategy> strategies;\n     private final List<PersistenceFilter> filters;\n \n     public PersistenceServiceConfiguration(String serviceId, Collection<PersistenceItemConfiguration> configs,\n-            Collection<PersistenceStrategy> defaults, Collection<PersistenceStrategy> strategies,\n-            Collection<PersistenceFilter> filters) {\n+            Map<String, String> aliases, Collection<PersistenceStrategy> defaults,\n+            Collection<PersistenceStrategy> strategies, Collection<PersistenceFilter> filters) {\n         this.serviceId = serviceId;\n         this.configs = List.copyOf(configs);\n+        this.aliases = Map.copyOf(aliases);\n         this.defaults = List.copyOf(defaults);\n         this.strategies = List.copyOf(strategies);\n         this.filters = List.copyOf(filters);\n@@ -58,6 +62,15 @@ public List<PersistenceItemConfiguration> getConfigs() {\n         return configs;\n     }\n \n+    /**\n+     * Get the item aliases.\n+     *\n+     * @return a map of items to aliases\n+     */\n+    public Map<String, String> getAliases() {\n+        return aliases;\n+    }\n+\n     /**\n      * Get the default strategies.\n      *\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationDTOMapper.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationDTOMapper.java\nindex 173bde11c0d..a008b8af66f 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationDTOMapper.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationDTOMapper.java\n@@ -46,6 +46,7 @@\n  * The {@link PersistenceServiceConfigurationDTOMapper} is a utility class to map persistence configurations for storage\n  *\n  * @author Jan N. Klug - Initial contribution\n+ * @author Mark Herwege - Implement aliases\n  */\n @NonNullByDefault\n public class PersistenceServiceConfigurationDTOMapper {\n@@ -60,6 +61,7 @@ public static PersistenceServiceConfigurationDTO map(\n         dto.serviceId = persistenceServiceConfiguration.getUID();\n         dto.configs = persistenceServiceConfiguration.getConfigs().stream()\n                 .map(PersistenceServiceConfigurationDTOMapper::mapPersistenceItemConfig).toList();\n+        dto.aliases = Map.copyOf(persistenceServiceConfiguration.getAliases());\n         dto.defaults = persistenceServiceConfiguration.getDefaults().stream().map(PersistenceStrategy::getName)\n                 .toList();\n         dto.cronStrategies = filterList(persistenceServiceConfiguration.getStrategies(), PersistenceCronStrategy.class,\n@@ -100,10 +102,12 @@ public static PersistenceServiceConfiguration map(PersistenceServiceConfiguratio\n                     .map(str -> stringToPersistenceStrategy(str, strategyMap, dto.serviceId)).toList();\n             List<PersistenceFilter> filters = config.filters.stream()\n                     .map(str -> stringToPersistenceFilter(str, filterMap, dto.serviceId)).toList();\n-            return new PersistenceItemConfiguration(items, config.alias, strategies, filters);\n+            return new PersistenceItemConfiguration(items, strategies, filters);\n         }).toList();\n \n-        return new PersistenceServiceConfiguration(dto.serviceId, configs, defaults, strategyMap.values(),\n+        Map<String, String> aliases = Map.copyOf(dto.aliases);\n+\n+        return new PersistenceServiceConfiguration(dto.serviceId, configs, aliases, defaults, strategyMap.values(),\n                 filterMap.values());\n     }\n \n@@ -171,7 +175,6 @@ private static PersistenceItemConfigurationDTO mapPersistenceItemConfig(Persiste\n                 .toList();\n         itemDto.strategies = config.strategies().stream().map(PersistenceStrategy::getName).toList();\n         itemDto.filters = config.filters().stream().map(PersistenceFilter::getName).toList();\n-        itemDto.alias = config.alias();\n         return itemDto;\n     }\n \n\ndiff --git a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/chart/defaultchartprovider/DefaultChartProvider.java b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/chart/defaultchartprovider/DefaultChartProvider.java\nindex 8208cfb1e48..881cfe582d7 100644\n--- a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/chart/defaultchartprovider/DefaultChartProvider.java\n+++ b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/chart/defaultchartprovider/DefaultChartProvider.java\n@@ -49,6 +49,8 @@\n import org.openhab.core.persistence.PersistenceService;\n import org.openhab.core.persistence.PersistenceServiceRegistry;\n import org.openhab.core.persistence.QueryablePersistenceService;\n+import org.openhab.core.persistence.registry.PersistenceServiceConfiguration;\n+import org.openhab.core.persistence.registry.PersistenceServiceConfigurationRegistry;\n import org.openhab.core.types.State;\n import org.openhab.core.ui.chart.ChartProvider;\n import org.openhab.core.ui.internal.chart.ChartServlet;\n@@ -68,6 +70,7 @@\n  * @author Holger Reichert - Support for themes, DPI, legend hiding\n  * @author Christoph Weitkamp - Consider default persistence service\n  * @author Jan N. Klug - Add y-axis label formatter\n+ * @author Mark Herwege - Implement aliases\n  */\n @NonNullByDefault\n @Component(immediate = true)\n@@ -110,12 +113,15 @@ private LegendPosition getLegendPosition() {\n \n     private final ItemUIRegistry itemUIRegistry;\n     private final PersistenceServiceRegistry persistenceServiceRegistry;\n+    private final PersistenceServiceConfigurationRegistry persistenceServiceConfigurationRegistry;\n \n     @Activate\n     public DefaultChartProvider(final @Reference ItemUIRegistry itemUIRegistry,\n-            final @Reference PersistenceServiceRegistry persistenceServiceRegistry) {\n+            final @Reference PersistenceServiceRegistry persistenceServiceRegistry,\n+            final @Reference PersistenceServiceConfigurationRegistry persistenceServiceConfigurationRegistry) {\n         this.itemUIRegistry = itemUIRegistry;\n         this.persistenceServiceRegistry = persistenceServiceRegistry;\n+        this.persistenceServiceConfigurationRegistry = persistenceServiceConfigurationRegistry;\n \n         if (logger.isDebugEnabled()) {\n             logger.debug(\"Available themes for default chart provider: {}\", String.join(\", \", CHART_THEMES.keySet()));\n@@ -188,8 +194,8 @@ public BufferedImage createChart(@Nullable String serviceId, @Nullable String th\n         // axis\n         styler.setAxisTickLabelsFont(chartTheme.getAxisTickLabelsFont(dpi));\n         styler.setAxisTickLabelsColor(chartTheme.getAxisTickLabelsColor());\n-        styler.setXAxisMin((double) startTime.toInstant().toEpochMilli());\n-        styler.setXAxisMax((double) endTime.toInstant().toEpochMilli());\n+        styler.setXAxisMin(startTime.toInstant().toEpochMilli());\n+        styler.setXAxisMax(endTime.toInstant().toEpochMilli());\n         int yAxisSpacing = Math.max(height / 10, chartTheme.getAxisTickLabelsFont(dpi).getSize());\n         if (yAxisDecimalPattern != null) {\n             styler.setYAxisDecimalPattern(yAxisDecimalPattern);\n@@ -333,10 +339,13 @@ private boolean addItem(XYChart chart, QueryablePersistenceService service, Zone\n         // after the start of the graph (or not at all if there's no change during the graph period)\n         filter = new FilterCriteria();\n         filter.setEndDate(timeBegin);\n-        filter.setItemName(item.getName());\n+        String itemName = item.getName();\n+        PersistenceServiceConfiguration config = persistenceServiceConfigurationRegistry.get(service.getId());\n+        String alias = config != null ? config.getAliases().get(itemName) : null;\n+        filter.setItemName(itemName);\n         filter.setPageSize(1);\n         filter.setOrdering(Ordering.DESCENDING);\n-        result = service.query(filter);\n+        result = service.query(filter, alias);\n         if (result.iterator().hasNext()) {\n             HistoricItem historicItem = result.iterator().next();\n \n@@ -352,7 +361,7 @@ private boolean addItem(XYChart chart, QueryablePersistenceService service, Zone\n         filter.setOrdering(Ordering.ASCENDING);\n \n         // Get the data from the persistence store\n-        result = service.query(filter);\n+        result = service.query(filter, alias);\n \n         // Iterate through the data\n         for (HistoricItem historicItem : result) {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java b/bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java\nindex d22e6a90e4e..da7fb69b41b 100644\n--- a/bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java\n+++ b/bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java\n@@ -17,7 +17,7 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.collection.IsCollectionWithSize.hasSize;\n import static org.junit.jupiter.api.Assertions.*;\n-import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.*;\n import static org.mockito.Mockito.*;\n \n import java.time.ZoneId;\n@@ -58,6 +58,7 @@\n  * Tests for PersistenceItem Restresource\n  *\n  * @author Stefan Triller - Initial contribution\n+ * @author Mark Herwege - Implement aliases\n  */\n @ExtendWith(MockitoExtension.class)\n @MockitoSettings(strictness = Strictness.LENIENT)\n@@ -112,7 +113,7 @@ public String getName() {\n             });\n         }\n \n-        when(pServiceMock.query(any())).thenReturn(items);\n+        when(pServiceMock.query(any(), any())).thenReturn(items);\n \n         when(persistenceServiceRegistryMock.get(PERSISTENCE_SERVICE_ID)).thenReturn(pServiceMock);\n         when(timeZoneProviderMock.getTimeZone()).thenReturn(ZoneId.systemDefault());\n\ndiff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\nindex b7a6df2880e..ecf1745efdc 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n@@ -16,6 +16,7 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.closeTo;\n import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.ArgumentMatchers.anyString;\n import static org.mockito.Mockito.when;\n import static org.openhab.core.persistence.extensions.TestPersistenceService.*;\n \n@@ -52,6 +53,7 @@\n import org.openhab.core.persistence.HistoricItem;\n import org.openhab.core.persistence.PersistenceService;\n import org.openhab.core.persistence.PersistenceServiceRegistry;\n+import org.openhab.core.persistence.registry.PersistenceServiceConfigurationRegistry;\n import org.openhab.core.types.State;\n \n /**\n@@ -64,6 +66,7 @@\n  * @author Mark Herwege - lastChange and nextChange methods\n  * @author Mark Herwege - handle persisted GroupItem with QuantityType\n  * @author Mark Herwege - add median methods\n+ * @author Mark Herwege - Implement aliases\n  */\n @ExtendWith(MockitoExtension.class)\n @MockitoSettings(strictness = Strictness.LENIENT)\n@@ -81,6 +84,8 @@ public class PersistenceExtensionsTest {\n     private @Mock @NonNullByDefault({}) UnitProvider unitProviderMock;\n     private @Mock @NonNullByDefault({}) TimeZoneProvider timeZoneProviderMock;\n \n+    private @Mock @NonNullByDefault({}) PersistenceServiceConfigurationRegistry persistenceServiceConfigurationRegistryMock;\n+\n     private @NonNullByDefault({}) GenericItem numberItem, quantityItem, groupQuantityItem, switchItem;\n \n     @BeforeEach\n@@ -109,6 +114,7 @@ public void setUp() {\n         when(itemRegistryMock.get(TEST_SWITCH)).thenReturn(switchItem);\n         when(itemRegistryMock.get(TEST_GROUP_QUANTITY_NUMBER)).thenReturn(groupQuantityItem);\n \n+        when(persistenceServiceConfigurationRegistryMock.get(anyString())).thenReturn(null);\n         when(timeZoneProviderMock.getTimeZone()).thenReturn(ZoneId.systemDefault());\n \n         new PersistenceExtensions(new PersistenceServiceRegistry() {\n@@ -135,7 +141,7 @@ public Set<PersistenceService> getAll() {\n             public @Nullable PersistenceService get(@Nullable String serviceId) {\n                 return TestPersistenceService.SERVICE_ID.equals(serviceId) ? testPersistenceService : null;\n             }\n-        }, timeZoneProviderMock);\n+        }, persistenceServiceConfigurationRegistryMock, timeZoneProviderMock);\n     }\n \n     @Test\n@@ -3397,7 +3403,7 @@ public Set<PersistenceService> getAll() {\n             public @Nullable PersistenceService get(@Nullable String serviceId) {\n                 return TestCachedValuesPersistenceService.ID.equals(serviceId) ? persistenceService : null;\n             }\n-        }, timeZoneProviderMock);\n+        }, persistenceServiceConfigurationRegistryMock, timeZoneProviderMock);\n \n         if (historicHours > 0) {\n             ZonedDateTime beginHistory = now.minusHours(historicHours);\n\ndiff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java\nindex b8040df59b4..acc982c8975 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java\n@@ -86,6 +86,7 @@\n  * The {@link PersistenceManagerTest} contains tests for the {@link PersistenceManagerImpl}\n  *\n  * @author Jan N. Klug - Initial contribution\n+ * @author Mark Herwege - Implement aliases\n  */\n @NonNullByDefault\n @ExtendWith(MockitoExtension.class)\n@@ -185,8 +186,8 @@ public void setUp() throws ItemNotFoundException {\n         when(itemRegistryMock.getItems()).thenReturn(List.of(TEST_ITEM, TEST_ITEM2, TEST_ITEM3, TEST_GROUP_ITEM));\n         when(persistenceServiceMock.getId()).thenReturn(TEST_PERSISTENCE_SERVICE_ID);\n         when(queryablePersistenceServiceMock.getId()).thenReturn(TEST_QUERYABLE_PERSISTENCE_SERVICE_ID);\n-        when(queryablePersistenceServiceMock.query(any())).thenReturn(List.of(TEST_HISTORIC_ITEM));\n-        when(queryablePersistenceServiceMock.persistedItem(any())).thenReturn(TEST_PERSISTED_ITEM);\n+        when(queryablePersistenceServiceMock.query(any(), any())).thenReturn(List.of(TEST_HISTORIC_ITEM));\n+        when(queryablePersistenceServiceMock.persistedItem(any(), any())).thenReturn(TEST_PERSISTED_ITEM);\n         when(modifiablePersistenceServiceMock.getId()).thenReturn(TEST_MODIFIABLE_PERSISTENCE_SERVICE_ID);\n \n         manager = new PersistenceManagerImpl(cronSchedulerMock, schedulerMock, itemRegistryMock, safeCallerMock,\n@@ -367,7 +368,7 @@ public void restoreOnStartupWhenItemNull() {\n         assertThat(TEST_GROUP_ITEM.getState(), is(TEST_STATE));\n         assertThat(TEST_GROUP_ITEM.getLastState(), is(TEST_LAST_STATE));\n \n-        verify(queryablePersistenceServiceMock, times(3)).persistedItem(any());\n+        verify(queryablePersistenceServiceMock, times(3)).persistedItem(any(), any());\n \n         ZonedDateTime lastStateUpdate = TEST_ITEM.getLastStateUpdate();\n         assertNotNull(lastStateUpdate);\n@@ -398,7 +399,7 @@ public void noRestoreOnStartupWhenItemNotNull() {\n         assertThat(TEST_GROUP_ITEM.getState(), is(TEST_STATE));\n         assertThat(TEST_GROUP_ITEM.getLastState(), is(TEST_LAST_STATE));\n \n-        verify(queryablePersistenceServiceMock, times(2)).persistedItem(any());\n+        verify(queryablePersistenceServiceMock, times(2)).persistedItem(any(), any());\n \n         ZonedDateTime lastStateUpdate = TEST_ITEM.getLastStateUpdate();\n         assertNotNull(lastStateUpdate);\n@@ -578,7 +579,7 @@ private PersistenceServiceConfiguration addConfiguration(String serviceId, List<\n             PersistenceStrategy strategy, @Nullable PersistenceFilter filter) {\n         List<PersistenceFilter> filters = filter != null ? List.of(filter) : List.of();\n \n-        PersistenceItemConfiguration itemConfiguration = new PersistenceItemConfiguration(itemConfigs, null,\n+        PersistenceItemConfiguration itemConfiguration = new PersistenceItemConfiguration(itemConfigs,\n                 List.of(strategy), filters);\n \n         List<PersistenceStrategy> strategies = PersistenceStrategy.Globals.STRATEGIES.containsValue(strategy)\n@@ -586,7 +587,7 @@ private PersistenceServiceConfiguration addConfiguration(String serviceId, List<\n                 : List.of(strategy);\n \n         PersistenceServiceConfiguration serviceConfiguration = new PersistenceServiceConfiguration(serviceId,\n-                List.of(itemConfiguration), List.of(), strategies, filters);\n+                List.of(itemConfiguration), Map.of(), List.of(), strategies, filters);\n         manager.added(serviceConfiguration);\n \n         return serviceConfiguration;\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4345",
    "pr_id": 4345,
    "issue_id": 4342,
    "repo": "openhab/openhab-core",
    "problem_statement": "Caclulate the median of persistent data.\nA usefull additional function would be the caclulation of the median of the persistence data of an item, in addition to averageSince().\r\n\r\n",
    "issue_word_count": 28,
    "test_files_count": 3,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/util/Statistics.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/util/StatisticsTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/util/StatisticsTest.java"
    ],
    "base_commit": "5eedd273baefc7868c31d80cff513e22cde60425",
    "head_commit": "e2790c7fa0a33df4a8e860efe4f5ccbc9bb5fcee",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4345",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4345",
    "dockerfile": "",
    "pr_merged_at": "2024-08-24T08:55:06.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\nindex 4e3344230a5..d7b5bed0295 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n@@ -21,6 +21,7 @@\n import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Objects;\n import java.util.stream.StreamSupport;\n \n import javax.measure.Unit;\n@@ -43,6 +44,7 @@\n import org.openhab.core.types.State;\n import org.openhab.core.types.TimeSeries;\n import org.openhab.core.types.TypeParser;\n+import org.openhab.core.util.Statistics;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n import org.osgi.service.component.annotations.Reference;\n@@ -62,7 +64,8 @@\n  * @author Mark Herwege - Changed return types to State for some interval methods to also return unit\n  * @author Mark Herwege - Extended for future dates\n  * @author Mark Herwege - lastChange and nextChange methods\n- * @author mark Herwege - handle persisted GroupItem with QuantityType\n+ * @author Mark Herwege - handle persisted GroupItem with QuantityType\n+ * @author Mark Herwege - add median methods\n  */\n @Component(immediate = true)\n @NonNullByDefault\n@@ -986,10 +989,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         Iterator<HistoricItem> it = result.iterator();\n         HistoricItem maximumHistoricItem = null;\n \n-        Item baseItem = item;\n-        if (baseItem instanceof GroupItem groupItem) {\n-            baseItem = groupItem.getBaseItem();\n-        }\n+        Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n         Unit<?> unit = (baseItem instanceof NumberItem numberItem) ? numberItem.getUnit() : null;\n \n         DecimalType maximum = null;\n@@ -1117,10 +1117,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         Iterator<HistoricItem> it = result.iterator();\n         HistoricItem minimumHistoricItem = null;\n \n-        Item baseItem = item;\n-        if (baseItem instanceof GroupItem groupItem) {\n-            baseItem = groupItem.getBaseItem();\n-        }\n+        Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n         Unit<?> unit = (baseItem instanceof NumberItem numberItem) ? numberItem.getUnit() : null;\n \n         DecimalType minimum = null;\n@@ -1249,10 +1246,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             BigDecimal average = dt != null ? dt.toBigDecimal() : BigDecimal.ZERO, sum = BigDecimal.ZERO;\n             int count = 0;\n \n-            Item baseItem = item;\n-            if (baseItem instanceof GroupItem groupItem) {\n-                baseItem = groupItem.getBaseItem();\n-            }\n+            Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n             Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n \n             Iterator<HistoricItem> it = result.iterator();\n@@ -1406,10 +1400,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             // avoid ArithmeticException if variance is less than zero\n             if (dt != null && DecimalType.ZERO.compareTo(dt) <= 0) {\n                 BigDecimal deviation = dt.toBigDecimal().sqrt(MathContext.DECIMAL64);\n-                Item baseItem = item;\n-                if (baseItem instanceof GroupItem groupItem) {\n-                    baseItem = groupItem.getBaseItem();\n-                }\n+                Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n                 if (baseItem instanceof NumberItem numberItem) {\n                     Unit<?> unit = numberItem.getUnit();\n                     if (unit != null) {\n@@ -1520,29 +1511,27 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         if (effectiveServiceId == null) {\n             return null;\n         }\n-        Iterable<HistoricItem> result = getAllStatesBetweenWithBoundaries(item, begin, end, effectiveServiceId);\n-        if (result == null) {\n-            return null;\n-        }\n-        Iterator<HistoricItem> it = result.iterator();\n         ZonedDateTime now = ZonedDateTime.now();\n-        ZonedDateTime beginTime = begin == null ? now : begin;\n-        ZonedDateTime endTime = end == null ? now : end;\n+        ZonedDateTime beginTime = Objects.requireNonNullElse(begin, now);\n+        ZonedDateTime endTime = Objects.requireNonNullElse(end, now);\n \n         if (beginTime.isEqual(endTime)) {\n             HistoricItem historicItem = internalPersistedState(item, beginTime, effectiveServiceId);\n             return historicItem != null ? historicItem.getState() : null;\n         }\n \n+        Iterable<HistoricItem> result = getAllStatesBetweenWithBoundaries(item, begin, end, effectiveServiceId);\n+        if (result == null) {\n+            return null;\n+        }\n+        Iterator<HistoricItem> it = result.iterator();\n+\n         BigDecimal sum = BigDecimal.ZERO;\n \n         HistoricItem lastItem = null;\n         ZonedDateTime firstTimestamp = null;\n \n-        Item baseItem = item;\n-        if (baseItem instanceof GroupItem groupItem) {\n-            baseItem = groupItem.getBaseItem();\n-        }\n+        Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n         Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n \n         while (it.hasNext()) {\n@@ -1578,6 +1567,140 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         return null;\n     }\n \n+    /**\n+     * Gets the median value of the state of a given {@link Item} since a certain point in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the median value for\n+     * @param timestamp the point in time from which to search for the median value\n+     * @return the median value since <code>timestamp</code> or <code>null</code> if no\n+     *         previous states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n+     */\n+    public static @Nullable State medianSince(Item item, ZonedDateTime timestamp) {\n+        return internalMedianBetween(item, timestamp, null, null);\n+    }\n+\n+    /**\n+     * Gets the median value of the state of a given {@link Item} until a certain point in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the median value for\n+     * @param timestamp the point in time to which to search for the median value\n+     * @return the median value until <code>timestamp</code> or <code>null</code> if no\n+     *         future states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}. The current state is included in the calculation.\n+     */\n+    public static @Nullable State medianUntil(Item item, ZonedDateTime timestamp) {\n+        return internalMedianBetween(item, null, timestamp, null);\n+    }\n+\n+    /**\n+     * Gets the median value of the state of a given {@link Item} between two certain points in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to get the median value for\n+     * @param begin the point in time from which to start the summation\n+     * @param end the point in time to which to start the summation\n+     * @return the median value between <code>begin</code> and <code>end</code> or <code>null</code> if no\n+     *         states could be found or if the default persistence service does not refer to an available\n+     *         {@link QueryablePersistenceService}.\n+     */\n+    public static @Nullable State medianBetween(Item item, ZonedDateTime begin, ZonedDateTime end) {\n+        return internalMedianBetween(item, begin, end, null);\n+    }\n+\n+    /**\n+     * Gets the median value of the state of a given {@link Item} since a certain point in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the median value for\n+     * @param timestamp the point in time from which to search for the median value\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the median value since <code>timestamp</code>, or <code>null</code> if no\n+     *         previous states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}. The current state is included in the\n+     *         calculation.\n+     */\n+    public static @Nullable State medianSince(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n+        return internalMedianBetween(item, timestamp, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the median value of the state of a given {@link Item} until a certain point in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the median value for\n+     * @param timestamp the point in time to which to search for the median value\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the median value until <code>timestamp</code>, or <code>null</code> if no\n+     *         future states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}. The current state is included in the\n+     *         calculation.\n+     */\n+    public static @Nullable State medianUntil(Item item, ZonedDateTime timestamp, @Nullable String serviceId) {\n+        return internalMedianBetween(item, null, timestamp, serviceId);\n+    }\n+\n+    /**\n+     * Gets the median value of the state of a given {@link Item} between two certain points in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to get the median value for\n+     * @param begin the point in time from which to start the summation\n+     * @param end the point in time to which to start the summation\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the median value between <code>begin</code> and <code>end</code>, or <code>null</code> if no\n+     *         states could be found or if the persistence service given by <code>serviceId</code> does not\n+     *         refer to an available {@link QueryablePersistenceService}\n+     */\n+    public static @Nullable State medianBetween(Item item, ZonedDateTime begin, ZonedDateTime end,\n+            @Nullable String serviceId) {\n+        return internalMedianBetween(item, begin, end, serviceId);\n+    }\n+\n+    private static @Nullable State internalMedianBetween(Item item, @Nullable ZonedDateTime begin,\n+            @Nullable ZonedDateTime end, @Nullable String serviceId) {\n+        String effectiveServiceId = serviceId == null ? getDefaultServiceId() : serviceId;\n+        if (effectiveServiceId == null) {\n+            return null;\n+        }\n+        ZonedDateTime now = ZonedDateTime.now();\n+        ZonedDateTime beginTime = Objects.requireNonNullElse(begin, now);\n+        ZonedDateTime endTime = Objects.requireNonNullElse(end, now);\n+\n+        if (beginTime.isEqual(endTime)) {\n+            HistoricItem historicItem = internalPersistedState(item, beginTime, effectiveServiceId);\n+            return historicItem != null ? historicItem.getState() : null;\n+        }\n+\n+        Iterable<HistoricItem> result = getAllStatesBetween(item, beginTime, endTime, effectiveServiceId);\n+        if (result == null) {\n+            return null;\n+        }\n+\n+        Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n+        Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n+\n+        List<BigDecimal> resultList = new ArrayList<>();\n+        result.forEach(hi -> {\n+            DecimalType dtState = getPersistedValue(hi, unit);\n+            if (dtState != null) {\n+                resultList.add(dtState.toBigDecimal());\n+            }\n+        });\n+\n+        BigDecimal median = Statistics.median(resultList);\n+        if (median != null) {\n+            if (unit != null) {\n+                return new QuantityType<>(median, unit);\n+            } else {\n+                return new DecimalType(median);\n+            }\n+        }\n+        return null;\n+    }\n+\n     /**\n      * Gets the sum of the state of a given <code>item</code> since a certain point in time.\n      * The default persistence service is used.\n@@ -1675,10 +1798,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         if (result != null) {\n             Iterator<HistoricItem> it = result.iterator();\n \n-            Item baseItem = item;\n-            if (baseItem instanceof GroupItem groupItem) {\n-                baseItem = groupItem.getBaseItem();\n-            }\n+            Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n             Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n \n             BigDecimal sum = BigDecimal.ZERO;\n@@ -1800,10 +1920,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         HistoricItem itemStart = internalPersistedState(item, begin, effectiveServiceId);\n         HistoricItem itemStop = internalPersistedState(item, end, effectiveServiceId);\n \n-        Item baseItem = item;\n-        if (baseItem instanceof GroupItem groupItem) {\n-            baseItem = groupItem.getBaseItem();\n-        }\n+        Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n         Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n \n         DecimalType valueStart = null;\n@@ -2037,10 +2154,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             return null;\n         }\n \n-        Item baseItem = item;\n-        if (baseItem instanceof GroupItem groupItem) {\n-            baseItem = groupItem.getBaseItem();\n-        }\n+        Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n         Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n \n         HistoricItem itemStart = internalPersistedState(item, begin, effectiveServiceId);\n@@ -2556,8 +2670,8 @@ private static void internalRemoveAllStatesBetween(Item item, @Nullable ZonedDat\n             return null;\n         }\n \n-        ZonedDateTime beginTime = (begin == null) ? now : begin;\n-        ZonedDateTime endTime = (end == null) ? now : end;\n+        ZonedDateTime beginTime = Objects.requireNonNullElse(begin, now);\n+        ZonedDateTime endTime = Objects.requireNonNullElse(end, now);\n \n         List<HistoricItem> betweenItemsList = new ArrayList<>();\n         if (betweenItems != null) {\n@@ -2616,10 +2730,7 @@ private static void internalRemoveAllStatesBetween(Item item, @Nullable ZonedDat\n     }\n \n     private static @Nullable DecimalType getItemValue(Item item) {\n-        Item baseItem = item;\n-        if (baseItem instanceof GroupItem groupItem) {\n-            baseItem = groupItem.getBaseItem();\n-        }\n+        Item baseItem = item instanceof GroupItem groupItem ? groupItem.getBaseItem() : item;\n         if (baseItem instanceof NumberItem numberItem) {\n             Unit<?> unit = numberItem.getUnit();\n             if (unit != null) {\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/util/Statistics.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/util/Statistics.java\nnew file mode 100644\nindex 00000000000..3dd1634c55a\n--- /dev/null\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/util/Statistics.java\n@@ -0,0 +1,127 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.util;\n+\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+/**\n+ * The {@link Statistics} is a class with statistics helper methods.\n+ *\n+ * @author Mark Herwege - Initial contribution\n+ */\n+@NonNullByDefault\n+public class Statistics {\n+\n+    /**\n+     * Find the median in a list of values\n+     *\n+     * @param inputList\n+     * @return median of the values, null if the list is empty\n+     */\n+    public static @Nullable BigDecimal median(List<BigDecimal> inputList) {\n+        ArrayList<BigDecimal> bdList = new ArrayList<>(inputList); // Make a copy that will get reordered\n+        int size = bdList.size();\n+        if (size >= 0) {\n+            int k = size / 2;\n+            BigDecimal median = null;\n+            if (size % 2 == 1) {\n+                median = Statistics.quickSelect(bdList, 0, size - 1, k, false);\n+            } else {\n+                median = Statistics.quickSelect(bdList, 0, size - 1, k, true);\n+                if (median != null) {\n+                    // quickSelect has forced the k-1 element to be in the right place\n+                    median = median.add(bdList.get(k - 1)).divide(BigDecimal.valueOf(2));\n+                }\n+            }\n+            return median;\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Find the k-smallest element between indexes l and r in a list. This is an implementation of the quickSelect\n+     * algorithm. If the forcePreviousOrder parameter is set to true, put the element before the k-smallest element at\n+     * position k-1 in bdList. This is useful to calculate the median or percentile on a list with an uneven number of\n+     * elements. The median will then be the sum of the returned value and the element at position k-1 divided by 2.\n+     *\n+     * See https://en.wikipedia.org/wiki/Quickselect and https://gist.github.com/unnikked/14c19ba13f6a4bfd00a3\n+     *\n+     * @param bdList, list elements will be reordered in place\n+     * @param l index of left most element in list to consider\n+     * @param r index of right most element in list to consider\n+     * @param k\n+     * @param forcePreviousOrder positions the k-1 element in the right place if true, useful to calculate median on\n+     *            list with even length\n+     * @return\n+     */\n+    static @Nullable BigDecimal quickSelect(ArrayList<BigDecimal> bdList, int l, int r, int k,\n+            boolean forcePreviousOrder) {\n+        if (r < 0) {\n+            return null;\n+        } else if (r == 0) {\n+            return bdList.get(r);\n+        }\n+\n+        int left = l;\n+        int right = r;\n+        for (;;) {\n+            int pivotIndex = left; // Textbook quickselect algorithm uses a random pivot index in the left to right\n+                                   // range. The random generation adds time and does not change the algorithm result,\n+                                   // so just pick left.\n+            pivotIndex = partition(bdList, left, right, pivotIndex, forcePreviousOrder);\n+\n+            if (k == pivotIndex) {\n+                return bdList.get(k);\n+            } else if (k < pivotIndex) {\n+                right = pivotIndex - 1;\n+            } else {\n+                left = pivotIndex + 1;\n+            }\n+        }\n+    }\n+\n+    private static int partition(ArrayList<BigDecimal> bdList, int left, int right, int pivotIndex,\n+            boolean forcePreviousOrder) {\n+        BigDecimal pivotValue = bdList.get(pivotIndex);\n+        swap(bdList, pivotIndex, right); // Move pivot to end\n+        int beforePivotIndex = left;\n+        int storeIndex = left;\n+        for (int i = left; i < right; i++) {\n+            if (bdList.get(i).compareTo(pivotValue) < 0) {\n+                if (forcePreviousOrder && (bdList.get(i).compareTo(bdList.get(beforePivotIndex)) > 0)) {\n+                    beforePivotIndex = storeIndex;\n+                }\n+                swap(bdList, storeIndex, i);\n+                storeIndex++;\n+            }\n+        }\n+        swap(bdList, right, storeIndex); // Move pivot to its final place\n+        if (forcePreviousOrder && (storeIndex > beforePivotIndex)) {\n+            swap(bdList, beforePivotIndex, storeIndex - 1);\n+        }\n+        return storeIndex;\n+    }\n+\n+    private static void swap(ArrayList<BigDecimal> bdList, int i, int j) {\n+        if (i != j) {\n+            BigDecimal tmp = bdList.get(i);\n+            bdList.set(i, bdList.get(j));\n+            bdList.set(j, tmp);\n+        }\n+    }\n+}\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\nindex fd28de805d9..ab60d1dc3cb 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n@@ -61,6 +61,9 @@\n  * @author Jan N. Klug - Interval method tests and refactoring\n  * @author Mark Herwege - Changed return types to State for some interval methods to also return unit\n  * @author Mark Herwege - Extended for future dates\n+ * @author Mark Herwege - lastChange and nextChange methods\n+ * @author Mark Herwege - handle persisted GroupItem with QuantityType\n+ * @author Mark Herwege - add median methods\n  */\n @ExtendWith(MockitoExtension.class)\n @MockitoSettings(strictness = Strictness.LENIENT)\n@@ -1875,6 +1878,260 @@ public void testAverageBetweenZeroDuration() {\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n     }\n \n+    @Test\n+    public void testMedianSinceDecimalType() {\n+        ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = median(BEFORE_START, null);\n+        State median = PersistenceExtensions.medianSince(numberItem, start, SERVICE_ID);\n+        assertNotNull(median);\n+        DecimalType dt = median.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertEquals(expected, dt.doubleValue(), 0.01);\n+\n+        start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        median = PersistenceExtensions.medianSince(numberItem, start, SERVICE_ID);\n+        assertNotNull(median);\n+        dt = median.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertEquals(expected, dt.doubleValue(), 0.01);\n+\n+        // default persistence service\n+        median = PersistenceExtensions.medianSince(numberItem, start);\n+        assertNull(median);\n+    }\n+\n+    @Test\n+    public void testMedianUntilDecimalType() {\n+        ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = median(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        State median = PersistenceExtensions.medianUntil(numberItem, end, SERVICE_ID);\n+        assertNotNull(median);\n+        DecimalType dt = median.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertEquals(expected, dt.doubleValue(), 0.01);\n+\n+        // default persistence service\n+        median = PersistenceExtensions.medianUntil(numberItem, end);\n+        assertNull(median);\n+    }\n+\n+    @Test\n+    public void testMedianBetweenDecimalType() {\n+        ZonedDateTime beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+\n+        double expected = median(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        State median = PersistenceExtensions.medianBetween(numberItem, beginStored, endStored, SERVICE_ID);\n+        assertNotNull(median);\n+        DecimalType dt = median.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertEquals(expected, dt.doubleValue(), 0.01);\n+\n+        beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = median(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+\n+        median = PersistenceExtensions.medianBetween(numberItem, beginStored, endStored, SERVICE_ID);\n+        assertNotNull(median);\n+        dt = median.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+\n+        median = PersistenceExtensions.medianBetween(numberItem, beginStored, endStored, SERVICE_ID);\n+        assertNotNull(median);\n+        dt = median.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        // default persistence service\n+        median = PersistenceExtensions.medianBetween(quantityItem, beginStored, endStored);\n+        assertNull(median);\n+    }\n+\n+    @Test\n+    public void testMedianSinceQuantityType() {\n+        ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = median(BEFORE_START, null);\n+        State median = PersistenceExtensions.medianSince(quantityItem, start, SERVICE_ID);\n+        assertNotNull(median);\n+        QuantityType<?> qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        median = PersistenceExtensions.medianSince(quantityItem, start, SERVICE_ID);\n+        assertNotNull(median);\n+        qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        median = PersistenceExtensions.medianSince(quantityItem, start);\n+        assertNull(median);\n+    }\n+\n+    @Test\n+    public void testMedianUntilQuantityType() {\n+        ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = median(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        State median = PersistenceExtensions.medianUntil(quantityItem, end, SERVICE_ID);\n+        assertNotNull(median);\n+        QuantityType<?> qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        median = PersistenceExtensions.medianUntil(quantityItem, end);\n+        assertNull(median);\n+    }\n+\n+    @Test\n+    public void testMedianBetweenQuantityType() {\n+        ZonedDateTime beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expected = median(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        State median = PersistenceExtensions.medianBetween(quantityItem, beginStored, endStored, SERVICE_ID);\n+\n+        assertNotNull(median);\n+        QuantityType<?> qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = median(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+\n+        median = PersistenceExtensions.medianBetween(quantityItem, beginStored, endStored, SERVICE_ID);\n+        assertNotNull(median);\n+        qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+\n+        median = PersistenceExtensions.medianBetween(quantityItem, beginStored, endStored, SERVICE_ID);\n+        assertNotNull(median);\n+        qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        median = PersistenceExtensions.medianBetween(quantityItem, beginStored, endStored);\n+        assertNull(median);\n+    }\n+\n+    @Test\n+    public void testMedianSinceGroupQuantityType() {\n+        ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = median(BEFORE_START, null);\n+        State median = PersistenceExtensions.medianSince(groupQuantityItem, start, SERVICE_ID);\n+        assertNotNull(median);\n+        QuantityType<?> qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        median = PersistenceExtensions.medianSince(groupQuantityItem, start, SERVICE_ID);\n+        assertNotNull(median);\n+        qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        median = PersistenceExtensions.medianSince(groupQuantityItem, start);\n+        assertNull(median);\n+    }\n+\n+    @Test\n+    public void testMedianUntilGroupQuantityType() {\n+        ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = median(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        State median = PersistenceExtensions.medianUntil(groupQuantityItem, end, SERVICE_ID);\n+        assertNotNull(median);\n+        QuantityType<?> qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        median = PersistenceExtensions.medianUntil(groupQuantityItem, end);\n+        assertNull(median);\n+    }\n+\n+    @Test\n+    public void testMedianBetweenGroupQuantityType() {\n+        ZonedDateTime beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expected = median(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        State median = PersistenceExtensions.medianBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n+\n+        assertNotNull(median);\n+        QuantityType<?> qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = median(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+\n+        median = PersistenceExtensions.medianBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n+        assertNotNull(median);\n+        qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = median(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+\n+        median = PersistenceExtensions.medianBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n+        assertNotNull(median);\n+        qt = median.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        median = PersistenceExtensions.medianBetween(groupQuantityItem, beginStored, endStored);\n+        assertNull(median);\n+    }\n+\n+    @Test\n+    public void testMedianBetweenZeroDuration() {\n+        ZonedDateTime now = ZonedDateTime.now();\n+        State state = PersistenceExtensions.medianBetween(quantityItem, now, now, SERVICE_ID);\n+        assertNotNull(state);\n+        QuantityType<?> qt = state.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(HISTORIC_END, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+    }\n+\n     @Test\n     public void testSumSinceDecimalType() {\n         State sum = PersistenceExtensions.sumSince(numberItem,\n\ndiff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java\nindex 74ee49a33bc..4b4abd41a9d 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java\n@@ -269,4 +269,19 @@ static double average(@Nullable Integer beginYear, @Nullable Integer endYear) {\n         long duration = Duration.between(beginDate, endDate).toMillis();\n         return 1.0 * sum / duration;\n     }\n+\n+    static double median(@Nullable Integer beginYear, @Nullable Integer endYear) {\n+        ZonedDateTime now = ZonedDateTime.now();\n+        int begin = beginYear != null ? beginYear : now.getYear() + 1;\n+        int end = endYear != null ? endYear : now.getYear();\n+        long[] values = LongStream.range(begin, end + 1)\n+                .filter(v -> ((v >= HISTORIC_START && v <= HISTORIC_END) || (v >= FUTURE_START && v <= FUTURE_END)))\n+                .sorted().toArray();\n+        int length = values.length;\n+        if (length % 2 == 1) {\n+            return values[values.length / 2];\n+        } else {\n+            return 0.5 * (values[values.length / 2] + values[values.length / 2 - 1]);\n+        }\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/util/StatisticsTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/util/StatisticsTest.java\nnew file mode 100644\nindex 00000000000..3b18a5c359b\n--- /dev/null\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/util/StatisticsTest.java\n@@ -0,0 +1,90 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.util;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import java.io.PrintStream;\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Random;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * The {@link StatisticsTest} is a test class for the statistics helper methods\n+ *\n+ * @author Mark Herwege - Initial contribution\n+ */\n+@NonNullByDefault\n+public class StatisticsTest {\n+\n+    @Test\n+    public void testQuickSelect() {\n+        List<BigDecimal> randomList = new Random().doubles(100, 0, 100).mapToObj(v -> BigDecimal.valueOf(v)).toList();\n+        int iterations = 50;\n+\n+        int size = randomList.size();\n+        int k = size / 2; // median\n+\n+        long startTime = System.nanoTime();\n+        List<BigDecimal> baseList = randomList.stream().sorted().toList();\n+        long endTime = System.nanoTime();\n+        long duration = endTime - startTime;\n+        int expected = baseList.get(k).intValue();\n+        int prevExpected = baseList.get(k - 1).intValue();\n+\n+        long durationNoForcePrevious = 0;\n+        long durationForcePrevious = 0;\n+        // Iterate a few times with reshuffled list to exclude impact of initial ordering\n+        for (int i = 0; i < iterations; i++) {\n+            ArrayList<BigDecimal> bdList = new ArrayList<>(baseList);\n+            Collections.shuffle(bdList);\n+            startTime = System.nanoTime();\n+            BigDecimal bd = Statistics.quickSelect(bdList, 0, size - 1, k, false);\n+            endTime = System.nanoTime();\n+            durationNoForcePrevious += endTime - startTime;\n+            assertNotNull(bd);\n+            int result = bd.intValue();\n+            assertEquals(expected, result);\n+\n+            bdList = new ArrayList<>(baseList); // recreate as order may have changed\n+            Collections.shuffle(bdList);\n+            startTime = System.nanoTime();\n+            bd = Statistics.quickSelect(bdList, 0, size - 1, k, true);\n+            endTime = System.nanoTime();\n+            durationForcePrevious += endTime - startTime;\n+            assertNotNull(bd);\n+            result = bd.intValue();\n+            assertEquals(expected, result);\n+            assertEquals(prevExpected, bdList.get(k - 1).intValue());\n+        }\n+\n+        PrintStream out = System.out;\n+        if (out != null) {\n+            out.print(\"List size: \");\n+            out.print(size);\n+            out.print(\", iterations: \");\n+            out.println(iterations);\n+            out.print(\"  Stream sort duration (ns): \");\n+            out.println(duration);\n+            out.print(\"  Quickselect average duration (ns): \");\n+            out.println(durationNoForcePrevious / iterations);\n+            out.print(\"  Quickselect force previous order average duration (ns): \");\n+            out.println(durationForcePrevious / iterations);\n+        }\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4344",
    "pr_id": 4344,
    "issue_id": 4341,
    "repo": "openhab/openhab-core",
    "problem_statement": "Median as group function.\nA usefull additional function would be  the caclulation of the median of a group of items, in addition to AVG, MAX, MIN and SUM.",
    "issue_word_count": 28,
    "test_files_count": 2,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunction.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunctionTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunctionTest.java"
    ],
    "base_commit": "e8e55443c334628a6b2d4557046ff608dd0f6a5e",
    "head_commit": "cfd87ca3da470834139e15e5c5458b748f46d978",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4344",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4344",
    "dockerfile": "",
    "pr_merged_at": "2024-08-24T12:39:39.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext b/bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext\nindex fabd011d13c..266d585cc73 100644\n--- a/bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext\n+++ b/bundles/org.openhab.core.model.item/src/org/openhab/core/model/Items.xtext\n@@ -27,7 +27,7 @@ ModelGroupItem:\n ;\n \n enum ModelGroupFunction:\n-\tEQUALITY='EQUALITY' | AND='AND' | OR='OR' | NAND='NAND' | NOR='NOR' | AVG='AVG' | SUM='SUM' | MAX='MAX' | MIN='MIN' | COUNT='COUNT' | LATEST='LATEST' | EARLIEST='EARLIEST'\n+\tEQUALITY='EQUALITY' | AND='AND' | OR='OR' | NAND='NAND' | NOR='NOR' | AVG='AVG' | MEDIAN='MEDIAN' | SUM='SUM' | MAX='MAX' | MIN='MIN' | COUNT='COUNT' | LATEST='LATEST' | EARLIEST='EARLIEST'\n ;\n \n ModelNormalItem:\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java\nindex d8caa8b30ea..0fdc4e165be 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/GroupFunctionHelper.java\n@@ -91,6 +91,8 @@ private GroupFunction createDimensionGroupFunction(GroupFunctionDTO function, @N\n         switch (functionName.toUpperCase()) {\n             case \"AVG\":\n                 return new QuantityTypeArithmeticGroupFunction.Avg(dimension);\n+            case \"MEDIAN\":\n+                return new QuantityTypeArithmeticGroupFunction.Median(dimension, baseItem);\n             case \"SUM\":\n                 return new QuantityTypeArithmeticGroupFunction.Sum(dimension);\n             case \"MIN\":\n@@ -148,6 +150,8 @@ private GroupFunction createDefaultGroupFunction(GroupFunctionDTO function, @Nul\n                 break;\n             case \"AVG\":\n                 return new ArithmeticGroupFunction.Avg();\n+            case \"MEDIAN\":\n+                return new ArithmeticGroupFunction.Median();\n             case \"SUM\":\n                 return new ArithmeticGroupFunction.Sum();\n             case \"MIN\":\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java\nindex 25cf7ab9f0a..9abec496149 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/ArithmeticGroupFunction.java\n@@ -14,6 +14,8 @@\n \n import java.math.BigDecimal;\n import java.math.MathContext;\n+import java.util.List;\n+import java.util.Objects;\n import java.util.Set;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n@@ -24,6 +26,7 @@\n import org.openhab.core.items.Item;\n import org.openhab.core.types.State;\n import org.openhab.core.types.UnDefType;\n+import org.openhab.core.util.Statistics;\n \n /**\n  * This interface is only a container for functions that require the core type library\n@@ -253,6 +256,43 @@ public State[] getParameters() {\n         }\n     }\n \n+    /**\n+     * This calculates the numeric median over all item states of decimal type.\n+     */\n+    class Median implements GroupFunction {\n+\n+        public Median() {\n+        }\n+\n+        @Override\n+        public State calculate(@Nullable Set<Item> items) {\n+            if (items != null) {\n+                List<BigDecimal> states = items.stream().map(item -> item.getStateAs(DecimalType.class))\n+                        .filter(Objects::nonNull).map(DecimalType::toBigDecimal).toList();\n+                BigDecimal median = Statistics.median(states);\n+                if (median != null) {\n+                    return new DecimalType(median);\n+                }\n+            }\n+            return UnDefType.UNDEF;\n+        }\n+\n+        @Override\n+        public @Nullable <T extends State> T getStateAs(@Nullable Set<Item> items, Class<T> stateClass) {\n+            State state = calculate(items);\n+            if (stateClass.isInstance(state)) {\n+                return stateClass.cast(state);\n+            } else {\n+                return null;\n+            }\n+        }\n+\n+        @Override\n+        public State[] getParameters() {\n+            return new State[0];\n+        }\n+    }\n+\n     /**\n      * This calculates the numeric sum over all item states of decimal type.\n      */\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunction.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunction.java\nindex 5854d13968f..bede03de9dc 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunction.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunction.java\n@@ -14,9 +14,12 @@\n \n import java.math.BigDecimal;\n import java.math.MathContext;\n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.Set;\n \n import javax.measure.Quantity;\n+import javax.measure.Unit;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -26,6 +29,7 @@\n import org.openhab.core.library.items.NumberItem;\n import org.openhab.core.types.State;\n import org.openhab.core.types.UnDefType;\n+import org.openhab.core.util.Statistics;\n \n /**\n  * This interface is a container for dimension based functions that require {@link QuantityType}s for its calculations.\n@@ -111,6 +115,53 @@ public State calculate(@Nullable Set<Item> items) {\n         }\n     }\n \n+    /**\n+     * This calculates the numeric median over all item states of {@link QuantityType}.\n+     */\n+    class Median extends DimensionalGroupFunction {\n+\n+        private @Nullable Item baseItem;\n+\n+        public Median(Class<? extends Quantity<?>> dimension, @Nullable Item baseItem) {\n+            super(dimension);\n+            this.baseItem = baseItem;\n+        }\n+\n+        @Override\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        public State calculate(@Nullable Set<Item> items) {\n+            if (items != null) {\n+                List<BigDecimal> values = new ArrayList<>();\n+                Unit<?> unit = null;\n+                if (baseItem instanceof NumberItem numberItem) {\n+                    unit = numberItem.getUnit();\n+                }\n+                for (Item item : items) {\n+                    if (!isSameDimension(item)) {\n+                        continue;\n+                    }\n+                    QuantityType itemState = item.getStateAs(QuantityType.class);\n+                    if (itemState == null) {\n+                        continue;\n+                    }\n+                    if (unit == null) {\n+                        unit = itemState.getUnit(); // set it to the first item's unit\n+                    }\n+                    values.add(itemState.toInvertibleUnit(unit).toBigDecimal());\n+                }\n+\n+                if (!values.isEmpty()) {\n+                    BigDecimal median = Statistics.median(values);\n+                    if (median != null) {\n+                        return new QuantityType<>(median, unit);\n+                    }\n+\n+                }\n+            }\n+            return UnDefType.UNDEF;\n+        }\n+    }\n+\n     /**\n      * This calculates the numeric sum over all item states of {@link QuantityType}.\n      */\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java\nindex 6a125683216..dd15f2553e0 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/ArithmeticGroupFunctionTest.java\n@@ -16,13 +16,20 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.number.IsCloseTo.closeTo;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.params.provider.Arguments.arguments;\n \n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n import org.openhab.core.items.GenericItem;\n import org.openhab.core.items.GroupFunction;\n import org.openhab.core.items.Item;\n@@ -215,6 +222,44 @@ public void testAvgFunction() {\n         assertThat(((DecimalType) state).doubleValue(), is(closeTo(78.32, 0.01d)));\n     }\n \n+    static Stream<Arguments> testMedianFunction() {\n+        return Stream.of( //\n+                arguments( //\n+                        List.of(new DecimalType(\"23.54\"), UnDefType.NULL, new DecimalType(\"22\"), UnDefType.UNDEF,\n+                                new DecimalType(\"122.41\"), new DecimalType(\"89\")), //\n+                        new DecimalType(\"56.27\")), //\n+                arguments( //\n+                        List.of(new DecimalType(\"23.54\"), UnDefType.NULL, new DecimalType(\"89\"), UnDefType.UNDEF,\n+                                new DecimalType(\"122.41\")), //\n+                        new DecimalType(\"89.0\")), //\n+                arguments( //\n+                        List.of(new DecimalType(\"23.54\"), UnDefType.NULL, new DecimalType(\"89\"), UnDefType.UNDEF), //\n+                        new DecimalType(\"56.27\")), //\n+                arguments( //\n+                        List.of(new DecimalType(\"23.54\")), //\n+                        new DecimalType(\"23.54\")), //\n+                arguments( //\n+                        List.of(), //\n+                        UnDefType.UNDEF) //\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testMedianFunction(List<State> states, State expected) {\n+        AtomicInteger index = new AtomicInteger(1);\n+        Set<Item> items = states.stream().map(state -> new TestItem(\"TestItem\" + index.getAndIncrement(), state))\n+                .collect(Collectors.toSet());\n+\n+        GroupFunction function = new ArithmeticGroupFunction.Median();\n+        State state = function.calculate(items);\n+\n+        assertEquals(state.getClass(), expected.getClass());\n+        if (expected instanceof DecimalType expectedDecimalType) {\n+            assertThat(((DecimalType) state).doubleValue(), is(closeTo(expectedDecimalType.doubleValue(), 0.01d)));\n+        }\n+    }\n+\n     @Test\n     public void testSumFunction() {\n         Set<Item> items = new HashSet<>();\n\ndiff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunctionTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunctionTest.java\nindex 333b13f3e0d..81ac00b7b33 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunctionTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeArithmeticGroupFunctionTest.java\n@@ -12,11 +12,18 @@\n  */\n package org.openhab.core.library.types;\n \n+import static org.hamcrest.CoreMatchers.*;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.number.IsCloseTo.closeTo;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.params.provider.Arguments.arguments;\n \n import java.util.LinkedHashSet;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Set;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n import javax.measure.Quantity;\n@@ -28,6 +35,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n import org.junit.jupiter.params.provider.MethodSource;\n import org.mockito.Mock;\n import org.mockito.junit.jupiter.MockitoExtension;\n@@ -177,6 +185,51 @@ public void testAvgFunctionQuantityTypeIncompatibleUnits(Locale locale) {\n         assertEquals(new QuantityType<>(\"23.54 Â°C\"), state);\n     }\n \n+    static Stream<Arguments> medianTestSource() {\n+        return Stream.of( //\n+                arguments( //\n+                        List.of(new QuantityType(\"100 Â°C\"), UnDefType.NULL, new QuantityType(\"200 Â°C\"), UnDefType.UNDEF,\n+                                new QuantityType(\"300 Â°C\"), new QuantityType(\"400 Â°C\")), //\n+                        new QuantityType(\"250 Â°C\")), //\n+                // mixed units. 200 Â°C = 392 Â°F\n+                arguments( //\n+                        List.of(new QuantityType(\"100 Â°C\"), UnDefType.NULL, new QuantityType(\"392 Â°F\"), UnDefType.UNDEF,\n+                                new QuantityType(\"300 Â°C\"), new QuantityType(\"400 Â°C\")), //\n+                        new QuantityType(\"250 Â°C\")), //\n+                arguments( //\n+                        List.of(new QuantityType(\"100 Â°C\"), UnDefType.NULL, new QuantityType(\"200 Â°C\"), UnDefType.UNDEF,\n+                                new QuantityType(\"300 Â°C\")), //\n+                        new QuantityType(\"200 Â°C\")), //\n+                arguments( //\n+                        List.of(new QuantityType(\"100 Â°C\"), UnDefType.NULL, new QuantityType(\"200 Â°C\")), //\n+                        new QuantityType(\"150 Â°C\")), //\n+                arguments( //\n+                        List.of(new QuantityType(\"100 Â°C\"), UnDefType.NULL), //\n+                        new QuantityType(\"100 Â°C\")), //\n+                arguments( //\n+                        List.of(), //\n+                        UnDefType.UNDEF) //\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"medianTestSource\")\n+    public void testMedianFunctionQuantityType(List<State> states, State expected) {\n+        AtomicInteger index = new AtomicInteger(1);\n+        Set<Item> items = states.stream()\n+                .map(state -> createNumberItem(\"TestItem\" + index.getAndIncrement(), Temperature.class, state))\n+                .collect(Collectors.toSet());\n+\n+        GroupFunction function = new QuantityTypeArithmeticGroupFunction.Median(Temperature.class, null);\n+        State state = function.calculate(items);\n+\n+        assertEquals(state.getClass(), expected.getClass());\n+        if (expected instanceof QuantityType expectedQuantityType) {\n+            QuantityType stateQuantityType = ((QuantityType) state).toInvertibleUnit(expectedQuantityType.getUnit());\n+            assertThat(stateQuantityType.doubleValue(), is(closeTo(expectedQuantityType.doubleValue(), 0.01d)));\n+        }\n+    }\n+\n     @ParameterizedTest\n     @MethodSource(\"locales\")\n     public void testMaxFunctionQuantityType(Locale locale) {\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4320",
    "pr_id": 4320,
    "issue_id": 4277,
    "repo": "openhab/openhab-core",
    "problem_statement": "File-configured item profile is not updated in Admin UI (only after reboot)\n## Context\r\nI use only the text file based configuration, not the UI config. There, I configured things and items (in this case for the KNX and MQTT bindings).\r\nI use my KNX button sensors (_GIRA Tastsensor 3 plus_) not (any more) to switch the power directly (using a KNX actor) but to switch a KNX Group Address ON/OFF that is a file configured thing linked to a fle configured item in openHAB.\r\nI also have a Zigbee light bulb that can be switched ON/OFF using a _MQTT2Zigbee_ topic that is file configured as a thing in openHAB.\r\nIt all works well in general, but when I add a MQTT channel to a KNX channel to create an item while the OH service is running 'on the fly', the profile won't be shown in the UIâs profile radio buttons (although it works), only, when I restart the OH service.\r\n\r\n## Expected Behavior\r\nI can manually configure the functions above using the web-based Admin UI, set the profile for the MQTT-bound channel to the `Follow `profile using the profile radio buttons, but I intend to do it via text file. I expected the system to show the updated profile in the Admin UI (the profile radio button selector).\r\n\r\n## Current Behavior\r\nThe file configured setting is done 'somehow internally' but it is not reflected in the Admin UI.\r\nAfter a restart of the OH service, it is shown correctly. The radio button reflecting the chosen profile is not default any more.\r\n\r\n## Possible Solution\r\nNone, the workaround is the restart of the OH service.\r\n\r\n## Steps to Reproduce (for Bugs)\r\n1. Have two channels configured using .things files, e.g. one for KNX, another one for MQTT (but I guess the binding does not matter here):\r\n```\r\n\tThing device ga \"KNX-Gruppenadressen\" [ ]\r\n\t{\r\n\t\tChannels:\r\n\t\t\tType switch : test_mqtt_schalter \"Test MQTT-Schalter\" [ ga = \"<31/0/99\" ]\r\n```\r\nand\r\n```\r\n\tThing topic ewelink_24 \"Zigbee eWeLink 2.4\" @\"OG BÃ¼ro\" [ availabilityTopic = \"zigbee2mqtt/ewelink_24/availability\",\t\tpayloadAvailable = \"online\", payloadNotAvailable = \"offline\" ]\r\n\t{\r\n\t\tChannels:\r\n\t\t\tType switch : schalter \"Schalter\" [ stateTopic = \"zigbee2mqtt/ewelink_24/state\",\t\t\t\t\t\tcommandTopic = \"zigbee2mqtt/ewelink_24/set\", formatBeforePublish = \"{\\\"state\\\":\\\"%s\\\"}\" ]\r\n\r\n```\r\n2. Create an item using a .items file\r\n3. In the .items file, link the two channels with a profile while the OH services is running.\r\n```\r\nSwitch Test_MQTT_Schalter \"Test MQTT-Schalter\" { channel = \"knx:device:router:ga:test_mqtt_schalter\", channel = \"mqtt:topic:mosquitto:ewelink_24:schalter\"[profile=\"system:follow\"] }\r\n```\r\n4. Check item config in the Admin UI\r\n`http://my_host:8080/settings/items/Test_MQTT_Schalter/links/edit/mqtt:topic:mosquitto:ewelink_24:schalter`\r\n\r\n## Your Environment\r\nServer: \r\n- Release = Debian GNU/Linux 12 (bookworm)\r\n- Kernel = Linux 6.6.31+rpt-rpi-2712\r\n- Platform = BCM43455 37.4MHz Raspberry Pi 3+-0190\r\n\r\nBrowser: MS Edge on the PC",
    "issue_word_count": 457,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactory.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/profiles/SystemProfiles.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactoryOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactoryOSGiTest.java"
    ],
    "base_commit": "f631f1bbca3c4d8479705787df16ab7d1f671f15",
    "head_commit": "97899b7b4d8758a196cd106f87b28e4f867b1833",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4320",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4320",
    "dockerfile": "",
    "pr_merged_at": "2024-07-16T20:52:25.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactory.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactory.java\nindex 864184dbc7b..5421f5087d3 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactory.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactory.java\n@@ -70,13 +70,15 @@ public class SystemProfileFactory implements ProfileFactory, ProfileAdvisor, Pro\n             RAWROCKER_NEXT_PREVIOUS_TYPE, RAWROCKER_ON_OFF_TYPE, RAWROCKER_PLAY_PAUSE_TYPE,\n             RAWROCKER_REWIND_FASTFORWARD_TYPE, RAWROCKER_STOP_MOVE_TYPE, RAWROCKER_UP_DOWN_TYPE,\n             TRIGGER_EVENT_STRING_TYPE, TIMESTAMP_CHANGE_TYPE, TIMESTAMP_OFFSET_TYPE, TIMESTAMP_TRIGGER_TYPE,\n-            TIMESTAMP_UPDATE_TYPE);\n+            TIMESTAMP_UPDATE_TYPE, BUTTON_TOGGLE_SWITCH_TYPE, BUTTON_TOGGLE_PLAYER_TYPE,\n+            BUTTON_TOGGLE_ROLLERSHUTTER_TYPE);\n \n     private static final Set<ProfileTypeUID> SUPPORTED_PROFILE_TYPE_UIDS = Set.of(DEFAULT, FOLLOW, HYSTERESIS, OFFSET,\n             RANGE, RAWBUTTON_ON_OFF_SWITCH, RAWBUTTON_TOGGLE_PLAYER, RAWBUTTON_TOGGLE_ROLLERSHUTTER,\n             RAWBUTTON_TOGGLE_SWITCH, RAWROCKER_DIMMER, RAWROCKER_NEXT_PREVIOUS, RAWROCKER_ON_OFF, RAWROCKER_PLAY_PAUSE,\n             RAWROCKER_REWIND_FASTFORWARD, RAWROCKER_STOP_MOVE, RAWROCKER_UP_DOWN, TRIGGER_EVENT_STRING,\n-            TIMESTAMP_CHANGE, TIMESTAMP_OFFSET, TIMESTAMP_TRIGGER, TIMESTAMP_UPDATE);\n+            TIMESTAMP_CHANGE, TIMESTAMP_OFFSET, TIMESTAMP_TRIGGER, TIMESTAMP_UPDATE, BUTTON_TOGGLE_SWITCH,\n+            BUTTON_TOGGLE_PLAYER, BUTTON_TOGGLE_ROLLERSHUTTER);\n \n     private final Map<LocalizedKey, ProfileType> localizedProfileTypeCache = new ConcurrentHashMap<>();\n \n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/profiles/SystemProfiles.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/profiles/SystemProfiles.java\nindex ba39f21b76c..60fe012e0de 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/profiles/SystemProfiles.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/profiles/SystemProfiles.java\n@@ -134,4 +134,14 @@ public interface SystemProfiles {\n \n     ProfileType TIMESTAMP_UPDATE_TYPE = ProfileTypeBuilder.newState(TIMESTAMP_UPDATE, \"Timestamp on update\")\n             .withSupportedItemTypes(CoreItemFactory.DATETIME).build();\n+\n+    ProfileType BUTTON_TOGGLE_SWITCH_TYPE = ProfileTypeBuilder.newTrigger(BUTTON_TOGGLE_SWITCH, \"Toggle Switch\")\n+            .withSupportedItemTypes(CoreItemFactory.SWITCH).build();\n+\n+    ProfileType BUTTON_TOGGLE_PLAYER_TYPE = ProfileTypeBuilder.newTrigger(BUTTON_TOGGLE_PLAYER, \"Toggle Player\")\n+            .withSupportedItemTypes(CoreItemFactory.PLAYER).build();\n+\n+    ProfileType BUTTON_TOGGLE_ROLLERSHUTTER_TYPE = ProfileTypeBuilder\n+            .newTrigger(BUTTON_TOGGLE_ROLLERSHUTTER, \"Toggle Rollershutter\")\n+            .withSupportedItemTypes(CoreItemFactory.ROLLERSHUTTER).build();\n }\n",
    "test_patch": "diff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactoryOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactoryOSGiTest.java\nindex ad256c4e25e..b39b509dd07 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactoryOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/profiles/SystemProfileFactoryOSGiTest.java\n@@ -73,7 +73,7 @@ public void beforeEach() {\n     @Test\n     public void systemProfileTypesAndUidsShouldBeAvailable() {\n         Collection<ProfileTypeUID> systemProfileTypeUIDs = profileFactory.getSupportedProfileTypeUIDs();\n-        assertThat(systemProfileTypeUIDs, hasSize(21));\n+        assertThat(systemProfileTypeUIDs, hasSize(24));\n \n         Collection<ProfileType> systemProfileTypes = profileFactory.getProfileTypes(null);\n         assertThat(systemProfileTypes, hasSize(systemProfileTypeUIDs.size()));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4257",
    "pr_id": 4257,
    "issue_id": 4254,
    "repo": "openhab/openhab-core",
    "problem_statement": "Persisted group items with base type Number:Dimension not restored correctly in persistence extensions\nI have a rule retrieving data from persistence and doing calculations in it. I was able to isolate it and here is a js rule (with a working and failing example), and the result in the log:\r\n\r\n```\r\nvar lastUpdate = time.toZDT('2024-01-01 00:00:00')\r\nconsole.info('last update: ' + lastUpdate);\r\nconsole.info('EVMeterstand state: ' + items.getItem('EVMeterstand')?.state);\r\nconsole.info('EVMeterstand numeric state: ' + items.getItem('EVMeterstand')?.numericState);\r\nconsole.info('EVMeterstand historic state: ' + items.getItem('EVMeterstand').persistence.persistedState(lastUpdate, 'influxdb')?.state);\r\nconsole.info('EVMeterstand numeric historic state: ' + items.getItem('EVMeterstand').persistence.persistedState(lastUpdate, 'influxdb')?.numericState);\r\nconsole.info('EVMeterstand delta calculated: ' + (Quantity(items.getItem('EVMeterstand')?.state).subtract(Quantity(items.getItem('EVMeterstand').persistence.persistedState(lastUpdate, 'influxdb')?.state))));\r\nconsole.info('EVMeterstand numeric delta calculated: ' + (items.getItem('EVMeterstand')?.numericState - items.getItem('EVMeterstand').persistence.persistedState(lastUpdate, 'influxdb')?.numericState));\r\nconsole.info('EVMeterstand delta: ' + items.getItem('EVMeterstand').persistence.deltaSince(lastUpdate, 'influxdb')?.state);\r\nconsole.info('EVMeterstand numeric delta: ' + items.getItem('EVMeterstand').persistence.deltaSince(lastUpdate, 'influxdb')?.numericState);\r\nconsole.info('PVEmeter state: ' + items.getItem('PVEmeter')?.state);\r\nconsole.info('PVEmeter numeric state: ' + items.getItem('PVEmeter')?.numericState);\r\nconsole.info('PVEmeter historic state: ' + items.getItem('PVEmeter').persistence.persistedState(lastUpdate, 'influxdb')?.state);\r\nconsole.info('PVEmeter numeric historic state: ' + items.getItem('PVEmeter').persistence.persistedState(lastUpdate, 'influxdb')?.numericState);\r\nconsole.info('PVEmeter delta calculated: ' + (Quantity(items.getItem('PVEmeter')?.state).subtract(Quantity(items.getItem('PVEmeter').persistence.persistedState(lastUpdate, 'influxdb')?.state))));\r\nconsole.info('PVEmeter numeric delta calculated: ' + (items.getItem('PVEmeter')?.numericState - items.getItem('PVEmeter').persistence.persistedState(lastUpdate, 'influxdb')?.numericState));\r\nconsole.info('PVEmeter delta: ' + items.getItem('PVEmeter').persistence.deltaSince(lastUpdate, 'influxdb')?.state);\r\nconsole.info('PVEmeter numetric delta: ' + items.getItem('PVEmeter').persistence.deltaSince(lastUpdate, 'influxdb')?.numericState);\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n==> /var/log/openhab/openhab.log <==\r\n2024-05-28 17:05:16.005 [INFO ] [nhab.automation.script.ui.scratchpad] - last update: 2024-01-01T00:00+01:00[SYSTEM]\r\n2024-05-28 17:05:16.007 [INFO ] [nhab.automation.script.ui.scratchpad] - EVMeterstand state: 5810.069 kWh\r\n2024-05-28 17:05:16.009 [INFO ] [nhab.automation.script.ui.scratchpad] - EVMeterstand numeric state: 5810.069\r\n2024-05-28 17:05:16.029 [INFO ] [nhab.automation.script.ui.scratchpad] - EVMeterstand historic state: 3907.714 kWh\r\n2024-05-28 17:05:16.050 [INFO ] [nhab.automation.script.ui.scratchpad] - EVMeterstand numeric historic state: 3907.714\r\n2024-05-28 17:05:16.070 [INFO ] [nhab.automation.script.ui.scratchpad] - EVMeterstand delta calculated: 1902.355 kWh\r\n2024-05-28 17:05:16.091 [INFO ] [nhab.automation.script.ui.scratchpad] - EVMeterstand numeric delta calculated: 1902.3550000000005\r\n2024-05-28 17:05:16.112 [INFO ] [nhab.automation.script.ui.scratchpad] - EVMeterstand delta: 1902.355 kWh\r\n2024-05-28 17:05:16.132 [INFO ] [nhab.automation.script.ui.scratchpad] - EVMeterstand numeric delta: 1902.355\r\n2024-05-28 17:05:16.133 [INFO ] [nhab.automation.script.ui.scratchpad] - PVEmeter state: 83936.139597840010000000000000000006714891167827200800000 kWh\r\n2024-05-28 17:05:16.135 [INFO ] [nhab.automation.script.ui.scratchpad] - PVEmeter numeric state: 83936.13959784001\r\n2024-05-28 17:05:16.213 [INFO ] [nhab.automation.script.ui.scratchpad] - PVEmeter historic state: 82105.31879144 kWh\r\n2024-05-28 17:05:16.288 [INFO ] [nhab.automation.script.ui.scratchpad] - PVEmeter numeric historic state: 82105.31879144\r\n2024-05-28 17:05:16.383 [INFO ] [nhab.automation.script.ui.scratchpad] - PVEmeter delta calculated: 1830.820806400010000000000000000000146465664512000800000 kWh\r\n2024-05-28 17:05:16.459 [INFO ] [nhab.automation.script.ui.scratchpad] - PVEmeter numeric delta calculated: 1830.8208064000064\r\n2024-05-28 17:05:16.541 [INFO ] [nhab.automation.script.ui.scratchpad] - PVEmeter delta: undefined\r\n2024-05-28 17:05:16.628 [INFO ] [nhab.automation.script.ui.scratchpad] - PVEmeter numetric delta: undefined\r\n```\r\n\r\nNotice the js deltaSince call fails in the second example. The only reasonable explanation I have is that `PVEmeter` has too many positions and the calculation fails in the persistence extension.\r\nThere may be an error introduced with https://github.com/openhab/openhab-core/pull/3736. I worked through the code and I don't see an obvious reason there.\r\nBut I am also wondering if https://github.com/openhab/openhab-core/pull/4198 could have something to do with it.\r\n\r\nThis is on my production system, and I have not been able so far to replicate this in a development environment.",
    "issue_word_count": 703,
    "test_files_count": 2,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java"
    ],
    "base_commit": "d22e14a1e47bba8c1a38345a4da03c8a87e4a172",
    "head_commit": "8872086a3aa5692656606552d7b0530b865ab563",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4257",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4257",
    "dockerfile": "",
    "pr_merged_at": "2024-07-02T07:27:36.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\nindex 000b1ebbb23..e11a7e5c48f 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n@@ -28,6 +28,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.i18n.TimeZoneProvider;\n+import org.openhab.core.items.GroupItem;\n import org.openhab.core.items.Item;\n import org.openhab.core.library.items.NumberItem;\n import org.openhab.core.library.types.DecimalType;\n@@ -61,6 +62,7 @@\n  * @author Mark Herwege - Changed return types to State for some interval methods to also return unit\n  * @author Mark Herwege - Extended for future dates\n  * @author Mark Herwege - lastChange and nextChange methods\n+ * @author mark Herwege - handle persisted GroupItem with QuantityType\n  */\n @Component(immediate = true)\n @NonNullByDefault\n@@ -980,10 +982,16 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         Iterator<HistoricItem> it = result.iterator();\n         HistoricItem maximumHistoricItem = null;\n \n+        Item baseItem = item;\n+        if (baseItem instanceof GroupItem groupItem) {\n+            baseItem = groupItem.getBaseItem();\n+        }\n+        Unit<?> unit = (baseItem instanceof NumberItem numberItem) ? numberItem.getUnit() : null;\n+\n         DecimalType maximum = null;\n         while (it.hasNext()) {\n             HistoricItem historicItem = it.next();\n-            DecimalType value = historicItem.getState().as(DecimalType.class);\n+            DecimalType value = getPersistedValue(historicItem, unit);\n             if (value != null) {\n                 if (maximum == null || value.compareTo(maximum) > 0) {\n                     maximum = value;\n@@ -1105,10 +1113,16 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         Iterator<HistoricItem> it = result.iterator();\n         HistoricItem minimumHistoricItem = null;\n \n+        Item baseItem = item;\n+        if (baseItem instanceof GroupItem groupItem) {\n+            baseItem = groupItem.getBaseItem();\n+        }\n+        Unit<?> unit = (baseItem instanceof NumberItem numberItem) ? numberItem.getUnit() : null;\n+\n         DecimalType minimum = null;\n         while (it.hasNext()) {\n             HistoricItem historicItem = it.next();\n-            DecimalType value = historicItem.getState().as(DecimalType.class);\n+            DecimalType value = getPersistedValue(historicItem, unit);\n             if (value != null) {\n                 if (minimum == null || value.compareTo(minimum) < 0) {\n                     minimum = value;\n@@ -1231,10 +1245,16 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             BigDecimal average = dt != null ? dt.toBigDecimal() : BigDecimal.ZERO, sum = BigDecimal.ZERO;\n             int count = 0;\n \n+            Item baseItem = item;\n+            if (baseItem instanceof GroupItem groupItem) {\n+                baseItem = groupItem.getBaseItem();\n+            }\n+            Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n+\n             Iterator<HistoricItem> it = result.iterator();\n             while (it.hasNext()) {\n                 HistoricItem historicItem = it.next();\n-                DecimalType value = historicItem.getState().as(DecimalType.class);\n+                DecimalType value = getPersistedValue(historicItem, unit);\n                 if (value != null) {\n                     count++;\n                     sum = sum.add(value.toBigDecimal().subtract(average, MathContext.DECIMAL64).pow(2,\n@@ -1245,11 +1265,8 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             // avoid division by zero\n             if (count > 0) {\n                 BigDecimal variance = sum.divide(BigDecimal.valueOf(count), MathContext.DECIMAL64);\n-                if (item instanceof NumberItem numberItem) {\n-                    Unit<?> unit = numberItem.getUnit();\n-                    if (unit != null) {\n-                        return new QuantityType<>(variance, unit.multiply(unit));\n-                    }\n+                if (unit != null) {\n+                    return new QuantityType<>(variance, unit.multiply(unit));\n                 }\n                 return new DecimalType(variance);\n             }\n@@ -1385,7 +1402,11 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n             // avoid ArithmeticException if variance is less than zero\n             if (dt != null && DecimalType.ZERO.compareTo(dt) <= 0) {\n                 BigDecimal deviation = dt.toBigDecimal().sqrt(MathContext.DECIMAL64);\n-                if (item instanceof NumberItem numberItem) {\n+                Item baseItem = item;\n+                if (baseItem instanceof GroupItem groupItem) {\n+                    baseItem = groupItem.getBaseItem();\n+                }\n+                if (baseItem instanceof NumberItem numberItem) {\n                     Unit<?> unit = numberItem.getUnit();\n                     if (unit != null) {\n                         return new QuantityType<>(deviation, unit);\n@@ -1514,10 +1535,16 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         HistoricItem lastItem = null;\n         ZonedDateTime firstTimestamp = null;\n \n+        Item baseItem = item;\n+        if (baseItem instanceof GroupItem groupItem) {\n+            baseItem = groupItem.getBaseItem();\n+        }\n+        Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n+\n         while (it.hasNext()) {\n             HistoricItem thisItem = it.next();\n             if (lastItem != null) {\n-                DecimalType dtState = lastItem.getState().as(DecimalType.class);\n+                DecimalType dtState = getPersistedValue(lastItem, unit);\n                 if (dtState != null) {\n                     BigDecimal value = dtState.toBigDecimal();\n                     BigDecimal weight = BigDecimal\n@@ -1538,11 +1565,8 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n                 return null;\n             }\n             BigDecimal average = sum.divide(totalDuration, MathContext.DECIMAL64);\n-            if (item instanceof NumberItem numberItem) {\n-                Unit<?> unit = numberItem.getUnit();\n-                if (unit != null) {\n-                    return new QuantityType<>(average, unit);\n-                }\n+            if (unit != null) {\n+                return new QuantityType<>(average, unit);\n             }\n             return new DecimalType(average);\n         }\n@@ -1647,19 +1671,22 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         if (result != null) {\n             Iterator<HistoricItem> it = result.iterator();\n \n+            Item baseItem = item;\n+            if (baseItem instanceof GroupItem groupItem) {\n+                baseItem = groupItem.getBaseItem();\n+            }\n+            Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n+\n             BigDecimal sum = BigDecimal.ZERO;\n             while (it.hasNext()) {\n                 HistoricItem historicItem = it.next();\n-                DecimalType value = historicItem.getState().as(DecimalType.class);\n+                DecimalType value = getPersistedValue(historicItem, unit);\n                 if (value != null) {\n                     sum = sum.add(value.toBigDecimal());\n                 }\n             }\n-            if (item instanceof NumberItem numberItem) {\n-                Unit<?> unit = numberItem.getUnit();\n-                if (unit != null) {\n-                    return new QuantityType<>(sum, unit);\n-                }\n+            if (unit != null) {\n+                return new QuantityType<>(sum, unit);\n             }\n             return new DecimalType(sum);\n         }\n@@ -1768,8 +1795,23 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         }\n         HistoricItem itemStart = internalPersistedState(item, begin, effectiveServiceId);\n         HistoricItem itemStop = internalPersistedState(item, end, effectiveServiceId);\n-        DecimalType valueStart = itemStart != null ? itemStart.getState().as(DecimalType.class) : null;\n-        DecimalType valueStop = itemStop != null ? itemStop.getState().as(DecimalType.class) : null;\n+\n+        Item baseItem = item;\n+        if (baseItem instanceof GroupItem groupItem) {\n+            baseItem = groupItem.getBaseItem();\n+        }\n+        Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n+\n+        DecimalType valueStart = null;\n+        if (itemStart != null) {\n+            valueStart = getPersistedValue(itemStart, unit);\n+        }\n+        DecimalType valueStop = null;\n+        if (itemStop != null) {\n+            valueStop = getPersistedValue(itemStop, unit);\n+\n+        }\n+\n         if (begin == null && end != null && end.isAfter(ZonedDateTime.now())) {\n             valueStart = getItemValue(item);\n         }\n@@ -1779,10 +1821,7 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n \n         if (valueStart != null && valueStop != null) {\n             BigDecimal delta = valueStop.toBigDecimal().subtract(valueStart.toBigDecimal());\n-            if (item instanceof NumberItem numberItem) {\n-                Unit<?> unit = numberItem.getUnit();\n-                return (unit != null) ? new QuantityType<>(delta, unit) : new DecimalType(delta);\n-            }\n+            return (unit != null) ? new QuantityType<>(delta, unit) : new DecimalType(delta);\n         }\n         return null;\n     }\n@@ -1994,10 +2033,26 @@ private static void internalPersist(Item item, TimeSeries timeSeries, @Nullable\n         if (effectiveServiceId == null) {\n             return null;\n         }\n+\n+        Item baseItem = item;\n+        if (baseItem instanceof GroupItem groupItem) {\n+            baseItem = groupItem.getBaseItem();\n+        }\n+        Unit<?> unit = baseItem instanceof NumberItem numberItem ? numberItem.getUnit() : null;\n+\n         HistoricItem itemStart = internalPersistedState(item, begin, effectiveServiceId);\n         HistoricItem itemStop = internalPersistedState(item, end, effectiveServiceId);\n-        DecimalType valueStart = itemStart != null ? itemStart.getState().as(DecimalType.class) : null;\n-        DecimalType valueStop = itemStop != null ? itemStop.getState().as(DecimalType.class) : null;\n+\n+        DecimalType valueStart = null;\n+        if (itemStart != null) {\n+            valueStart = getPersistedValue(itemStart, unit);\n+        }\n+        DecimalType valueStop = null;\n+        if (itemStop != null) {\n+            valueStop = getPersistedValue(itemStop, unit);\n+\n+        }\n+\n         if (begin == null && end != null && end.isAfter(ZonedDateTime.now())) {\n             valueStart = getItemValue(item);\n         }\n@@ -2559,7 +2614,11 @@ private static void internalRemoveAllStatesBetween(Item item, @Nullable ZonedDat\n     }\n \n     private static @Nullable DecimalType getItemValue(Item item) {\n-        if (item instanceof NumberItem numberItem) {\n+        Item baseItem = item;\n+        if (baseItem instanceof GroupItem groupItem) {\n+            baseItem = groupItem.getBaseItem();\n+        }\n+        if (baseItem instanceof NumberItem numberItem) {\n             Unit<?> unit = numberItem.getUnit();\n             if (unit != null) {\n                 QuantityType<?> qt = item.getStateAs(QuantityType.class);\n@@ -2572,6 +2631,29 @@ private static void internalRemoveAllStatesBetween(Item item, @Nullable ZonedDat\n         return item.getStateAs(DecimalType.class);\n     }\n \n+    private static @Nullable DecimalType getPersistedValue(HistoricItem historicItem, @Nullable Unit<?> unit) {\n+        State state = historicItem.getState();\n+        if (unit != null) {\n+            if (state instanceof QuantityType<?> qtState) {\n+                qtState = qtState.toUnit(unit);\n+                if (qtState != null) {\n+                    state = qtState;\n+                } else {\n+                    LoggerFactory.getLogger(PersistenceExtensions.class).warn(\n+                            \"Unit of state {} at time {} retrieved from persistence not compatible with item unit {} for item {}\",\n+                            state, historicItem.getTimestamp(), unit, historicItem.getName());\n+                    return null;\n+                }\n+            } else {\n+                LoggerFactory.getLogger(PersistenceExtensions.class).warn(\n+                        \"Item {} is QuantityType but state {} at time {} retrieved from persistence has no unit\",\n+                        historicItem.getName(), historicItem.getState(), historicItem.getTimestamp());\n+                return null;\n+            }\n+        }\n+        return state.as(DecimalType.class);\n+    }\n+\n     private static @Nullable HistoricItem historicItemOrCurrentState(Item item, @Nullable HistoricItem historicItem) {\n         if (historicItem == null) {\n             // there are no historic states we couldn't determine a value, construct a HistoricItem from the current\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\nindex 2e593a86045..fd28de805d9 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n@@ -40,9 +40,11 @@\n import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.i18n.UnitProvider;\n import org.openhab.core.items.GenericItem;\n+import org.openhab.core.items.GroupItem;\n import org.openhab.core.items.ItemRegistry;\n import org.openhab.core.items.ItemUtil;\n import org.openhab.core.library.CoreItemFactory;\n+import org.openhab.core.library.types.ArithmeticGroupFunction;\n import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.library.types.QuantityType;\n import org.openhab.core.library.unit.SIUnits;\n@@ -67,13 +69,14 @@ public class PersistenceExtensionsTest {\n \n     public static final String TEST_NUMBER = \"testNumber\";\n     public static final String TEST_QUANTITY_NUMBER = \"testQuantityNumber\";\n+    public static final String TEST_GROUP_QUANTITY_NUMBER = \"testGroupQuantityNumber\";\n     public static final String TEST_SWITCH = \"testSwitch\";\n \n     private @Mock @NonNullByDefault({}) ItemRegistry itemRegistryMock;\n     private @Mock @NonNullByDefault({}) UnitProvider unitProviderMock;\n     private @Mock @NonNullByDefault({}) TimeZoneProvider timeZoneProviderMock;\n \n-    private @NonNullByDefault({}) GenericItem numberItem, quantityItem, switchItem;\n+    private @NonNullByDefault({}) GenericItem numberItem, quantityItem, groupQuantityItem, switchItem;\n \n     @BeforeEach\n     public void setUp() {\n@@ -85,13 +88,21 @@ public void setUp() {\n                 TEST_QUANTITY_NUMBER);\n         switchItem = itemFactory.createItem(CoreItemFactory.SWITCH, TEST_SWITCH);\n \n+        GenericItem baseItem = itemFactory\n+                .createItem(CoreItemFactory.NUMBER + ItemUtil.EXTENSION_SEPARATOR + \"Temperature\", \"testGroupBaseItem\");\n+        GroupItem groupItem = new GroupItem(TEST_GROUP_QUANTITY_NUMBER, baseItem, new ArithmeticGroupFunction.Sum());\n+        groupItem.addMember(quantityItem);\n+        groupQuantityItem = groupItem;\n+\n         numberItem.setState(STATE);\n         quantityItem.setState(new QuantityType<Temperature>(STATE, SIUnits.CELSIUS));\n+        groupQuantityItem.setState(new QuantityType<Temperature>(STATE, SIUnits.CELSIUS));\n         switchItem.setState(SWITCH_STATE);\n \n         when(itemRegistryMock.get(TEST_NUMBER)).thenReturn(numberItem);\n         when(itemRegistryMock.get(TEST_QUANTITY_NUMBER)).thenReturn(quantityItem);\n         when(itemRegistryMock.get(TEST_SWITCH)).thenReturn(switchItem);\n+        when(itemRegistryMock.get(TEST_GROUP_QUANTITY_NUMBER)).thenReturn(groupQuantityItem);\n \n         when(timeZoneProviderMock.getTimeZone()).thenReturn(ZoneId.systemDefault());\n \n@@ -232,6 +243,62 @@ public void testPersistedStateQuantityType() {\n         assertNull(historicItem);\n     }\n \n+    @Test\n+    public void testPersistedStateGroupQuantityType() {\n+        HistoricItem historicItem = PersistenceExtensions.persistedState(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_END, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertEquals(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS), historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.persistedState(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 12, 31, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_INTERMEDIATE_VALUE_1), SIUnits.CELSIUS),\n+                historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.persistedState(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_INTERMEDIATE_VALUE_1), SIUnits.CELSIUS),\n+                historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.persistedState(groupQuantityItem, ZonedDateTime.now(), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS), historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.persistedState(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_NOVALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS), historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.persistedState(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(FUTURE_START), SIUnits.CELSIUS), historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.persistedState(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(FUTURE_INTERMEDIATE_VALUE_3), SIUnits.CELSIUS), historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.persistedState(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_END, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(FUTURE_END), SIUnits.CELSIUS), historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.persistedState(groupQuantityItem,\n+                ZonedDateTime.of(AFTER_END, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(FUTURE_END), SIUnits.CELSIUS), historicItem.getState());\n+\n+        // default persistence service\n+        historicItem = PersistenceExtensions.persistedState(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertNull(historicItem);\n+    }\n+\n     @Test\n     public void testPersistedStateOnOffType() {\n         ZonedDateTime now = ZonedDateTime.now().truncatedTo(ChronoUnit.HOURS).minusMinutes(1);\n@@ -415,6 +482,89 @@ public void testMaximumBetweenQuantityType() {\n         assertNull(historicItem);\n     }\n \n+    @Test\n+    public void testMaximumSinceGroupQuantityType() {\n+        HistoricItem historicItem = PersistenceExtensions.maximumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_END, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertThat(historicItem.getState(), is(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS)));\n+\n+        historicItem = PersistenceExtensions.maximumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS)));\n+        assertThat(historicItem.getTimestamp(),\n+                is(ZonedDateTime.of(HISTORIC_END, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault())));\n+\n+        // default persistence service\n+        historicItem = PersistenceExtensions.maximumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertNull(historicItem);\n+\n+        // test with alternative unit\n+        groupQuantityItem.setState(QuantityType.valueOf(5000, Units.KELVIN));\n+        historicItem = PersistenceExtensions.maximumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_END, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertThat(historicItem.getState(), is(new QuantityType<>(4726.85, SIUnits.CELSIUS)));\n+    }\n+\n+    @Test\n+    public void testMaximumUntilGroupQuantityType() {\n+        HistoricItem historicItem = PersistenceExtensions.maximumUntil(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertEquals(new QuantityType<>(value(FUTURE_START), SIUnits.CELSIUS), historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.maximumUntil(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(FUTURE_INTERMEDIATE_VALUE_3), SIUnits.CELSIUS), historicItem.getState());\n+        assertEquals(ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                historicItem.getTimestamp());\n+\n+        // default persistence service\n+        historicItem = PersistenceExtensions.maximumUntil(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertNull(historicItem);\n+    }\n+\n+    @Test\n+    public void testMaximumBetweenGroupQuantityType() {\n+        HistoricItem historicItem = PersistenceExtensions.maximumBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertThat(historicItem.getState(),\n+                is(new QuantityType<>(value(HISTORIC_INTERMEDIATE_VALUE_2), SIUnits.CELSIUS)));\n+\n+        historicItem = PersistenceExtensions.maximumBetween(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertThat(historicItem.getState(),\n+                is(new QuantityType<>(value(FUTURE_INTERMEDIATE_VALUE_4), SIUnits.CELSIUS)));\n+\n+        historicItem = PersistenceExtensions.maximumBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertThat(historicItem.getState(),\n+                is(new QuantityType<>(value(FUTURE_INTERMEDIATE_VALUE_4), SIUnits.CELSIUS)));\n+\n+        // default persistence service\n+        historicItem = PersistenceExtensions.maximumBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertNull(historicItem);\n+    }\n+\n     @Test\n     public void testMaximumSinceOnOffType() {\n         ZonedDateTime now = ZonedDateTime.now();\n@@ -616,6 +766,88 @@ public void testMinimumBetweenQuantityType() {\n         assertNull(historicItem);\n     }\n \n+    @Test\n+    public void testMinimumSinceGroupQuantityType() {\n+        HistoricItem historicItem = PersistenceExtensions.minimumSince(groupQuantityItem,\n+                ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertEquals(new QuantityType<>(value(HISTORIC_START), SIUnits.CELSIUS), historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.minimumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_INTERMEDIATE_VALUE_1), SIUnits.CELSIUS),\n+                historicItem.getState());\n+        assertEquals(ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                historicItem.getTimestamp());\n+\n+        // default persistence service\n+        historicItem = PersistenceExtensions.minimumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertNull(historicItem);\n+\n+        // test with alternative unit\n+        groupQuantityItem.setState(QuantityType.valueOf(273.15, Units.KELVIN));\n+        historicItem = PersistenceExtensions.minimumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_END, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertThat(historicItem.getState(), is(new QuantityType<>(0, SIUnits.CELSIUS)));\n+    }\n+\n+    @Test\n+    public void testMinimumUntilGroupQuantityType() {\n+        HistoricItem historicItem = PersistenceExtensions.minimumUntil(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertEquals(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS), historicItem.getState());\n+\n+        historicItem = PersistenceExtensions.minimumUntil(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS), historicItem.getState());\n+\n+        // default persistence service\n+        historicItem = PersistenceExtensions.minimumUntil(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertNull(historicItem);\n+    }\n+\n+    @Test\n+    public void testMinimumBetweenGroupQuantityType() {\n+        HistoricItem historicItem = PersistenceExtensions.minimumBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertThat(historicItem.getState(),\n+                is(new QuantityType<>(value(HISTORIC_INTERMEDIATE_VALUE_1), SIUnits.CELSIUS)));\n+\n+        historicItem = PersistenceExtensions.minimumBetween(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertThat(historicItem.getState(),\n+                is(new QuantityType<>(value(FUTURE_INTERMEDIATE_VALUE_3), SIUnits.CELSIUS)));\n+\n+        historicItem = PersistenceExtensions.minimumBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(historicItem);\n+        assertThat(historicItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertThat(historicItem.getState(),\n+                is(new QuantityType<>(value(HISTORIC_INTERMEDIATE_VALUE_1), SIUnits.CELSIUS)));\n+\n+        // default persistence service\n+        historicItem = PersistenceExtensions.minimumBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertNull(historicItem);\n+    }\n+\n     @Test\n     public void testMinimumSinceOnOffType() {\n         ZonedDateTime now = ZonedDateTime.now();\n@@ -844,6 +1076,109 @@ public void testVarianceBetweenQuantityType() {\n         assertNull(variance);\n     }\n \n+    @Test\n+    public void testVarianceSinceGroupQuantityType() {\n+        ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+\n+        double expected = DoubleStream\n+                .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END)\n+                        .mapToDouble(i -> Double.valueOf(i)), DoubleStream.of(STATE.doubleValue()))\n+                .map(d -> Math.pow(d - expectedAverage, 2)).sum()\n+                / (HISTORIC_END + 1 - HISTORIC_INTERMEDIATE_VALUE_1 + 1);\n+        State variance = PersistenceExtensions.varianceSince(groupQuantityItem, startStored, SERVICE_ID);\n+        assertNotNull(variance);\n+        QuantityType<?> qt = variance.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS.multiply(SIUnits.CELSIUS), qt.getUnit());\n+\n+        // default persistence service\n+        variance = PersistenceExtensions.varianceSince(groupQuantityItem, startStored);\n+        assertNull(variance);\n+    }\n+\n+    @Test\n+    public void testVarianceUntilGroupQuantityType() {\n+        ZonedDateTime endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expectedAverage = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+\n+        double expected = DoubleStream\n+                .concat(DoubleStream.of(STATE.doubleValue()),\n+                        IntStream.rangeClosed(FUTURE_START, FUTURE_INTERMEDIATE_VALUE_3)\n+                                .mapToDouble(i -> Double.valueOf(i)))\n+                .map(d -> Math.pow(d - expectedAverage, 2)).sum()\n+                / (1 + FUTURE_INTERMEDIATE_VALUE_3 - FUTURE_START + 1);\n+        State variance = PersistenceExtensions.varianceUntil(groupQuantityItem, endStored, SERVICE_ID);\n+        assertNotNull(variance);\n+        QuantityType<?> qt = variance.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS.multiply(SIUnits.CELSIUS), qt.getUnit());\n+\n+        // default persistence service\n+        variance = PersistenceExtensions.varianceUntil(groupQuantityItem, endStored);\n+        assertNull(variance);\n+    }\n+\n+    @Test\n+    public void testVarianceBetweenGroupQuantityType() {\n+        ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expectedAverage1 = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+\n+        double expected = IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2)\n+                .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage1, 2)).sum()\n+                / (HISTORIC_INTERMEDIATE_VALUE_2 - HISTORIC_INTERMEDIATE_VALUE_1 + 1);\n+\n+        State variance = PersistenceExtensions.varianceBetween(groupQuantityItem, startStored, endStored, SERVICE_ID);\n+        assertNotNull(variance);\n+        QuantityType<?> qt = variance.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS.multiply(SIUnits.CELSIUS), qt.getUnit());\n+\n+        startStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expectedAverage2 = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+\n+        expected = IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4)\n+                .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage2, 2)).sum()\n+                / (FUTURE_INTERMEDIATE_VALUE_4 - FUTURE_INTERMEDIATE_VALUE_3 + 1);\n+\n+        variance = PersistenceExtensions.varianceBetween(groupQuantityItem, startStored, endStored, SERVICE_ID);\n+        assertNotNull(variance);\n+        qt = variance.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS.multiply(SIUnits.CELSIUS), qt.getUnit());\n+\n+        startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expectedAverage3 = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+\n+        expected = IntStream\n+                .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END),\n+                        IntStream.rangeClosed(FUTURE_START, FUTURE_INTERMEDIATE_VALUE_3))\n+                .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage3, 2)).sum()\n+                / (FUTURE_INTERMEDIATE_VALUE_3 - FUTURE_START + 1 + HISTORIC_END - HISTORIC_INTERMEDIATE_VALUE_1 + 1);\n+\n+        variance = PersistenceExtensions.varianceBetween(groupQuantityItem, startStored, endStored, SERVICE_ID);\n+        assertNotNull(variance);\n+        qt = variance.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS.multiply(SIUnits.CELSIUS), qt.getUnit());\n+\n+        // default persistence service\n+        variance = PersistenceExtensions.varianceBetween(groupQuantityItem, startStored, endStored);\n+        assertNull(variance);\n+    }\n+\n     @Test\n     public void testDeviationSinceDecimalType() {\n         ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n@@ -930,19 +1265,121 @@ public void testDeviationBetweenDecimalType() {\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage3, 2)).sum()\n                 / (FUTURE_INTERMEDIATE_VALUE_3 - FUTURE_START + 1 + HISTORIC_END - HISTORIC_INTERMEDIATE_VALUE_1 + 1));\n \n-        deviation = PersistenceExtensions.deviationBetween(numberItem, startStored, endStored, SERVICE_ID);\n+        deviation = PersistenceExtensions.deviationBetween(numberItem, startStored, endStored, SERVICE_ID);\n+        assertNotNull(deviation);\n+        dt = deviation.as(DecimalType.class);\n+        assertNotNull(dt);\n+        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+\n+        // default persistence service\n+        deviation = PersistenceExtensions.deviationBetween(numberItem, startStored, endStored);\n+        assertNull(deviation);\n+    }\n+\n+    @Test\n+    public void testDeviationSinceQuantityType() {\n+        ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+\n+        double expected = Math.sqrt(DoubleStream\n+                .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END)\n+                        .mapToDouble(i -> Double.valueOf(i)), DoubleStream.of(STATE.doubleValue()))\n+                .map(d -> Math.pow(d - expectedAverage, 2)).sum()\n+                / (HISTORIC_END + 1 - HISTORIC_INTERMEDIATE_VALUE_1 + 1));\n+        State deviation = PersistenceExtensions.deviationSince(quantityItem, startStored, SERVICE_ID);\n+        assertNotNull(deviation);\n+        QuantityType<?> qt = deviation.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        deviation = PersistenceExtensions.deviationSince(quantityItem, startStored);\n+        assertNull(deviation);\n+    }\n+\n+    @Test\n+    public void testDeviationUntilQuantityType() {\n+        ZonedDateTime endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expectedAverage = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+\n+        double expected = Math.sqrt(DoubleStream\n+                .concat(DoubleStream.of(STATE.doubleValue()),\n+                        IntStream.rangeClosed(FUTURE_START, FUTURE_INTERMEDIATE_VALUE_3)\n+                                .mapToDouble(i -> Double.valueOf(i)))\n+                .map(d -> Math.pow(d - expectedAverage, 2)).sum()\n+                / (1 + FUTURE_INTERMEDIATE_VALUE_3 - FUTURE_START + 1));\n+        State deviation = PersistenceExtensions.deviationUntil(quantityItem, endStored, SERVICE_ID);\n+        assertNotNull(deviation);\n+        QuantityType<?> qt = deviation.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        deviation = PersistenceExtensions.deviationUntil(quantityItem, endStored);\n+        assertNull(deviation);\n+    }\n+\n+    @Test\n+    public void testDeviationBetweenQuantityType() {\n+        ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+\n+        double expected = Math.sqrt(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2)\n+                .mapToDouble(i -> Double.parseDouble(Integer.toString(i))).map(d -> Math.pow(d - expectedAverage, 2))\n+                .sum() / (HISTORIC_INTERMEDIATE_VALUE_2 - HISTORIC_INTERMEDIATE_VALUE_1 + 1));\n+        State deviation = PersistenceExtensions.deviationBetween(quantityItem, startStored, endStored, SERVICE_ID);\n+        assertNotNull(deviation);\n+        QuantityType<?> qt = deviation.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        startStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expectedAverage2 = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+\n+        expected = Math.sqrt(IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4)\n+                .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage2, 2)).sum()\n+                / (FUTURE_INTERMEDIATE_VALUE_4 - FUTURE_INTERMEDIATE_VALUE_3 + 1));\n+\n+        deviation = PersistenceExtensions.deviationBetween(quantityItem, startStored, endStored, SERVICE_ID);\n+        assertNotNull(deviation);\n+        qt = deviation.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expectedAverage3 = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+\n+        expected = Math.sqrt(IntStream\n+                .concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END),\n+                        IntStream.rangeClosed(FUTURE_START, FUTURE_INTERMEDIATE_VALUE_3))\n+                .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage3, 2)).sum()\n+                / (FUTURE_INTERMEDIATE_VALUE_3 - FUTURE_START + 1 + HISTORIC_END - HISTORIC_INTERMEDIATE_VALUE_1 + 1));\n+\n+        deviation = PersistenceExtensions.deviationBetween(quantityItem, startStored, endStored, SERVICE_ID);\n         assertNotNull(deviation);\n-        dt = deviation.as(DecimalType.class);\n-        assertNotNull(dt);\n-        assertThat(dt.doubleValue(), is(closeTo(expected, 0.01)));\n+        qt = deviation.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n         // default persistence service\n-        deviation = PersistenceExtensions.deviationBetween(numberItem, startStored, endStored);\n+        deviation = PersistenceExtensions.deviationBetween(quantityItem, startStored, endStored);\n         assertNull(deviation);\n     }\n \n     @Test\n-    public void testDeviationSinceQuantityType() {\n+    public void testDeviationSinceGroupQuantityType() {\n         ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n         double expectedAverage = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n@@ -952,7 +1389,7 @@ public void testDeviationSinceQuantityType() {\n                         .mapToDouble(i -> Double.valueOf(i)), DoubleStream.of(STATE.doubleValue()))\n                 .map(d -> Math.pow(d - expectedAverage, 2)).sum()\n                 / (HISTORIC_END + 1 - HISTORIC_INTERMEDIATE_VALUE_1 + 1));\n-        State deviation = PersistenceExtensions.deviationSince(quantityItem, startStored, SERVICE_ID);\n+        State deviation = PersistenceExtensions.deviationSince(groupQuantityItem, startStored, SERVICE_ID);\n         assertNotNull(deviation);\n         QuantityType<?> qt = deviation.as(QuantityType.class);\n         assertNotNull(qt);\n@@ -960,12 +1397,12 @@ public void testDeviationSinceQuantityType() {\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n         // default persistence service\n-        deviation = PersistenceExtensions.deviationSince(quantityItem, startStored);\n+        deviation = PersistenceExtensions.deviationSince(groupQuantityItem, startStored);\n         assertNull(deviation);\n     }\n \n     @Test\n-    public void testDeviationUntilQuantityType() {\n+    public void testDeviationUntilGroupQuantityType() {\n         ZonedDateTime endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n         double expectedAverage = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n@@ -976,7 +1413,7 @@ public void testDeviationUntilQuantityType() {\n                                 .mapToDouble(i -> Double.valueOf(i)))\n                 .map(d -> Math.pow(d - expectedAverage, 2)).sum()\n                 / (1 + FUTURE_INTERMEDIATE_VALUE_3 - FUTURE_START + 1));\n-        State deviation = PersistenceExtensions.deviationUntil(quantityItem, endStored, SERVICE_ID);\n+        State deviation = PersistenceExtensions.deviationUntil(groupQuantityItem, endStored, SERVICE_ID);\n         assertNotNull(deviation);\n         QuantityType<?> qt = deviation.as(QuantityType.class);\n         assertNotNull(qt);\n@@ -984,12 +1421,12 @@ public void testDeviationUntilQuantityType() {\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n         // default persistence service\n-        deviation = PersistenceExtensions.deviationUntil(quantityItem, endStored);\n+        deviation = PersistenceExtensions.deviationUntil(groupQuantityItem, endStored);\n         assertNull(deviation);\n     }\n \n     @Test\n-    public void testDeviationBetweenQuantityType() {\n+    public void testDeviationBetweenGroupQuantityType() {\n         ZonedDateTime startStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n                 ZoneId.systemDefault());\n         ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n@@ -999,7 +1436,7 @@ public void testDeviationBetweenQuantityType() {\n         double expected = Math.sqrt(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2)\n                 .mapToDouble(i -> Double.parseDouble(Integer.toString(i))).map(d -> Math.pow(d - expectedAverage, 2))\n                 .sum() / (HISTORIC_INTERMEDIATE_VALUE_2 - HISTORIC_INTERMEDIATE_VALUE_1 + 1));\n-        State deviation = PersistenceExtensions.deviationBetween(quantityItem, startStored, endStored, SERVICE_ID);\n+        State deviation = PersistenceExtensions.deviationBetween(groupQuantityItem, startStored, endStored, SERVICE_ID);\n         assertNotNull(deviation);\n         QuantityType<?> qt = deviation.as(QuantityType.class);\n         assertNotNull(qt);\n@@ -1014,7 +1451,7 @@ public void testDeviationBetweenQuantityType() {\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage2, 2)).sum()\n                 / (FUTURE_INTERMEDIATE_VALUE_4 - FUTURE_INTERMEDIATE_VALUE_3 + 1));\n \n-        deviation = PersistenceExtensions.deviationBetween(quantityItem, startStored, endStored, SERVICE_ID);\n+        deviation = PersistenceExtensions.deviationBetween(groupQuantityItem, startStored, endStored, SERVICE_ID);\n         assertNotNull(deviation);\n         qt = deviation.as(QuantityType.class);\n         assertNotNull(qt);\n@@ -1031,7 +1468,7 @@ public void testDeviationBetweenQuantityType() {\n                 .mapToDouble(i -> Double.valueOf(i)).map(d -> Math.pow(d - expectedAverage3, 2)).sum()\n                 / (FUTURE_INTERMEDIATE_VALUE_3 - FUTURE_START + 1 + HISTORIC_END - HISTORIC_INTERMEDIATE_VALUE_1 + 1));\n \n-        deviation = PersistenceExtensions.deviationBetween(quantityItem, startStored, endStored, SERVICE_ID);\n+        deviation = PersistenceExtensions.deviationBetween(groupQuantityItem, startStored, endStored, SERVICE_ID);\n         assertNotNull(deviation);\n         qt = deviation.as(QuantityType.class);\n         assertNotNull(qt);\n@@ -1039,7 +1476,7 @@ public void testDeviationBetweenQuantityType() {\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n         // default persistence service\n-        deviation = PersistenceExtensions.deviationBetween(quantityItem, startStored, endStored);\n+        deviation = PersistenceExtensions.deviationBetween(groupQuantityItem, startStored, endStored);\n         assertNull(deviation);\n     }\n \n@@ -1203,6 +1640,89 @@ public void testAverageBetweenQuantityType() {\n         assertNull(average);\n     }\n \n+    @Test\n+    public void testAverageSinceGroupQuantityType() {\n+        ZonedDateTime start = ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = average(BEFORE_START, null);\n+        State average = PersistenceExtensions.averageSince(groupQuantityItem, start, SERVICE_ID);\n+        assertNotNull(average);\n+        QuantityType<?> qt = average.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        start = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = average(HISTORIC_INTERMEDIATE_VALUE_1, null);\n+        average = PersistenceExtensions.averageSince(groupQuantityItem, start, SERVICE_ID);\n+        assertNotNull(average);\n+        qt = average.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        average = PersistenceExtensions.averageSince(groupQuantityItem, start);\n+        assertNull(average);\n+    }\n+\n+    @Test\n+    public void testAverageUntilGroupQuantityType() {\n+        ZonedDateTime end = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        double expected = average(null, FUTURE_INTERMEDIATE_VALUE_3);\n+        State average = PersistenceExtensions.averageUntil(groupQuantityItem, end, SERVICE_ID);\n+        assertNotNull(average);\n+        QuantityType<?> qt = average.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(expected, qt.doubleValue(), 0.01);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        average = PersistenceExtensions.averageUntil(groupQuantityItem, end);\n+        assertNull(average);\n+    }\n+\n+    @Test\n+    public void testAverageBetweenGroupQuantityType() {\n+        ZonedDateTime beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        ZonedDateTime endStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0,\n+                ZoneId.systemDefault());\n+        double expected = average(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2);\n+        State average = PersistenceExtensions.averageBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n+\n+        assertNotNull(average);\n+        QuantityType<?> qt = average.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        beginStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = average(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4);\n+\n+        average = PersistenceExtensions.averageBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n+        assertNotNull(average);\n+        qt = average.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        beginStored = ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        endStored = ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault());\n+        expected = average(HISTORIC_INTERMEDIATE_VALUE_1, FUTURE_INTERMEDIATE_VALUE_3);\n+\n+        average = PersistenceExtensions.averageBetween(groupQuantityItem, beginStored, endStored, SERVICE_ID);\n+        assertNotNull(average);\n+        qt = average.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertThat(qt.doubleValue(), is(closeTo(expected, 0.01)));\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        average = PersistenceExtensions.averageBetween(groupQuantityItem, beginStored, endStored);\n+        assertNull(average);\n+    }\n+\n     @Test\n     public void testAverageSinceOnOffType() {\n         // switch is 5h ON, 5h OFF, and 5h ON (until now)\n@@ -1472,7 +1992,87 @@ public void testSumUntilQuantityType() {\n \n     @Test\n     public void testSumBetweenQuantityType() {\n-        State sum = PersistenceExtensions.sumBetween(quantityItem,\n+        State sum = PersistenceExtensions.sumBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(sum);\n+        QuantityType<?> qt = sum.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_INTERMEDIATE_VALUE_2).sum(),\n+                qt.doubleValue(), 0.001);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        sum = PersistenceExtensions.sumBetween(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(sum);\n+        qt = sum.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4).sum(),\n+                qt.doubleValue(), 0.001);\n+\n+        sum = PersistenceExtensions.sumBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(sum);\n+        qt = sum.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(\n+                IntStream.concat(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END),\n+                        IntStream.rangeClosed(FUTURE_START, FUTURE_INTERMEDIATE_VALUE_3)).sum(),\n+                qt.doubleValue(), 0.001);\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.sumBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+\n+        assertNull(sum);\n+    }\n+\n+    @Test\n+    public void testSumSinceGroupQuantityType() {\n+        State sum = PersistenceExtensions.sumSince(groupQuantityItem,\n+                ZonedDateTime.of(BEFORE_START, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(sum);\n+        QuantityType<?> qt = sum.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(IntStream.rangeClosed(HISTORIC_START, HISTORIC_END).sum(), qt.doubleValue(), 0.001);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        sum = PersistenceExtensions.sumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(sum);\n+        qt = sum.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(IntStream.rangeClosed(HISTORIC_INTERMEDIATE_VALUE_1, HISTORIC_END).sum(), qt.doubleValue(), 0.001);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.sumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertNull(sum);\n+    }\n+\n+    @Test\n+    public void testSumUntilGroupQuantityType() {\n+        State sum = PersistenceExtensions.sumUntil(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(sum);\n+        QuantityType<?> qt = sum.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(IntStream.rangeClosed(FUTURE_START, FUTURE_INTERMEDIATE_VALUE_3).sum(), qt.doubleValue(), 0.001);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n+        // default persistence service\n+        sum = PersistenceExtensions.sumSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertNull(sum);\n+    }\n+\n+    @Test\n+    public void testSumBetweenGroupQuantityType() {\n+        State sum = PersistenceExtensions.sumBetween(groupQuantityItem,\n                 ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n                 ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n         assertNotNull(sum);\n@@ -1482,7 +2082,7 @@ public void testSumBetweenQuantityType() {\n                 qt.doubleValue(), 0.001);\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n-        sum = PersistenceExtensions.sumBetween(quantityItem,\n+        sum = PersistenceExtensions.sumBetween(groupQuantityItem,\n                 ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n                 ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n         assertNotNull(sum);\n@@ -1491,7 +2091,7 @@ public void testSumBetweenQuantityType() {\n         assertEquals(IntStream.rangeClosed(FUTURE_INTERMEDIATE_VALUE_3, FUTURE_INTERMEDIATE_VALUE_4).sum(),\n                 qt.doubleValue(), 0.001);\n \n-        sum = PersistenceExtensions.sumBetween(quantityItem,\n+        sum = PersistenceExtensions.sumBetween(groupQuantityItem,\n                 ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n                 ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n         assertNotNull(sum);\n@@ -1503,7 +2103,7 @@ public void testSumBetweenQuantityType() {\n                 qt.doubleValue(), 0.001);\n \n         // default persistence service\n-        sum = PersistenceExtensions.sumBetween(quantityItem,\n+        sum = PersistenceExtensions.sumBetween(groupQuantityItem,\n                 ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n                 ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n \n@@ -1579,6 +2179,16 @@ public void testDeltaSince() {\n         assertEquals(qtState.doubleValue() - HISTORIC_INTERMEDIATE_VALUE_1, qt.doubleValue(), 0.001);\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n+        delta = PersistenceExtensions.deltaSince(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(delta);\n+        qt = delta.as(QuantityType.class);\n+        assertNotNull(qt);\n+        qtState = groupQuantityItem.getState().as(QuantityType.class);\n+        assertNotNull(qtState);\n+        assertEquals(qtState.doubleValue() - HISTORIC_INTERMEDIATE_VALUE_1, qt.doubleValue(), 0.001);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n         // default persistence service\n         delta = PersistenceExtensions.deltaSince(numberItem,\n                 ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n@@ -1606,6 +2216,16 @@ public void testDeltaUntil() {\n         assertEquals(FUTURE_INTERMEDIATE_VALUE_3 - dtState.doubleValue(), qt.doubleValue(), 0.001);\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n+        delta = PersistenceExtensions.deltaUntil(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(delta);\n+        qt = delta.as(QuantityType.class);\n+        assertNotNull(qt);\n+        qtState = groupQuantityItem.getState().as(QuantityType.class);\n+        assertNotNull(qtState);\n+        assertEquals(FUTURE_INTERMEDIATE_VALUE_3 - dtState.doubleValue(), qt.doubleValue(), 0.001);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n         // default persistence service\n         delta = PersistenceExtensions.deltaUntil(numberItem,\n                 ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n@@ -1631,6 +2251,15 @@ public void testDeltaBetween() {\n         assertEquals(HISTORIC_INTERMEDIATE_VALUE_2 - HISTORIC_INTERMEDIATE_VALUE_1, qt.doubleValue(), 0.001);\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n+        delta = PersistenceExtensions.deltaBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_2, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(delta);\n+        qt = delta.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(HISTORIC_INTERMEDIATE_VALUE_2 - HISTORIC_INTERMEDIATE_VALUE_1, qt.doubleValue(), 0.001);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n         delta = PersistenceExtensions.deltaBetween(numberItem,\n                 ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n                 ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n@@ -1648,6 +2277,15 @@ public void testDeltaBetween() {\n         assertEquals(FUTURE_INTERMEDIATE_VALUE_4 - FUTURE_INTERMEDIATE_VALUE_3, qt.doubleValue(), 0.001);\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n+        delta = PersistenceExtensions.deltaBetween(groupQuantityItem,\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_4, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(delta);\n+        qt = delta.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(FUTURE_INTERMEDIATE_VALUE_4 - FUTURE_INTERMEDIATE_VALUE_3, qt.doubleValue(), 0.001);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n         delta = PersistenceExtensions.deltaBetween(numberItem,\n                 ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n                 ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n@@ -1665,6 +2303,15 @@ public void testDeltaBetween() {\n         assertEquals(FUTURE_INTERMEDIATE_VALUE_3 - HISTORIC_INTERMEDIATE_VALUE_1, qt.doubleValue(), 0.001);\n         assertEquals(SIUnits.CELSIUS, qt.getUnit());\n \n+        delta = PersistenceExtensions.deltaBetween(groupQuantityItem,\n+                ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(FUTURE_INTERMEDIATE_VALUE_3, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), SERVICE_ID);\n+        assertNotNull(delta);\n+        qt = delta.as(QuantityType.class);\n+        assertNotNull(qt);\n+        assertEquals(FUTURE_INTERMEDIATE_VALUE_3 - HISTORIC_INTERMEDIATE_VALUE_1, qt.doubleValue(), 0.001);\n+        assertEquals(SIUnits.CELSIUS, qt.getUnit());\n+\n         // default persistence service\n         delta = PersistenceExtensions.deltaBetween(numberItem,\n                 ZonedDateTime.of(HISTORIC_INTERMEDIATE_VALUE_1, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n@@ -1841,6 +2488,33 @@ public void testPreviousStateQuantityTypeNoSkip() {\n         assertNull(prevStateItem);\n     }\n \n+    @Test\n+    public void testPreviousStateGroupQuantityTypeNoSkip() {\n+        HistoricItem prevStateItem = PersistenceExtensions.previousState(groupQuantityItem, false, SERVICE_ID);\n+        assertNotNull(prevStateItem);\n+        assertThat(prevStateItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertEquals(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS), prevStateItem.getState());\n+\n+        groupQuantityItem.setState(QuantityType.valueOf(4321, SIUnits.CELSIUS));\n+        prevStateItem = PersistenceExtensions.previousState(groupQuantityItem, false, SERVICE_ID);\n+        assertNotNull(prevStateItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS), prevStateItem.getState());\n+\n+        groupQuantityItem.setState(QuantityType.valueOf(HISTORIC_END, SIUnits.CELSIUS));\n+        prevStateItem = PersistenceExtensions.previousState(groupQuantityItem, false, SERVICE_ID);\n+        assertNotNull(prevStateItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS), prevStateItem.getState());\n+\n+        groupQuantityItem.setState(QuantityType.valueOf(3025, SIUnits.CELSIUS));\n+        prevStateItem = PersistenceExtensions.previousState(groupQuantityItem, false, SERVICE_ID);\n+        assertNotNull(prevStateItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_END), SIUnits.CELSIUS), prevStateItem.getState());\n+\n+        // default persistence service\n+        prevStateItem = PersistenceExtensions.previousState(groupQuantityItem, false);\n+        assertNull(prevStateItem);\n+    }\n+\n     @Test\n     public void testPreviousStateDecimalTypeSkip() {\n         numberItem.setState(new DecimalType(HISTORIC_END));\n@@ -1865,6 +2539,18 @@ public void testPreviousStateQuantityTypeSkip() {\n         assertNull(prevStateItem);\n     }\n \n+    @Test\n+    public void testPreviousStateGroupQuantityTypeSkip() {\n+        groupQuantityItem.setState(QuantityType.valueOf(HISTORIC_END, SIUnits.CELSIUS));\n+        HistoricItem prevStateItem = PersistenceExtensions.previousState(groupQuantityItem, true, SERVICE_ID);\n+        assertNotNull(prevStateItem);\n+        assertEquals(new QuantityType<>(value(HISTORIC_END - 1), SIUnits.CELSIUS), prevStateItem.getState());\n+\n+        // default persistence service\n+        prevStateItem = PersistenceExtensions.previousState(groupQuantityItem, true);\n+        assertNull(prevStateItem);\n+    }\n+\n     @Test\n     public void testNextStateDecimalTypeNoSkip() {\n         HistoricItem nextStateItem = PersistenceExtensions.nextState(numberItem, false, SERVICE_ID);\n@@ -1919,6 +2605,33 @@ public void testNextStateQuantityTypeNoSkip() {\n         assertNull(nextStateItem);\n     }\n \n+    @Test\n+    public void testNextStateGroupQuantityTypeNoSkip() {\n+        HistoricItem nextStateItem = PersistenceExtensions.nextState(groupQuantityItem, false, SERVICE_ID);\n+        assertNotNull(nextStateItem);\n+        assertThat(nextStateItem.getState(), is(instanceOf(QuantityType.class)));\n+        assertEquals(new QuantityType<>(value(FUTURE_START), SIUnits.CELSIUS), nextStateItem.getState());\n+\n+        groupQuantityItem.setState(QuantityType.valueOf(4321, SIUnits.CELSIUS));\n+        nextStateItem = PersistenceExtensions.nextState(groupQuantityItem, false, SERVICE_ID);\n+        assertNotNull(nextStateItem);\n+        assertEquals(new QuantityType<>(value(FUTURE_START), SIUnits.CELSIUS), nextStateItem.getState());\n+\n+        groupQuantityItem.setState(QuantityType.valueOf(FUTURE_START, SIUnits.CELSIUS));\n+        nextStateItem = PersistenceExtensions.nextState(groupQuantityItem, false, SERVICE_ID);\n+        assertNotNull(nextStateItem);\n+        assertEquals(new QuantityType<>(value(FUTURE_START), SIUnits.CELSIUS), nextStateItem.getState());\n+\n+        groupQuantityItem.setState(QuantityType.valueOf(3025, SIUnits.CELSIUS));\n+        nextStateItem = PersistenceExtensions.nextState(groupQuantityItem, false, SERVICE_ID);\n+        assertNotNull(nextStateItem);\n+        assertEquals(new QuantityType<>(value(FUTURE_START), SIUnits.CELSIUS), nextStateItem.getState());\n+\n+        // default persistence service\n+        nextStateItem = PersistenceExtensions.nextState(groupQuantityItem, false);\n+        assertNull(nextStateItem);\n+    }\n+\n     @Test\n     public void testNextStateDecimalTypeSkip() {\n         numberItem.setState(new DecimalType(FUTURE_START));\n@@ -1943,6 +2656,18 @@ public void testNextStateQuantityTypeSkip() {\n         assertNull(nextStateItem);\n     }\n \n+    @Test\n+    public void testNextStateGroupQuantityTypeSkip() {\n+        groupQuantityItem.setState(QuantityType.valueOf(FUTURE_START, SIUnits.CELSIUS));\n+        HistoricItem nextStateItem = PersistenceExtensions.nextState(groupQuantityItem, true, SERVICE_ID);\n+        assertNotNull(nextStateItem);\n+        assertEquals(new QuantityType<>(value(FUTURE_START + 1), SIUnits.CELSIUS), nextStateItem.getState());\n+\n+        // default persistence service\n+        nextStateItem = PersistenceExtensions.nextState(groupQuantityItem, true);\n+        assertNull(nextStateItem);\n+    }\n+\n     @Test\n     public void testChangedSince() {\n         Boolean changed = PersistenceExtensions.changedSince(numberItem,\n\ndiff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java\nindex b42e7df8307..74ee49a33bc 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/TestPersistenceService.java\n@@ -29,6 +29,7 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.items.GroupItem;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemRegistry;\n import org.openhab.core.library.items.NumberItem;\n@@ -183,7 +184,11 @@ public ZonedDateTime getTimestamp() {\n                     @Override\n                     public State getState() {\n                         Item item = itemRegistry.get(Objects.requireNonNull(filter.getItemName()));\n-                        Unit<?> unit = item instanceof NumberItem ni ? ni.getUnit() : null;\n+                        Item baseItem = item;\n+                        if (baseItem instanceof GroupItem groupItem) {\n+                            baseItem = groupItem.getBaseItem();\n+                        }\n+                        Unit<?> unit = baseItem instanceof NumberItem ni ? ni.getUnit() : null;\n                         return unit == null ? new DecimalType(year) : QuantityType.valueOf(year, unit);\n                     }\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4237",
    "pr_id": 4237,
    "issue_id": 4234,
    "repo": "openhab/openhab-core",
    "problem_statement": "Add SDDP service to core\nIf regex matching is implemented then the epsonprojector and sonyprojector addons could be detected as many newer models respond to Control4 SDDP discovery probes as described here:\r\n\r\nhttps://github.com/sammck/sddp-discovery-protocol/blob/main/README.md\r\n\r\nSDDP is similar to UPNP/SSDP in that a multicast search frame is sent and any supported devices respond back to the multicast address with a packet containing device information. By using a regex these packets would be filtered to determine the device type and manufacturer.\r\n\r\n_Originally posted by @mlobstein in https://github.com/openhab/openhab-core/issues/3936#issuecomment-2118832389_\r\n\r\n---\r\n\r\nNote: I myself (via my then employer) was one of the founder members at the original launch of UPNP hosted by Microsoft in Redmond, WA., so I am very familiar with coding for SSDP. => I will volunteer myself to write an equivalent SDDP module for OH core. The goal would be to provide an SDDP service with twofold application..\r\n\r\n1. Use the new SDDP service to implement in OH Core an Addon Finder for Things that are discoverable via SDDP\r\n2. Expose the new SDDP service to OH Addon authors for them to use it in discovering Things and respective properties.",
    "issue_word_count": 205,
    "test_files_count": 2,
    "non_test_files_count": 19,
    "pr_changed_files": [
      "bom/openhab-core/pom.xml",
      "bundles/org.openhab.core.config.discovery.addon.sddp/.classpath",
      "bundles/org.openhab.core.config.discovery.addon.sddp/.project",
      "bundles/org.openhab.core.config.discovery.addon.sddp/NOTICE",
      "bundles/org.openhab.core.config.discovery.addon.sddp/pom.xml",
      "bundles/org.openhab.core.config.discovery.addon.sddp/src/main/java/org/openhab/core/config/discovery/addon/sddp/SddpAddonFinder.java",
      "bundles/org.openhab.core.config.discovery.addon.sddp/src/test/java/org/openhab/core/config/discovery/addon/sddp/test/SddpAddonFinderTests.java",
      "bundles/org.openhab.core.config.discovery.addon/src/main/java/org/openhab/core/config/discovery/addon/AddonFinderConstants.java",
      "bundles/org.openhab.core.config.discovery.sddp/.classpath",
      "bundles/org.openhab.core.config.discovery.sddp/.project",
      "bundles/org.openhab.core.config.discovery.sddp/NOTICE",
      "bundles/org.openhab.core.config.discovery.sddp/pom.xml",
      "bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDevice.java",
      "bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDeviceParticipant.java",
      "bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDiscoveryParticipant.java",
      "bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDiscoveryService.java",
      "bundles/org.openhab.core.config.discovery.sddp/src/test/java/org/openhab/core/config/discovery/sddp/test/SddpDiscoveryServiceTests.java",
      "bundles/org.openhab.core/src/main/resources/OH-INF/config/addons.xml",
      "bundles/org.openhab.core/src/main/resources/OH-INF/i18n/addons.properties",
      "bundles/pom.xml",
      "features/karaf/openhab-core/src/main/feature/feature.xml"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.config.discovery.addon.sddp/src/test/java/org/openhab/core/config/discovery/addon/sddp/test/SddpAddonFinderTests.java",
      "bundles/org.openhab.core.config.discovery.sddp/src/test/java/org/openhab/core/config/discovery/sddp/test/SddpDiscoveryServiceTests.java"
    ],
    "base_commit": "9068ab2facb824fdf9baa32e3a654146cdd478e4",
    "head_commit": "282bd9d34fa70b6f625b6ff06c0a114aaa22b6a7",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4237",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4237",
    "dockerfile": "",
    "pr_merged_at": "2024-05-30T19:03:58.000Z",
    "patch": "diff --git a/bom/openhab-core/pom.xml b/bom/openhab-core/pom.xml\nindex 905bfb7e0fd..a32a982de5d 100644\n--- a/bom/openhab-core/pom.xml\n+++ b/bom/openhab-core/pom.xml\n@@ -328,6 +328,12 @@\n       <version>${project.version}</version>\n       <scope>compile</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.openhab.core.bundles</groupId>\n+      <artifactId>org.openhab.core.config.discovery.addon.sddp</artifactId>\n+      <version>${project.version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n     <dependency>\n       <groupId>org.openhab.core.bundles</groupId>\n       <artifactId>org.openhab.core.config.discovery.addon.upnp</artifactId>\n@@ -346,6 +352,12 @@\n       <version>${project.version}</version>\n       <scope>compile</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.openhab.core.bundles</groupId>\n+      <artifactId>org.openhab.core.config.discovery.sddp</artifactId>\n+      <version>${project.version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n     <dependency>\n       <groupId>org.openhab.core.bundles</groupId>\n       <artifactId>org.openhab.core.config.discovery.usbserial</artifactId>\n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon.sddp/.classpath b/bundles/org.openhab.core.config.discovery.addon.sddp/.classpath\nnew file mode 100644\nindex 00000000000..d3d6b3c11b6\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.addon.sddp/.classpath\n@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"src\" output=\"target/test-classes\" path=\"src/test/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"test\" value=\"true\"/>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-17\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"annotationpath\" value=\"target/dependency\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"annotationpath\" value=\"target/dependency\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"output\" path=\"target/classes\"/>\n+</classpath>\n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon.sddp/.project b/bundles/org.openhab.core.config.discovery.addon.sddp/.project\nnew file mode 100644\nindex 00000000000..f86bba378d1\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.addon.sddp/.project\n@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>org.openhab.core.config.discovery.addon.upnp</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\n+\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n+\t</natures>\n+</projectDescription>\n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon.sddp/NOTICE b/bundles/org.openhab.core.config.discovery.addon.sddp/NOTICE\nnew file mode 100644\nindex 00000000000..6c17d0d8a45\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.addon.sddp/NOTICE\n@@ -0,0 +1,14 @@\n+This content is produced and maintained by the openHAB project.\n+\n+* Project home: https://www.openhab.org\n+\n+== Declared Project Licenses\n+\n+This program and the accompanying materials are made available under the terms\n+of the Eclipse Public License 2.0 which is available at\n+https://www.eclipse.org/legal/epl-2.0/.\n+\n+== Source Code\n+\n+https://github.com/openhab/openhab-core\n+\n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon.sddp/pom.xml b/bundles/org.openhab.core.config.discovery.addon.sddp/pom.xml\nnew file mode 100644\nindex 00000000000..f56d06abf95\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.addon.sddp/pom.xml\n@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.openhab.core.bundles</groupId>\n+    <artifactId>org.openhab.core.reactor.bundles</artifactId>\n+    <version>4.2.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>org.openhab.core.config.discovery.addon.sddp</artifactId>\n+\n+  <name>openHAB Core :: Bundles :: SDDP Suggested Add-on Finder</name>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.openhab.core.bundles</groupId>\n+      <artifactId>org.openhab.core.config.discovery.addon</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.openhab.core.bundles</groupId>\n+      <artifactId>org.openhab.core.addon</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.openhab.core.bundles</groupId>\n+      <artifactId>org.openhab.core.config.discovery.sddp</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+</project>\n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon.sddp/src/main/java/org/openhab/core/config/discovery/addon/sddp/SddpAddonFinder.java b/bundles/org.openhab.core.config.discovery.addon.sddp/src/main/java/org/openhab/core/config/discovery/addon/sddp/SddpAddonFinder.java\nnew file mode 100644\nindex 00000000000..9c8448641f2\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.addon.sddp/src/main/java/org/openhab/core/config/discovery/addon/sddp/SddpAddonFinder.java\n@@ -0,0 +1,166 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.config.discovery.addon.sddp;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.addon.AddonDiscoveryMethod;\n+import org.openhab.core.addon.AddonInfo;\n+import org.openhab.core.addon.AddonMatchProperty;\n+import org.openhab.core.config.discovery.DiscoveryService;\n+import org.openhab.core.config.discovery.addon.AddonFinder;\n+import org.openhab.core.config.discovery.addon.AddonFinderConstants;\n+import org.openhab.core.config.discovery.addon.BaseAddonFinder;\n+import org.openhab.core.config.discovery.sddp.SddpDevice;\n+import org.openhab.core.config.discovery.sddp.SddpDeviceParticipant;\n+import org.openhab.core.config.discovery.sddp.SddpDiscoveryService;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Deactivate;\n+import org.osgi.service.component.annotations.Reference;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is a {@link SddpAddonFinder} for finding suggested Addons via SDDP.\n+ * <p>\n+ * It checks the binding's addon.xml 'match-property' elements for the following SDDP properties:\n+ * <li>driver</li>\n+ * <li>host</li>\n+ * <li>ipAddress</li>\n+ * <li>macAddress</li>\n+ * <li>manufacturer</li>\n+ * <li>model</li>\n+ * <li>port</li>\n+ * <li>primaryProxy</li>\n+ * <li>proxies</li>\n+ * <li>type</li>\n+ * <p>\n+ * \n+ * @author Andrew Fiddian-Green - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(service = AddonFinder.class, name = SddpAddonFinder.SERVICE_NAME)\n+public class SddpAddonFinder extends BaseAddonFinder implements SddpDeviceParticipant {\n+\n+    public static final String SERVICE_TYPE = AddonFinderConstants.SERVICE_TYPE_SDDP;\n+    public static final String SERVICE_NAME = AddonFinderConstants.SERVICE_NAME_SDDP;\n+\n+    private static final String DRIVER = \"driver\";\n+    private static final String HOST = \"host\";\n+    private static final String IP_ADDRESS = \"ipAddress\";\n+    private static final String MAC_ADDRESS = \"macAddress\";\n+    private static final String MANUFACTURER = \"manufacturer\";\n+    private static final String MODEL = \"model\";\n+    private static final String PORT = \"port\";\n+    private static final String PRIMARY_PROXY = \"primaryProxy\";\n+    private static final String PROXIES = \"proxies\";\n+    private static final String TYPE = \"type\";\n+\n+    private static final Set<String> SUPPORTED_PROPERTIES = Set.of(DRIVER, HOST, IP_ADDRESS, MAC_ADDRESS, MANUFACTURER,\n+            MODEL, PORT, PRIMARY_PROXY, PROXIES, TYPE);\n+\n+    private final Logger logger = LoggerFactory.getLogger(SddpAddonFinder.class);\n+    private final Set<SddpDevice> foundDevices = new HashSet<>();\n+\n+    private @Nullable SddpDiscoveryService sddpDiscoveryService = null;\n+\n+    @Activate\n+    public SddpAddonFinder(\n+            @Reference(service = DiscoveryService.class, target = \"(protocol=sddp)\") DiscoveryService discoveryService) {\n+        if (discoveryService instanceof SddpDiscoveryService sddpDiscoveryService) {\n+            sddpDiscoveryService.addSddpDeviceParticipant(this);\n+            this.sddpDiscoveryService = sddpDiscoveryService;\n+        } else {\n+            logger.warn(\"SddpAddonFinder() DiscoveryService is not an SddpDiscoveryService\");\n+        }\n+    }\n+\n+    @Deactivate\n+    public void deactivate() {\n+        SddpDiscoveryService sddpDiscoveryService = this.sddpDiscoveryService;\n+        if (sddpDiscoveryService != null) {\n+            sddpDiscoveryService.removeSddpDeviceParticipant(this);\n+            this.sddpDiscoveryService = null;\n+        }\n+        unsetAddonCandidates();\n+        foundDevices.clear();\n+    }\n+\n+    @Override\n+    public void deviceAdded(SddpDevice device) {\n+        foundDevices.add(device);\n+    }\n+\n+    @Override\n+    public void deviceRemoved(SddpDevice device) {\n+        foundDevices.remove(device);\n+    }\n+\n+    @Override\n+    public String getServiceName() {\n+        return SERVICE_NAME;\n+    }\n+\n+    @Override\n+    public Set<AddonInfo> getSuggestedAddons() {\n+        Set<AddonInfo> result = new HashSet<>();\n+        for (AddonInfo candidate : addonCandidates) {\n+            for (AddonDiscoveryMethod method : candidate.getDiscoveryMethods().stream()\n+                    .filter(method -> SERVICE_TYPE.equals(method.getServiceType())).toList()) {\n+                Map<String, Pattern> matchProperties = method.getMatchProperties().stream()\n+                        .collect(Collectors.toMap(AddonMatchProperty::getName, AddonMatchProperty::getPattern));\n+\n+                Set<String> propertyNames = new HashSet<>(matchProperties.keySet());\n+                propertyNames.removeAll(SUPPORTED_PROPERTIES);\n+\n+                if (!propertyNames.isEmpty()) {\n+                    logger.warn(\"Add-on '{}' addon.xml file contains unsupported 'match-property' [{}]\",\n+                            candidate.getUID(), String.join(\",\", propertyNames));\n+                    break;\n+                }\n+\n+                logger.trace(\"Checking candidate: {}\", candidate.getUID());\n+                for (SddpDevice device : foundDevices) {\n+                    logger.trace(\"Checking device: {}\", device.host);\n+                    if (propertyMatches(matchProperties, HOST, device.host)\n+                            && propertyMatches(matchProperties, IP_ADDRESS, device.ipAddress)\n+                            && propertyMatches(matchProperties, MAC_ADDRESS, device.macAddress)\n+                            && propertyMatches(matchProperties, MANUFACTURER, device.manufacturer)\n+                            && propertyMatches(matchProperties, MODEL, device.model)\n+                            && propertyMatches(matchProperties, PORT, device.port)\n+                            && propertyMatches(matchProperties, PRIMARY_PROXY, device.primaryProxy)\n+                            && propertyMatches(matchProperties, PROXIES, device.proxies)\n+                            && propertyMatches(matchProperties, TYPE, device.type)) {\n+                        result.add(candidate);\n+                        logger.debug(\"Suggested add-on found: {}\", candidate.getUID());\n+                        break;\n+                    }\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    @Override\n+    public void setAddonCandidates(List<AddonInfo> candidates) {\n+        super.setAddonCandidates(candidates);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon/src/main/java/org/openhab/core/config/discovery/addon/AddonFinderConstants.java b/bundles/org.openhab.core.config.discovery.addon/src/main/java/org/openhab/core/config/discovery/addon/AddonFinderConstants.java\nindex 8486506a869..774f3064bf2 100644\n--- a/bundles/org.openhab.core.config.discovery.addon/src/main/java/org/openhab/core/config/discovery/addon/AddonFinderConstants.java\n+++ b/bundles/org.openhab.core.config.discovery.addon/src/main/java/org/openhab/core/config/discovery/addon/AddonFinderConstants.java\n@@ -35,6 +35,10 @@ public class AddonFinderConstants {\n     public static final String CFG_FINDER_MDNS = \"suggestionFinderMdns\";\n     public static final String SERVICE_NAME_MDNS = SERVICE_TYPE_MDNS + ADDON_SUGGESTION_FINDER;\n \n+    public static final String SERVICE_TYPE_SDDP = \"sddp\";\n+    public static final String CFG_FINDER_SDDP = \"suggestionFinderSddp\";\n+    public static final String SERVICE_NAME_SDDP = SERVICE_TYPE_SDDP + ADDON_SUGGESTION_FINDER;\n+\n     public static final String SERVICE_TYPE_UPNP = \"upnp\";\n     public static final String CFG_FINDER_UPNP = \"suggestionFinderUpnp\";\n     public static final String SERVICE_NAME_UPNP = SERVICE_TYPE_UPNP + ADDON_SUGGESTION_FINDER;\n@@ -43,13 +47,14 @@ public class AddonFinderConstants {\n     public static final String CFG_FINDER_USB = \"suggestionFinderUsb\";\n     public static final String SERVICE_NAME_USB = SERVICE_TYPE_USB + ADDON_SUGGESTION_FINDER;\n \n-    public static final List<String> SUGGESTION_FINDERS = List.of(SERVICE_NAME_IP, SERVICE_NAME_MDNS, SERVICE_NAME_UPNP,\n-            SERVICE_NAME_USB);\n+    public static final List<String> SUGGESTION_FINDERS = List.of(SERVICE_NAME_IP, SERVICE_NAME_MDNS, SERVICE_NAME_SDDP,\n+            SERVICE_NAME_UPNP, SERVICE_NAME_USB);\n \n     public static final Map<String, String> SUGGESTION_FINDER_TYPES = Map.of(SERVICE_NAME_IP, SERVICE_TYPE_IP,\n-            SERVICE_NAME_MDNS, SERVICE_TYPE_MDNS, SERVICE_NAME_UPNP, SERVICE_TYPE_UPNP, SERVICE_NAME_USB,\n-            SERVICE_TYPE_USB);\n+            SERVICE_NAME_MDNS, SERVICE_TYPE_MDNS, SERVICE_NAME_SDDP, SERVICE_TYPE_SDDP, SERVICE_NAME_UPNP,\n+            SERVICE_TYPE_UPNP, SERVICE_NAME_USB, SERVICE_TYPE_USB);\n \n     public static final Map<String, String> SUGGESTION_FINDER_CONFIGS = Map.of(SERVICE_NAME_IP, CFG_FINDER_IP,\n-            SERVICE_NAME_MDNS, CFG_FINDER_MDNS, SERVICE_NAME_UPNP, CFG_FINDER_UPNP, SERVICE_NAME_USB, CFG_FINDER_USB);\n+            SERVICE_NAME_MDNS, CFG_FINDER_MDNS, SERVICE_NAME_SDDP, CFG_FINDER_SDDP, SERVICE_NAME_UPNP, CFG_FINDER_UPNP,\n+            SERVICE_NAME_USB, CFG_FINDER_USB);\n }\n\ndiff --git a/bundles/org.openhab.core.config.discovery.sddp/.classpath b/bundles/org.openhab.core.config.discovery.sddp/.classpath\nnew file mode 100644\nindex 00000000000..585aba264ee\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.sddp/.classpath\n@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-17\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"annotationpath\" value=\"target/dependency\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"annotationpath\" value=\"target/dependency\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"src\" output=\"target/test-classes\" path=\"src/test/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t\t<attribute name=\"test\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.junit.JUNIT_CONTAINER/4\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"annotationpath\" value=\"target/dependency\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"output\" path=\"target/classes\"/>\n+</classpath>\n\ndiff --git a/bundles/org.openhab.core.config.discovery.sddp/.project b/bundles/org.openhab.core.config.discovery.sddp/.project\nnew file mode 100644\nindex 00000000000..29654a1ee13\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.sddp/.project\n@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>org.openhab.core.config.discovery.upnp</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n+\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\n+\t</natures>\n+</projectDescription>\n\ndiff --git a/bundles/org.openhab.core.config.discovery.sddp/NOTICE b/bundles/org.openhab.core.config.discovery.sddp/NOTICE\nnew file mode 100644\nindex 00000000000..6c17d0d8a45\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.sddp/NOTICE\n@@ -0,0 +1,14 @@\n+This content is produced and maintained by the openHAB project.\n+\n+* Project home: https://www.openhab.org\n+\n+== Declared Project Licenses\n+\n+This program and the accompanying materials are made available under the terms\n+of the Eclipse Public License 2.0 which is available at\n+https://www.eclipse.org/legal/epl-2.0/.\n+\n+== Source Code\n+\n+https://github.com/openhab/openhab-core\n+\n\ndiff --git a/bundles/org.openhab.core.config.discovery.sddp/pom.xml b/bundles/org.openhab.core.config.discovery.sddp/pom.xml\nnew file mode 100644\nindex 00000000000..3e0fc524e57\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.sddp/pom.xml\n@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.openhab.core.bundles</groupId>\n+    <artifactId>org.openhab.core.reactor.bundles</artifactId>\n+    <version>4.2.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>org.openhab.core.config.discovery.sddp</artifactId>\n+\n+  <name>openHAB Core :: Bundles :: Configuration SDDP Discovery</name>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.openhab.core.bundles</groupId>\n+      <artifactId>org.openhab.core.config.discovery</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+</project>\n\ndiff --git a/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDevice.java b/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDevice.java\nnew file mode 100644\nindex 00000000000..cc7b9d8f202\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDevice.java\n@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.config.discovery.sddp;\n+\n+import java.time.Instant;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+/**\n+ * A DTO class containing data from an SDDP device discovery result.\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ */\n+@NonNullByDefault\n+public class SddpDevice {\n+\n+    public final String from;\n+    public final String host;\n+    public final String maxAge;\n+    public final String type;\n+    public final String primaryProxy;\n+    public final String proxies;\n+    public final String manufacturer;\n+    public final String model;\n+    public final String driver;\n+    public final String ipAddress;\n+    public final String port;\n+    public final String macAddress;\n+    public final Instant expireInstant;\n+\n+    /**\n+     * Constructor.\n+     * \n+     * @param headers a map of parameter name / value pairs.\n+     * @param offline indicates if the device is being created from a NOTIFY OFFLINE announcement.\n+     */\n+    public SddpDevice(Map<String, String> headers, boolean offline) {\n+        from = headers.getOrDefault(\"From\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\");\n+        host = headers.getOrDefault(\"Host\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\");\n+        maxAge = headers.getOrDefault(\"Max-Age\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\");\n+        type = headers.getOrDefault(\"Type\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\");\n+        primaryProxy = headers.getOrDefault(\"Primary-Proxy\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\");\n+        proxies = headers.getOrDefault(\"Proxies\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\");\n+        manufacturer = headers.getOrDefault(\"Manufacturer\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\");\n+        model = headers.getOrDefault(\"Model\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\");\n+        driver = headers.getOrDefault(\"Driver\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\");\n+\n+        String[] fromParts = from.split(\":\");\n+        ipAddress = fromParts[0];\n+        port = fromParts.length > 1 ? fromParts[1] : \"\";\n+\n+        String[] hostParts = host.split(\"-|_\");\n+        macAddress = hostParts.length <= 1 ? \"\"\n+                : hostParts[hostParts.length - 1].replaceAll(\"(..)(?!$)\", \"$1-\").toLowerCase();\n+\n+        expireInstant = offline ? Instant.now().minusMillis(1)\n+                : Instant.now().plusSeconds(maxAge.isBlank() ? 0 : Integer.parseInt(maxAge));\n+    }\n+\n+    /**\n+     * Set uniqueness is determined by the From field only\n+     */\n+    @Override\n+    public boolean equals(@Nullable Object obj) {\n+        if (obj instanceof SddpDevice other) {\n+            return Objects.equals(from, other.from);\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Set uniqueness is determined by the From field only\n+     */\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(from);\n+    }\n+\n+    /**\n+     * Check if the creation time plus max-age instant is exceeded.\n+     */\n+    public boolean isExpired() {\n+        return Instant.now().isAfter(expireInstant);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDeviceParticipant.java b/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDeviceParticipant.java\nnew file mode 100644\nindex 00000000000..e01aa7b5622\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDeviceParticipant.java\n@@ -0,0 +1,29 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.config.discovery.sddp;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * A {@link SddpDeviceParticipant} that is registered as a service is picked up by the {@link SddpDiscoveryService} and\n+ * can thus be informed when the SDDP service discovers or removes an {@link SddpDevice}.\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface SddpDeviceParticipant {\n+\n+    void deviceAdded(SddpDevice device);\n+\n+    void deviceRemoved(SddpDevice device);\n+}\n\ndiff --git a/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDiscoveryParticipant.java b/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDiscoveryParticipant.java\nnew file mode 100644\nindex 00000000000..fd11375507f\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDiscoveryParticipant.java\n@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.config.discovery.sddp;\n+\n+import java.util.Set;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+\n+/**\n+ * A {@link SddpDiscoveryParticipant} that is registered as a service is picked up by the {@link SddpDiscoveryService}\n+ * and can thus contribute {@link DiscoveryResult}s from SDDP scans.\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface SddpDiscoveryParticipant {\n+\n+    /**\n+     * Defines the list of thing types that this participant can identify\n+     *\n+     * @return a set of thing type UIDs for which results can be created\n+     */\n+    Set<ThingTypeUID> getSupportedThingTypeUIDs();\n+\n+    /**\n+     * Creates a discovery result for a SDDP device\n+     *\n+     * @param device the SDDP device found on the network\n+     * @return the according discovery result or <code>null</code>, if device is not\n+     *         supported by this participant\n+     */\n+    @Nullable\n+    DiscoveryResult createResult(SddpDevice device);\n+\n+    /**\n+     * Returns the thing UID for a SDDP device\n+     *\n+     * @param device the SDDP device on the network\n+     * @return a thing UID or <code>null</code>, if device is not supported\n+     *         by this participant\n+     */\n+    @Nullable\n+    ThingUID getThingUID(SddpDevice device);\n+}\n\ndiff --git a/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDiscoveryService.java b/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDiscoveryService.java\nnew file mode 100644\nindex 00000000000..f54181b1955\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.sddp/src/main/java/org/openhab/core/config/discovery/sddp/SddpDiscoveryService.java\n@@ -0,0 +1,438 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.config.discovery.sddp;\n+\n+import java.io.IOException;\n+import java.net.DatagramPacket;\n+import java.net.DatagramSocket;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.MulticastSocket;\n+import java.net.NetworkInterface;\n+import java.net.ServerSocket;\n+import java.net.SocketTimeoutException;\n+import java.net.StandardSocketOptions;\n+import java.nio.charset.StandardCharsets;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.config.discovery.AbstractDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryService;\n+import org.openhab.core.i18n.LocaleProvider;\n+import org.openhab.core.i18n.TranslationProvider;\n+import org.openhab.core.net.CidrAddress;\n+import org.openhab.core.net.NetworkAddressChangeListener;\n+import org.openhab.core.net.NetworkAddressService;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Deactivate;\n+import org.osgi.service.component.annotations.Modified;\n+import org.osgi.service.component.annotations.Reference;\n+import org.osgi.service.component.annotations.ReferenceCardinality;\n+import org.osgi.service.component.annotations.ReferencePolicy;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is a {@link DiscoveryService} implementation, which can find SDDP devices in the network.\n+ * Support for bindings can be achieved by implementing and registering a {@link SddpDiscoveryParticipant}.\n+ * Support for finders can be achieved by implementing and registering a {@link SddpDeviceParticipant}.\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(immediate = true, service = DiscoveryService.class, property = \"protocol=sddp\", configurationPid = \"discovery.sddp\")\n+public class SddpDiscoveryService extends AbstractDiscoveryService\n+        implements AutoCloseable, NetworkAddressChangeListener {\n+\n+    private static final int SDDP_PORT = 1902;\n+    private static final String SDDP_IP_ADDRESS = \"239.255.255.250\";\n+    private static final InetSocketAddress SDDP_GROUP = new InetSocketAddress(SDDP_IP_ADDRESS, SDDP_PORT);\n+\n+    private static final int READ_BUFFER_SIZE = 1024;\n+    private static final Duration SOCKET_TIMOUT = Duration.ofMillis(1000);\n+    private static final Duration SEARCH_LISTEN_DURATION = Duration.ofSeconds(5);\n+    private static final Duration CACHE_PURGE_INTERVAL = Duration.ofSeconds(300);\n+\n+    private static final String SEARCH_REQUEST_BODY_FORMAT = \"SEARCH * SDDP/1.0\\r\\nHost: \\\"%s:%d\\\"\\r\\n\";\n+    private static final String SEARCH_RESPONSE_HEADER = \"SDDP/1.0 200 OK\";\n+\n+    private static final String NOTIFY_ALIVE_HEADER = \"NOTIFY ALIVE SDDP/1.0\";\n+    private static final String NOTIFY_OFFLINE_HEADER = \"NOTIFY OFFLINE SDDP/1.0\";\n+\n+    private final Logger logger = LoggerFactory.getLogger(SddpDiscoveryService.class);\n+    private final Set<SddpDevice> foundDevicesCache = ConcurrentHashMap.newKeySet();\n+    private final Set<SddpDiscoveryParticipant> discoveryParticipants = ConcurrentHashMap.newKeySet();\n+    private final Set<SddpDeviceParticipant> deviceParticipants = ConcurrentHashMap.newKeySet();\n+\n+    private final NetworkAddressService networkAddressService;\n+\n+    private boolean closing = false;\n+\n+    private @Nullable Future<?> listenBackgroundMulticastTask = null;\n+    private @Nullable Future<?> listenActiveScanUnicastTask = null;\n+    private @Nullable ScheduledFuture<?> purgeExpiredDevicesTask = null;\n+\n+    @Activate\n+    public SddpDiscoveryService(final @Nullable Map<String, Object> configProperties, //\n+            final @Reference NetworkAddressService networkAddressService, //\n+            final @Reference TranslationProvider i18nProvider, //\n+            final @Reference LocaleProvider localeProvider) {\n+        super((int) SEARCH_LISTEN_DURATION.getSeconds());\n+\n+        this.networkAddressService = networkAddressService;\n+        this.i18nProvider = i18nProvider;\n+        this.localeProvider = localeProvider;\n+\n+        super.activate(configProperties); // note: this starts listenBackgroundMulticastTask\n+\n+        purgeExpiredDevicesTask = scheduler.scheduleWithFixedDelay(() -> purgeExpiredDevices(),\n+                CACHE_PURGE_INTERVAL.getSeconds(), CACHE_PURGE_INTERVAL.getSeconds(), TimeUnit.SECONDS);\n+    }\n+\n+    @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n+    public void addSddpDeviceParticipant(SddpDeviceParticipant participant) {\n+        deviceParticipants.add(participant);\n+        foundDevicesCache.stream().filter(d -> !d.isExpired()).forEach(d -> participant.deviceAdded(d));\n+        startScan();\n+    }\n+\n+    @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n+    protected void addSddpDiscoveryParticipant(SddpDiscoveryParticipant participant) {\n+        discoveryParticipants.add(participant);\n+        foundDevicesCache.stream().filter(d -> !d.isExpired()).forEach(d -> {\n+            DiscoveryResult result = participant.createResult(d);\n+            if (result != null) {\n+                DiscoveryResult localizedResult = getLocalizedDiscoveryResult(result,\n+                        FrameworkUtil.getBundle(participant.getClass()));\n+                thingDiscovered(localizedResult);\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Cancel the given task.\n+     */\n+    private void cancelTask(@Nullable Future<?> task) {\n+        if (task != null) {\n+            task.cancel(true);\n+        }\n+    }\n+\n+    @Override\n+    public void close() {\n+        deactivate();\n+    }\n+\n+    /**\n+     * Optionally create an {@link SddpDevice) object from UDP packet data if the data is good.\n+     */\n+    public Optional<SddpDevice> createSddpDevice(String data) {\n+        if (!data.isBlank()) {\n+            List<String> lines = data.lines().toList();\n+            if (lines.size() > 1) {\n+                String statement = lines.get(0).strip();\n+                boolean offline = statement.startsWith(NOTIFY_OFFLINE_HEADER);\n+                if (offline || statement.startsWith(NOTIFY_ALIVE_HEADER)\n+                        || statement.startsWith(SEARCH_RESPONSE_HEADER)) {\n+                    Map<String, String> headers = new HashMap<>();\n+                    for (int i = 1; i < lines.size(); i++) {\n+                        String[] header = lines.get(i).split(\":\", 2);\n+                        if (header.length > 1) {\n+                            headers.put(header[0].strip(), header[1].strip());\n+                        }\n+                    }\n+                    return Optional.of(new SddpDevice(headers, offline));\n+                }\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    @Deactivate\n+    @Override\n+    protected void deactivate() {\n+        closing = true;\n+\n+        foundDevicesCache.clear();\n+        discoveryParticipants.clear();\n+        deviceParticipants.clear();\n+\n+        super.deactivate(); // note: this cancels and nulls listenBackgroundMulticastTask\n+\n+        cancelTask(listenActiveScanUnicastTask);\n+        listenActiveScanUnicastTask = null;\n+\n+        cancelTask(purgeExpiredDevicesTask);\n+        purgeExpiredDevicesTask = null;\n+    }\n+\n+    @Override\n+    public Set<ThingTypeUID> getSupportedThingTypes() {\n+        Set<ThingTypeUID> supportedThingTypes = new HashSet<>();\n+        discoveryParticipants.forEach(p -> supportedThingTypes.addAll(p.getSupportedThingTypeUIDs()));\n+        return supportedThingTypes;\n+    }\n+\n+    /**\n+     * Continue to listen for incoming SDDP multicast messages until the thread is externally interrupted.\n+     */\n+    private void listenBackGroundMulticast() {\n+        MulticastSocket socket = null;\n+        NetworkInterface networkInterface = null;\n+\n+        try {\n+            networkInterface = NetworkInterface\n+                    .getByInetAddress(InetAddress.getByName(networkAddressService.getPrimaryIpv4HostAddress()));\n+\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"listenBackGroundMulticast() starting on interface '{}'\",\n+                        networkInterface.getDisplayName());\n+            }\n+\n+            socket = new MulticastSocket(SDDP_PORT);\n+            socket.joinGroup(SDDP_GROUP, networkInterface);\n+            socket.setSoTimeout((int) SOCKET_TIMOUT.toMillis());\n+\n+            DatagramPacket packet = null;\n+            byte[] buffer = new byte[READ_BUFFER_SIZE];\n+\n+            // loop listen for responses\n+            while (!Thread.currentThread().isInterrupted()) {\n+                try {\n+                    if (packet == null) {\n+                        packet = new DatagramPacket(buffer, buffer.length);\n+                    }\n+                    socket.receive(packet);\n+                    processPacket(packet);\n+                    packet = null;\n+                } catch (SocketTimeoutException e) {\n+                    // socket.receive() will time out every 1 second so the thread won't block\n+                }\n+            }\n+        } catch (IOException e) {\n+            if (!closing) {\n+                logger.warn(\"listenBackGroundMulticast error '{}'\", e.getMessage());\n+            }\n+        } finally {\n+            if (socket != null && networkInterface != null) {\n+                try {\n+                    socket.leaveGroup(SDDP_GROUP, networkInterface);\n+                } catch (IOException e) {\n+                    if (!closing) {\n+                        logger.warn(\"listenBackGroundMulticast() error '{}'\", e.getMessage());\n+                    }\n+                }\n+                socket.close();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Send a single outgoing SEARCH 'ping' and then continue to listen for incoming SDDP unicast responses until the\n+     * loop time elapses or the thread is externally interrupted.\n+     */\n+    private void listenActiveScanUnicast() {\n+        // get a free port number\n+        int port;\n+        try (ServerSocket portFinder = new ServerSocket(0)) {\n+            port = portFinder.getLocalPort();\n+        } catch (IOException e) {\n+            logger.warn(\"listenActiveScanUnicast() port finder error '{}'\", e.getMessage());\n+            return;\n+        }\n+\n+        try (DatagramSocket socket = new DatagramSocket(port)) {\n+            String ipAddress = networkAddressService.getPrimaryIpv4HostAddress();\n+            NetworkInterface networkInterface = NetworkInterface.getByInetAddress(InetAddress.getByName(ipAddress));\n+\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"listenActiveScanUnicast() starting on '{}:{}' on interface '{}'\", ipAddress, port,\n+                        networkInterface.getDisplayName());\n+            }\n+\n+            socket.setOption(StandardSocketOptions.IP_MULTICAST_IF, networkInterface);\n+            socket.setSoTimeout((int) SOCKET_TIMOUT.toMillis());\n+\n+            DatagramPacket packet;\n+            byte[] buffer;\n+\n+            // send search request\n+            String search = String.format(SEARCH_REQUEST_BODY_FORMAT, ipAddress, port);\n+            buffer = search.getBytes(StandardCharsets.UTF_8);\n+            packet = new DatagramPacket(buffer, buffer.length, new InetSocketAddress(SDDP_IP_ADDRESS, SDDP_PORT));\n+            socket.send(packet);\n+            logger.trace(\"Packet sent to '{}:{}' content:\\r\\n{}\", SDDP_IP_ADDRESS, SDDP_PORT, search);\n+\n+            final Instant listenDoneTime = Instant.now().plus(SEARCH_LISTEN_DURATION);\n+            buffer = new byte[READ_BUFFER_SIZE];\n+            packet = null;\n+\n+            // loop listen for responses\n+            while (Instant.now().isBefore(listenDoneTime) && !Thread.currentThread().isInterrupted()) {\n+                try {\n+                    if (packet == null) {\n+                        packet = new DatagramPacket(buffer, buffer.length);\n+                    }\n+                    socket.receive(packet);\n+                    processPacket(packet);\n+                    packet = null;\n+                } catch (SocketTimeoutException e) {\n+                    // receive will time out every 1 second so the thread won't block\n+                }\n+            }\n+        } catch (IOException e) {\n+            if (!closing) {\n+                logger.warn(\"listenActiveScanUnicast() error '{}'\", e.getMessage());\n+            }\n+        }\n+    }\n+\n+    @Modified\n+    @Override\n+    protected void modified(@Nullable Map<String, Object> configProperties) {\n+        super.modified(configProperties);\n+    }\n+\n+    /**\n+     * If the network interfaces change then cancel and recreate all pending tasks.\n+     */\n+    @Override\n+    public synchronized void onChanged(List<CidrAddress> added, List<CidrAddress> removed) {\n+        Future<?> multicastTask = listenBackgroundMulticastTask;\n+        if (multicastTask != null && !multicastTask.isDone()) {\n+            multicastTask.cancel(true);\n+            listenBackgroundMulticastTask = scheduler.submit(() -> listenBackGroundMulticast());\n+        }\n+        Future<?> unicastTask = listenActiveScanUnicastTask;\n+        if (unicastTask != null && !unicastTask.isDone()) {\n+            unicastTask.cancel(true);\n+            listenActiveScanUnicastTask = scheduler.submit(() -> listenActiveScanUnicast());\n+        }\n+    }\n+\n+    /**\n+     * Process the {@link DatagramPacket} content by trying to create an {@link SddpDevice} and eventually adding it to\n+     * the foundDevicesCache, and if so, then notifying all listeners.\n+     * \n+     * @param packet a datagram packet that arrived over the network.\n+     */\n+    private synchronized void processPacket(DatagramPacket packet) {\n+        String content = new String(packet.getData(), 0, packet.getLength(), StandardCharsets.UTF_8);\n+        if (logger.isTraceEnabled()) {\n+            logger.trace(\"Packet received from '{}:{}' content:\\r\\n{}\", packet.getAddress().getHostAddress(),\n+                    packet.getPort(), content);\n+        }\n+        Optional<SddpDevice> deviceOptional = createSddpDevice(content);\n+        if (deviceOptional.isPresent()) {\n+            SddpDevice device = deviceOptional.get();\n+            foundDevicesCache.remove(device);\n+\n+            if (device.isExpired()) {\n+                // device created from a NOTIFY OFFLINE announcement\n+                discoveryParticipants.forEach(p -> {\n+                    DiscoveryResult discoveryResult = p.createResult(device);\n+                    if (discoveryResult != null) {\n+                        thingRemoved(discoveryResult.getThingUID());\n+                    }\n+                });\n+                deviceParticipants.forEach(f -> f.deviceRemoved(device));\n+            } else {\n+                // device created from a NOTIFY ALIVE announcement or SEARCH response\n+                foundDevicesCache.add(device);\n+                discoveryParticipants.forEach(p -> {\n+                    DiscoveryResult discoveryResult = p.createResult(device);\n+                    if (discoveryResult != null) {\n+                        DiscoveryResult localizedResult = getLocalizedDiscoveryResult(discoveryResult,\n+                                FrameworkUtil.getBundle(p.getClass()));\n+                        thingDiscovered(localizedResult);\n+                    }\n+                });\n+                deviceParticipants.forEach(f -> f.deviceAdded(device));\n+            }\n+\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"processPacket() foundDevices={}, deviceParticipants={}, discoveryParticipants={}\",\n+                        foundDevicesCache.size(), deviceParticipants.size(), discoveryParticipants.size());\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Purge expired devices and notify all listeners.\n+     */\n+    private synchronized void purgeExpiredDevices() {\n+        Set<SddpDevice> devices = new HashSet<>(foundDevicesCache);\n+        devices.stream().filter(d -> d.isExpired()).forEach(d -> {\n+            discoveryParticipants.forEach(p -> {\n+                ThingUID thingUID = p.getThingUID(d);\n+                if (thingUID != null) {\n+                    thingRemoved(thingUID);\n+                }\n+            });\n+            deviceParticipants.forEach(f -> f.deviceRemoved(d));\n+        });\n+        foundDevicesCache.clear();\n+        foundDevicesCache.addAll(devices.stream().filter(d -> !d.isExpired()).collect(Collectors.toSet()));\n+    }\n+\n+    public void removeSddpDeviceParticipant(SddpDeviceParticipant participant) {\n+        deviceParticipants.remove(participant);\n+    }\n+\n+    public void removeSddpDiscoveryParticipant(SddpDiscoveryParticipant participant) {\n+        discoveryParticipants.remove(participant);\n+    }\n+\n+    @Override\n+    protected void startBackgroundDiscovery() {\n+        Future<?> task = listenBackgroundMulticastTask;\n+        if (task == null || task.isDone()) {\n+            listenBackgroundMulticastTask = scheduler.submit(() -> listenBackGroundMulticast());\n+        }\n+    }\n+\n+    /**\n+     * Schedule to send one single SDDP SEARCH request, and listen for responses.\n+     */\n+    @Override\n+    protected void startScan() {\n+        Future<?> task = listenActiveScanUnicastTask;\n+        if (task == null || task.isDone()) {\n+            listenActiveScanUnicastTask = scheduler.submit(() -> listenActiveScanUnicast());\n+        }\n+    }\n+\n+    @Override\n+    protected void stopBackgroundDiscovery() {\n+        cancelTask(listenBackgroundMulticastTask);\n+        listenBackgroundMulticastTask = null;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core/src/main/resources/OH-INF/config/addons.xml b/bundles/org.openhab.core/src/main/resources/OH-INF/config/addons.xml\nindex 752351223b7..ae137724fc6 100644\n--- a/bundles/org.openhab.core/src/main/resources/OH-INF/config/addons.xml\n+++ b/bundles/org.openhab.core/src/main/resources/OH-INF/config/addons.xml\n@@ -34,6 +34,12 @@\n \t\t\t<label>IP-based Suggestion Finder</label>\n \t\t\t<description>Use IP network discovery broadcasts to suggest add-ons. Enabling/disabling may take up to 1 minute.</description>\n \t\t</parameter>\n+\t\t<parameter name=\"suggestionFinderSddp\" type=\"boolean\">\n+\t\t\t<advanced>true</advanced>\n+\t\t\t<label>SDDP Suggestion Finder</label>\n+\t\t\t<description>Use SDDP network scan to suggest add-ons. Enabling/disabling may take up to 1 minute.</description>\n+\t\t\t<default>true</default>\n+\t\t</parameter>\n \t\t<parameter name=\"suggestionFinderUsb\" type=\"boolean\">\n \t\t\t<advanced>true</advanced>\n \t\t\t<label>USB Suggestion Finder</label>\n\ndiff --git a/bundles/org.openhab.core/src/main/resources/OH-INF/i18n/addons.properties b/bundles/org.openhab.core/src/main/resources/OH-INF/i18n/addons.properties\nindex 0d22f9d7de4..88e513f264c 100644\n--- a/bundles/org.openhab.core/src/main/resources/OH-INF/i18n/addons.properties\n+++ b/bundles/org.openhab.core/src/main/resources/OH-INF/i18n/addons.properties\n@@ -6,6 +6,8 @@ system.config.addons.suggestionFinderIp.label = IP-based Suggestion Finder\n system.config.addons.suggestionFinderIp.description = Use IP network discovery broadcasts to suggest add-ons. Enabling/disabling may take up to 1 minute.\n system.config.addons.suggestionFinderMdns.label = mDNS Suggestion Finder\n system.config.addons.suggestionFinderMdns.description = Use mDNS network scan to suggest add-ons. Enabling/disabling may take up to 1 minute.\n+system.config.addons.suggestionFinderSddp.label = SDDP Suggestion Finder\n+system.config.addons.suggestionFinderSddp.description = Use SDDP network scan to suggest add-ons. Enabling/disabling may take up to 1 minute.\n system.config.addons.suggestionFinderUpnp.label = UPnP Suggestion Finder\n system.config.addons.suggestionFinderUpnp.description = Use UPnP network scan to suggest add-ons. Enabling/disabling may take up to 1 minute.\n system.config.addons.suggestionFinderUsb.label = USB Suggestion Finder\n\ndiff --git a/bundles/pom.xml b/bundles/pom.xml\nindex d83958afe9b..25918c2b2b0 100644\n--- a/bundles/pom.xml\n+++ b/bundles/pom.xml\n@@ -34,9 +34,11 @@\n     <module>org.openhab.core.config.discovery.addon.ip</module>\n     <module>org.openhab.core.config.discovery.addon.mdns</module>\n     <module>org.openhab.core.config.discovery.addon.process</module>\n+    <module>org.openhab.core.config.discovery.addon.sddp</module>\n     <module>org.openhab.core.config.discovery.addon.upnp</module>\n     <module>org.openhab.core.config.discovery.addon.usb</module>\n     <module>org.openhab.core.config.discovery.mdns</module>\n+    <module>org.openhab.core.config.discovery.sddp</module>\n     <module>org.openhab.core.config.discovery.usbserial</module>\n     <module>org.openhab.core.config.discovery.usbserial.linuxsysfs</module>\n     <module>org.openhab.core.config.discovery.usbserial.ser2net</module>\n\ndiff --git a/features/karaf/openhab-core/src/main/feature/feature.xml b/features/karaf/openhab-core/src/main/feature/feature.xml\nindex 9f55be0cd79..2305b15a214 100644\n--- a/features/karaf/openhab-core/src/main/feature/feature.xml\n+++ b/features/karaf/openhab-core/src/main/feature/feature.xml\n@@ -105,6 +105,18 @@\n \t\t<bundle>mvn:org.openhab.core.bundles/org.openhab.core.config.discovery.addon.usb/${project.version}</bundle>\n \t</feature>\n \n+\t<feature name=\"openhab-core-config-discovery-addon-sddp\" version=\"${project.version}\">\n+\t\t<feature>openhab-core-base</feature>\n+\t\t<feature>openhab-core-config-discovery-addon</feature>\n+\t\t<feature>openhab-core-config-discovery-sddp</feature>\n+\t\t<bundle>mvn:org.openhab.core.bundles/org.openhab.core.config.discovery.addon.sddp/${project.version}</bundle>\n+\t</feature>\n+\n+\t<feature name=\"openhab-core-config-discovery-sddp\" version=\"${project.version}\">\n+\t\t<feature>openhab-core-base</feature>\n+\t\t<bundle>mvn:org.openhab.core.bundles/org.openhab.core.config.discovery.sddp/${project.version}</bundle>\n+\t</feature>\n+\n \t<feature name=\"openhab-core-addon-marketplace\" version=\"${project.version}\">\n \t\t<feature>kar</feature>\n \t\t<feature>openhab-core-base</feature>\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.config.discovery.addon.sddp/src/test/java/org/openhab/core/config/discovery/addon/sddp/test/SddpAddonFinderTests.java b/bundles/org.openhab.core.config.discovery.addon.sddp/src/test/java/org/openhab/core/config/discovery/addon/sddp/test/SddpAddonFinderTests.java\nnew file mode 100644\nindex 00000000000..fff72278ce7\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.addon.sddp/src/test/java/org/openhab/core/config/discovery/addon/sddp/test/SddpAddonFinderTests.java\n@@ -0,0 +1,88 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.config.discovery.addon.sddp.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.mock;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.core.addon.AddonDiscoveryMethod;\n+import org.openhab.core.addon.AddonInfo;\n+import org.openhab.core.addon.AddonMatchProperty;\n+import org.openhab.core.config.discovery.addon.sddp.SddpAddonFinder;\n+import org.openhab.core.config.discovery.sddp.SddpDevice;\n+import org.openhab.core.config.discovery.sddp.SddpDiscoveryService;\n+\n+/**\n+ * JUnit tests for the {@link SddpAddonFinder}.\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ */\n+@NonNullByDefault\n+public class SddpAddonFinderTests {\n+\n+    private static final Map<String, String> DEVICE_FIELDS = Map.of(\n+    // @formatter:off\n+            \"From\", \"\\\"192.168.4.237:1902\\\"\",\n+            \"Host\", \"\\\"JVC_PROJECTOR-E0DADC152802\\\"\",\n+            \"Max-Age\", \"1800\",\n+            \"Type\", \"\\\"JVCKENWOOD:Projector\\\"\",\n+            \"Primary-Proxy\", \"\\\"projector\\\"\",\n+            \"Proxies\", \"\\\"projector\\\"\",\n+            \"Manufacturer\", \"\\\"JVCKENWOOD\\\"\",\n+            \"Model\", \"\\\"DLA-RS3100_NZ8\\\"\",\n+            \"Driver\", \"\\\"projector_JVCKENWOOD_DLA-RS3100_NZ8.c4i\\\"\");\n+   // @formatter:on\n+\n+    private List<AddonInfo> createAddonInfos() {\n+        AddonDiscoveryMethod method = new AddonDiscoveryMethod().setServiceType(SddpAddonFinder.SERVICE_TYPE)\n+                .setMatchProperties(List.of(new AddonMatchProperty(\"host\", \"JVC.*\")));\n+        List<AddonInfo> addonInfos = new ArrayList<>();\n+        addonInfos.add(AddonInfo.builder(\"jvc\", \"binding\").withName(\"JVC\").withDescription(\"JVC Kenwood\")\n+                .withDiscoveryMethods(List.of(method)).build());\n+        return addonInfos;\n+    }\n+\n+    @Test\n+    public void testFinder() {\n+        SddpDevice device = new SddpDevice(DEVICE_FIELDS, false);\n+\n+        List<AddonInfo> addonInfos = createAddonInfos();\n+        SddpAddonFinder finder = new SddpAddonFinder(mock(SddpDiscoveryService.class));\n+\n+        finder.setAddonCandidates(addonInfos);\n+\n+        Set<AddonInfo> suggestions;\n+        AddonInfo info;\n+\n+        finder.deviceAdded(device);\n+        suggestions = finder.getSuggestedAddons();\n+        assertFalse(suggestions.isEmpty());\n+        info = suggestions.stream().findFirst().orElse(null);\n+        assertNotNull(info);\n+        assertEquals(\"JVC Kenwood\", info.getDescription());\n+\n+        finder.deviceRemoved(device);\n+        suggestions = finder.getSuggestedAddons();\n+        assertTrue(suggestions.isEmpty());\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.config.discovery.sddp/src/test/java/org/openhab/core/config/discovery/sddp/test/SddpDiscoveryServiceTests.java b/bundles/org.openhab.core.config.discovery.sddp/src/test/java/org/openhab/core/config/discovery/sddp/test/SddpDiscoveryServiceTests.java\nnew file mode 100644\nindex 00000000000..ee571e3bd62\n--- /dev/null\n+++ b/bundles/org.openhab.core.config.discovery.sddp/src/test/java/org/openhab/core/config/discovery/sddp/test/SddpDiscoveryServiceTests.java\n@@ -0,0 +1,158 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.config.discovery.sddp.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInstance;\n+import org.junit.jupiter.api.TestInstance.Lifecycle;\n+import org.openhab.core.config.discovery.sddp.SddpDevice;\n+import org.openhab.core.config.discovery.sddp.SddpDiscoveryService;\n+import org.openhab.core.i18n.LocaleProvider;\n+import org.openhab.core.i18n.TranslationProvider;\n+import org.openhab.core.net.NetworkAddressService;\n+\n+/**\n+ * JUnit tests for parsing SDDP discovery results.\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ */\n+@NonNullByDefault\n+@TestInstance(Lifecycle.PER_CLASS)\n+public class SddpDiscoveryServiceTests {\n+\n+    private static final String ALIVE_NOTIFICATION = \"\"\"\n+            NOTIFY ALIVE SDDP/1.0\n+            From: \"192.168.4.237:1902\"\n+            Host: \"JVC_PROJECTOR-E0DADC152802\"\n+            Max-Age: 1800\n+            Type: \"JVCKENWOOD:Projector\"\n+            Primary-Proxy: \"projector\"\n+            Proxies: \"projector\"\n+            Manufacturer: \"JVCKENWOOD\"\n+            Model: \"DLA-RS3100_NZ8\"\n+            Driver: \"projector_JVCKENWOOD_DLA-RS3100_NZ8.c4i\"\n+            \"\"\";\n+\n+    private static final String BAD_HEADER = \"\"\"\n+            SDDP/1.0 404 NOT FOUND\\r\n+            From: \"192.168.4.237:1902\"\\r\n+            Host: \"JVC_PROJECTOR-E0DADC152802\"\\r\n+            Max-Age: 1800\\r\n+            Type: \"JVCKENWOOD:Projector\"\\r\n+            Primary-Proxy: \"projector\"\\r\n+            Proxies: \"projector\"\\r\n+            Manufacturer: \"JVCKENWOOD\"\\r\n+            Model: \"DLA-RS3100_NZ8\"\\r\n+            Driver: \"projector_JVCKENWOOD_DLA-RS3100_NZ8.c4i\"\\r\n+            \"\"\";\n+\n+    private static final String BAD_PAYLOAD = \"\"\"\n+            SDDP/1.0 200 OK\\r\n+            \"\"\";\n+\n+    private static final String SEARCH_RESPONSE = \"\"\"\n+            SDDP/1.0 200 OK\\r\n+            From: \"192.168.4.237:1902\"\\r\n+            Host: \"JVC_PROJECTOR-E0DADC152802\"\\r\n+            Max-Age: 1800\\r\n+            Type: \"JVCKENWOOD:Projector\"\\r\n+            Primary-Proxy: \"projector\"\\r\n+            Proxies: \"projector\"\\r\n+            Manufacturer: \"JVCKENWOOD\"\\r\n+            Model: \"DLA-RS3100_NZ8\"\\r\n+            Driver: \"projector_JVCKENWOOD_DLA-RS3100_NZ8.c4i\"\\r\n+            \"\"\";\n+\n+    private @NonNullByDefault({}) NetworkAddressService networkAddressService;\n+\n+    @BeforeAll\n+    public void setup() {\n+        networkAddressService = mock(NetworkAddressService.class);\n+        when(networkAddressService.getPrimaryIpv4HostAddress()).thenReturn(\"192.168.1.1\");\n+    }\n+\n+    @Test\n+    void testAliveNotification() throws Exception {\n+        try (SddpDiscoveryService service = new SddpDiscoveryService(null, networkAddressService,\n+                mock(TranslationProvider.class), mock(LocaleProvider.class))) {\n+            Optional<SddpDevice> deviceOptional = service.createSddpDevice(ALIVE_NOTIFICATION);\n+            assertTrue(deviceOptional.isPresent());\n+            SddpDevice device = deviceOptional.orElse(null);\n+            assertNotNull(device);\n+            assertEquals(\"192.168.4.237:1902\", device.from);\n+            assertEquals(\"JVC_PROJECTOR-E0DADC152802\", device.host);\n+            assertEquals(\"1800\", device.maxAge);\n+            assertEquals(\"JVCKENWOOD:Projector\", device.type);\n+            assertEquals(\"projector\", device.primaryProxy);\n+            assertEquals(\"projector\", device.proxies);\n+            assertEquals(\"JVCKENWOOD\", device.manufacturer);\n+            assertEquals(\"DLA-RS3100_NZ8\", device.model);\n+            assertEquals(\"projector_JVCKENWOOD_DLA-RS3100_NZ8.c4i\", device.driver);\n+            assertEquals(\"192.168.4.237\", device.ipAddress);\n+            assertEquals(\"e0-da-dc-15-28-02\", device.macAddress);\n+            assertEquals(\"1902\", device.port);\n+        }\n+    }\n+\n+    @Test\n+    void testBadHeader() throws Exception {\n+        try (SddpDiscoveryService service = new SddpDiscoveryService(null, networkAddressService,\n+                mock(TranslationProvider.class), mock(LocaleProvider.class))) {\n+            Optional<SddpDevice> deviceOptional = service.createSddpDevice(BAD_HEADER);\n+            assertFalse(deviceOptional.isPresent());\n+        }\n+    }\n+\n+    @Test\n+    void testBadPayload() throws Exception {\n+        try (SddpDiscoveryService service = new SddpDiscoveryService(null, networkAddressService,\n+                mock(TranslationProvider.class), mock(LocaleProvider.class))) {\n+            Optional<SddpDevice> deviceOptional = service.createSddpDevice(BAD_PAYLOAD);\n+            assertFalse(deviceOptional.isPresent());\n+        }\n+    }\n+\n+    @Test\n+    void testSearchResponse() throws Exception {\n+        try (SddpDiscoveryService service = new SddpDiscoveryService(null, networkAddressService,\n+                mock(TranslationProvider.class), mock(LocaleProvider.class))) {\n+            Optional<SddpDevice> deviceOptional = service.createSddpDevice(SEARCH_RESPONSE);\n+            assertTrue(deviceOptional.isPresent());\n+            SddpDevice device = deviceOptional.orElse(null);\n+            assertNotNull(device);\n+            assertEquals(\"192.168.4.237:1902\", device.from);\n+            assertEquals(\"JVC_PROJECTOR-E0DADC152802\", device.host);\n+            assertEquals(\"1800\", device.maxAge);\n+            assertEquals(\"JVCKENWOOD:Projector\", device.type);\n+            assertEquals(\"projector\", device.primaryProxy);\n+            assertEquals(\"projector\", device.proxies);\n+            assertEquals(\"JVCKENWOOD\", device.manufacturer);\n+            assertEquals(\"DLA-RS3100_NZ8\", device.model);\n+            assertEquals(\"projector_JVCKENWOOD_DLA-RS3100_NZ8.c4i\", device.driver);\n+            assertEquals(\"192.168.4.237\", device.ipAddress);\n+            assertEquals(\"e0-da-dc-15-28-02\", device.macAddress);\n+            assertEquals(\"1902\", device.port);\n+        }\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4199",
    "pr_id": 4199,
    "issue_id": 4196,
    "repo": "openhab/openhab-core",
    "problem_statement": "customTags.yaml not loading after reboot\n\r\n\r\n## Expected Behavior\r\nI have created some custom tags. When I reboot, they should all remain.\r\n\r\n## Current Behavior\r\nWhen I reboot, my customTags.yaml file is not loaded, and every item that had a custom tag goes haywire in my model view.\r\nIf I open and resave the file, it works as expected.\r\n\r\n## Possible Solution\r\n<!-- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!-- or ideas how to implement the addition or change -->\r\n\r\n## Steps to Reproduce (for Bugs)\r\n1- Create a custom tag\r\n2- Reboot openhab\r\n\r\n",
    "issue_word_count": 92,
    "test_files_count": 8,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/addToModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileAddedOrRemoved.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdatePost.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdatePre.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modifyModelInitialContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/removeFromModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/updateInModelExpectedContent.yaml"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/addToModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileAddedOrRemoved.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdatePost.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdatePre.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/modifyModelInitialContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/removeFromModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/model/updateInModelExpectedContent.yaml"
    ],
    "base_commit": "c316b07c471f2ed95b7cf0140810aaa918feb2b7",
    "head_commit": "3b42ba7308459b4076a70f45c0797aedac796f5f",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4199",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4199",
    "dockerfile": "",
    "pr_merged_at": "2024-04-30T23:21:28.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java\nindex fffdcc8fd0e..0aecf551e5b 100644\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java\n+++ b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java\n@@ -12,6 +12,8 @@\n  */\n package org.openhab.core.model.yaml.internal;\n \n+import static org.openhab.core.service.WatchService.Kind.CREATE;\n+\n import java.io.IOException;\n import java.nio.file.Files;\n import java.nio.file.Path;\n@@ -24,6 +26,7 @@\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -52,6 +55,7 @@\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n import com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLParser;\n \n /**\n  * The {@link YamlModelRepositoryImpl} is an OSGi service, that encapsulates all YAML file processing\n@@ -82,7 +86,8 @@ public YamlModelRepositoryImpl(@Reference(target = WatchService.CONFIG_WATCHER_F\n                 .disable(YAMLGenerator.Feature.SPLIT_LINES) // do not split long lines\n                 .enable(YAMLGenerator.Feature.INDENT_ARRAYS_WITH_INDICATOR) // indent arrays\n                 .enable(YAMLGenerator.Feature.MINIMIZE_QUOTES) // use quotes only where necessary\n-                .build();\n+                .enable(YAMLParser.Feature.PARSE_BOOLEAN_LIKE_WORDS_AS_STRINGS).build(); // do not parse ON/OFF/... as\n+                                                                                         // booleans\n         this.objectMapper = new ObjectMapper(yamlFactory);\n         objectMapper.findAndRegisterModules();\n         objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE);\n@@ -91,6 +96,13 @@ public YamlModelRepositoryImpl(@Reference(target = WatchService.CONFIG_WATCHER_F\n         this.watchService = watchService;\n         watchService.registerListener(this, Path.of(\"\"));\n         watchPath = watchService.getWatchPath();\n+\n+        // read initial contents\n+        try (Stream<Path> files = Files.walk(watchPath)) {\n+            files.filter(Files::isRegularFile).map(watchPath::relativize).forEach(f -> processWatchEvent(CREATE, f));\n+        } catch (IOException e) {\n+            logger.warn(\"Could not list YAML files in '{}', models might be missing: {}\", watchPath, e.getMessage());\n+        }\n     }\n \n     @Deactivate\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java\nindex ccae8c33b99..0b6ac9a9df3 100644\n--- a/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java\n+++ b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java\n@@ -51,7 +51,7 @@\n @MockitoSettings(strictness = Strictness.LENIENT)\n @NonNullByDefault\n public class YamlModelRepositoryImplTest {\n-    private static final Path SOURCE_PATH = Path.of(\"src/test/resources\");\n+    private static final Path SOURCE_PATH = Path.of(\"src/test/resources/model\");\n     private static final String MODEL_NAME = \"model\";\n     private static final Path MODEL_PATH = Path.of(MODEL_NAME + \".yaml\");\n \n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/addToModelExpectedContent.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/model/addToModelExpectedContent.yaml\nsimilarity index 100%\nrename from bundles/org.openhab.core.model.yaml/src/test/resources/addToModelExpectedContent.yaml\nrename to bundles/org.openhab.core.model.yaml/src/test/resources/model/addToModelExpectedContent.yaml\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileAddedOrRemoved.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileAddedOrRemoved.yaml\nsimilarity index 100%\nrename from bundles/org.openhab.core.model.yaml/src/test/resources/modelFileAddedOrRemoved.yaml\nrename to bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileAddedOrRemoved.yaml\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePost.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdatePost.yaml\nsimilarity index 100%\nrename from bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePost.yaml\nrename to bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdatePost.yaml\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePre.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdatePre.yaml\nsimilarity index 100%\nrename from bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePre.yaml\nrename to bundles/org.openhab.core.model.yaml/src/test/resources/model/modelFileUpdatePre.yaml\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/modifyModelInitialContent.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/model/modifyModelInitialContent.yaml\nsimilarity index 100%\nrename from bundles/org.openhab.core.model.yaml/src/test/resources/modifyModelInitialContent.yaml\nrename to bundles/org.openhab.core.model.yaml/src/test/resources/model/modifyModelInitialContent.yaml\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/removeFromModelExpectedContent.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/model/removeFromModelExpectedContent.yaml\nsimilarity index 100%\nrename from bundles/org.openhab.core.model.yaml/src/test/resources/removeFromModelExpectedContent.yaml\nrename to bundles/org.openhab.core.model.yaml/src/test/resources/model/removeFromModelExpectedContent.yaml\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/updateInModelExpectedContent.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/model/updateInModelExpectedContent.yaml\nsimilarity index 100%\nrename from bundles/org.openhab.core.model.yaml/src/test/resources/updateInModelExpectedContent.yaml\nrename to bundles/org.openhab.core.model.yaml/src/test/resources/model/updateInModelExpectedContent.yaml\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4113",
    "pr_id": 4113,
    "issue_id": 4112,
    "repo": "openhab/openhab-core",
    "problem_statement": "Replace deprecated `hamcrest-library` with `hamcrest` in test BOM\nWhile developing unit tests, I noticed that the test dependencies contain `hamcrest-library` and `hamcrest-core`. These two libraries are obsolete in the mean time because everything was combined into `hamcrest`.\r\n\r\nBoth libraries contain text files and Javadocs saying:\r\n\r\n```\r\nAll the classes in hamcrest-core.jar and hamcrest-library.jar has moved\r\ninto hamcrest.jar. Please update your dependencies.\r\n```\r\n\r\nI found that the dependency is defined in `org.openhab.core.bom.test/pom.xml`:\r\n\r\n```xml\r\n<dependency>\r\n    <groupId>org.hamcrest</groupId>\r\n    <artifactId>hamcrest-library</artifactId>\r\n    <version>2.2</version>\r\n</dependency>\r\n```\r\n\r\nIt yields this dependency hierarchy:\r\n\r\n```\r\nhamcrest-library\r\n+- hamcrest-core\r\n     +- hamcrest\r\n```\r\n\r\nSince the first two libraries are deprecated/obsolete, we should directly depend on `hamcrest` instead of `hamcrest-library`. I will provide a PR soon.",
    "issue_word_count": 132,
    "test_files_count": 1,
    "non_test_files_count": 0,
    "pr_changed_files": [
      "bom/test/pom.xml"
    ],
    "pr_changed_test_files": [
      "bom/test/pom.xml"
    ],
    "base_commit": "b64e9723a96409ef1eee92572778a25683940191",
    "head_commit": "10b0eae5338f097d8d93c95e070425490bf7f54c",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4113",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4113",
    "dockerfile": "",
    "pr_merged_at": "2024-03-01T16:59:29.000Z",
    "patch": "",
    "test_patch": "diff --git a/bom/test/pom.xml b/bom/test/pom.xml\nindex 854438f2870..6c9aefcc6d4 100644\n--- a/bom/test/pom.xml\n+++ b/bom/test/pom.xml\n@@ -34,7 +34,7 @@\n     </dependency>\n     <dependency>\n       <groupId>org.hamcrest</groupId>\n-      <artifactId>hamcrest-library</artifactId>\n+      <artifactId>hamcrest</artifactId>\n       <version>2.2</version>\n     </dependency>\n     <dependency>\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4089",
    "pr_id": 4089,
    "issue_id": 4087,
    "repo": "openhab/openhab-core",
    "problem_statement": "[persistence] forecast strategy not working for states added by REST API\nOpenhab 4.1.1\r\n\r\ninmemory does not respect forecast strategy\r\n\r\n`inmemory.persist`\r\n````\r\nStrategies {\r\n}\r\n\r\nItems {\r\n    // persist items on every change and every minute\r\n    gInMemoryForecast* : strategy = everyChange, forecast\r\n}\r\n````\r\n\r\n``items.items``\r\n````\r\nGroup\tgInMemoryForecast\r\nNumber\tInMemoryForecastItem      (gInMemoryForecast)\r\n````\r\n\r\nCreate future values in inmemory\r\n````\r\n/rest/persistence/items/InMemoryForecastItem?time=2024-02-12T08:10:11.000000%2B0100&state=1&serviceId=inmemory\r\n/rest/persistence/items/InMemoryForecastItem?time=2024-02-12T08:10:12.000000%2B0100&state=2&serviceId=inmemory\r\n/rest/persistence/items/InMemoryForecastItem?time=2024-02-12T08:10:13.000000%2B0100&state=3&serviceId=inmemory\r\n/rest/persistence/items/InMemoryForecastItem?time=2024-02-12T08:10:14.000000%2B0100&state=4&serviceId=inmemory\r\n/rest/persistence/items/InMemoryForecastItem?time=2024-02-12T08:10:15.000000%2B0100&state=5&serviceId=inmemory\r\n/rest/persistence/items/InMemoryForecastItem?time=2024-02-12T08:10:16.000000%2B0100&state=6&serviceId=inmemory\r\n/rest/persistence/items/InMemoryForecastItem?time=2024-02-12T08:10:17.000000%2B0100&state=7&serviceId=inmemory\r\n/rest/persistence/items/InMemoryForecastItem?time=2024-02-12T08:10:18.000000%2B0100&state=8&serviceId=inmemory\r\n/rest/persistence/items/InMemoryForecastItem?time=2024-02-12T08:10:19.000000%2B0100&state=9&serviceId=inmemory\r\n````\r\n\r\nQuery values to see they are properly created\r\n````\r\n/rest/persistence/items/InMemoryForecastItem?serviceId=inmemory&starttime=2024-02-12T08:10:05.000000%2B0100&endtime=2024-02-12T08:10:19.005000%2B0100\r\n````\r\nValues are there:\r\n````\r\n{1707721810.195: 0, 1707721811.0: 1, 1707721812.0: 2, 1707721813.0: 3, 1707721814.0: 4, 1707721815.0: 5, 1707721816.0: 6, 1707721817.0: 7, 1707721818.0: 8, 1707721819.0: 9}\r\n````\r\n\r\nObserve event log - only the initial change will be shown that was also persisted by the `everyChange` policy: ``1707721810.195: 0``\r\n````\r\n2024-02-12 08:10:10.195 [INFO ] [openhab.event.ItemStateChangedEvent ] - Item 'InMemoryForecastItem' changed from 1 to 0\r\n````\r\n\r\nI would have expected that `InMemoryForecastItem` will change from 1..9 because there are future timestamps available in the persistence service ([as described here](https://www.openhab.org/docs/configuration/persistence.html#strategies)).",
    "issue_word_count": 328,
    "test_files_count": 2,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java",
      "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/PersistenceManager.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java",
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationRegistry.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java"
    ],
    "base_commit": "a906d09b4006e0e3f59d4f3fe5aeb2ea1b199b04",
    "head_commit": "4c05ed63dc3a3469a5a959d0d3415dcecd19a782",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4089",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4089",
    "dockerfile": "",
    "pr_merged_at": "2024-02-13T20:59:22.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java\nindex cf30f7bc2df..ddfdc061940 100644\n--- a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java\n+++ b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResource.java\n@@ -55,6 +55,7 @@\n import org.openhab.core.persistence.HistoricItem;\n import org.openhab.core.persistence.ModifiablePersistenceService;\n import org.openhab.core.persistence.PersistenceItemInfo;\n+import org.openhab.core.persistence.PersistenceManager;\n import org.openhab.core.persistence.PersistenceService;\n import org.openhab.core.persistence.PersistenceServiceRegistry;\n import org.openhab.core.persistence.QueryablePersistenceService;\n@@ -121,6 +122,7 @@ public class PersistenceResource implements RESTResource {\n     private final ItemRegistry itemRegistry;\n     private final LocaleService localeService;\n     private final PersistenceServiceRegistry persistenceServiceRegistry;\n+    private final PersistenceManager persistenceManager;\n     private final PersistenceServiceConfigurationRegistry persistenceServiceConfigurationRegistry;\n     private final ManagedPersistenceServiceConfigurationProvider managedPersistenceServiceConfigurationProvider;\n     private final TimeZoneProvider timeZoneProvider;\n@@ -130,12 +132,14 @@ public PersistenceResource( //\n             final @Reference ItemRegistry itemRegistry, //\n             final @Reference LocaleService localeService,\n             final @Reference PersistenceServiceRegistry persistenceServiceRegistry,\n+            final @Reference PersistenceManager persistenceManager,\n             final @Reference PersistenceServiceConfigurationRegistry persistenceServiceConfigurationRegistry,\n             final @Reference ManagedPersistenceServiceConfigurationProvider managedPersistenceServiceConfigurationProvider,\n             final @Reference TimeZoneProvider timeZoneProvider) {\n         this.itemRegistry = itemRegistry;\n         this.localeService = localeService;\n         this.persistenceServiceRegistry = persistenceServiceRegistry;\n+        this.persistenceManager = persistenceManager;\n         this.persistenceServiceConfigurationRegistry = persistenceServiceConfigurationRegistry;\n         this.managedPersistenceServiceConfigurationProvider = managedPersistenceServiceConfigurationProvider;\n         this.timeZoneProvider = timeZoneProvider;\n@@ -608,6 +612,9 @@ private Response putItemState(@Nullable String serviceId, String itemName, Strin\n \n         ModifiablePersistenceService mService = (ModifiablePersistenceService) service;\n         mService.store(item, dateTime, state);\n+\n+        persistenceManager.handleExternalPersistenceDataChange(mService, item);\n+\n         return Response.status(Status.OK).build();\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/PersistenceManager.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/PersistenceManager.java\nnew file mode 100644\nindex 00000000000..f23b69f1a68\n--- /dev/null\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/PersistenceManager.java\n@@ -0,0 +1,29 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.persistence;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.items.Item;\n+import org.openhab.core.persistence.internal.PersistenceManagerImpl;\n+\n+/**\n+ * The {@link PersistenceManager} interface is used to communicate between external components (e.g. REST interface)\n+ * that modify persisted data bypassing the {@link PersistenceManagerImpl}. This is required because forecast jobs might\n+ * need an update when the persisted data changes.\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface PersistenceManager {\n+    void handleExternalPersistenceDataChange(PersistenceService persistenceService, Item item);\n+}\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManager.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java\nsimilarity index 96%\nrename from bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManager.java\nrename to bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java\nindex c17ca7939ef..e09678b3224 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManager.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/internal/PersistenceManagerImpl.java\n@@ -51,6 +51,7 @@\n import org.openhab.core.persistence.HistoricItem;\n import org.openhab.core.persistence.ModifiablePersistenceService;\n import org.openhab.core.persistence.PersistenceItemConfiguration;\n+import org.openhab.core.persistence.PersistenceManager;\n import org.openhab.core.persistence.PersistenceService;\n import org.openhab.core.persistence.QueryablePersistenceService;\n import org.openhab.core.persistence.config.PersistenceAllConfig;\n@@ -90,11 +91,11 @@\n  * @author Jan N. Klug - Refactored to use service configuration registry\n  * @author Jan N. Klug - Added time series support\n  */\n-@Component(immediate = true)\n+@Component(immediate = true, service = PersistenceManager.class)\n @NonNullByDefault\n-public class PersistenceManager implements ItemRegistryChangeListener, StateChangeListener, ReadyTracker,\n-        PersistenceServiceConfigurationRegistryChangeListener, TimeSeriesListener {\n-    private final Logger logger = LoggerFactory.getLogger(PersistenceManager.class);\n+public class PersistenceManagerImpl implements ItemRegistryChangeListener, StateChangeListener, ReadyTracker,\n+        PersistenceServiceConfigurationRegistryChangeListener, TimeSeriesListener, PersistenceManager {\n+    private final Logger logger = LoggerFactory.getLogger(PersistenceManagerImpl.class);\n \n     private final ReadyMarker marker = new ReadyMarker(\"persistence\", \"restore\");\n \n@@ -111,7 +112,7 @@ public class PersistenceManager implements ItemRegistryChangeListener, StateChan\n     private final Map<String, PersistenceServiceContainer> persistenceServiceContainers = new ConcurrentHashMap<>();\n \n     @Activate\n-    public PersistenceManager(final @Reference CronScheduler cronScheduler, final @Reference Scheduler scheduler,\n+    public PersistenceManagerImpl(final @Reference CronScheduler cronScheduler, final @Reference Scheduler scheduler,\n             final @Reference ItemRegistry itemRegistry, final @Reference SafeCaller safeCaller,\n             final @Reference ReadyService readyService,\n             final @Reference PersistenceServiceConfigurationRegistry persistenceServiceConfigurationRegistry) {\n@@ -392,6 +393,14 @@ public void updated(PersistenceServiceConfiguration oldElement, PersistenceServi\n         added(element);\n     }\n \n+    @Override\n+    public void handleExternalPersistenceDataChange(PersistenceService persistenceService, Item item) {\n+        persistenceServiceContainers.values().stream()\n+                .filter(container -> container.persistenceService.equals(persistenceService) && container\n+                        .getMatchingConfigurations(FORECAST).anyMatch(itemConf -> appliesToItem(itemConf, item)))\n+                .forEach(container -> container.scheduleNextPersistedForecastForItem(item.getName()));\n+    }\n+\n     private class PersistenceServiceContainer {\n         private final PersistenceService persistenceService;\n         private final Set<ScheduledCompletableFuture<?>> persistJobs = new HashSet<>();\n@@ -534,9 +543,9 @@ private void restoreItemStateIfPossible(Item item) {\n                     // someone else already restored the state or a new state was set\n                     return;\n                 }\n-                genericItem.removeStateChangeListener(PersistenceManager.this);\n+                genericItem.removeStateChangeListener(PersistenceManagerImpl.this);\n                 genericItem.setState(historicItem.getState());\n-                genericItem.addStateChangeListener(PersistenceManager.this);\n+                genericItem.addStateChangeListener(PersistenceManagerImpl.this);\n                 if (logger.isDebugEnabled()) {\n                     logger.debug(\"Restored item state from '{}' for item '{}' -> '{}'\",\n                             DateTimeFormatter.ISO_ZONED_DATE_TIME.format(historicItem.getTimestamp()), item.getName(),\n\ndiff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationRegistry.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationRegistry.java\nindex 307f78c8170..536112d8c88 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationRegistry.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/registry/PersistenceServiceConfigurationRegistry.java\n@@ -14,11 +14,12 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.openhab.core.common.registry.Registry;\n+import org.openhab.core.persistence.internal.PersistenceManagerImpl;\n \n /**\n  * The {@link PersistenceServiceConfigurationRegistry} is the central place to store persistence service configurations.\n  * Configurations are registered through {@link PersistenceServiceConfigurationProvider}.\n- * Because the {@link org.openhab.core.persistence.internal.PersistenceManager} implementation needs to listen to\n+ * Because the {@link PersistenceManagerImpl} implementation needs to listen to\n  * different registries, the {@link PersistenceServiceConfigurationRegistryChangeListener} can be used to add listeners\n  * to this registry.\n  *\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java b/bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java\nindex 83e6531f627..b2fd7b38ef0 100644\n--- a/bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java\n+++ b/bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/persistence/PersistenceResourceTest.java\n@@ -24,21 +24,29 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import javax.ws.rs.core.HttpHeaders;\n+\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.mockito.Mock;\n import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.io.rest.LocaleService;\n+import org.openhab.core.items.Item;\n+import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.library.items.NumberItem;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.persistence.HistoricItem;\n+import org.openhab.core.persistence.ModifiablePersistenceService;\n import org.openhab.core.persistence.PersistenceServiceRegistry;\n-import org.openhab.core.persistence.QueryablePersistenceService;\n import org.openhab.core.persistence.dto.ItemHistoryDTO;\n import org.openhab.core.persistence.dto.ItemHistoryDTO.HistoryDataBean;\n+import org.openhab.core.persistence.internal.PersistenceManagerImpl;\n import org.openhab.core.persistence.registry.ManagedPersistenceServiceConfigurationProvider;\n import org.openhab.core.persistence.registry.PersistenceServiceConfigurationRegistry;\n import org.openhab.core.types.State;\n@@ -49,6 +57,7 @@\n  * @author Stefan Triller - Initial contribution\n  */\n @ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n @NonNullByDefault\n public class PersistenceResourceTest {\n \n@@ -60,6 +69,8 @@ public class PersistenceResourceTest {\n     private @Mock @NonNullByDefault({}) ItemRegistry itemRegistryMock;\n     private @Mock @NonNullByDefault({}) LocaleService localeServiceMock;\n     private @Mock @NonNullByDefault({}) PersistenceServiceRegistry persistenceServiceRegistryMock;\n+    private @Mock @NonNullByDefault({}) ModifiablePersistenceService pServiceMock;\n+    private @Mock @NonNullByDefault({}) PersistenceManagerImpl persistenceManagerMock;\n     private @Mock @NonNullByDefault({}) PersistenceServiceConfigurationRegistry persistenceServiceConfigurationRegistryMock;\n     private @Mock @NonNullByDefault({}) ManagedPersistenceServiceConfigurationProvider managedPersistenceServiceConfigurationProviderMock;\n     private @Mock @NonNullByDefault({}) TimeZoneProvider timeZoneProviderMock;\n@@ -67,8 +78,8 @@ public class PersistenceResourceTest {\n     @BeforeEach\n     public void beforeEach() {\n         pResource = new PersistenceResource(itemRegistryMock, localeServiceMock, persistenceServiceRegistryMock,\n-                persistenceServiceConfigurationRegistryMock, managedPersistenceServiceConfigurationProviderMock,\n-                timeZoneProviderMock);\n+                persistenceManagerMock, persistenceServiceConfigurationRegistryMock,\n+                managedPersistenceServiceConfigurationProviderMock, timeZoneProviderMock);\n \n         int startValue = 2016;\n         int endValue = 2018;\n@@ -97,10 +108,9 @@ public String getName() {\n             });\n         }\n \n-        QueryablePersistenceService pService = mock(QueryablePersistenceService.class);\n-        when(pService.query(any())).thenReturn(items);\n+        when(pServiceMock.query(any())).thenReturn(items);\n \n-        when(persistenceServiceRegistryMock.get(PERSISTENCE_SERVICE_ID)).thenReturn(pService);\n+        when(persistenceServiceRegistryMock.get(PERSISTENCE_SERVICE_ID)).thenReturn(pServiceMock);\n         when(timeZoneProviderMock.getTimeZone()).thenReturn(ZoneId.systemDefault());\n     }\n \n@@ -142,4 +152,16 @@ public void testGetPersistenceItemDataWithBoundery() {\n         assertThat(Integer.parseInt(dto.datapoints), is(7));\n         assertThat(dto.data, hasSize(7));\n     }\n+\n+    @Test\n+    public void testPutPersistenceItemData() throws ItemNotFoundException {\n+        HttpHeaders headersMock = mock(HttpHeaders.class);\n+        Item item = new NumberItem(\"itemName\");\n+        when(itemRegistryMock.getItem(\"itemName\")).thenReturn(item);\n+\n+        pResource.httpPutPersistenceItemData(headersMock, PERSISTENCE_SERVICE_ID, \"itemName\",\n+                \"2024-02-01T00:00:00.000Z\", \"0\");\n+\n+        verify(persistenceManagerMock).handleExternalPersistenceDataChange(eq(pServiceMock), eq(item));\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java\nindex 7312d55a798..bfd6ab7890c 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/internal/PersistenceManagerTest.java\n@@ -79,7 +79,7 @@\n import org.openhab.core.types.UnDefType;\n \n /**\n- * The {@link PersistenceManagerTest} contains tests for the {@link PersistenceManager}\n+ * The {@link PersistenceManagerTest} contains tests for the {@link PersistenceManagerImpl}\n  *\n  * @author Jan N. Klug - Initial contribution\n  */\n@@ -134,7 +134,7 @@ public String getName() {\n     private @NonNullByDefault({}) @Mock QueryablePersistenceService queryablePersistenceServiceMock;\n     private @NonNullByDefault({}) @Mock ModifiablePersistenceService modifiablePersistenceServiceMock;\n \n-    private @NonNullByDefault({}) PersistenceManager manager;\n+    private @NonNullByDefault({}) PersistenceManagerImpl manager;\n \n     @BeforeEach\n     public void setUp() throws ItemNotFoundException {\n@@ -156,7 +156,7 @@ public void setUp() throws ItemNotFoundException {\n         when(queryablePersistenceServiceMock.query(any())).thenReturn(List.of(TEST_HISTORIC_ITEM));\n         when(modifiablePersistenceServiceMock.getId()).thenReturn(TEST_MODIFIABLE_PERSISTENCE_SERVICE_ID);\n \n-        manager = new PersistenceManager(cronSchedulerMock, schedulerMock, itemRegistryMock, safeCallerMock,\n+        manager = new PersistenceManagerImpl(cronSchedulerMock, schedulerMock, itemRegistryMock, safeCallerMock,\n                 readyServiceMock, persistenceServiceConfigurationRegistryMock);\n         manager.addPersistenceService(persistenceServiceMock);\n         manager.addPersistenceService(queryablePersistenceServiceMock);\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4084",
    "pr_id": 4084,
    "issue_id": 3430,
    "repo": "openhab/openhab-core",
    "problem_statement": "Sitemap: Add parameters to control slider behavior\nLet's try the new issue template (#3427):\r\n\r\n\r\n### Is your feature request related to a problem? Please describe.\r\n<!--\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n-->\r\n\r\nIn openHAB two different behavior exist for sending updates:\r\n\r\n1. Send the update when the mouse click/finger touch is released.\r\n1. Send the update while the slider is still changed.\r\n\r\nI tested these sliders:\r\n\r\n- Basic UI: Option 1\r\n- Config page of Dimmer items in Main UI: Option 2\r\n- Android app: Recently changed from 1 to 2\r\n- iOS app has a setting to set option 1 or 2 globally\r\n\r\nOption 2 is good for things that can change quickly, e.g. brightness or volume, but not for rollershutters as they cannot move so fast. This option may also cause issues when too many updates are sent in a short time, e.g. here: https://github.com/openhab/openhab-android/issues/3241\r\n\r\n### Describe the solution you'd like\r\n<!--\r\nA clear and concise description of what you want to happen.\r\n-->\r\n\r\nAdd two new parameters to the Slider, Color and Setpoint widgets, similar to those in the `oh-slider-card` widget in Main UI:\r\n\r\n````yml\r\nvalue: \"\"\r\nconfig:\r\n  releaseOnly: false             # Send while sliding\r\n  commandInterval: 300         # But only every 300 (ms?)\r\n````\r\n\r\nThe Color widget may have a slider for brightness and the Setpoint widget has a bottom sheet with a slider on Android.\r\n\r\n### Describe alternatives you've considered\r\n<!--\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n-->\r\n\r\n### Additional context\r\n<!--\r\nAdd any other context or screenshots about the feature request here.\r\n-->\r\n\r\nhttps://community.openhab.org/t/define-slider-behavior/144714\r\n\r\n### Coordination between maintainers\r\n<!--\r\nDon't edit or remove this section.\r\n-->\r\n\r\nNotify maintainers of other UIs:\r\n@openhab/webui-maintainers \r\n@openhab/android-maintainers \r\n@openhab/ios-maintainers \r\n\r\nChecklist for implementation:\r\n- [ ] Core\r\n- [ ] Basic UI\r\n- [ ] Main UI\r\n- [ ] Android app\r\n- [ ] iOS app\r\n- [ ] Docs",
    "issue_word_count": 317,
    "test_files_count": 1,
    "non_test_files_count": 5,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/WidgetDTO.java",
      "bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext",
      "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java",
      "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java",
      "bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java"
    ],
    "base_commit": "6be00bd5855d42d6a83b7d3e09cc19811fb0f2d7",
    "head_commit": "1cc6aa555fc82de3a174dfaad36ac46acfc02997",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4084",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4084",
    "dockerfile": "",
    "pr_merged_at": "2024-02-12T19:12:19.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\nindex 777efcb6c54..2a2c82fe546 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\n@@ -584,6 +584,7 @@ private PageDTO createPageBean(String sitemapName, @Nullable String title, @Null\n         if (widget instanceof Slider sliderWidget) {\n             bean.sendFrequency = sliderWidget.getFrequency();\n             bean.switchSupport = sliderWidget.isSwitchEnabled();\n+            bean.releaseOnly = sliderWidget.isReleaseOnly();\n             bean.minValue = sliderWidget.getMinValue();\n             bean.maxValue = sliderWidget.getMaxValue();\n             bean.step = sliderWidget.getStep();\n\ndiff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/WidgetDTO.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/WidgetDTO.java\nindex 8ca162f8dc5..e454c484883 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/WidgetDTO.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/WidgetDTO.java\n@@ -55,6 +55,7 @@ public class WidgetDTO {\n     // widget-specific attributes\n     public final List<MappingDTO> mappings = new ArrayList<>();\n     public Boolean switchSupport;\n+    public Boolean releaseOnly;\n     public Integer sendFrequency;\n     public Integer refresh;\n     public Integer height;\n\ndiff --git a/bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext b/bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext\nindex b0a6660f384..376798e473d 100644\n--- a/bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext\n+++ b/bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext\n@@ -127,7 +127,8 @@ Slider:\n         ('icon=[' (IconRules+=IconRule (',' IconRules+=IconRule)*) ']') |\n         ('staticIcon=' staticIcon=Icon))? &\n     ('sendFrequency=' frequency=INT)? & (switchEnabled?='switchSupport')? &\n-    ('minValue=' minValue=Number)? & ('maxValue=' maxValue=Number)? & ('step=' step=Number)? &\n+    (releaseOnly?='releaseOnly')? & ('minValue=' minValue=Number)? &\n+    ('maxValue=' maxValue=Number)? & ('step=' step=Number)? &\n     ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n     ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n     ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n\ndiff --git a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java\nindex dd70e81aaf0..f07ef8cdedf 100644\n--- a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java\n+++ b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java\n@@ -240,6 +240,8 @@ protected Sitemap buildSitemap(RootUIComponent rootComponent) {\n                 setWidgetPropertyFromComponentConfig(widget, component, \"step\", SitemapPackage.SLIDER__STEP);\n                 setWidgetPropertyFromComponentConfig(widget, component, \"switchEnabled\",\n                         SitemapPackage.SLIDER__SWITCH_ENABLED);\n+                setWidgetPropertyFromComponentConfig(widget, component, \"releaseOnly\",\n+                        SitemapPackage.SLIDER__RELEASE_ONLY);\n                 setWidgetPropertyFromComponentConfig(widget, component, \"sendFrequency\",\n                         SitemapPackage.SLIDER__FREQUENCY);\n                 break;\n\ndiff --git a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java\nindex 6e21416463b..c4034ab9d3b 100644\n--- a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java\n+++ b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java\n@@ -284,6 +284,7 @@ private void applyConfig(@Nullable Map<String, Object> config) {\n         } else if (DimmerItem.class.equals(itemType)) {\n             Slider slider = SitemapFactory.eINSTANCE.createSlider();\n             slider.setSwitchEnabled(true);\n+            slider.setReleaseOnly(true);\n             return slider;\n         } else if (ImageItem.class.equals(itemType)) {\n             return SitemapFactory.eINSTANCE.createImage();\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java b/bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java\nindex 15336254a85..9f6c645302e 100644\n--- a/bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java\n+++ b/bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java\n@@ -815,6 +815,7 @@ public void getDefaultWidgets() {\n         defaultWidget = uiRegistry.getDefaultWidget(DimmerItem.class, ITEM_NAME);\n         assertThat(defaultWidget, is(instanceOf(Slider.class)));\n         assertThat(((Slider) defaultWidget).isSwitchEnabled(), is(true));\n+        assertThat(((Slider) defaultWidget).isReleaseOnly(), is(true));\n \n         defaultWidget = uiRegistry.getDefaultWidget(ImageItem.class, ITEM_NAME);\n         assertThat(defaultWidget, is(instanceOf(Image.class)));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4076",
    "pr_id": 4076,
    "issue_id": 3235,
    "repo": "openhab/openhab-core",
    "problem_statement": "[RFC] Change loading mechanism for *.things and *.items files\nCurrently when a file is edited all items from the file get removed and then the items from the file get re-added again.\r\nThis results in a log of items/things loosing the current state and runtime data.\r\n\r\nA better solution would be in case of a file change to build a diff between the already existing items/things from the file.\r\nObjects that were removed get deleted, objects that were change get changed and objects that were added can be added normally.\r\n",
    "issue_word_count": 93,
    "test_files_count": 2,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigUtil.java",
      "bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/DecimalNormalizer.java",
      "bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/NormalizerFactory.java",
      "bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/ConfigurationTest.java",
      "bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/normalization/NormalizerTest.java",
      "bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/ConfigurationTest.java",
      "bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/normalization/NormalizerTest.java"
    ],
    "base_commit": "21186d616898359216b71bb55af711687ec8e515",
    "head_commit": "0fd9dc4462f5338bc731254496b48c607bdfbd9f",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4076",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4076",
    "dockerfile": "",
    "pr_merged_at": "2024-05-02T09:41:53.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigUtil.java b/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigUtil.java\nindex 2b9ea09cf15..d99c8314938 100644\n--- a/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigUtil.java\n+++ b/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/ConfigUtil.java\n@@ -177,10 +177,12 @@ public static Object normalizeType(Object value, @Nullable ConfigDescriptionPara\n         if (configDescriptionParameter != null) {\n             Normalizer normalizer = NormalizerFactory.getNormalizer(configDescriptionParameter);\n             return normalizer.normalize(value);\n-        } else if (value instanceof Boolean || value instanceof String || value instanceof BigDecimal) {\n-            return value;\n+        } else if (value instanceof Boolean) {\n+            return NormalizerFactory.getNormalizer(Type.BOOLEAN).normalize(value);\n+        } else if (value instanceof String) {\n+            return NormalizerFactory.getNormalizer(Type.TEXT).normalize(value);\n         } else if (value instanceof Number) {\n-            return new BigDecimal(value.toString());\n+            return NormalizerFactory.getNormalizer(Type.DECIMAL).normalize(value);\n         } else if (value instanceof Collection collection) {\n             return normalizeCollection(collection);\n         }\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/DecimalNormalizer.java b/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/DecimalNormalizer.java\nindex f77bad6825d..d8e4588b6a4 100644\n--- a/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/DecimalNormalizer.java\n+++ b/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/DecimalNormalizer.java\n@@ -35,13 +35,16 @@ public Object doNormalize(Object value) {\n                 return stripTrailingZeros(new BigDecimal(stringValue));\n             }\n             if (value instanceof Byte byteValue) {\n-                return new BigDecimal(byteValue).setScale(1);\n+                return new BigDecimal(byteValue);\n+            }\n+            if (value instanceof Short shortValue) {\n+                return new BigDecimal(shortValue);\n             }\n             if (value instanceof Integer integerValue) {\n-                return new BigDecimal(integerValue).setScale(1);\n+                return new BigDecimal(integerValue);\n             }\n             if (value instanceof Long longValue) {\n-                return new BigDecimal(longValue).setScale(1);\n+                return new BigDecimal(longValue);\n             }\n             if (value instanceof Float floatValue) {\n                 return new BigDecimal(floatValue.toString());\n@@ -58,9 +61,12 @@ public Object doNormalize(Object value) {\n     }\n \n     private BigDecimal stripTrailingZeros(BigDecimal value) {\n-        BigDecimal ret = new BigDecimal(value.stripTrailingZeros().toPlainString());\n-        if (ret.scale() == 0) {\n-            ret = ret.setScale(1);\n+        BigDecimal ret = value;\n+        if (ret.scale() > 1) {\n+            ret = ret.stripTrailingZeros();\n+            if (ret.scale() == 0) {\n+                ret = ret.setScale(1);\n+            }\n         }\n         return ret;\n     }\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/NormalizerFactory.java b/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/NormalizerFactory.java\nindex c7a905d297b..404890442cc 100644\n--- a/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/NormalizerFactory.java\n+++ b/bundles/org.openhab.core.config.core/src/main/java/org/openhab/core/config/core/internal/normalization/NormalizerFactory.java\n@@ -51,4 +51,14 @@ public static Normalizer getNormalizer(ConfigDescriptionParameter configDescript\n         Normalizer ret = NORMALIZERS.get(configDescriptionParameter.getType());\n         return configDescriptionParameter.isMultiple() ? new ListNormalizer(ret) : ret;\n     }\n+\n+    /**\n+     * Returns the {@link Normalizer} for the given ConfigDescriptionParameter type.\n+     *\n+     * @param type the type\n+     * @return the corresponding {@link Normalizer} (not null)\n+     */\n+    public static Normalizer getNormalizer(Type type) {\n+        return NORMALIZERS.get(type);\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend b/bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend\nindex b9475f558f1..3493606dda3 100644\n--- a/bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend\n+++ b/bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend\n@@ -605,8 +605,8 @@ class GenericThingProvider extends AbstractProviderLazyNullness<Thing> implement\n         if (!loadedXmlThingTypes.contains(factory.bundleName) || modelRepository == null) {\n             return\n         }\n-        val oldThings = thingsMap.get(modelName).clone\n         val newThings = newArrayList()\n+        val oldThings = thingsMap.put(modelName, newThings)\n \n         val model = modelRepository.getModel(modelName) as ThingModel\n         if (model !== null) {\n@@ -616,7 +616,6 @@ class GenericThingProvider extends AbstractProviderLazyNullness<Thing> implement\n         }\n \n         newThings.forEach [ newThing |\n-            thingsMap.get(modelName).add(newThing)\n             val oldThing = oldThings.findFirst[it.UID == newThing.UID]\n             if (oldThing !== null) {\n                 if (!ThingHelper.equals(oldThing, newThing)) {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/ConfigurationTest.java b/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/ConfigurationTest.java\nindex c7b00218f82..a165c4e8bb2 100644\n--- a/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/ConfigurationTest.java\n+++ b/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/ConfigurationTest.java\n@@ -160,18 +160,42 @@ public void assertToStringHandlesNullValuesGracefully() {\n     @Test\n     public void assertNormalizationInSetProperties() {\n         Map<String, Object> properties = new HashMap<>();\n+        properties.put(\"byteField\", Byte.valueOf(\"1\"));\n+        properties.put(\"shortField\", Short.valueOf(\"1\"));\n         properties.put(\"intField\", 1);\n+        properties.put(\"longField\", Long.valueOf(\"1\"));\n+        properties.put(\"doubleField\", Double.valueOf(\"1\"));\n+        properties.put(\"floatField\", Float.valueOf(\"1\"));\n+        properties.put(\"bigDecimalField\", BigDecimal.ONE);\n \n         Configuration configuration = new Configuration();\n         configuration.setProperties(properties);\n+        assertThat(configuration.get(\"byteField\"), is(equalTo(BigDecimal.ONE)));\n+        assertThat(configuration.get(\"shortField\"), is(equalTo(BigDecimal.ONE)));\n         assertThat(configuration.get(\"intField\"), is(equalTo(BigDecimal.ONE)));\n+        assertThat(configuration.get(\"longField\"), is(equalTo(BigDecimal.ONE)));\n+        assertThat(configuration.get(\"doubleField\"), is(equalTo(new BigDecimal(\"1.0\"))));\n+        assertThat(configuration.get(\"floatField\"), is(equalTo(new BigDecimal(\"1.0\"))));\n+        assertThat(configuration.get(\"bigDecimalField\"), is(equalTo(BigDecimal.ONE)));\n     }\n \n     @Test\n     public void assertNormalizationInPut() {\n         Configuration configuration = new Configuration();\n+        configuration.put(\"byteField\", Byte.valueOf(\"1\"));\n+        configuration.put(\"shortField\", Short.valueOf(\"1\"));\n         configuration.put(\"intField\", 1);\n+        configuration.put(\"longField\", Long.valueOf(\"1\"));\n+        configuration.put(\"doubleField\", Double.valueOf(\"1\"));\n+        configuration.put(\"floatField\", Float.valueOf(\"1\"));\n+        configuration.put(\"bigDecimalField\", BigDecimal.ONE);\n+        assertThat(configuration.get(\"byteField\"), is(equalTo(BigDecimal.ONE)));\n+        assertThat(configuration.get(\"shortField\"), is(equalTo(BigDecimal.ONE)));\n         assertThat(configuration.get(\"intField\"), is(equalTo(BigDecimal.ONE)));\n+        assertThat(configuration.get(\"longField\"), is(equalTo(BigDecimal.ONE)));\n+        assertThat(configuration.get(\"doubleField\"), is(equalTo(new BigDecimal(\"1.0\"))));\n+        assertThat(configuration.get(\"floatField\"), is(equalTo(new BigDecimal(\"1.0\"))));\n+        assertThat(configuration.get(\"bigDecimalField\"), is(equalTo(BigDecimal.ONE)));\n     }\n \n     @Test\n\ndiff --git a/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/normalization/NormalizerTest.java b/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/normalization/NormalizerTest.java\nindex e68f56692e7..33516cd55b5 100644\n--- a/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/normalization/NormalizerTest.java\n+++ b/bundles/org.openhab.core.config.core/src/test/java/org/openhab/core/config/core/internal/normalization/NormalizerTest.java\n@@ -99,18 +99,19 @@ public void testDecimalNormalizer() {\n                 ConfigDescriptionParameterBuilder.create(\"test\", ConfigDescriptionParameter.Type.DECIMAL).build());\n \n         assertThat(normalizer.normalize(null), is(nullValue()));\n-        assertThat(normalizer.normalize(42), is(equalTo(new BigDecimal(\"42.0\"))));\n-        assertThat(normalizer.normalize(42L), is(equalTo(new BigDecimal(\"42.0\"))));\n-        assertThat(normalizer.normalize((byte) 42), is(equalTo(new BigDecimal(\"42.0\"))));\n+        assertThat(normalizer.normalize(42), is(equalTo(new BigDecimal(\"42\"))));\n+        assertThat(normalizer.normalize(42L), is(equalTo(new BigDecimal(\"42\"))));\n+        assertThat(normalizer.normalize((byte) 42), is(equalTo(new BigDecimal(\"42\"))));\n         assertThat(normalizer.normalize(42.0), is(equalTo(new BigDecimal(\"42.0\"))));\n         assertThat(normalizer.normalize(42.0f), is(equalTo(new BigDecimal(\"42.0\"))));\n         assertThat(normalizer.normalize(42.0d), is(equalTo(new BigDecimal(\"42.0\"))));\n         assertThat(normalizer.normalize(42.1), is(equalTo(new BigDecimal(\"42.1\"))));\n         assertThat(normalizer.normalize(42.88f), is(equalTo(new BigDecimal(\"42.88\"))));\n         assertThat(normalizer.normalize(42.88d), is(equalTo(new BigDecimal(\"42.88\"))));\n-        assertThat(normalizer.normalize(\"42\"), is(equalTo(new BigDecimal(\"42.0\"))));\n+        assertThat(normalizer.normalize(\"42\"), is(equalTo(new BigDecimal(\"42\"))));\n         assertThat(normalizer.normalize(\"42.0\"), is(equalTo(new BigDecimal(\"42.0\"))));\n         assertThat(normalizer.normalize(\"42.1\"), is(equalTo(new BigDecimal(\"42.1\"))));\n+        assertThat(normalizer.normalize(\"42.10\"), is(equalTo(new BigDecimal(\"42.1\"))));\n         assertThat(normalizer.normalize(\"42.11\"), is(equalTo(new BigDecimal(\"42.11\"))));\n         assertThat(normalizer.normalize(\"42.00\"), is(equalTo(new BigDecimal(\"42.0\"))));\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4049",
    "pr_id": 4049,
    "issue_id": 4045,
    "repo": "openhab/openhab-core",
    "problem_statement": "AbstractRemoteAddonServiceTest unstable\nThis test failed in a Jenkins PR build: https://ci.openhab.org/job/PR-openHAB-Core/6816/\r\n\r\n```\r\n[ERROR] Tests run: 19, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 1.063 s <<< FAILURE! -- in org.openhab.core.addon.marketplace.AbstractRemoteAddonServiceTest\r\n[ERROR] org.openhab.core.addon.marketplace.AbstractRemoteAddonServiceTest.testAddonUninstallRemovesStorageEntryOnUninstalledAddon -- Time elapsed: 0.031 s <<< FAILURE!\r\norg.mockito.exceptions.verification.TooManyActualInvocations: \r\n\r\neventPublisher.post(<Capturing argument>);\r\nWanted 1 time:\r\n-> at org.openhab.core.addon.marketplace.AbstractRemoteAddonServiceTest.checkResult(AbstractRemoteAddonServiceTest.java:302)\r\nBut was 2 times:\r\n-> at org.openhab.core.addon.marketplace.AbstractRemoteAddonService.postFailureEvent(AbstractRemoteAddonService.java:331)\r\n-> at org.openhab.core.addon.marketplace.AbstractRemoteAddonService.postFailureEvent(AbstractRemoteAddonService.java:331)\r\n\r\n\r\n\tat org.openhab.core.addon.marketplace.AbstractRemoteAddonServiceTest.checkResult(AbstractRemoteAddonServiceTest.java:302)\r\n\tat org.openhab.core.addon.marketplace.AbstractRemoteAddonServiceTest.testAddonUninstallRemovesStorageEntryOnUninstalledAddon(AbstractRemoteAddonServiceTest.java:255)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[ERROR] Failures: \r\n[ERROR]   AbstractRemoteAddonServiceTest.testAddonUninstallRemovesStorageEntryOnUninstalledAddon:255->checkResult:302\r\n```",
    "issue_word_count": 170,
    "test_files_count": 2,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java"
    ],
    "base_commit": "d3d0fe3995b2b950e253d782efbda33b31eebeec",
    "head_commit": "10aceda4d53fa7aff2be6e599d6a96e50b8a7120",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4049",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4049",
    "dockerfile": "",
    "pr_merged_at": "2024-01-17T17:31:29.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\nindex 6414e5ad7e8..5fe13694263 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\n@@ -70,12 +70,18 @@ public abstract class AbstractRemoteAddonService implements AddonService {\n         if (compatible != 0) {\n             return compatible;\n         }\n-        // Add-on versions often contain a dash instead of a dot as separator for the qualifier (e.g. -SNAPSHOT)\n-        // This is not a valid format and everything after the dash needs to be removed.\n-        BundleVersion version1 = new BundleVersion(addon1.getVersion().replaceAll(\"-.*\", \".0\"));\n-        BundleVersion version2 = new BundleVersion(addon2.getVersion().replaceAll(\"-.*\", \".0\"));\n-        // prefer newer version over older\n-        return version2.compareTo(version1);\n+        try {\n+            // Add-on versions often contain a dash instead of a dot as separator for the qualifier (e.g. -SNAPSHOT)\n+            // This is not a valid format and everything after the dash needs to be removed.\n+            BundleVersion version1 = new BundleVersion(addon1.getVersion().replaceAll(\"-.*\", \".0\"));\n+            BundleVersion version2 = new BundleVersion(addon2.getVersion().replaceAll(\"-.*\", \".0\"));\n+\n+            // prefer newer version over older\n+            return version2.compareTo(version1);\n+        } catch (IllegalArgumentException e) {\n+            // assume they are equal (for ordering) if we can't compare the versions\n+            return 0;\n+        }\n     };\n \n     protected final BundleVersion coreVersion;\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\nindex 29cfd7cfc9b..577aeafbf92 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\n@@ -14,8 +14,7 @@\n \n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.*;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.*;\n import static org.openhab.core.addon.marketplace.AbstractRemoteAddonService.CONFIG_REMOTE_ENABLED;\n import static org.openhab.core.addon.marketplace.test.TestAddonService.ALL_ADDON_COUNT;\n import static org.openhab.core.addon.marketplace.test.TestAddonService.COMPATIBLE_ADDON_COUNT;\n@@ -246,13 +245,11 @@ public void testAddonUninstallFailsOnUnknownAddon() {\n     }\n \n     @Test\n-    public void testAddonUninstallRemovesStorageEntryOnUninstalledAddon() {\n+    public void testUninstalledAddonIsReinstalled() {\n         addonService.addToStorage(TEST_ADDON);\n         addonService.getAddons(null);\n \n-        addonService.uninstall(TEST_ADDON);\n-\n-        checkResult(TEST_ADDON, getFullAddonId(TEST_ADDON) + \"/failed\", false, true);\n+        checkResult(TEST_ADDON, getFullAddonId(TEST_ADDON) + \"/installed\", true, true);\n     }\n \n     // add-comparisons\n@@ -299,11 +296,11 @@ private Addon getMockedAddon(String version, boolean compatible) {\n     private void checkResult(String id, String expectedEventTopic, boolean installStatus, boolean present) {\n         // assert expected event is posted\n         ArgumentCaptor<Event> eventCaptor = ArgumentCaptor.forClass(Event.class);\n-        Mockito.verify(eventPublisher).post(eventCaptor.capture());\n+        Mockito.verify(eventPublisher, timeout(5000)).post(eventCaptor.capture());\n         Event event = eventCaptor.getValue();\n         String topic = \"openhab/addons/\" + expectedEventTopic;\n \n-        assertThat(event.getTopic(), is(topic));\n+        assertThat(event.toString(), event.getTopic(), is(topic));\n \n         // assert addon handler was called (by checking it's installed status)\n         assertThat(addonHandler.isInstalled(getFullAddonId(id)), is(installStatus));\n\ndiff --git a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java\nindex 9194e38e546..793180f49c1 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java\n@@ -73,9 +73,12 @@ public void removeAddonHandler(MarketplaceAddonHandler handler) {\n     @Override\n     protected List<Addon> getRemoteAddons() {\n         remoteCalls++;\n-        return REMOTE_ADDONS.stream().map(id -> Addon.create(SERVICE_PID + \":\" + id).withType(\"binding\")\n-                .withId(id.substring(\"binding-\".length())).withContentType(TestAddonHandler.TEST_ADDON_CONTENT_TYPE)\n-                .withCompatible(!id.equals(INCOMPATIBLE_VERSION)).build()).toList();\n+        return REMOTE_ADDONS.stream()\n+                .map(id -> Addon.create(SERVICE_PID + \":\" + id).withType(\"binding\").withVersion(\"4.1.0\")\n+                        .withId(id.substring(\"binding-\".length()))\n+                        .withContentType(TestAddonHandler.TEST_ADDON_CONTENT_TYPE)\n+                        .withCompatible(!id.equals(INCOMPATIBLE_VERSION)).build())\n+                .toList();\n     }\n \n     @Override\n@@ -90,7 +93,7 @@ public String getName() {\n \n     @Override\n     public @Nullable Addon getAddon(String id, @Nullable Locale locale) {\n-        String remoteId = SERVICE_PID + \":\" + id;\n+        String remoteId = id.startsWith(SERVICE_PID) ? id : SERVICE_PID + \":\" + id;\n         return cachedAddons.stream().filter(a -> remoteId.equals(a.getUid())).findAny().orElse(null);\n     }\n \n@@ -115,7 +118,7 @@ public int getRemoteCalls() {\n      */\n     public void setInstalled(String id) {\n         Addon addon = Addon.create(SERVICE_PID + \":\" + id).withType(\"binding\").withId(id.substring(\"binding-\".length()))\n-                .withContentType(TestAddonHandler.TEST_ADDON_CONTENT_TYPE).build();\n+                .withVersion(\"4.1.0\").withContentType(TestAddonHandler.TEST_ADDON_CONTENT_TYPE).build();\n \n         addonHandlers.forEach(addonHandler -> {\n             try {\n@@ -133,7 +136,7 @@ public void setInstalled(String id) {\n      */\n     public void addToStorage(String id) {\n         Addon addon = Addon.create(SERVICE_PID + \":\" + id).withType(\"binding\").withId(id.substring(\"binding-\".length()))\n-                .withContentType(TestAddonHandler.TEST_ADDON_CONTENT_TYPE).build();\n+                .withVersion(\"4.1.0\").withContentType(TestAddonHandler.TEST_ADDON_CONTENT_TYPE).build();\n \n         addon.setInstalled(true);\n         installedAddonStorage.put(id, gson.toJson(addon));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4043",
    "pr_id": 4043,
    "issue_id": 4031,
    "repo": "openhab/openhab-core",
    "problem_statement": "bundle org.openhab.core.addon.marketplace:4.1.1 - Error during instantiation of the implementation object java.lang.reflect.InvocationTargetException: null\nMaybe related to #3368 \r\nMaybe related to (https://github.com/openhab/openhab-webui/issues/2265)\r\nMaybe referenced in https://community.openhab.org/t/bundle-org-openhab-core-addon-marketplace-4-0-0-m1-error-during-instantiation-of-the-implementation-object/145512\r\n\r\n## Expected Behavior\r\nOpenhab addon marketplace should start without error.\r\n\r\n## Current Behavior\r\nOpenhab marketplace addon keeps status \"waiting\" indefinitly and yields the following error on startup.\r\n\r\n```\r\n> 153 â Active  â  80 â 1.0.0                  â Fixes for the java.base module\r\n> 154 â Active  â  80 â 4.1.1                  â openHAB Core :: Bundles :: Core\r\n> 155 â Active  â  80 â 4.1.1                  â openHAB Core :: Bundles :: Add-on XML\r\n> 156 â Waiting â  80 â 4.1.1                  â openHAB Core :: Bundles :: Marketplace Add-on Services\r\n> 157 â Active  â  80 â 4.1.1                  â openHAB Core :: Bundles :: Community Marketplace Add-on Service :: Karaf\r\n> 158 â Active  â  80 â 4.1.1                  â openHAB Core :: Bundles :: Audio\r\n> 159 â Active  â  80 â 4.1.1                  â openHAB Core :: Bundles :: JAAS Authentication\r\n```\r\n\r\n```\r\n2024-01-10 12:00:42.972 [ERROR] [place.internal.json.JsonAddonService] - bundle org.openhab.core.addon.marketplace:4.1.1 (156)[org.openhab.core.addon.marketplace.internal.json.JsonAddonService(146)] : Error during instantiation of the implementation object\r\njava.lang.reflect.InvocationTargetException: null\r\n        at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]\r\n        at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77) ~[?:?]\r\n        at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]\r\n        at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) ~[?:?]\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:480) ~[?:?]\r\n        at org.apache.felix.scr.impl.inject.internal.ComponentConstructorImpl.newInstance(ComponentConstructorImpl.java:326) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.SingleComponentManager.createImplementationObject(SingleComponentManager.java:286) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.SingleComponentManager.createComponent(SingleComponentManager.java:115) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.SingleComponentManager.getService(SingleComponentManager.java:1002) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.SingleComponentManager.getServiceInternal(SingleComponentManager.java:975) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.SingleComponentManager.getService(SingleComponentManager.java:920) ~[?:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceFactoryUse$1.run(ServiceFactoryUse.java:220) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at java.security.AccessController.doPrivileged(AccessController.java:318) ~[?:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceFactoryUse.factoryGetService(ServiceFactoryUse.java:217) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceFactoryUse.getService(ServiceFactoryUse.java:118) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceConsumer$2.getService(ServiceConsumer.java:48) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:547) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.getService(ServiceRegistry.java:534) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.BundleContextImpl.getService(BundleContextImpl.java:660) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.apache.felix.scr.impl.manager.SingleRefPair.getServiceObject(SingleRefPair.java:88) ~[?:?]\r\n        at org.apache.felix.scr.impl.inject.methods.BindMethod.getServiceObject(BindMethod.java:675) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.DependencyManager.getServiceObject(DependencyManager.java:2612) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.DependencyManager$MultipleDynamicCustomizer.prebind(DependencyManager.java:434) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.DependencyManager.prebind(DependencyManager.java:1830) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager.collectDependencies(AbstractComponentManager.java:1060) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.SingleComponentManager.getServiceInternal(SingleComponentManager.java:955) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.SingleComponentManager.getService(SingleComponentManager.java:920) ~[?:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceFactoryUse$1.run(ServiceFactoryUse.java:220) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at java.security.AccessController.doPrivileged(AccessController.java:318) ~[?:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceFactoryUse.factoryGetService(ServiceFactoryUse.java:217) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceFactoryUse.getService(ServiceFactoryUse.java:118) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceUse.newServiceObject(ServiceUse.java:99) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceConsumer$1.getService(ServiceConsumer.java:33) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.getService(ServiceRegistrationImpl.java:547) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceObjectsImpl.getService(ServiceObjectsImpl.java:92) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.apache.aries.jax.rs.whiteboard.internal.utils.Utils.lambda$null$7(Utils.java:206) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.Publisher.apply(Publisher.java:28) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$75(OSGi.java:715) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.JustOSGiImpl.lambda$new$2(JustOSGiImpl.java:47) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$recoverWith$76(OSGi.java:711) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$flatMap$69(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.JustOSGiImpl.lambda$new$2(JustOSGiImpl.java:47) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.BundleContextOSGiImpl.lambda$new$0(BundleContextOSGiImpl.java:29) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$flatMap$69(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.ChangeContextOSGiImpl.lambda$new$0(ChangeContextOSGiImpl.java:31) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$recoverWith$76(OSGi.java:711) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$flatMap$69(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$effects$65(OSGi.java:596) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$effects$65(OSGi.java:596) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$effects$65(OSGi.java:596) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$64(OSGi.java:602) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.JustOSGiImpl.lambda$new$2(JustOSGiImpl.java:47) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$64(OSGi.java:602) ~[?:?]\r\n        at org.apache.aries.component.dsl.Publisher.apply(Publisher.java:28) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$29(OSGi.java:296) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.UpdateSupport.deferPublication(UpdateSupport.java:40) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$32(OSGi.java:295) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$64(OSGi.java:602) ~[?:?]\r\n        at org.apache.aries.jax.rs.whiteboard.internal.ServiceReferenceFilteredPublisher.publishIfMatched(ServiceReferenceFilteredPublisher.java:55) ~[?:?]\r\n        at org.apache.aries.jax.rs.whiteboard.internal.ServiceReferenceRegistry.lambda$waitFor$1(ServiceReferenceRegistry.java:66) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$effects$65(OSGi.java:596) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$transform$84(OSGi.java:757) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$effects$65(OSGi.java:596) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$flatMap$69(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.EffectsOSGi.lambda$new$1(EffectsOSGi.java:35) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$flatMap$69(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$effects$65(OSGi.java:596) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$flatMap$69(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$64(OSGi.java:602) ~[?:?]\r\n        at org.apache.aries.jax.rs.whiteboard.internal.FilteredPublisher.publishIfMatched(FilteredPublisher.java:51) ~[?:?]\r\n        at org.apache.aries.jax.rs.whiteboard.internal.Registry.lambda$waitForService$1(Registry.java:69) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$effects$65(OSGi.java:596) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.EffectsOSGi.lambda$new$1(EffectsOSGi.java:35) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$flatMap$69(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.JustOSGiImpl.lambda$new$2(JustOSGiImpl.java:47) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$flatMap$69(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$flatMap$69(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.lambda$create$0(OSGiImpl.java:39) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.JustOSGiImpl.lambda$new$2(JustOSGiImpl.java:47) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$68(OSGi.java:674) ~[?:?]\r\n        at org.apache.aries.component.dsl.Publisher.apply(Publisher.java:28) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$66(OSGi.java:663) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.Pad.publish(Pad.java:59) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.DistributeOSGiImpl.lambda$null$1(DistributeOSGiImpl.java:51) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$64(OSGi.java:602) ~[?:?]\r\n        at org.apache.aries.component.dsl.Publisher.apply(Publisher.java:28) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.HighestRankingOSGi.lambda$null$1(HighestRankingOSGi.java:62) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.Pad.publish(Pad.java:59) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$79(OSGi.java:739) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.JustOSGiImpl.lambda$new$2(JustOSGiImpl.java:47) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.OSGiImpl.run(OSGiImpl.java:50) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$80(OSGi.java:732) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$64(OSGi.java:602) ~[?:?]\r\n        at org.apache.aries.component.dsl.Publisher.apply(Publisher.java:28) ~[?:?]\r\n        at org.apache.aries.component.dsl.OSGi.lambda$null$66(OSGi.java:663) ~[?:?]\r\n        at org.apache.aries.component.dsl.Publisher.apply(Publisher.java:28) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.ServiceReferenceOSGi$DefaultServiceTrackerCustomizer.addingService(ServiceReferenceOSGi.java:74) ~[?:?]\r\n        at org.apache.aries.component.dsl.internal.ServiceReferenceOSGi$DefaultServiceTrackerCustomizer.addingService(ServiceReferenceOSGi.java:56) ~[?:?]\r\n        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:943) ~[osgi.core-8.0.0.jar:?]\r\n        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:871) ~[osgi.core-8.0.0.jar:?]\r\n        at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256) ~[osgi.core-8.0.0.jar:?]\r\n        at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:229) ~[osgi.core-8.0.0.jar:?]\r\n        at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:903) ~[osgi.core-8.0.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:123) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:961) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:937) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:874) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.register(ServiceRegistrationImpl.java:141) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.registerService(ServiceRegistry.java:262) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.BundleContextImpl.registerService(BundleContextImpl.java:500) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.register(AbstractComponentManager.java:929) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.register(AbstractComponentManager.java:915) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.RegistrationManager.changeRegistration(RegistrationManager.java:133) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:984) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:752) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.DependencyManager$SingleStaticCustomizer.addedService(DependencyManager.java:1274) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.DependencyManager$SingleStaticCustomizer.addedService(DependencyManager.java:1225) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$Tracked.customizerAdded(ServiceTracker.java:1232) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$Tracked.customizerAdded(ServiceTracker.java:1152) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$AbstractTracked.trackAdding(ServiceTracker.java:959) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$AbstractTracked.track(ServiceTracker.java:895) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:1184) ~[?:?]\r\n        at org.apache.felix.scr.impl.BundleComponentActivator$ListenerInfo.serviceChanged(BundleComponentActivator.java:116) ~[?:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:123) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:961) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:937) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:874) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.register(ServiceRegistrationImpl.java:141) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.registerService(ServiceRegistry.java:262) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.BundleContextImpl.registerService(BundleContextImpl.java:500) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.register(AbstractComponentManager.java:929) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.register(AbstractComponentManager.java:915) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.RegistrationManager.changeRegistration(RegistrationManager.java:133) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:984) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:752) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.DependencyManager$SingleStaticCustomizer.addedService(DependencyManager.java:1274) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.DependencyManager$SingleStaticCustomizer.addedService(DependencyManager.java:1225) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$Tracked.customizerAdded(ServiceTracker.java:1232) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$Tracked.customizerAdded(ServiceTracker.java:1152) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$AbstractTracked.trackAdding(ServiceTracker.java:959) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$AbstractTracked.track(ServiceTracker.java:895) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:1184) ~[?:?]\r\n        at org.apache.felix.scr.impl.BundleComponentActivator$ListenerInfo.serviceChanged(BundleComponentActivator.java:116) ~[?:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:123) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:961) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:937) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:874) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.register(ServiceRegistrationImpl.java:141) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.registerService(ServiceRegistry.java:262) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.BundleContextImpl.registerService(BundleContextImpl.java:500) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.register(AbstractComponentManager.java:929) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager$3.register(AbstractComponentManager.java:915) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.RegistrationManager.changeRegistration(RegistrationManager.java:133) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:984) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:752) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager.enableInternal(AbstractComponentManager.java:674) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.AbstractComponentManager.enable(AbstractComponentManager.java:437) ~[?:?]\r\n        at org.apache.felix.scr.impl.manager.ConfigurableComponentHolder.enableComponents(ConfigurableComponentHolder.java:671) ~[?:?]\r\n        at org.apache.felix.scr.impl.BundleComponentActivator.initialEnable(BundleComponentActivator.java:310) ~[?:?]\r\n        at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:593) ~[?:?]\r\n        at org.apache.felix.scr.impl.Activator.access$200(Activator.java:74) ~[?:?]\r\n        at org.apache.felix.scr.impl.Activator$ScrExtension.start(Activator.java:460) ~[?:?]\r\n        at org.apache.felix.scr.impl.AbstractExtender.createExtension(AbstractExtender.java:196) ~[?:?]\r\n        at org.apache.felix.scr.impl.AbstractExtender.modifiedBundle(AbstractExtender.java:169) ~[?:?]\r\n        at org.apache.felix.scr.impl.AbstractExtender.modifiedBundle(AbstractExtender.java:49) ~[?:?]\r\n        at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:488) ~[osgi.core-8.0.0.jar:?]\r\n        at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:420) ~[osgi.core-8.0.0.jar:?]\r\n        at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:232) ~[osgi.core-8.0.0.jar:?]\r\n        at org.osgi.util.tracker.BundleTracker$Tracked.bundleChanged(BundleTracker.java:450) ~[osgi.core-8.0.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.BundleContextImpl.dispatchEvent(BundleContextImpl.java:949) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.EquinoxEventPublisher.publishBundleEventPrivileged(EquinoxEventPublisher.java:229) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.EquinoxEventPublisher.publishBundleEvent(EquinoxEventPublisher.java:138) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.EquinoxEventPublisher.publishBundleEvent(EquinoxEventPublisher.java:130) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor.publishModuleEvent(EquinoxContainerAdaptor.java:217) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.container.Module.publishEvent(Module.java:499) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.container.Module.start(Module.java:486) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.EquinoxBundle.start(EquinoxBundle.java:445) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.eclipse.osgi.internal.framework.EquinoxBundle.start(EquinoxBundle.java:464) ~[org.eclipse.osgi-3.18.0.jar:?]\r\n        at org.apache.karaf.features.internal.service.BundleInstallSupportImpl.startBundle(BundleInstallSupportImpl.java:165) ~[?:?]\r\n        at org.apache.karaf.features.internal.service.FeaturesServiceImpl.startBundle(FeaturesServiceImpl.java:1160) ~[?:?]\r\n        at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:1041) ~[?:?]\r\n        at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1069) ~[?:?]\r\n        at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$13(FeaturesServiceImpl.java:1004) ~[?:?]\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]\r\n        at java.lang.Thread.run(Thread.java:840) [?:?]\r\nCaused by: java.lang.ClassCastException: class java.lang.String cannot be cast to class java.lang.Boolean (java.lang.String and java.lang.Boolean are in module java.base of loader 'bootstrap')\r\n        at org.openhab.core.addon.marketplace.internal.json.JsonAddonService.modified(JsonAddonService.java:92) ~[?:?]\r\n        at org.openhab.core.addon.marketplace.internal.json.JsonAddonService.<init>(JsonAddonService.java:84) ~[?:?]\r\n        ... 254 more\r\n2024-01-10 12:00:43.164 [WARN ] [t.core.internal.addons.AddonResource] - bundle org.openhab.core.io.rest.core:4.1.1 (184)[org.openhab.core.io.rest.core.internal.addons.AddonResource(150)] : Could not get service from ref {org.openhab.core.addon.AddonService}={urls=, service.id=312, service.bundleid=156, service.scope=bundle, osgi.ds.satisfying.condition.target=(osgi.condition.id=true), component.name=org.openhab.core.addon.marketplace.internal.json.JsonAddonService, service.config.label=Json 3rd Party Add-on Service, component.id=146, service.config.factory=false, showUnstable=false, service.config.category=system, service.config.description.uri=system:jsonaddonservice, service.pid=[org.openhab.jsonaddonservice, org.openhab.jsonaddonservice]}\r\n```\r\n\r\n## Possible Solution\r\nNot evident to me.\r\n\r\n## Steps to Reproduce (for Bugs)\r\n1. Install openhab4\r\n2. Start or restart openhab4\r\n\r\n## Context\r\nI use file based configuration.\r\nTested Setup is a new installation and has no config files, except `addons.cfg` and  `runtime.cfg`.\r\n\r\n## Your Environment\r\nRaspberry Pi 4 Model B Rev 1.4 / 8GB\r\naarch64 GNU/Linux with linux-rpi kernel 6.6.10-1-rpi\r\nopenjdk version \"17.0.9\" 2023-10-17 LTS\r\nOpenJDK Runtime Environment Zulu17.46+19-CA (build 17.0.9+8-LTS)\r\nOpenJDK 64-Bit Server VM Zulu17.46+19-CA (build 17.0.9+8-LTS, mixed mode, sharing)\r\nOpenhab 4.1.1\r\n",
    "issue_word_count": 3996,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java"
    ],
    "base_commit": "5cea59bfb100fb88ed40a02a4360995ed82e6536",
    "head_commit": "6a6b6a710e569d43e4e22973eda534581966fa41",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4043",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4043",
    "dockerfile": "",
    "pr_merged_at": "2024-01-15T21:42:49.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\nindex c177f5e4767..ba04fe1af12 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\n@@ -61,11 +61,17 @@ public abstract class AbstractRemoteAddonService implements AddonService {\n     static final String CONFIG_REMOTE_ENABLED = \"remote\";\n     static final String CONFIG_INCLUDE_INCOMPATIBLE = \"includeIncompatible\";\n     static final Comparator<Addon> BY_COMPATIBLE_AND_VERSION = (addon1, addon2) -> {\n-        // prefer compatible over incompatible\n+        // prefer compatible to incompatible\n         int compatible = Boolean.compare(addon2.getCompatible(), addon1.getCompatible());\n+        if (compatible != 0) {\n+            return compatible;\n+        }\n+        // Add-on versions often contain a dash instead of a dot as separator for the qualifier (e.g. -SNAPSHOT)\n+        // This is not a valid format and everything after the dash needs to be removed.\n+        BundleVersion version1 = new BundleVersion(addon1.getVersion().replaceAll(\"-.*\", \".0\"));\n+        BundleVersion version2 = new BundleVersion(addon2.getVersion().replaceAll(\"-.*\", \".0\"));\n         // prefer newer version over older\n-        return compatible != 0 ? compatible\n-                : new BundleVersion(addon2.getVersion()).compareTo(new BundleVersion(addon1.getVersion()));\n+        return version2.compareTo(version1);\n     };\n \n     protected final BundleVersion coreVersion;\n\ndiff --git a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java\nindex e581c5fccd6..b8d4d03d551 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java\n@@ -34,6 +34,7 @@\n import org.openhab.core.addon.marketplace.AbstractRemoteAddonService;\n import org.openhab.core.addon.marketplace.MarketplaceAddonHandler;\n import org.openhab.core.addon.marketplace.internal.json.model.AddonEntryDTO;\n+import org.openhab.core.config.core.ConfigParser;\n import org.openhab.core.config.core.ConfigurableService;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.storage.StorageService;\n@@ -87,9 +88,9 @@ public JsonAddonService(@Reference EventPublisher eventPublisher, @Reference Sto\n     @Modified\n     public void modified(@Nullable Map<String, Object> config) {\n         if (config != null) {\n-            String urls = Objects.requireNonNullElse((String) config.get(CONFIG_URLS), \"\");\n+            String urls = ConfigParser.valueAsOrElse(config.get(CONFIG_URLS), String.class, \"\");\n             addonServiceUrls = Arrays.asList(urls.split(\"\\\\|\"));\n-            showUnstable = (Boolean) config.getOrDefault(CONFIG_SHOW_UNSTABLE, false);\n+            showUnstable = ConfigParser.valueAsOrElse(config.get(CONFIG_SHOW_UNSTABLE), Boolean.class, false);\n             cachedRemoteAddons.invalidateValue();\n             refreshSource();\n         }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\nindex ff4dea7a5c6..29cfd7cfc9b 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\n@@ -269,6 +269,18 @@ public void testAddonOrdering() {\n         assertThat(actual, is(equalTo(expected)));\n     }\n \n+    @Test\n+    public void testSnapshotVersionsAreParsedProperly() {\n+        Addon addon1 = getMockedAddon(\"4.1.0\", true);\n+        Addon addon2 = getMockedAddon(\"4.2.0-SNAPSHOT\", true);\n+\n+        List<Addon> actual = Stream.of(addon1, addon2).sorted(AbstractRemoteAddonService.BY_COMPATIBLE_AND_VERSION)\n+                .toList();\n+        List<Addon> expected = List.of(addon2, addon1);\n+\n+        assertThat(actual, is(equalTo(expected)));\n+    }\n+\n     private Addon getMockedAddon(String version, boolean compatible) {\n         Addon addon = mock(Addon.class);\n         when(addon.getVersion()).thenReturn(version);\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4035",
    "pr_id": 4035,
    "issue_id": 3254,
    "repo": "openhab/openhab-core",
    "problem_statement": "ThreadPoolManagerTest unstable\nThis test failed in a GHA Windows build: https://github.com/wborn/openhab-core/actions/runs/3758246710/jobs/6386349876\r\n\r\n```\r\n[ERROR] Tests run: 8, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 3.194 s <<< FAILURE! - in org.openhab.core.common.ThreadPoolManagerTest\r\n[ERROR] org.openhab.core.common.ThreadPoolManagerTest.testGetPoolShutdown  Time elapsed: 1.57 s  <<< FAILURE!\r\norg.opentest4j.AssertionFailedError: Checking if thread pool Test works ==> expected: <true> but was: <false>\r\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\r\n\tat org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)\r\n\tat org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:210)\r\n\tat org.openhab.core.common.ThreadPoolManagerTest.checkThreadPoolWorks(ThreadPoolManagerTest.java:128)\r\n\tat org.openhab.core.common.ThreadPoolManagerTest.testGetPoolShutdown(ThreadPoolManagerTest.java:108)\r\n```",
    "issue_word_count": 120,
    "test_files_count": 1,
    "non_test_files_count": 0,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/common/ThreadPoolManagerTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/common/ThreadPoolManagerTest.java"
    ],
    "base_commit": "6867f1e9569ebae32da235078bcff7e9df02edbc",
    "head_commit": "8f4e4e5cd0fac85191fb94b8d52fac3a64f0d6df",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4035",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4035",
    "dockerfile": "",
    "pr_merged_at": "2024-01-12T20:42:03.000Z",
    "patch": "",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/common/ThreadPoolManagerTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/common/ThreadPoolManagerTest.java\nindex 60718e26ce2..6e968dd8259 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/common/ThreadPoolManagerTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/common/ThreadPoolManagerTest.java\n@@ -125,7 +125,7 @@ private void checkThreadPoolWorks(String poolName) throws InterruptedException {\n         ExecutorService threadPool = ThreadPoolManager.getPool(poolName);\n         CountDownLatch cdl = new CountDownLatch(1);\n         threadPool.execute(cdl::countDown);\n-        assertTrue(cdl.await(1, TimeUnit.SECONDS), \"Checking if thread pool \" + poolName + \" works\");\n+        assertTrue(cdl.await(5, TimeUnit.SECONDS), \"Checking if thread pool \" + poolName + \" works\");\n         assertFalse(threadPool.isShutdown(), \"Checking if thread pool is not shut down\");\n     }\n \n@@ -133,7 +133,7 @@ private void checkScheduledPoolWorks(String poolName) throws InterruptedExceptio\n         ScheduledExecutorService threadPool = ThreadPoolManager.getScheduledPool(poolName);\n         CountDownLatch cdl = new CountDownLatch(1);\n         threadPool.schedule(cdl::countDown, 100, TimeUnit.MILLISECONDS);\n-        assertTrue(cdl.await(1, TimeUnit.SECONDS), \"Checking if thread pool \" + poolName + \" works\");\n+        assertTrue(cdl.await(5, TimeUnit.SECONDS), \"Checking if thread pool \" + poolName + \" works\");\n         assertFalse(threadPool.isShutdown(), \"Checking if thread pool is not shut down\");\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-4024",
    "pr_id": 4024,
    "issue_id": 3666,
    "repo": "openhab/openhab-core",
    "problem_statement": "RFC: YAML configuration\nAs discussed in #3636 we need configuration for user-defined tags. It was discussed that an easy to understand standard configuration format would be preferable over creating a new DSL. It was also suggested in different issues that it would be nice to be able to copy&paste from UI to files. Main UI uses a YAML representation for things and items, so this would be good choice. We already have a feature for Jackson's YAML parser, so no additional dependencies are needed for that.\r\n\r\nHowever, there are a few things to discuss:\r\n\r\n- Should different things be configured in one file (e.g. items and things) or would be prefer to have different files?\r\n- Should there be a versioning? This would allow us to better handle future upgrades.\r\n\r\nI would suggest to add a `YamlModelRepository` (similar to our XText `ModelRepository`) that is an OSGi service that encapsulates all YAML processing and file processing. Consumer are OSGi services that implement `YamlModelListener<T>` where `T` is a DTO that describes the format. The listeners are injected into the `YamlModelRepository` and whenever a matching model (identified by the root name) is found the listener is notified.\r\n\r\n```\r\npublic interface YamlModelListener<T> {\r\n    void addedModel(String modelName, List<? extends T> elements);\r\n    void updatedModel(String modelName, List<T> elements);\r\n    void removedModel(String modelName, List<T> elements);\r\n    Class<T> getElementClass();\r\n    String getRootName();\r\n}\r\n```\r\n\r\nExample listener (not fully implemented):\r\n\r\n```\r\n@Component(service=YamlModelListener.class)\r\npublic static class TestListener implements YamlModelListener<YamlItem> {\r\n    private final Logger logger = LoggerFactory.getLogger(TestListener.class);\r\n\r\n    @Override\r\n    public void addedModel(String modelName, List<? extends YamlItem> elements) {\r\n        logger.info(\"Added model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void updatedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Updated model {} with elements {}\", modelName, elements);\r\n    }\r\n\r\n    @Override\r\n    public void removedModel(String modelName, List<YamlItem> elements) {\r\n        logger.info(\"Removed model {} with elements {}\", modelName, elements); \r\n    }\r\n\r\n    @Override\r\n    public Class<YamlItem> getElementClass() {\r\n        return YamlItem.class;\r\n    }\r\n\r\n    @Override\r\n    public String getRootName() {\r\n        return \"items\";\r\n    }\r\n}\r\n```\r\n\r\nExample DTO:\r\n\r\n```\r\npublic class YamlItem {\r\n    private String name = \"\";\r\n    private String type = \"\";\r\n    private @Nullable String label;\r\n    private @Nullable String category;\r\n    private Set<String> tags = Set.of();\r\n    private List<String> groupNames = List.of();\r\n    private List<YamlLink> links = List.of();\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public @Nullable String getLabel() {\r\n        return label;\r\n    }\r\n\r\n    public @Nullable String getCategory() {\r\n        return category;\r\n    }\r\n\r\n    public Set<String> getTags() {\r\n        return tags;\r\n    }\r\n\r\n    public List<String> getGroupNames() {\r\n        return groupNames;\r\n    }\r\n\r\n    public List<YamlLink> getLinks() {\r\n        return links;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"YamlItem{\" + \"name='\" + name + \"'\" + \", type='\" + type + \"'\" + \", label='\" + label + \"'\"\r\n                + \", category='\" + category + \"'\" + \", tags=\" + tags + \", groupNames=\" + groupNames + \", links=\" + links\r\n                + \"}\";\r\n    }\r\n}\r\n```\r\n\r\nand the file:\r\n\r\n```\r\nversion: 1\r\nitems:\r\n  - name: Outdoor_temp\r\n      type: Number:Temperature\r\n      label: \"Outdoor [%.1f Â°C]\"\r\n      groupNames:               \r\n        - gTemperatures\r\n        - gOutdoor\r\n        - gPersist5\r\n      links:\r\n        - channel: \"deconz:thing1:channel1\"\r\n        - channel: \"deconz:thing2:channel2\"\r\n          profile: \"MyScope:MyProfile\r\n```",
    "issue_word_count": 446,
    "test_files_count": 10,
    "non_test_files_count": 14,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/AbstractYamlFile.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElement.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElementName.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlFile.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelListener.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelRepository.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlParseException.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepository.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelWrapper.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagDTO.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagProvider.java",
      "bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTags.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/FirstTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/SecondTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/resources/addToModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/modelFileAddedOrRemoved.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePost.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePre.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/modifyModelInitialContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/removeFromModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/updateInModelExpectedContent.yaml",
      "tools/static-code-analysis/checkstyle/suppressions.xml"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/FirstTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/SecondTypeDTO.java",
      "bundles/org.openhab.core.model.yaml/src/test/resources/addToModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/modelFileAddedOrRemoved.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePost.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePre.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/modifyModelInitialContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/removeFromModelExpectedContent.yaml",
      "bundles/org.openhab.core.model.yaml/src/test/resources/updateInModelExpectedContent.yaml"
    ],
    "base_commit": "36cafd765f6f747cb1e26a021fae7c25539e40c3",
    "head_commit": "a5730de2d287f0cdc700efb1f0ef8ba8e603419f",
    "repo_url": "https://github.com/openhab/openhab-core/pull/4024",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/4024",
    "dockerfile": "",
    "pr_merged_at": "2024-02-04T09:29:09.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/AbstractYamlFile.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/AbstractYamlFile.java\ndeleted file mode 100644\nindex 9d6b4fedc24..00000000000\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/AbstractYamlFile.java\n+++ /dev/null\n@@ -1,65 +0,0 @@\n-/**\n- * Copyright (c) 2010-2024 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.model.yaml;\n-\n-import java.util.List;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * The {@link AbstractYamlFile} is the DTO base class used to map a YAML configuration file.\n- *\n- * A YAML configuration file consists of a version and a list of elements.\n- *\n- * @author Laurent Garnier - Initial contribution\n- */\n-@NonNullByDefault\n-public abstract class AbstractYamlFile implements YamlFile {\n-\n-    private final Logger logger = LoggerFactory.getLogger(AbstractYamlFile.class);\n-\n-    /**\n-     * YAML file version\n-     */\n-    public int version;\n-\n-    @Override\n-    public abstract List<? extends YamlElement> getElements();\n-\n-    @Override\n-    public int getVersion() {\n-        return version;\n-    }\n-\n-    @Override\n-    public boolean isValid() {\n-        // Checking duplicated elements\n-        List<? extends YamlElement> elts = getElements();\n-        long nbDistinctIds = elts.stream().map(YamlElement::getId).distinct().count();\n-        if (nbDistinctIds < elts.size()) {\n-            logger.debug(\"Elements with same ids detected in the file\");\n-            return false;\n-        }\n-\n-        // Checking each element\n-        for (int i = 0; i < elts.size(); i++) {\n-            if (!elts.get(i).isValid()) {\n-                logger.debug(\"Error in element {}\", i + 1);\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n-}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElement.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElement.java\nindex 01f4e24a3a2..5eda852fbf0 100644\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElement.java\n+++ b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElement.java\n@@ -12,28 +12,54 @@\n  */\n package org.openhab.core.model.yaml;\n \n-import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.NonNull;\n+import org.openhab.core.model.yaml.internal.YamlModelRepositoryImpl;\n \n /**\n- * The {@link YamlElement} interface offers an identifier and a check validity method\n- * to any element defined in a YAML configuration file.\n+ * The {@link YamlElement} interface must be implemented by any classes that need to be handled by the\n+ * {@link YamlModelRepositoryImpl}.\n+ * <p />\n+ * Implementations\n+ * <ul>\n+ * <li>MUST have a default constructor to allow deserialization with Jackson</li>\n+ * <li>MUST provide {@code equals(Object other)} and {@code hashcode()} methods</li>\n+ * <li>MUST be annotated with {@link YamlElementName} containing the element name</li>\n+ * <li>SHOULD implement a proper {@code toString()} method</li>\n+ * </ul>\n  *\n  * @author Laurent Garnier - Initial contribution\n+ * @author Jan N. Klug - Refactoring and improvements to JavaDoc\n  */\n-@NonNullByDefault\n public interface YamlElement {\n \n     /**\n-     * Get the identifier of the YAML element\n+     * Get the identifier of this element.\n+     * <p />\n+     * <p />\n+     * Identifiers\n+     * <ul>\n+     * <li>MUST be non-null</li>\n+     * <li>MUST be unique within a model</li>\n+     * <li>SHOULD be unique across all models</li>\n+     * </ul>\n      *\n      * @return the identifier as a string\n      */\n+    @NonNull\n     String getId();\n \n     /**\n-     * Check that the YAML element is valid\n+     * Check if this element is valid and should be included in the model.\n+     * <p />\n+     * <p />\n+     * Implementations\n+     * <ul>\n+     * <li>MUST check that at least {link #getId()} returns a non-null value</li>\n+     * <li>SHOULD log the reason of failed checks at WARN level</li>\n+     * <li>MAY perform additional checks</li>\n+     * </ul>\n      *\n-     * @return true if all the checks are OK\n+     * @return {@code true} if all the checks are completed successfully\n      */\n     boolean isValid();\n }\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElementName.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElementName.java\nnew file mode 100644\nindex 00000000000..4e0080ebb3d\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlElementName.java\n@@ -0,0 +1,28 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.model.yaml;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+/**\n+ * The {@link YamlElementName} is a required annotation for the inheritors of {@link YamlElement}. It specifies the root\n+ * element name in a YAML model that is described by the respective class. Code review MUST ensure that element names\n+ * are unique.\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface YamlElementName {\n+    String value();\n+}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlFile.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlFile.java\ndeleted file mode 100644\nindex 7b7b170806f..00000000000\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlFile.java\n+++ /dev/null\n@@ -1,48 +0,0 @@\n-/**\n- * Copyright (c) 2010-2024 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.model.yaml;\n-\n-import java.util.List;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-\n-/**\n- * The {@link YamlFile} is the interface to manage the generic content of a YAML configuration file.\n- *\n- * @author Laurent Garnier - Initial contribution\n- */\n-@NonNullByDefault\n-public interface YamlFile {\n-\n-    /**\n-     * Get the list of elements present in the YAML file.\n-     *\n-     * @return the list of elements\n-     */\n-    List<? extends YamlElement> getElements();\n-\n-    /**\n-     * Get the version present in the YAML file.\n-     *\n-     * @return the version in the file\n-     */\n-    int getVersion();\n-\n-    /**\n-     * Check that the file content is valid.\n-     * It includes the check of duplicated elements (same identifier) and the check of each element.\n-     *\n-     * @return true if all the checks are OK\n-     */\n-    boolean isValid();\n-}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelListener.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelListener.java\nindex 6d55131ca05..3366ad5e082 100644\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelListener.java\n+++ b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelListener.java\n@@ -19,6 +19,9 @@\n /**\n  * The {@link YamlModelListener} interface is responsible for managing a particular model type\n  * with data processed from YAML configuration files.\n+ * <p />\n+ * Implementors are notified whenever a YAML model changed that contains elements of the given type. They MUST declare\n+ * at least {@link YamlModelListener} as service to automatically register them with the repository.\n  *\n  * @author Laurent Garnier - Initial contribution\n  */\n@@ -26,20 +29,23 @@\n public interface YamlModelListener<T extends YamlElement> {\n \n     /**\n-     * Method called by the model repository when elements from a model are added.\n+     * Method called by the model repository when elements from a model are added. Only added elements are contained in\n+     * the collection. In case the listener is added after a model was read, this method is also called with all\n+     * elements from that model.\n      *\n      * @param modelName the name of the model\n      * @param elements the collection of added elements\n      */\n-    void addedModel(String modelName, Collection<? extends YamlElement> elements);\n+    void addedModel(String modelName, Collection<T> elements);\n \n     /**\n-     * Method called by the model repository when elements from a model are updated.\n+     * Method called by the model repository when elements from a model are updated. Only changed elements are contained\n+     * in the collection.\n      *\n      * @param modelName the name of the model\n      * @param elements the collection of updated elements\n      */\n-    void updatedModel(String modelName, Collection<? extends YamlElement> elements);\n+    void updatedModel(String modelName, Collection<T> elements);\n \n     /**\n      * Method called by the model repository when elements from a model are removed.\n@@ -47,27 +53,11 @@ public interface YamlModelListener<T extends YamlElement> {\n      * @param modelName the name of the model\n      * @param elements the collection of removed elements\n      */\n-    void removedModel(String modelName, Collection<? extends YamlElement> elements);\n+    void removedModel(String modelName, Collection<T> elements);\n \n     /**\n-     * Get the root name of this model type which is also the name of the root folder\n-     * containing the user files for this model type.\n-     *\n-     * A path is unexpected. What is expected is for example \"items\" or \"things\".\n-     *\n-     * @return the model root name\n-     */\n-    String getRootName();\n-\n-    /**\n-     * Get the DTO class to be used for a file providing objects for this model type.\n-     *\n-     * @return the DTO file class\n-     */\n-    Class<? extends AbstractYamlFile> getFileClass();\n-\n-    /**\n-     * Get the DTO class to be used for each object of this model type.\n+     * Get the DTO class to be used for each object of this model type. The DTO class MUST implement {@link YamlElement}\n+     * and fulfill all requirements defined for the interface.\n      *\n      * @return the DTO element class\n      */\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelRepository.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelRepository.java\nnew file mode 100644\nindex 00000000000..c4f074a243b\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlModelRepository.java\n@@ -0,0 +1,29 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.model.yaml;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link YamlModelRepository} defines methods to update elements in a YAML model.\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface YamlModelRepository {\n+    void addElementToModel(String modelName, YamlElement element);\n+\n+    void removeElementFromModel(String modelName, YamlElement element);\n+\n+    void updateElementInModel(String modelName, YamlElement element);\n+}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlParseException.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlParseException.java\ndeleted file mode 100644\nindex 6d9c19ab7fb..00000000000\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/YamlParseException.java\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-/**\n- * Copyright (c) 2010-2024 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.model.yaml;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-\n-/**\n- * The {@link YamlParseException} is used when an error is detected when parsing the content\n- * of a YAML configuration file.\n- *\n- * @author Laurent Garnier - Initial contribution\n- */\n-@NonNullByDefault\n-public class YamlParseException extends Exception {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    public YamlParseException(String message) {\n-        super(message);\n-    }\n-\n-    public YamlParseException(Throwable cause) {\n-        super(cause);\n-    }\n-\n-    public YamlParseException(String message, Throwable cause) {\n-        super(message, cause);\n-    }\n-}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepository.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepository.java\ndeleted file mode 100644\nindex 30c1dc50bfa..00000000000\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepository.java\n+++ /dev/null\n@@ -1,199 +0,0 @@\n-/**\n- * Copyright (c) 2010-2024 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.model.yaml.internal;\n-\n-import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.CopyOnWriteArrayList;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.model.yaml.AbstractYamlFile;\n-import org.openhab.core.model.yaml.YamlElement;\n-import org.openhab.core.model.yaml.YamlModelListener;\n-import org.openhab.core.model.yaml.YamlParseException;\n-import org.openhab.core.service.WatchService;\n-import org.openhab.core.service.WatchService.Kind;\n-import org.osgi.service.component.annotations.Activate;\n-import org.osgi.service.component.annotations.Component;\n-import org.osgi.service.component.annotations.Deactivate;\n-import org.osgi.service.component.annotations.Reference;\n-import org.osgi.service.component.annotations.ReferenceCardinality;\n-import org.osgi.service.component.annotations.ReferencePolicy;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n-\n-/**\n- * The {@link YamlModelRepository} is an OSGi service, that encapsulates all YAML file processing\n- * including file monitoring to detect created, updated and removed YAML configuration files.\n- * Data processed from these files are consumed by registered OSGi services that implement {@link YamlModelListener}.\n- *\n- * @author Laurent Garnier - Initial contribution\n- */\n-@NonNullByDefault\n-@Component(immediate = true)\n-public class YamlModelRepository implements WatchService.WatchEventListener {\n-\n-    private final Logger logger = LoggerFactory.getLogger(YamlModelRepository.class);\n-\n-    private final WatchService watchService;\n-    private final Path watchPath;\n-    private final ObjectMapper yamlReader;\n-\n-    private final Map<String, List<YamlModelListener<?>>> listeners = new ConcurrentHashMap<>();\n-    private final Map<Path, List<? extends YamlElement>> objects = new ConcurrentHashMap<>();\n-\n-    @Activate\n-    public YamlModelRepository(@Reference(target = WatchService.CONFIG_WATCHER_FILTER) WatchService watchService) {\n-        this.watchService = watchService;\n-        this.yamlReader = new ObjectMapper(new YAMLFactory());\n-        yamlReader.findAndRegisterModules();\n-\n-        watchService.registerListener(this, Path.of(\"\"));\n-        watchPath = watchService.getWatchPath();\n-    }\n-\n-    @Deactivate\n-    public void deactivate() {\n-        watchService.unregisterListener(this);\n-    }\n-\n-    // The method is \"synchronized\" to avoid concurrent files processing\n-    @Override\n-    public synchronized void processWatchEvent(Kind kind, Path path) {\n-        Path fullPath = watchPath.resolve(path);\n-        String dirName = path.subpath(0, 1).toString();\n-\n-        if (Files.isDirectory(fullPath) || fullPath.toFile().isHidden() || !fullPath.toString().endsWith(\".yaml\")) {\n-            logger.trace(\"Ignored {}\", fullPath);\n-            return;\n-        }\n-\n-        getListeners(dirName).forEach(listener -> processWatchEvent(dirName, kind, fullPath, listener));\n-    }\n-\n-    private void processWatchEvent(String dirName, Kind kind, Path fullPath, YamlModelListener<?> listener) {\n-        logger.debug(\"processWatchEvent dirName={} kind={} fullPath={} listener={}\", dirName, kind, fullPath,\n-                listener.getClass().getSimpleName());\n-        Map<String, ? extends YamlElement> oldObjects;\n-        Map<String, ? extends YamlElement> newObjects;\n-        if (kind == WatchService.Kind.DELETE) {\n-            newObjects = Map.of();\n-\n-            List<? extends YamlElement> oldListObjects = objects.remove(fullPath);\n-            if (oldListObjects == null) {\n-                oldListObjects = List.of();\n-            }\n-            oldObjects = oldListObjects.stream().collect(Collectors.toMap(YamlElement::getId, obj -> obj));\n-        } else {\n-            AbstractYamlFile yamlData;\n-            try {\n-                yamlData = readYamlFile(fullPath, listener.getFileClass());\n-            } catch (YamlParseException e) {\n-                logger.warn(\"Failed to parse Yaml file {} with DTO class {}: {}\", fullPath,\n-                        listener.getFileClass().getName(), e.getMessage());\n-                return;\n-            }\n-            List<? extends YamlElement> newListObjects = yamlData.getElements();\n-            newObjects = newListObjects.stream().collect(Collectors.toMap(YamlElement::getId, obj -> obj));\n-\n-            List<? extends YamlElement> oldListObjects = objects.get(fullPath);\n-            if (oldListObjects == null) {\n-                oldListObjects = List.of();\n-            }\n-            oldObjects = oldListObjects.stream().collect(Collectors.toMap(YamlElement::getId, obj -> obj));\n-\n-            objects.put(fullPath, newListObjects);\n-        }\n-\n-        String modelName = fullPath.toFile().getName();\n-        modelName = modelName.substring(0, modelName.indexOf(\".yaml\"));\n-        List<? extends YamlElement> listElements;\n-        listElements = oldObjects.entrySet().stream()\n-                .filter(entry -> entry.getValue().getClass().equals(listener.getElementClass())\n-                        && !newObjects.containsKey(entry.getKey()))\n-                .map(Map.Entry::getValue).toList();\n-        if (!listElements.isEmpty()) {\n-            listener.removedModel(modelName, listElements);\n-        }\n-\n-        listElements = newObjects.entrySet().stream()\n-                .filter(entry -> entry.getValue().getClass().equals(listener.getElementClass())\n-                        && !oldObjects.containsKey(entry.getKey()))\n-                .map(Map.Entry::getValue).toList();\n-        if (!listElements.isEmpty()) {\n-            listener.addedModel(modelName, listElements);\n-        }\n-\n-        // Object is ignored if unchanged\n-        listElements = newObjects.entrySet().stream()\n-                .filter(entry -> entry.getValue().getClass().equals(listener.getElementClass())\n-                        && oldObjects.containsKey(entry.getKey())\n-                        && !entry.getValue().equals(oldObjects.get(entry.getKey())))\n-                .map(Map.Entry::getValue).toList();\n-        if (!listElements.isEmpty()) {\n-            listener.updatedModel(modelName, listElements);\n-        }\n-    }\n-\n-    private AbstractYamlFile readYamlFile(Path path, Class<? extends AbstractYamlFile> dtoClass)\n-            throws YamlParseException {\n-        logger.info(\"Loading model '{}'\", path.toFile().getName());\n-        logger.debug(\"readYamlFile {} with {}\", path.toFile().getAbsolutePath(), dtoClass.getName());\n-        try {\n-            AbstractYamlFile dto = yamlReader.readValue(path.toFile(), dtoClass);\n-            if (!dto.isValid()) {\n-                throw new YamlParseException(\"The file is not valid, some checks failed!\");\n-            }\n-            return dto;\n-        } catch (IOException e) {\n-            throw new YamlParseException(e);\n-        }\n-    }\n-\n-    @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n-    protected void addYamlModelListener(YamlModelListener<?> listener) {\n-        String dirName = listener.getRootName();\n-        logger.debug(\"Adding model listener for {}\", dirName);\n-        getListeners(dirName).add(listener);\n-\n-        // Load all existing YAML files\n-        try (Stream<Path> stream = Files.walk(watchPath.resolve(dirName))) {\n-            stream.forEach(path -> {\n-                if (!Files.isDirectory(path) && !path.toFile().isHidden() && path.toString().endsWith(\".yaml\")) {\n-                    processWatchEvent(dirName, Kind.CREATE, path, listener);\n-                }\n-            });\n-        } catch (IOException ignored) {\n-        }\n-    }\n-\n-    protected void removeYamlModelListener(YamlModelListener<?> listener) {\n-        String dirName = listener.getRootName();\n-        logger.debug(\"Removing model listener for {}\", dirName);\n-        getListeners(dirName).remove(listener);\n-    }\n-\n-    private List<YamlModelListener<?>> getListeners(String dirName) {\n-        return Objects.requireNonNull(listeners.computeIfAbsent(dirName, k -> new CopyOnWriteArrayList<>()));\n-    }\n-}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java\nnew file mode 100644\nindex 00000000000..228f2cf418f\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImpl.java\n@@ -0,0 +1,428 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.model.yaml.internal;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.model.yaml.YamlElement;\n+import org.openhab.core.model.yaml.YamlElementName;\n+import org.openhab.core.model.yaml.YamlModelListener;\n+import org.openhab.core.model.yaml.YamlModelRepository;\n+import org.openhab.core.service.WatchService;\n+import org.openhab.core.service.WatchService.Kind;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Deactivate;\n+import org.osgi.service.component.annotations.Reference;\n+import org.osgi.service.component.annotations.ReferenceCardinality;\n+import org.osgi.service.component.annotations.ReferencePolicy;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.fasterxml.jackson.annotation.JsonAutoDetect;\n+import com.fasterxml.jackson.annotation.PropertyAccessor;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeFactory;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;\n+\n+/**\n+ * The {@link YamlModelRepositoryImpl} is an OSGi service, that encapsulates all YAML file processing\n+ * including file monitoring to detect created, updated and removed YAML configuration files.\n+ * Data processed from these files are consumed by registered OSGi services that implement {@link YamlModelListener}.\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ * @author Jan N. Klug - Refactored for multiple types per file and add modifying possibility\n+ */\n+@NonNullByDefault\n+@Component(immediate = true)\n+public class YamlModelRepositoryImpl implements WatchService.WatchEventListener, YamlModelRepository {\n+    private static final int DEFAULT_MODEL_VERSION = 1;\n+    private final Logger logger = LoggerFactory.getLogger(YamlModelRepositoryImpl.class);\n+\n+    private final WatchService watchService;\n+    private final Path watchPath;\n+    private final ObjectMapper objectMapper;\n+\n+    private final Map<String, List<YamlModelListener<?>>> elementListeners = new ConcurrentHashMap<>();\n+    // all model nodes, ordered by model name (full path as string) and type\n+    private final Map<String, YamlModelWrapper> modelCache = new ConcurrentHashMap<>();\n+\n+    @Activate\n+    public YamlModelRepositoryImpl(@Reference(target = WatchService.CONFIG_WATCHER_FILTER) WatchService watchService) {\n+        YAMLFactory yamlFactory = YAMLFactory.builder() //\n+                .disable(YAMLGenerator.Feature.WRITE_DOC_START_MARKER) // omit \"---\" at file start\n+                .disable(YAMLGenerator.Feature.SPLIT_LINES) // do not split long lines\n+                .enable(YAMLGenerator.Feature.INDENT_ARRAYS_WITH_INDICATOR) // indent arrays\n+                .enable(YAMLGenerator.Feature.MINIMIZE_QUOTES) // use quotes only where necessary\n+                .build();\n+        this.objectMapper = new ObjectMapper(yamlFactory);\n+        objectMapper.findAndRegisterModules();\n+        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE);\n+        objectMapper.setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY);\n+\n+        this.watchService = watchService;\n+        watchService.registerListener(this, Path.of(\"\"));\n+        watchPath = watchService.getWatchPath();\n+    }\n+\n+    @Deactivate\n+    public void deactivate() {\n+        watchService.unregisterListener(this);\n+    }\n+\n+    // The method is \"synchronized\" to avoid concurrent files processing\n+    @Override\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    public synchronized void processWatchEvent(Kind kind, Path path) {\n+        Path fullPath = watchPath.resolve(path);\n+        String pathString = path.toString();\n+        if (Files.isDirectory(fullPath) || fullPath.toFile().isHidden() || !pathString.endsWith(\".yaml\")) {\n+            logger.trace(\"Ignored {}\", fullPath);\n+            return;\n+        }\n+\n+        // strip extension for model name\n+        String modelName = pathString.substring(0, pathString.lastIndexOf(\".\"));\n+\n+        if (kind == WatchService.Kind.DELETE) {\n+            logger.info(\"Removing YAML model {}\", modelName);\n+            YamlModelWrapper removedModel = modelCache.remove(modelName);\n+            if (removedModel == null) {\n+                return;\n+            }\n+            for (Map.Entry<String, List<JsonNode>> modelEntry : removedModel.getNodes().entrySet()) {\n+                String elementName = modelEntry.getKey();\n+                List<JsonNode> removedNodes = modelEntry.getValue();\n+                if (!removedNodes.isEmpty()) {\n+                    getElementListeners(elementName).forEach(listener -> {\n+                        List removedElements = parseJsonNodes(removedNodes, listener.getElementClass());\n+                        listener.removedModel(modelName, removedElements);\n+                    });\n+                }\n+            }\n+        } else {\n+            if (kind == Kind.CREATE) {\n+                logger.info(\"Adding YAML model {}\", modelName);\n+            } else {\n+                logger.info(\"Updating YAML model {}\", modelName);\n+            }\n+            try {\n+                JsonNode fileContent = objectMapper.readTree(fullPath.toFile());\n+\n+                // check version\n+                JsonNode versionNode = fileContent.get(\"version\");\n+                if (versionNode == null || !versionNode.canConvertToInt()) {\n+                    logger.warn(\"Version is missing or not a number in model {}. Ignoring it.\", modelName);\n+                    return;\n+                }\n+                int modelVersion = versionNode.asInt();\n+                if (modelVersion != DEFAULT_MODEL_VERSION) {\n+                    logger.warn(\"Model {} has version {}, but only version 1 is supported. Ignoring it.\", modelName,\n+                            modelVersion);\n+                    return;\n+                }\n+                JsonNode readOnlyNode = fileContent.get(\"readOnly\");\n+                boolean readOnly = readOnlyNode == null || readOnlyNode.asBoolean(false);\n+\n+                YamlModelWrapper model = Objects.requireNonNull(\n+                        modelCache.computeIfAbsent(modelName, k -> new YamlModelWrapper(modelVersion, readOnly)));\n+\n+                // get sub-elements\n+                Iterator<Map.Entry<String, JsonNode>> it = fileContent.fields();\n+                while (it.hasNext()) {\n+                    Map.Entry<String, JsonNode> element = it.next();\n+                    String elementName = element.getKey();\n+                    JsonNode node = element.getValue();\n+                    if (!node.isArray()) {\n+                        // all processable sub-elements are arrays\n+                        logger.trace(\"Element {} in model {} is not an array, ignoring it\", elementName, modelName);\n+                        continue;\n+                    }\n+\n+                    List<JsonNode> oldNodeElements = model.getNodes().getOrDefault(elementName, List.of());\n+                    List<JsonNode> newNodeElements = new ArrayList<>();\n+                    node.elements().forEachRemaining(newNodeElements::add);\n+\n+                    for (YamlModelListener<?> elementListener : getElementListeners(elementName)) {\n+                        Class<? extends YamlElement> elementClass = elementListener.getElementClass();\n+\n+                        Map<String, ? extends YamlElement> oldElements = listToMap(\n+                                parseJsonNodes(oldNodeElements, elementClass));\n+                        Map<String, ? extends YamlElement> newElements = listToMap(\n+                                parseJsonNodes(newNodeElements, elementClass));\n+\n+                        List addedElements = newElements.values().stream()\n+                                .filter(e -> !oldElements.containsKey(e.getId())).toList();\n+                        List removedElements = oldElements.values().stream()\n+                                .filter(e -> !newElements.containsKey(e.getId())).toList();\n+                        List updatedElements = newElements.values().stream().filter(\n+                                e -> oldElements.containsKey(e.getId()) && !e.equals(oldElements.get(e.getId())))\n+                                .toList();\n+\n+                        if (!addedElements.isEmpty()) {\n+                            elementListener.addedModel(modelName, addedElements);\n+                        }\n+                        if (!removedElements.isEmpty()) {\n+                            elementListener.removedModel(modelName, removedElements);\n+                        }\n+                        if (!updatedElements.isEmpty()) {\n+                            elementListener.updatedModel(modelName, updatedElements);\n+                        }\n+                    }\n+\n+                    // replace cache\n+                    model.getNodes().put(elementName, newNodeElements);\n+                }\n+            } catch (IOException e) {\n+                logger.warn(\"Failed to read {}: {}\", modelName, e.getMessage());\n+            }\n+        }\n+    }\n+\n+    @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    public void addYamlModelListener(YamlModelListener<? extends YamlElement> listener) {\n+        Class<? extends YamlElement> elementClass = listener.getElementClass();\n+        YamlElementName annotation = elementClass.getAnnotation(YamlElementName.class);\n+        if (annotation == null) {\n+            logger.warn(\"Class {} is missing the mandatory YamlElementName annotation. This is a bug.\", elementClass);\n+            return;\n+        }\n+        String elementName = annotation.value();\n+        getElementListeners(elementName).add(listener);\n+\n+        // iterate over all models and notify he new listener of already existing models with this type\n+        for (Map.Entry<String, YamlModelWrapper> model : modelCache.entrySet()) {\n+            String modelName = model.getKey();\n+            List<JsonNode> modelNodes = model.getValue().getNodes().get(elementName);\n+            if (modelNodes == null || modelNodes.isEmpty()) {\n+                continue;\n+            }\n+            List modelElements = parseJsonNodes(modelNodes, elementClass);\n+            listener.addedModel(modelName, modelElements);\n+        }\n+    }\n+\n+    public void removeYamlModelListener(YamlModelListener<? extends YamlElement> listener) {\n+        elementListeners.values().forEach(list -> list.remove(listener));\n+    }\n+\n+    @Override\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    public void addElementToModel(String modelName, YamlElement element) {\n+        YamlElementName annotation = element.getClass().getAnnotation(YamlElementName.class);\n+        if (annotation == null) {\n+            logger.warn(\n+                    \"Failed to add element {}. Class {}) is missing the mandatory YamlElementName annotation. This is a bug.\",\n+                    element.getId(), element.getClass());\n+            return;\n+        }\n+        String elementName = annotation.value();\n+        YamlModelWrapper model = Objects.requireNonNull(\n+                modelCache.computeIfAbsent(modelName, k -> new YamlModelWrapper(DEFAULT_MODEL_VERSION, false)));\n+        if (model.isReadOnly()) {\n+            logger.warn(\"Modifying {} is not allowed, model is marked read-only\", modelName);\n+            return;\n+        }\n+\n+        List<JsonNode> modelNodes = model.getNodes().computeIfAbsent(elementName, k -> new CopyOnWriteArrayList<>());\n+        JsonNode newNode = objectMapper.convertValue(element, JsonNode.class);\n+        modelNodes.add(newNode);\n+        // notify listeners\n+        getElementListeners(elementName).forEach(l -> {\n+            List newElements = parseJsonNodes(List.of(newNode), l.getElementClass());\n+            if (!newElements.isEmpty()) {\n+                l.addedModel(modelName, newElements);\n+            }\n+        });\n+\n+        writeModel(modelName);\n+    }\n+\n+    @Override\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    public void removeElementFromModel(String modelName, YamlElement element) {\n+        YamlElementName annotation = element.getClass().getAnnotation(YamlElementName.class);\n+        if (annotation == null) {\n+            logger.warn(\n+                    \"Failed to remove element {}. Class {}) is missing the mandatory YamlElementName annotation. This is a bug.\",\n+                    element.getId(), element.getClass());\n+            return;\n+        }\n+        String elementName = annotation.value();\n+        YamlModelWrapper model = modelCache.get(modelName);\n+        if (model == null) {\n+            logger.warn(\"Failed to remove {} from model {} because the model is not known.\", element, modelName);\n+            return;\n+        }\n+        if (model.isReadOnly()) {\n+            logger.warn(\"Modifying {} is not allowed, model is marked read-only\", modelName);\n+            return;\n+        }\n+\n+        List<JsonNode> modelNodes = model.getNodes().get(elementName);\n+        if (modelNodes == null) {\n+            logger.warn(\"Failed to remove {} from model {} because type {} is not known in the model.\", element,\n+                    modelName, elementName);\n+            return;\n+        }\n+        JsonNode toRemove = findNodeById(modelNodes, element.getClass(), element.getId());\n+        if (toRemove == null) {\n+            logger.warn(\"Failed to remove {} from model {} because element is not in model.\", element, modelName);\n+            return;\n+        }\n+        modelNodes.remove(toRemove);\n+        // notify listeners\n+        getElementListeners(elementName).forEach(l -> {\n+            List newElements = parseJsonNodes(List.of(toRemove), l.getElementClass());\n+            if (!newElements.isEmpty()) {\n+                l.addedModel(modelName, newElements);\n+            }\n+        });\n+\n+        writeModel(modelName);\n+    }\n+\n+    @Override\n+    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+    public void updateElementInModel(String modelName, YamlElement element) {\n+        YamlElementName annotation = element.getClass().getAnnotation(YamlElementName.class);\n+        if (annotation == null) {\n+            logger.warn(\n+                    \"Failed to update element {}. Class {}) is missing the mandatory YamlElementName annotation. This is a bug.\",\n+                    element.getId(), element.getClass());\n+            return;\n+        }\n+        String elementName = annotation.value();\n+        YamlModelWrapper model = modelCache.get(modelName);\n+        if (model == null) {\n+            logger.warn(\"Failed to update {} in model {} because the model is not known.\", element, modelName);\n+            return;\n+        }\n+        if (model.isReadOnly()) {\n+            logger.warn(\"Modifying {} is not allowed, model is marked read-only\", modelName);\n+            return;\n+        }\n+\n+        List<JsonNode> modelNodes = model.getNodes().get(elementName);\n+        if (modelNodes == null) {\n+            logger.warn(\"Failed to update {} in model {} because type {} is not known in the model.\", element,\n+                    modelName, elementName);\n+            return;\n+        }\n+        JsonNode oldElement = findNodeById(modelNodes, element.getClass(), element.getId());\n+        if (oldElement == null) {\n+            logger.warn(\"Failed to update {} in model {} because element is not in model.\", element, modelName);\n+            return;\n+        }\n+\n+        JsonNode newNode = objectMapper.convertValue(element, JsonNode.class);\n+        modelNodes.set(modelNodes.indexOf(oldElement), newNode);\n+        // notify listeners\n+        getElementListeners(elementName).forEach(l -> {\n+            List newElements = parseJsonNodes(List.of(newNode), l.getElementClass());\n+            if (!newElements.isEmpty()) {\n+                l.updatedModel(modelName, newElements);\n+            }\n+        });\n+\n+        writeModel(modelName);\n+    }\n+\n+    private void writeModel(String modelName) {\n+        YamlModelWrapper model = modelCache.get(modelName);\n+        if (model == null) {\n+            logger.warn(\"Failed to write model {} to disk because it is not known.\", modelName);\n+            return;\n+        }\n+\n+        if (model.isReadOnly()) {\n+            logger.warn(\"Failed to write model {} to disk because it is marked as read-only.\", modelName);\n+            return;\n+        }\n+\n+        // create the model\n+        JsonNodeFactory nodeFactory = objectMapper.getNodeFactory();\n+        ObjectNode rootNode = nodeFactory.objectNode();\n+\n+        rootNode.put(\"version\", model.getVersion());\n+        rootNode.put(\"readOnly\", model.isReadOnly());\n+        for (Map.Entry<String, List<JsonNode>> elementNodes : model.getNodes().entrySet()) {\n+            ArrayNode arrayNode = nodeFactory.arrayNode();\n+            elementNodes.getValue().forEach(arrayNode::add);\n+            rootNode.set(elementNodes.getKey(), arrayNode);\n+        }\n+\n+        try {\n+            Path outFile = watchPath.resolve(modelName + \".yaml\");\n+            String fileContent = objectMapper.writeValueAsString(rootNode);\n+            if (Files.exists(outFile) && !Files.isWritable(outFile)) {\n+                logger.warn(\"Failed writing model {}: model exists but is read-only.\", modelName);\n+                return;\n+            }\n+            Files.writeString(outFile, fileContent);\n+        } catch (JsonProcessingException e) {\n+            logger.warn(\"Failed to serialize model {}: {}\", modelName, e.getMessage());\n+        } catch (IOException e) {\n+            logger.warn(\"Failed writing model {}: {}\", modelName, e.getMessage());\n+        }\n+    }\n+\n+    private List<YamlModelListener<?>> getElementListeners(String elementName) {\n+        return Objects.requireNonNull(elementListeners.computeIfAbsent(elementName, k -> new CopyOnWriteArrayList<>()));\n+    }\n+\n+    private <T extends YamlElement> @Nullable JsonNode findNodeById(List<JsonNode> nodes, Class<T> elementClass,\n+            String id) {\n+        return nodes.stream().filter(node -> {\n+            Optional<T> parsedNode = parseJsonNode(node, elementClass);\n+            return parsedNode.filter(yamlDTO -> id.equals(yamlDTO.getId())).isPresent();\n+        }).findAny().orElse(null);\n+    }\n+\n+    private Map<String, ? extends YamlElement> listToMap(List<? extends YamlElement> elements) {\n+        return elements.stream().collect(Collectors.toMap(YamlElement::getId, e -> e));\n+    }\n+\n+    private <T extends YamlElement> List<T> parseJsonNodes(List<JsonNode> nodes, Class<T> elementClass) {\n+        return nodes.stream().map(nE -> parseJsonNode(nE, elementClass)).filter(Optional::isPresent).map(Optional::get)\n+                .filter(YamlElement::isValid).toList();\n+    }\n+\n+    private <T extends YamlElement> Optional<T> parseJsonNode(JsonNode node, Class<T> elementClass) {\n+        try {\n+            return Optional.of(objectMapper.treeToValue(node, elementClass));\n+        } catch (JsonProcessingException e) {\n+            logger.warn(\"Could not parse element {} to {}: {}\", node, elementClass, e.getMessage());\n+            return Optional.empty();\n+        }\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelWrapper.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelWrapper.java\nnew file mode 100644\nindex 00000000000..d38defea935\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/YamlModelWrapper.java\n@@ -0,0 +1,50 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.model.yaml.internal;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+\n+/**\n+ * The {@link YamlModelWrapper} is used to store the information read from a model in the model cache.\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public class YamlModelWrapper {\n+    private final int version;\n+    private final boolean readOnly;\n+    private final Map<String, List<JsonNode>> nodes = new ConcurrentHashMap<>();\n+\n+    public YamlModelWrapper(int version, boolean readOnly) {\n+        this.version = version;\n+        this.readOnly = readOnly;\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public boolean isReadOnly() {\n+        return readOnly;\n+    }\n+\n+    public Map<String, List<JsonNode>> getNodes() {\n+        return nodes;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTag.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagDTO.java\nsimilarity index 78%\nrename from bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTag.java\nrename to bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagDTO.java\nindex dd6c0736258..213a444dce8 100644\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTag.java\n+++ b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagDTO.java\n@@ -15,31 +15,34 @@\n import java.util.List;\n import java.util.Objects;\n \n+import org.eclipse.jdt.annotation.NonNull;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.model.yaml.YamlElement;\n+import org.openhab.core.model.yaml.YamlElementName;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- * The {@link YamlSemanticTag} is a data transfer object used to serialize a semantic tag\n+ * The {@link YamlSemanticTagDTO} is a data transfer object used to serialize a semantic tag\n  * in a YAML configuration file.\n  *\n  * @author Laurent Garnier - Initial contribution\n  */\n-public class YamlSemanticTag implements YamlElement {\n+@YamlElementName(\"tags\")\n+public class YamlSemanticTagDTO implements YamlElement {\n \n-    private final Logger logger = LoggerFactory.getLogger(YamlSemanticTag.class);\n+    private final Logger logger = LoggerFactory.getLogger(YamlSemanticTagDTO.class);\n \n     public String uid;\n     public String label;\n     public String description;\n     public List<String> synonyms;\n \n-    public YamlSemanticTag() {\n+    public YamlSemanticTagDTO() {\n     }\n \n     @Override\n-    public String getId() {\n+    public @NonNull String getId() {\n         return uid;\n     }\n \n@@ -59,7 +62,7 @@ public boolean equals(@Nullable Object obj) {\n         } else if (obj == null || getClass() != obj.getClass()) {\n             return false;\n         }\n-        YamlSemanticTag that = (YamlSemanticTag) obj;\n+        YamlSemanticTagDTO that = (YamlSemanticTagDTO) obj;\n         return Objects.equals(uid, that.uid) && Objects.equals(label, that.label)\n                 && Objects.equals(description, that.description) && Objects.equals(synonyms, that.synonyms);\n     }\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagProvider.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagProvider.java\nindex 9c6d2917943..ef8b62dc4df 100644\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagProvider.java\n+++ b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTagProvider.java\n@@ -20,13 +20,10 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.openhab.core.common.registry.AbstractProvider;\n-import org.openhab.core.model.yaml.AbstractYamlFile;\n-import org.openhab.core.model.yaml.YamlElement;\n import org.openhab.core.model.yaml.YamlModelListener;\n import org.openhab.core.semantics.SemanticTag;\n import org.openhab.core.semantics.SemanticTagImpl;\n import org.openhab.core.semantics.SemanticTagProvider;\n-import org.openhab.core.semantics.SemanticTagRegistry;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n import org.osgi.service.component.annotations.Deactivate;\n@@ -37,7 +34,7 @@\n  * {@link YamlSemanticTagProvider} is an OSGi service, that allows to define semantic tags\n  * in YAML configuration files in folder conf/tags.\n  * Files can be added, updated or removed at runtime.\n- * These semantic tags are automatically exposed to the {@link SemanticTagRegistry}.\n+ * These semantic tags are automatically exposed to the {@link org.openhab.core.semantics.SemanticTagRegistry}.\n  *\n  * @author Laurent Garnier - Initial contribution\n  */\n@@ -45,7 +42,7 @@\n @Component(immediate = true, service = { SemanticTagProvider.class, YamlSemanticTagProvider.class,\n         YamlModelListener.class })\n public class YamlSemanticTagProvider extends AbstractProvider<SemanticTag>\n-        implements SemanticTagProvider, YamlModelListener<YamlSemanticTag> {\n+        implements SemanticTagProvider, YamlModelListener<YamlSemanticTagDTO> {\n \n     private final Logger logger = LoggerFactory.getLogger(YamlSemanticTagProvider.class);\n \n@@ -66,23 +63,13 @@ public Collection<SemanticTag> getAll() {\n     }\n \n     @Override\n-    public String getRootName() {\n-        return \"tags\";\n+    public Class<YamlSemanticTagDTO> getElementClass() {\n+        return YamlSemanticTagDTO.class;\n     }\n \n     @Override\n-    public Class<? extends AbstractYamlFile> getFileClass() {\n-        return YamlSemanticTags.class;\n-    }\n-\n-    @Override\n-    public Class<YamlSemanticTag> getElementClass() {\n-        return YamlSemanticTag.class;\n-    }\n-\n-    @Override\n-    public void addedModel(String modelName, Collection<? extends YamlElement> elements) {\n-        List<SemanticTag> added = elements.stream().map(e -> mapSemanticTag((YamlSemanticTag) e))\n+    public void addedModel(String modelName, Collection<YamlSemanticTagDTO> elements) {\n+        List<SemanticTag> added = elements.stream().map(this::mapSemanticTag)\n                 .sorted(Comparator.comparing(SemanticTag::getUID)).toList();\n         tags.addAll(added);\n         added.forEach(t -> {\n@@ -92,8 +79,8 @@ public void addedModel(String modelName, Collection<? extends YamlElement> eleme\n     }\n \n     @Override\n-    public void updatedModel(String modelName, Collection<? extends YamlElement> elements) {\n-        List<SemanticTag> updated = elements.stream().map(e -> mapSemanticTag((YamlSemanticTag) e)).toList();\n+    public void updatedModel(String modelName, Collection<YamlSemanticTagDTO> elements) {\n+        List<SemanticTag> updated = elements.stream().map(this::mapSemanticTag).toList();\n         updated.forEach(t -> {\n             tags.stream().filter(tag -> tag.getUID().equals(t.getUID())).findFirst().ifPresentOrElse(oldTag -> {\n                 tags.remove(oldTag);\n@@ -105,8 +92,8 @@ public void updatedModel(String modelName, Collection<? extends YamlElement> ele\n     }\n \n     @Override\n-    public void removedModel(String modelName, Collection<? extends YamlElement> elements) {\n-        List<SemanticTag> removed = elements.stream().map(e -> mapSemanticTag((YamlSemanticTag) e))\n+    public void removedModel(String modelName, Collection<YamlSemanticTagDTO> elements) {\n+        List<SemanticTag> removed = elements.stream().map(this::mapSemanticTag)\n                 .sorted(Comparator.comparing(SemanticTag::getUID).reversed()).toList();\n         removed.forEach(t -> {\n             tags.stream().filter(tag -> tag.getUID().equals(t.getUID())).findFirst().ifPresentOrElse(oldTag -> {\n@@ -117,10 +104,7 @@ public void removedModel(String modelName, Collection<? extends YamlElement> ele\n         });\n     }\n \n-    private SemanticTag mapSemanticTag(YamlSemanticTag tagDTO) {\n-        if (tagDTO.uid == null) {\n-            throw new IllegalArgumentException(\"The argument 'tagDTO.uid' must not be null.\");\n-        }\n+    private SemanticTag mapSemanticTag(YamlSemanticTagDTO tagDTO) {\n         return new SemanticTagImpl(tagDTO.uid, tagDTO.label, tagDTO.description, tagDTO.synonyms);\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTags.java b/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTags.java\ndeleted file mode 100644\nindex c18798c689a..00000000000\n--- a/bundles/org.openhab.core.model.yaml/src/main/java/org/openhab/core/model/yaml/internal/semantics/YamlSemanticTags.java\n+++ /dev/null\n@@ -1,36 +0,0 @@\n-/**\n- * Copyright (c) 2010-2024 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.model.yaml.internal.semantics;\n-\n-import java.util.List;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.model.yaml.AbstractYamlFile;\n-import org.openhab.core.model.yaml.YamlElement;\n-\n-/**\n- * The {@link YamlSemanticTags} is a data transfer object used to serialize a list of semantic tags\n- * in a YAML configuration file.\n- *\n- * @author Laurent Garnier - Initial contribution\n- */\n-@NonNullByDefault\n-public class YamlSemanticTags extends AbstractYamlFile {\n-\n-    public List<YamlSemanticTag> tags = List.of();\n-\n-    @Override\n-    public List<? extends YamlElement> getElements() {\n-        return tags;\n-    }\n-}\n\ndiff --git a/tools/static-code-analysis/checkstyle/suppressions.xml b/tools/static-code-analysis/checkstyle/suppressions.xml\nindex f191a031ad6..44d3fd5077c 100644\n--- a/tools/static-code-analysis/checkstyle/suppressions.xml\n+++ b/tools/static-code-analysis/checkstyle/suppressions.xml\n@@ -5,13 +5,14 @@\n \t<!-- These suppressions define which files to be suppressed for which checks. -->\n \t<suppress files=\".+[\\\\/]internal[\\\\/].+\\.java\" checks=\"JavadocType|JavadocVariable|JavadocMethod|MissingJavadocFilterCheck\"/>\n \t<suppress files=\".+DTO\\.java\" checks=\"JavadocType|JavadocVariable|JavadocMethod|MissingJavadocFilterCheck|NullAnnotationsCheck\" />\n+\t<suppress files=\".+[\\\\/]YamlElement\\.java\" checks=\"NullAnnotationsCheck\" />\n \t<suppress files=\".+Impl\\.java\" checks=\"JavadocType|JavadocVariable|JavadocMethod|MissingJavadocFilterCheck\"/>\n \t<suppress files=\".+[\\\\/]pom\\.xml\" checks=\"OnlyTabIndentationCheck\"/>\n \t<suppress files=\".+[\\\\/]OH-INF[\\\\/].+\\.xml\" checks=\"OhInfXmlLabelCheck\"/>\n \n \t<!-- All generated files will skip the author tag check -->\n \t<suppress files=\".+[\\\\/]gen[\\\\/].+\\.java\" checks=\"AuthorTagCheck\"/>\n-\t<!-- Some checks will be supressed for test bundles -->\n+\t<!-- Some checks will be suppressed for test bundles -->\n \t<suppress files=\".+.test[\\\\/].+\" checks=\"RequireBundleCheck|OutsideOfLibExternalLibrariesCheck|ManifestExternalLibrariesCheck|BuildPropertiesExternalLibrariesCheck\"/>\n \n \t<!-- openHAB Core specific suppressions-->\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java\nnew file mode 100644\nindex 00000000000..65b9368dcdc\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/internal/YamlModelRepositoryImplTest.java\n@@ -0,0 +1,264 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.model.yaml.internal;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.*;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.*;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNull;\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.openhab.core.model.yaml.YamlElement;\n+import org.openhab.core.model.yaml.YamlModelListener;\n+import org.openhab.core.model.yaml.test.FirstTypeDTO;\n+import org.openhab.core.model.yaml.test.SecondTypeDTO;\n+import org.openhab.core.service.WatchService;\n+\n+/**\n+ * The {@link YamlModelRepositoryImplTest} contains tests for the {@link YamlModelRepositoryImpl} class.\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+@NonNullByDefault\n+public class YamlModelRepositoryImplTest {\n+    private static final Path SOURCE_PATH = Path.of(\"src/test/resources\");\n+    private static final String MODEL_NAME = \"model\";\n+    private static final Path MODEL_PATH = Path.of(MODEL_NAME + \".yaml\");\n+\n+    private @Mock @NonNullByDefault({}) WatchService watchServiceMock;\n+    private @TempDir @NonNullByDefault({}) Path watchPath;\n+    private @NonNullByDefault({}) Path fullModelPath;\n+\n+    private @Mock @NonNullByDefault({}) YamlModelListener<@NonNull FirstTypeDTO> firstTypeListener;\n+    private @Mock @NonNullByDefault({}) YamlModelListener<@NonNull SecondTypeDTO> secondTypeListener1;\n+    private @Mock @NonNullByDefault({}) YamlModelListener<@NonNull SecondTypeDTO> secondTypeListener2;\n+\n+    private @Captor @NonNullByDefault({}) ArgumentCaptor<Collection<FirstTypeDTO>> firstTypeCaptor;\n+    private @Captor @NonNullByDefault({}) ArgumentCaptor<Collection<SecondTypeDTO>> secondTypeCaptor1;\n+    private @Captor @NonNullByDefault({}) ArgumentCaptor<Collection<SecondTypeDTO>> secondTypeCaptor2;\n+\n+    @BeforeEach\n+    public void setup() {\n+        fullModelPath = watchPath.resolve(MODEL_PATH);\n+        when(watchServiceMock.getWatchPath()).thenReturn(watchPath);\n+\n+        when(firstTypeListener.getElementClass()).thenReturn(FirstTypeDTO.class);\n+        when(secondTypeListener1.getElementClass()).thenReturn(SecondTypeDTO.class);\n+        when(secondTypeListener2.getElementClass()).thenReturn(SecondTypeDTO.class);\n+    }\n+\n+    @Test\n+    public void testFileAddedAfterListeners() throws IOException {\n+        Files.copy(SOURCE_PATH.resolve(\"modelFileAddedOrRemoved.yaml\"), fullModelPath);\n+\n+        YamlModelRepositoryImpl modelRepository = new YamlModelRepositoryImpl(watchServiceMock);\n+        modelRepository.addYamlModelListener(firstTypeListener);\n+        modelRepository.addYamlModelListener(secondTypeListener1);\n+        modelRepository.addYamlModelListener(secondTypeListener2);\n+\n+        modelRepository.processWatchEvent(WatchService.Kind.CREATE, MODEL_PATH);\n+\n+        verify(firstTypeListener).addedModel(eq(MODEL_NAME), firstTypeCaptor.capture());\n+        verify(firstTypeListener, never()).updatedModel(any(), any());\n+        verify(firstTypeListener, never()).removedModel(any(), any());\n+        verify(secondTypeListener1).addedModel(eq(MODEL_NAME), secondTypeCaptor1.capture());\n+        verify(secondTypeListener1, never()).updatedModel(any(), any());\n+        verify(secondTypeListener1, never()).removedModel(any(), any());\n+        verify(secondTypeListener2).addedModel(eq(MODEL_NAME), secondTypeCaptor2.capture());\n+        verify(secondTypeListener2, never()).updatedModel(any(), any());\n+        verify(secondTypeListener2, never()).removedModel(any(), any());\n+\n+        Collection<? extends YamlElement> firstTypeElements = firstTypeCaptor.getValue();\n+        Collection<? extends YamlElement> secondTypeElements1 = secondTypeCaptor1.getValue();\n+        Collection<? extends YamlElement> secondTypeElements2 = secondTypeCaptor2.getValue();\n+\n+        assertThat(firstTypeElements, hasSize(2));\n+        assertThat(secondTypeElements1, hasSize(1));\n+        assertThat(secondTypeElements2, hasSize(1));\n+    }\n+\n+    @Test\n+    public void testFileAddedBeforeListeners() throws IOException {\n+        Files.copy(SOURCE_PATH.resolve(\"modelFileAddedOrRemoved.yaml\"), fullModelPath);\n+        YamlModelRepositoryImpl modelRepository = new YamlModelRepositoryImpl(watchServiceMock);\n+\n+        modelRepository.processWatchEvent(WatchService.Kind.CREATE, MODEL_PATH);\n+\n+        modelRepository.addYamlModelListener(firstTypeListener);\n+        modelRepository.addYamlModelListener(secondTypeListener1);\n+        modelRepository.addYamlModelListener(secondTypeListener2);\n+\n+        verify(firstTypeListener).addedModel(eq(MODEL_NAME), firstTypeCaptor.capture());\n+        verify(firstTypeListener, never()).updatedModel(any(), any());\n+        verify(firstTypeListener, never()).removedModel(any(), any());\n+        verify(secondTypeListener1).addedModel(eq(MODEL_NAME), secondTypeCaptor1.capture());\n+        verify(secondTypeListener1, never()).updatedModel(any(), any());\n+        verify(secondTypeListener1, never()).removedModel(any(), any());\n+        verify(secondTypeListener2).addedModel(eq(MODEL_NAME), secondTypeCaptor2.capture());\n+        verify(secondTypeListener2, never()).updatedModel(any(), any());\n+        verify(secondTypeListener2, never()).removedModel(any(), any());\n+\n+        Collection<FirstTypeDTO> firstTypeElements = firstTypeCaptor.getValue();\n+        Collection<SecondTypeDTO> secondTypeElements1 = secondTypeCaptor1.getValue();\n+        Collection<SecondTypeDTO> secondTypeElements2 = secondTypeCaptor2.getValue();\n+\n+        assertThat(firstTypeElements,\n+                containsInAnyOrder(new FirstTypeDTO(\"First1\", \"Description1\"), new FirstTypeDTO(\"First2\", null)));\n+        assertThat(secondTypeElements1, contains(new SecondTypeDTO(\"Second1\", \"Label1\")));\n+        assertThat(secondTypeElements1, contains(new SecondTypeDTO(\"Second1\", \"Label1\")));\n+    }\n+\n+    @Test\n+    public void testFileUpdated() throws IOException {\n+        YamlModelRepositoryImpl modelRepository = new YamlModelRepositoryImpl(watchServiceMock);\n+        modelRepository.addYamlModelListener(firstTypeListener);\n+\n+        Files.copy(SOURCE_PATH.resolve(\"modelFileUpdatePost.yaml\"), fullModelPath);\n+        modelRepository.processWatchEvent(WatchService.Kind.CREATE, MODEL_PATH);\n+        verify(firstTypeListener).addedModel(eq(MODEL_NAME), any());\n+\n+        Files.copy(SOURCE_PATH.resolve(\"modelFileUpdatePre.yaml\"), fullModelPath, StandardCopyOption.REPLACE_EXISTING);\n+        modelRepository.processWatchEvent(WatchService.Kind.MODIFY, MODEL_PATH);\n+        verify(firstTypeListener, times(2)).addedModel(eq(MODEL_NAME), firstTypeCaptor.capture());\n+        verify(firstTypeListener).updatedModel(eq(MODEL_NAME), firstTypeCaptor.capture());\n+        verify(firstTypeListener).removedModel(eq(MODEL_NAME), firstTypeCaptor.capture());\n+\n+        List<Collection<FirstTypeDTO>> arguments = firstTypeCaptor.getAllValues();\n+        assertThat(arguments, hasSize(4));\n+\n+        // added originally\n+        assertThat(arguments.get(0), containsInAnyOrder(new FirstTypeDTO(\"First\", \"First original\"),\n+                new FirstTypeDTO(\"Second\", \"Second original\"), new FirstTypeDTO(\"Third\", \"Third original\")));\n+        // added by update\n+        assertThat(arguments.get(1), contains(new FirstTypeDTO(\"Fourth\", \"Fourth original\")));\n+        // updated by update\n+        assertThat(arguments.get(2), contains(new FirstTypeDTO(\"Second\", \"Second modified\")));\n+        // removed by update\n+        assertThat(arguments.get(3), contains(new FirstTypeDTO(\"Third\", \"Third original\")));\n+    }\n+\n+    @Test\n+    public void testFileRemoved() throws IOException {\n+        YamlModelRepositoryImpl modelRepository = new YamlModelRepositoryImpl(watchServiceMock);\n+\n+        modelRepository.addYamlModelListener(firstTypeListener);\n+\n+        Files.copy(SOURCE_PATH.resolve(\"modelFileUpdatePost.yaml\"), fullModelPath);\n+        modelRepository.processWatchEvent(WatchService.Kind.CREATE, MODEL_PATH);\n+        modelRepository.processWatchEvent(WatchService.Kind.DELETE, MODEL_PATH);\n+\n+        verify(firstTypeListener).addedModel(eq(MODEL_NAME), firstTypeCaptor.capture());\n+        verify(firstTypeListener, never()).updatedModel(any(), any());\n+        verify(firstTypeListener).removedModel(eq(MODEL_NAME), firstTypeCaptor.capture());\n+\n+        List<Collection<FirstTypeDTO>> arguments = firstTypeCaptor.getAllValues();\n+        assertThat(arguments, hasSize(2));\n+\n+        // all are added\n+        assertThat(arguments.get(0), containsInAnyOrder(new FirstTypeDTO(\"First\", \"First original\"),\n+                new FirstTypeDTO(\"Second\", \"Second original\"), new FirstTypeDTO(\"Third\", \"Third original\")));\n+        // all are removed\n+        assertThat(arguments.get(0), containsInAnyOrder(new FirstTypeDTO(\"First\", \"First original\"),\n+                new FirstTypeDTO(\"Second\", \"Second original\"), new FirstTypeDTO(\"Third\", \"Third original\")));\n+    }\n+\n+    @Test\n+    public void testAddElementToModel() throws IOException {\n+        Files.copy(SOURCE_PATH.resolve(\"modifyModelInitialContent.yaml\"), fullModelPath);\n+\n+        YamlModelRepositoryImpl modelRepository = new YamlModelRepositoryImpl(watchServiceMock);\n+        modelRepository.processWatchEvent(WatchService.Kind.CREATE, MODEL_PATH);\n+\n+        FirstTypeDTO added = new FirstTypeDTO(\"element3\", \"description3\");\n+        modelRepository.addElementToModel(MODEL_NAME, added);\n+\n+        String actualFileContent = Files.readString(fullModelPath);\n+        String expectedFileContent = Files.readString(SOURCE_PATH.resolve(\"addToModelExpectedContent.yaml\"));\n+\n+        assertThat(actualFileContent, is(expectedFileContent));\n+    }\n+\n+    @Test\n+    public void testUpdateElementInModel() throws IOException {\n+        Files.copy(SOURCE_PATH.resolve(\"modifyModelInitialContent.yaml\"), fullModelPath);\n+\n+        YamlModelRepositoryImpl modelRepository = new YamlModelRepositoryImpl(watchServiceMock);\n+        modelRepository.processWatchEvent(WatchService.Kind.CREATE, MODEL_PATH);\n+\n+        FirstTypeDTO updated = new FirstTypeDTO(\"element1\", \"newDescription1\");\n+        modelRepository.updateElementInModel(MODEL_NAME, updated);\n+\n+        String actualFileContent = Files.readString(fullModelPath);\n+        String expectedFileContent = Files.readString(SOURCE_PATH.resolve(\"updateInModelExpectedContent.yaml\"));\n+\n+        assertThat(actualFileContent, is(expectedFileContent));\n+    }\n+\n+    @Test\n+    public void testRemoveElementFromModel() throws IOException {\n+        Files.copy(SOURCE_PATH.resolve(\"modifyModelInitialContent.yaml\"), fullModelPath);\n+\n+        YamlModelRepositoryImpl modelRepository = new YamlModelRepositoryImpl(watchServiceMock);\n+        modelRepository.processWatchEvent(WatchService.Kind.CREATE, MODEL_PATH);\n+\n+        FirstTypeDTO removed = new FirstTypeDTO(\"element1\", \"description1\");\n+        modelRepository.removeElementFromModel(MODEL_NAME, removed);\n+\n+        String actualFileContent = Files.readString(fullModelPath);\n+        String expectedFileContent = Files.readString(SOURCE_PATH.resolve(\"removeFromModelExpectedContent.yaml\"));\n+\n+        assertThat(actualFileContent, is(expectedFileContent));\n+    }\n+\n+    @Test\n+    public void testReadOnlyModelNotUpdated() throws IOException {\n+        Files.copy(SOURCE_PATH.resolve(\"modelFileAddedOrRemoved.yaml\"), fullModelPath);\n+\n+        YamlModelRepositoryImpl modelRepository = new YamlModelRepositoryImpl(watchServiceMock);\n+        modelRepository.processWatchEvent(WatchService.Kind.CREATE, MODEL_PATH);\n+\n+        FirstTypeDTO added = new FirstTypeDTO(\"element3\", \"description3\");\n+        modelRepository.addElementToModel(MODEL_NAME, added);\n+\n+        FirstTypeDTO removed = new FirstTypeDTO(\"element1\", \"description1\");\n+        modelRepository.removeElementFromModel(MODEL_NAME, removed);\n+\n+        FirstTypeDTO updated = new FirstTypeDTO(\"element2\", \"newDescription2\");\n+        modelRepository.updateElementInModel(MODEL_NAME, updated);\n+\n+        String actualFileContent = Files.readString(fullModelPath);\n+        String expectedFileContent = Files.readString(SOURCE_PATH.resolve(\"modelFileAddedOrRemoved.yaml\"));\n+\n+        assertThat(actualFileContent, is(expectedFileContent));\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/FirstTypeDTO.java b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/FirstTypeDTO.java\nnew file mode 100644\nindex 00000000000..736effc0fe4\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/FirstTypeDTO.java\n@@ -0,0 +1,63 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.model.yaml.test;\n+\n+import java.util.Objects;\n+\n+import org.eclipse.jdt.annotation.NonNull;\n+import org.openhab.core.model.yaml.YamlElement;\n+import org.openhab.core.model.yaml.YamlElementName;\n+\n+/**\n+ * The {@link FirstTypeDTO} is a test type implementing {@link YamlElement}\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@YamlElementName(\"firstType\")\n+public class FirstTypeDTO implements YamlElement {\n+    public String uid;\n+    public String description;\n+\n+    public FirstTypeDTO() {\n+    }\n+\n+    public FirstTypeDTO(String uid, String description) {\n+        this.uid = uid;\n+        this.description = description;\n+    }\n+\n+    @Override\n+    public @NonNull String getId() {\n+        return uid;\n+    }\n+\n+    @Override\n+    public boolean isValid() {\n+        return uid != null;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o)\n+            return true;\n+        if (o == null || getClass() != o.getClass())\n+            return false;\n+        FirstTypeDTO that = (FirstTypeDTO) o;\n+        return Objects.equals(uid, that.uid) && Objects.equals(description, that.description);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(uid, description);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/SecondTypeDTO.java b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/SecondTypeDTO.java\nnew file mode 100644\nindex 00000000000..200980995e8\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/java/org/openhab/core/model/yaml/test/SecondTypeDTO.java\n@@ -0,0 +1,63 @@\n+/**\n+ * Copyright (c) 2010-2024 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.model.yaml.test;\n+\n+import java.util.Objects;\n+\n+import org.eclipse.jdt.annotation.NonNull;\n+import org.openhab.core.model.yaml.YamlElement;\n+import org.openhab.core.model.yaml.YamlElementName;\n+\n+/**\n+ * The {@link SecondTypeDTO} is a test type implementing {@link YamlElement}\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@YamlElementName(\"secondType\")\n+public class SecondTypeDTO implements YamlElement {\n+    public String id;\n+    public String label;\n+\n+    public SecondTypeDTO() {\n+    }\n+\n+    public SecondTypeDTO(String id, String label) {\n+        this.id = id;\n+        this.label = label;\n+    }\n+\n+    @Override\n+    public @NonNull String getId() {\n+        return id;\n+    }\n+\n+    @Override\n+    public boolean isValid() {\n+        return id != null;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o)\n+            return true;\n+        if (o == null || getClass() != o.getClass())\n+            return false;\n+        SecondTypeDTO that = (SecondTypeDTO) o;\n+        return Objects.equals(id, that.id) && Objects.equals(label, that.label);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id, label);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/addToModelExpectedContent.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/addToModelExpectedContent.yaml\nnew file mode 100644\nindex 00000000000..1fbe75daf77\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/resources/addToModelExpectedContent.yaml\n@@ -0,0 +1,9 @@\n+version: 1\n+readOnly: false\n+firstType:\n+  - uid: element1\n+    description: description1\n+  - uid: element2\n+    description: description2\n+  - uid: element3\n+    description: description3\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileAddedOrRemoved.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileAddedOrRemoved.yaml\nnew file mode 100644\nindex 00000000000..2628f03bd52\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileAddedOrRemoved.yaml\n@@ -0,0 +1,28 @@\n+# A YAML test file with different types\n+# The structure is valid but also contains invalid elements\n+\n+version: 1\n+\n+# known first type\n+firstType:\n+  # a valid element with uid and description\n+  - uid: First1\n+    description: Description1\n+\n+  # a valid element with uid only\n+  - uid: First2\n+\n+  # an invalid element (missing uid)\n+  - description: Description3\n+\n+# known second type\n+secondType:\n+  # a valid element with id and label\n+  - id: Second1\n+    label: Label1\n+\n+# unknown third type\n+thirdType:\n+  - foo: Bar\n+\n+nonArrayElement: Test\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePost.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePost.yaml\nnew file mode 100644\nindex 00000000000..4648c250e63\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePost.yaml\n@@ -0,0 +1,11 @@\n+# A YAML test file for updating the model\n+\n+version: 1\n+\n+firstType:\n+  - uid: First\n+    description: First original\n+  - uid: Second\n+    description: Second original\n+  - uid: Third\n+    description: Third original\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePre.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePre.yaml\nnew file mode 100644\nindex 00000000000..b183f120614\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/resources/modelFileUpdatePre.yaml\n@@ -0,0 +1,11 @@\n+# A YAML test file for updating the model\n+\n+version: 1\n+\n+firstType:\n+  - uid: First\n+    description: First original\n+  - uid: Second\n+    description: Second modified\n+  - uid: Fourth\n+    description: Fourth original\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/modifyModelInitialContent.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/modifyModelInitialContent.yaml\nnew file mode 100644\nindex 00000000000..9f3b85b89d7\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/resources/modifyModelInitialContent.yaml\n@@ -0,0 +1,7 @@\n+version: 1\n+readOnly: false\n+firstType:\n+  - uid: element1\n+    description: description1\n+  - uid: element2\n+    description: description2\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/removeFromModelExpectedContent.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/removeFromModelExpectedContent.yaml\nnew file mode 100644\nindex 00000000000..82d98b0b47c\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/resources/removeFromModelExpectedContent.yaml\n@@ -0,0 +1,5 @@\n+version: 1\n+readOnly: false\n+firstType:\n+  - uid: element2\n+    description: description2\n\ndiff --git a/bundles/org.openhab.core.model.yaml/src/test/resources/updateInModelExpectedContent.yaml b/bundles/org.openhab.core.model.yaml/src/test/resources/updateInModelExpectedContent.yaml\nnew file mode 100644\nindex 00000000000..bcbf1240a78\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.yaml/src/test/resources/updateInModelExpectedContent.yaml\n@@ -0,0 +1,7 @@\n+version: 1\n+readOnly: false\n+firstType:\n+  - uid: element1\n+    description: newDescription1\n+  - uid: element2\n+    description: description2\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3964",
    "pr_id": 3964,
    "issue_id": 3962,
    "repo": "openhab/openhab-core",
    "problem_statement": "[QuantityType] Time does not accept y as unit\n## Expected Behavior\r\nIf setting up an Item of type `Number:Time`, it should be possible to use `y` as unit.\r\n```\r\nNumber:Time bsP1Age \"Alter\" (gScale) [\"Duration\"] {channel=\"mqtt:topic:mosquitto:bs444:age\", unit=\"y\"}\r\n```\r\nshould result in an Item state with years and fractions of years, e.g. `50 y` or `50.83 y`\r\n\r\n## Current Behavior\r\nwhen defining the Item as above, this results in a warning:\r\n```\r\n[WARN ] [penhab.core.library.items.NumberItem] - Unit 'y' could not be parsed to a known unit. Keeping old unit 's' for item 'bsP1Age'.\r\n```\r\n\r\n## Environment\r\n* Version used: openHAB4.1.0 (but also true for older versions)\r\n* Operating System and version: debian bookworm (amd64 in proxmox lxc)\r\n\r\nInterestingly, the corresponding channel is also of type number with unit `y` and openHAB does not complain about (but the value isn't calculated correctly from `y` to `s`) \r\n```\r\nType number : age \"Alter\" [ stateTopic=\"bs444/udo/\", transformationPattern=\"JSONPATH:$.age\", unit=\"y\" ]\r\n```\r\nAll other units (`s`, `min`, `d`, `h`, `week`) seem to work as intended. ",
    "issue_word_count": 174,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java"
    ],
    "base_commit": "7213e7b06a8b4c5b257c25ee956f5cf09a43a17c",
    "head_commit": "9974f100c983b56943653b6a2d66332a9f6fee81",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3964",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3964",
    "dockerfile": "",
    "pr_merged_at": "2023-12-26T21:43:33.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java\nindex ae175a6d9e7..c49f8bbef21 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java\n@@ -191,6 +191,7 @@ public final class Units extends CustomUnits {\n     public static final Unit<Time> HOUR = addUnit(tech.units.indriya.unit.Units.HOUR);\n     public static final Unit<Time> DAY = addUnit(tech.units.indriya.unit.Units.DAY);\n     public static final Unit<Time> WEEK = addUnit(tech.units.indriya.unit.Units.WEEK);\n+    public static final Unit<Time> MONTH = addUnit(tech.units.indriya.unit.Units.MONTH);\n     public static final Unit<Time> YEAR = addUnit(tech.units.indriya.unit.Units.YEAR);\n     public static final Unit<VolumetricFlowRate> LITRE_PER_MINUTE = addUnit(new ProductUnit<VolumetricFlowRate>(\n             tech.units.indriya.unit.Units.LITRE.divide(tech.units.indriya.unit.Units.MINUTE)));\n@@ -309,6 +310,11 @@ public final class Units extends CustomUnits {\n         SimpleUnitFormat.getInstance().label(VOLT_AMPERE_HOUR, \"VAh\");\n         SimpleUnitFormat.getInstance().label(WATT_HOUR, \"Wh\");\n         SimpleUnitFormat.getInstance().label(WATT_SECOND, \"Ws\");\n+\n+        // workarounds for https://github.com/unitsofmeasurement/indriya/issues/409\n+        SimpleUnitFormat.getInstance().alias(MONTH, \"mo\");\n+        SimpleUnitFormat.getInstance().alias(WEEK, \"wk\");\n+        SimpleUnitFormat.getInstance().alias(YEAR, \"y\");\n     }\n \n     private Units() {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java\nindex 60f85afcfac..0dcb4e9354e 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java\n@@ -416,6 +416,16 @@ public void testKiloCalorie() {\n         assertThat(converted.doubleValue(), is(closeTo(4184.0, DEFAULT_ERROR)));\n     }\n \n+    @Test\n+    public void testYearMonthDay() {\n+        QuantityType<?> year = QuantityType.valueOf(\"1 y\");\n+        assertThat(year.toString(), is(\"1 year\"));\n+        QuantityType<?> converted = year.toUnit(\"d\");\n+        assertThat(converted.doubleValue(), is(closeTo(365.2425, DEFAULT_ERROR)));\n+        QuantityType<?> converted2 = year.toUnit(\"mo\");\n+        assertThat(converted2.doubleValue(), is(closeTo(12.0, DEFAULT_ERROR)));\n+    }\n+\n     private static class QuantityEquals extends IsEqual<Quantity<?>> {\n         private Quantity<?> quantity;\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3961",
    "pr_id": 3961,
    "issue_id": 3852,
    "repo": "openhab/openhab-core",
    "problem_statement": "[marketplace] Support for multiple versions in one forum post\n**Reproduce**\r\n1) Take latest snapshot or milestone of OH4.1\r\n2) Go to Marketplace and install `MercedesMe `binding\r\n3) Installation ends with excpetion\r\n\r\nObserved in community [here](https://community.openhab.org/t/mercedes-me-binding/136852/161)\r\nReproduced by myself with OH 4.1 snapshot [here](https://community.openhab.org/t/mercedes-me-binding/136852/162)\r\nAfter analysis 3.4 version was installed via Marketplace\r\n![image](https://github.com/openhab/openhab-core/assets/20279271/991e9e79-2813-447f-8449-c2be9e4d9157)\r\n\r\nMaybe something wrong with the [Marketplace page](https://community.openhab.org/t/mercedes-me/136866)?\r\n",
    "issue_word_count": 103,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java"
    ],
    "base_commit": "7213e7b06a8b4c5b257c25ee956f5cf09a43a17c",
    "head_commit": "f45df352da59276fbfecb29d1cfcb6e930f7e8f9",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3961",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3961",
    "dockerfile": "",
    "pr_merged_at": "2023-12-26T22:17:05.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\nindex 3ce55c4f6cd..8d7aed8d243 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\n@@ -16,7 +16,9 @@\n import java.net.URI;\n import java.time.Duration;\n import java.util.ArrayList;\n+import java.util.Comparator;\n import java.util.Dictionary;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Locale;\n@@ -58,6 +60,13 @@\n public abstract class AbstractRemoteAddonService implements AddonService {\n     static final String CONFIG_REMOTE_ENABLED = \"remote\";\n     static final String CONFIG_INCLUDE_INCOMPATIBLE = \"includeIncompatible\";\n+    static final Comparator<Addon> BY_COMPATIBLE_AND_VERSION = (addon1, addon2) -> {\n+        // prefer compatible over incompatible\n+        int compatible = Boolean.compare(addon2.getCompatible(), addon1.getCompatible());\n+        // prefer newer version over older\n+        return compatible != 0 ? compatible\n+                : new BundleVersion(addon2.getVersion()).compareTo(new BundleVersion(addon1.getVersion()));\n+    };\n \n     protected final BundleVersion coreVersion;\n \n@@ -131,6 +140,15 @@ public void refreshSource() {\n         boolean showIncompatible = includeIncompatible();\n         addons.removeIf(addon -> !addon.isInstalled() && !addon.getCompatible() && !showIncompatible);\n \n+        // check and remove duplicate uids\n+        Map<String, List<Addon>> addonMap = new HashMap<>();\n+        addons.forEach(a -> addonMap.computeIfAbsent(a.getUid(), k -> new ArrayList<>()).add(a));\n+        for (List<Addon> partialAddonList : addonMap.values()) {\n+            if (partialAddonList.size() > 1) {\n+                partialAddonList.stream().sorted(BY_COMPATIBLE_AND_VERSION).skip(1).forEach(addons::remove);\n+            }\n+        }\n+\n         cachedAddons = addons;\n         this.installedAddons = installedAddons;\n     }\n\ndiff --git a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java\nindex 362f5311ea1..7ad61709a37 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java\n@@ -131,8 +131,26 @@ protected List<Addon> getRemoteAddons() {\n             } catch (IOException e) {\n                 return List.of();\n             }\n-        }).flatMap(List::stream).filter(Objects::nonNull).map(e -> (AddonEntryDTO) e)\n-                .filter(e -> showUnstable || \"stable\".equals(e.maturity)).map(this::fromAddonEntry).toList();\n+        }).flatMap(List::stream).filter(Objects::nonNull).map(e -> (AddonEntryDTO) e).filter(this::showAddon)\n+                .map(this::fromAddonEntry).toList();\n+    }\n+\n+    /**\n+     * Check if the addon UID is present and the entry is eitehr stable or unstable add-ons are requested\n+     *\n+     * @param addonEntry the add-on entry to check\n+     * @return {@code true} if the add-on entry should be processed, {@code false otherwise}\n+     */\n+    private boolean showAddon(AddonEntryDTO addonEntry) {\n+        if (addonEntry.uid.isBlank()) {\n+            logger.debug(\"Skipping {} because the UID is not set\", addonEntry);\n+            return false;\n+        }\n+        if (!showUnstable && !\"stable\".equals(addonEntry.maturity)) {\n+            logger.debug(\"Skipping {} because the the add-on is not stable and showUnstable is disabled.\", addonEntry);\n+            return false;\n+        }\n+        return true;\n     }\n \n     @Override\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\nindex dac9fa3fc09..1b7393a52af 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\n@@ -13,11 +13,9 @@\n package org.openhab.core.addon.marketplace;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.Matchers.empty;\n-import static org.hamcrest.Matchers.hasSize;\n-import static org.hamcrest.Matchers.is;\n-import static org.hamcrest.Matchers.notNullValue;\n-import static org.hamcrest.Matchers.nullValue;\n+import static org.hamcrest.Matchers.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n import static org.openhab.core.addon.marketplace.AbstractRemoteAddonService.CONFIG_REMOTE_ENABLED;\n import static org.openhab.core.addon.marketplace.test.TestAddonService.ALL_ADDON_COUNT;\n import static org.openhab.core.addon.marketplace.test.TestAddonService.COMPATIBLE_ADDON_COUNT;\n@@ -31,6 +29,7 @@\n import java.util.Dictionary;\n import java.util.Hashtable;\n import java.util.List;\n+import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.BeforeEach;\n@@ -256,6 +255,27 @@ public void testAddonUninstallRemovesStorageEntryOnUninstalledAddon() {\n         checkResult(TEST_ADDON, getFullAddonId(TEST_ADDON) + \"/failed\", false, true);\n     }\n \n+    // add-comparisons\n+    @Test\n+    public void testAddonOrdering() {\n+        Addon addon1 = getMockedAddon(\"4.1.0\", false);\n+        Addon addon2 = getMockedAddon(\"4.2.0\", true);\n+        Addon addon3 = getMockedAddon(\"4.1.4\", false);\n+        Addon addon4 = getMockedAddon(\"4.2.1\", true);\n+        List<Addon> actual = Stream.of(addon1, addon2, addon3, addon4)\n+                .sorted(AbstractRemoteAddonService.BY_COMPATIBLE_AND_VERSION).toList();\n+        List<Addon> expected = List.of(addon4, addon2, addon3, addon1);\n+\n+        assertThat(actual, is(equalTo(expected)));\n+    }\n+\n+    private Addon getMockedAddon(String version, boolean compatible) {\n+        Addon addon = mock(Addon.class);\n+        when(addon.getVersion()).thenReturn(version);\n+        when(addon.getCompatible()).thenReturn(compatible);\n+        return addon;\n+    }\n+\n     /**\n      * checks that a proper event is posted, the presence in storage and installation status in handler\n      *\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3953",
    "pr_id": 3953,
    "issue_id": 3952,
    "repo": "openhab/openhab-core",
    "problem_statement": "Spotless problem in v4.2\nIt looks like in the switchover from v4.1 to v4.2 somebody changed the spotless formatter parameters. So running 'mvn spotless:apply' locally reformats all of the 138 local 'pom.xml' files. And since nobody has yet run the new 'mvn spotless:apply' on the pom.xml files on github main, this means that a correctly formatted PR will now include all of those 138 files in the diff versus OH main.\r\n\r\nEDIT: I think it may be the other way round. The 138 'pom.xml' files on github were reformatted, to a layout that is incompatible with the output produced by running 'mvn spotless:apply' locally.  \r\n\r\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>",
    "issue_word_count": 122,
    "test_files_count": 4,
    "non_test_files_count": 96,
    "pr_changed_files": [
      "bom/compile-model/pom.xml",
      "bom/compile/pom.xml",
      "bom/openhab-core-index/pom.xml",
      "bom/openhab-core/pom.xml",
      "bom/pom.xml",
      "bom/runtime-index/pom.xml",
      "bom/runtime/pom.xml",
      "bom/test-index/pom.xml",
      "bom/test/pom.xml",
      "bundles/org.openhab.core.addon.eclipse/pom.xml",
      "bundles/org.openhab.core.addon.marketplace.karaf/pom.xml",
      "bundles/org.openhab.core.addon.marketplace/pom.xml",
      "bundles/org.openhab.core.addon/pom.xml",
      "bundles/org.openhab.core.audio/pom.xml",
      "bundles/org.openhab.core.auth.jaas/pom.xml",
      "bundles/org.openhab.core.auth.oauth2client/pom.xml",
      "bundles/org.openhab.core.automation.module.media/pom.xml",
      "bundles/org.openhab.core.automation.module.script.rulesupport/pom.xml",
      "bundles/org.openhab.core.automation.module.script/pom.xml",
      "bundles/org.openhab.core.automation.rest/pom.xml",
      "bundles/org.openhab.core.automation/pom.xml",
      "bundles/org.openhab.core.config.core/pom.xml",
      "bundles/org.openhab.core.config.discovery.addon.ip/pom.xml",
      "bundles/org.openhab.core.config.discovery.addon.mdns/pom.xml",
      "bundles/org.openhab.core.config.discovery.addon.process/pom.xml",
      "bundles/org.openhab.core.config.discovery.addon.upnp/pom.xml",
      "bundles/org.openhab.core.config.discovery.addon/pom.xml",
      "bundles/org.openhab.core.config.discovery.mdns/pom.xml",
      "bundles/org.openhab.core.config.discovery.upnp/pom.xml",
      "bundles/org.openhab.core.config.discovery.usbserial.linuxsysfs/pom.xml",
      "bundles/org.openhab.core.config.discovery.usbserial.ser2net/pom.xml",
      "bundles/org.openhab.core.config.discovery.usbserial/pom.xml",
      "bundles/org.openhab.core.config.discovery/pom.xml",
      "bundles/org.openhab.core.config.dispatch/pom.xml",
      "bundles/org.openhab.core.config.serial/pom.xml",
      "bundles/org.openhab.core.ephemeris/pom.xml",
      "bundles/org.openhab.core.id/pom.xml",
      "bundles/org.openhab.core.io.bin2json/pom.xml",
      "bundles/org.openhab.core.io.console.eclipse/pom.xml",
      "bundles/org.openhab.core.io.console.karaf/pom.xml",
      "bundles/org.openhab.core.io.console.rfc147/pom.xml",
      "bundles/org.openhab.core.io.console/pom.xml",
      "bundles/org.openhab.core.io.http.auth/pom.xml",
      "bundles/org.openhab.core.io.http/pom.xml",
      "bundles/org.openhab.core.io.jetty.certificate/pom.xml",
      "bundles/org.openhab.core.io.monitor/pom.xml",
      "bundles/org.openhab.core.io.net/pom.xml",
      "bundles/org.openhab.core.io.rest.audio/pom.xml",
      "bundles/org.openhab.core.io.rest.auth/pom.xml",
      "bundles/org.openhab.core.io.rest.core/pom.xml",
      "bundles/org.openhab.core.io.rest.log/pom.xml",
      "bundles/org.openhab.core.io.rest.mdns/pom.xml",
      "bundles/org.openhab.core.io.rest.sitemap/pom.xml",
      "bundles/org.openhab.core.io.rest.sse/pom.xml",
      "bundles/org.openhab.core.io.rest.swagger/pom.xml",
      "bundles/org.openhab.core.io.rest.transform/pom.xml",
      "bundles/org.openhab.core.io.rest.ui/pom.xml",
      "bundles/org.openhab.core.io.rest.voice/pom.xml",
      "bundles/org.openhab.core.io.rest/pom.xml",
      "bundles/org.openhab.core.io.transport.mdns/pom.xml",
      "bundles/org.openhab.core.io.transport.modbus/pom.xml",
      "bundles/org.openhab.core.io.transport.mqtt/pom.xml",
      "bundles/org.openhab.core.io.transport.serial.javacomm/pom.xml",
      "bundles/org.openhab.core.io.transport.serial.rxtx.rfc2217/pom.xml",
      "bundles/org.openhab.core.io.transport.serial.rxtx/pom.xml",
      "bundles/org.openhab.core.io.transport.serial/pom.xml",
      "bundles/org.openhab.core.io.transport.upnp/pom.xml",
      "bundles/org.openhab.core.io.websocket/pom.xml",
      "bundles/org.openhab.core.karaf/pom.xml",
      "bundles/org.openhab.core.model.core/pom.xml",
      "bundles/org.openhab.core.model.item.ide/pom.xml",
      "bundles/org.openhab.core.model.item.runtime/pom.xml",
      "bundles/org.openhab.core.model.item/pom.xml",
      "bundles/org.openhab.core.model.lazygen/pom.xml",
      "bundles/org.openhab.core.model.lsp/pom.xml",
      "bundles/org.openhab.core.model.persistence.ide/pom.xml",
      "bundles/org.openhab.core.model.persistence.runtime/pom.xml",
      "bundles/org.openhab.core.model.persistence/pom.xml",
      "bundles/org.openhab.core.model.rule.ide/pom.xml",
      "bundles/org.openhab.core.model.rule.runtime/pom.xml",
      "bundles/org.openhab.core.model.rule/pom.xml",
      "bundles/org.openhab.core.model.script.ide/pom.xml",
      "bundles/org.openhab.core.model.script.runtime/pom.xml",
      "bundles/org.openhab.core.model.script/pom.xml",
      "bundles/org.openhab.core.model.sitemap.ide/pom.xml",
      "bundles/org.openhab.core.model.sitemap.runtime/pom.xml",
      "bundles/org.openhab.core.model.sitemap/pom.xml",
      "bundles/org.openhab.core.model.thing.ide/pom.xml",
      "bundles/org.openhab.core.model.thing.runtime/pom.xml",
      "bundles/org.openhab.core.model.thing/pom.xml",
      "bundles/org.openhab.core.model.yaml/pom.xml",
      "bundles/org.openhab.core.persistence/pom.xml",
      "bundles/org.openhab.core.semantics/pom.xml",
      "bundles/org.openhab.core.storage.json/pom.xml",
      "bundles/org.openhab.core.test.magic/pom.xml",
      "bundles/org.openhab.core.test/pom.xml",
      "bundles/org.openhab.core.thing/pom.xml",
      "bundles/org.openhab.core.transform/pom.xml",
      "bundles/org.openhab.core.ui.icon/pom.xml",
      "bundles/org.openhab.core.ui/pom.xml"
    ],
    "pr_changed_test_files": [
      "bom/test-index/pom.xml",
      "bom/test/pom.xml",
      "bundles/org.openhab.core.test.magic/pom.xml",
      "bundles/org.openhab.core.test/pom.xml"
    ],
    "base_commit": "3b279587b11d714437d01a5bf5b84bee5bd4ee23",
    "head_commit": "2b78206fb029457c4948ccd31c465b05fbd91b4d",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3953",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3953",
    "dockerfile": "",
    "pr_merged_at": "2023-12-22T22:14:28.000Z",
    "patch": "diff --git a/bom/compile-model/pom.xml b/bom/compile-model/pom.xml\nindex ea9cdd4f476..278ac411205 100644\n--- a/bom/compile-model/pom.xml\n+++ b/bom/compile-model/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bom/compile/pom.xml b/bom/compile/pom.xml\nindex 2357e99d818..d37fb91fb0e 100644\n--- a/bom/compile/pom.xml\n+++ b/bom/compile/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bom/openhab-core-index/pom.xml b/bom/openhab-core-index/pom.xml\nindex 5afe6e9327b..95effdb3115 100644\n--- a/bom/openhab-core-index/pom.xml\n+++ b/bom/openhab-core-index/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bom/openhab-core/pom.xml b/bom/openhab-core/pom.xml\nindex c0fff09e87e..5cf3eefdb23 100644\n--- a/bom/openhab-core/pom.xml\n+++ b/bom/openhab-core/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bom/pom.xml b/bom/pom.xml\nindex 96e9cfb2271..c8c08e84cf1 100644\n--- a/bom/pom.xml\n+++ b/bom/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bom/runtime-index/pom.xml b/bom/runtime-index/pom.xml\nindex adbbb4bb05f..b2d08cf386c 100644\n--- a/bom/runtime-index/pom.xml\n+++ b/bom/runtime-index/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bom/runtime/pom.xml b/bom/runtime/pom.xml\nindex 77d2fca9ee2..9a0a2868408 100644\n--- a/bom/runtime/pom.xml\n+++ b/bom/runtime/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.addon.eclipse/pom.xml b/bundles/org.openhab.core.addon.eclipse/pom.xml\nindex 5a1a18b7bf4..1b519d2e27a 100644\n--- a/bundles/org.openhab.core.addon.eclipse/pom.xml\n+++ b/bundles/org.openhab.core.addon.eclipse/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.addon.marketplace.karaf/pom.xml b/bundles/org.openhab.core.addon.marketplace.karaf/pom.xml\nindex 55c9335c7a3..ee04295b653 100644\n--- a/bundles/org.openhab.core.addon.marketplace.karaf/pom.xml\n+++ b/bundles/org.openhab.core.addon.marketplace.karaf/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.addon.marketplace/pom.xml b/bundles/org.openhab.core.addon.marketplace/pom.xml\nindex 059bf03a02f..317d25824c2 100644\n--- a/bundles/org.openhab.core.addon.marketplace/pom.xml\n+++ b/bundles/org.openhab.core.addon.marketplace/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.addon/pom.xml b/bundles/org.openhab.core.addon/pom.xml\nindex cd6f34fea90..24d774631cc 100644\n--- a/bundles/org.openhab.core.addon/pom.xml\n+++ b/bundles/org.openhab.core.addon/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.audio/pom.xml b/bundles/org.openhab.core.audio/pom.xml\nindex c65fbbdc092..2603aa967e1 100644\n--- a/bundles/org.openhab.core.audio/pom.xml\n+++ b/bundles/org.openhab.core.audio/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.auth.jaas/pom.xml b/bundles/org.openhab.core.auth.jaas/pom.xml\nindex 0d92ea29ab5..78a75892340 100644\n--- a/bundles/org.openhab.core.auth.jaas/pom.xml\n+++ b/bundles/org.openhab.core.auth.jaas/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.auth.oauth2client/pom.xml b/bundles/org.openhab.core.auth.oauth2client/pom.xml\nindex a085fb077ad..0eb0a93e4ef 100644\n--- a/bundles/org.openhab.core.auth.oauth2client/pom.xml\n+++ b/bundles/org.openhab.core.auth.oauth2client/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.automation.module.media/pom.xml b/bundles/org.openhab.core.automation.module.media/pom.xml\nindex 53fcf48d6ef..4bbad43616f 100644\n--- a/bundles/org.openhab.core.automation.module.media/pom.xml\n+++ b/bundles/org.openhab.core.automation.module.media/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/pom.xml b/bundles/org.openhab.core.automation.module.script.rulesupport/pom.xml\nindex b46b44cf3ec..241ad616912 100644\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/pom.xml\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.automation.module.script/pom.xml b/bundles/org.openhab.core.automation.module.script/pom.xml\nindex 958e49fb368..011647661b2 100644\n--- a/bundles/org.openhab.core.automation.module.script/pom.xml\n+++ b/bundles/org.openhab.core.automation.module.script/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.automation.rest/pom.xml b/bundles/org.openhab.core.automation.rest/pom.xml\nindex 953aef5c7c0..f74d4ec9a3a 100644\n--- a/bundles/org.openhab.core.automation.rest/pom.xml\n+++ b/bundles/org.openhab.core.automation.rest/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.automation/pom.xml b/bundles/org.openhab.core.automation/pom.xml\nindex ea4bbd90c91..18c4bcd6242 100644\n--- a/bundles/org.openhab.core.automation/pom.xml\n+++ b/bundles/org.openhab.core.automation/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.core/pom.xml b/bundles/org.openhab.core.config.core/pom.xml\nindex d13ad10670f..8221b4b6b68 100644\n--- a/bundles/org.openhab.core.config.core/pom.xml\n+++ b/bundles/org.openhab.core.config.core/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon.ip/pom.xml b/bundles/org.openhab.core.config.discovery.addon.ip/pom.xml\nindex 071419854a9..0c825cd2374 100644\n--- a/bundles/org.openhab.core.config.discovery.addon.ip/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.addon.ip/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon.mdns/pom.xml b/bundles/org.openhab.core.config.discovery.addon.mdns/pom.xml\nindex 1a63d3a8440..ab46d535b77 100644\n--- a/bundles/org.openhab.core.config.discovery.addon.mdns/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.addon.mdns/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon.process/pom.xml b/bundles/org.openhab.core.config.discovery.addon.process/pom.xml\nindex 51078aa5bff..f26a5100232 100644\n--- a/bundles/org.openhab.core.config.discovery.addon.process/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.addon.process/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon.upnp/pom.xml b/bundles/org.openhab.core.config.discovery.addon.upnp/pom.xml\nindex 7b461b8146c..cffbd119de2 100644\n--- a/bundles/org.openhab.core.config.discovery.addon.upnp/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.addon.upnp/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.addon/pom.xml b/bundles/org.openhab.core.config.discovery.addon/pom.xml\nindex 61cc63e4a04..2d1c396ad5c 100644\n--- a/bundles/org.openhab.core.config.discovery.addon/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.addon/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.mdns/pom.xml b/bundles/org.openhab.core.config.discovery.mdns/pom.xml\nindex 446acaa2a60..f0ef9975b58 100644\n--- a/bundles/org.openhab.core.config.discovery.mdns/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.mdns/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.upnp/pom.xml b/bundles/org.openhab.core.config.discovery.upnp/pom.xml\nindex 9fb27e38f4f..f8a71aad2bb 100644\n--- a/bundles/org.openhab.core.config.discovery.upnp/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.upnp/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.usbserial.linuxsysfs/pom.xml b/bundles/org.openhab.core.config.discovery.usbserial.linuxsysfs/pom.xml\nindex da574896bc3..b94212ddd9d 100644\n--- a/bundles/org.openhab.core.config.discovery.usbserial.linuxsysfs/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.usbserial.linuxsysfs/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.usbserial.ser2net/pom.xml b/bundles/org.openhab.core.config.discovery.usbserial.ser2net/pom.xml\nindex ef2f388b3eb..0d7b22e038a 100644\n--- a/bundles/org.openhab.core.config.discovery.usbserial.ser2net/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.usbserial.ser2net/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery.usbserial/pom.xml b/bundles/org.openhab.core.config.discovery.usbserial/pom.xml\nindex 3b90152d168..44a0f843484 100644\n--- a/bundles/org.openhab.core.config.discovery.usbserial/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery.usbserial/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.discovery/pom.xml b/bundles/org.openhab.core.config.discovery/pom.xml\nindex 7f29dafcb9b..17dd511021f 100644\n--- a/bundles/org.openhab.core.config.discovery/pom.xml\n+++ b/bundles/org.openhab.core.config.discovery/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.dispatch/pom.xml b/bundles/org.openhab.core.config.dispatch/pom.xml\nindex ff80f39d4fb..fe0a6858260 100644\n--- a/bundles/org.openhab.core.config.dispatch/pom.xml\n+++ b/bundles/org.openhab.core.config.dispatch/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.config.serial/pom.xml b/bundles/org.openhab.core.config.serial/pom.xml\nindex 2394de45fad..e800f84315c 100644\n--- a/bundles/org.openhab.core.config.serial/pom.xml\n+++ b/bundles/org.openhab.core.config.serial/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.ephemeris/pom.xml b/bundles/org.openhab.core.ephemeris/pom.xml\nindex 05f85eb7282..73c992077e8 100644\n--- a/bundles/org.openhab.core.ephemeris/pom.xml\n+++ b/bundles/org.openhab.core.ephemeris/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.id/pom.xml b/bundles/org.openhab.core.id/pom.xml\nindex c97fef0a65c..71ed95058d5 100644\n--- a/bundles/org.openhab.core.id/pom.xml\n+++ b/bundles/org.openhab.core.id/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.bin2json/pom.xml b/bundles/org.openhab.core.io.bin2json/pom.xml\nindex b00801d432d..e9aa5bed2af 100644\n--- a/bundles/org.openhab.core.io.bin2json/pom.xml\n+++ b/bundles/org.openhab.core.io.bin2json/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.console.eclipse/pom.xml b/bundles/org.openhab.core.io.console.eclipse/pom.xml\nindex 2d1106c2be1..b20abd2d1f3 100644\n--- a/bundles/org.openhab.core.io.console.eclipse/pom.xml\n+++ b/bundles/org.openhab.core.io.console.eclipse/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.console.karaf/pom.xml b/bundles/org.openhab.core.io.console.karaf/pom.xml\nindex d170a34ca56..7815528ad6f 100644\n--- a/bundles/org.openhab.core.io.console.karaf/pom.xml\n+++ b/bundles/org.openhab.core.io.console.karaf/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.console.rfc147/pom.xml b/bundles/org.openhab.core.io.console.rfc147/pom.xml\nindex 3914f98bb9d..40a82490646 100644\n--- a/bundles/org.openhab.core.io.console.rfc147/pom.xml\n+++ b/bundles/org.openhab.core.io.console.rfc147/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.console/pom.xml b/bundles/org.openhab.core.io.console/pom.xml\nindex 05f24d4002f..7c28170adec 100644\n--- a/bundles/org.openhab.core.io.console/pom.xml\n+++ b/bundles/org.openhab.core.io.console/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.http.auth/pom.xml b/bundles/org.openhab.core.io.http.auth/pom.xml\nindex c6e0378be7b..70a3681c645 100644\n--- a/bundles/org.openhab.core.io.http.auth/pom.xml\n+++ b/bundles/org.openhab.core.io.http.auth/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.http/pom.xml b/bundles/org.openhab.core.io.http/pom.xml\nindex 953069e2361..8c81c5de554 100644\n--- a/bundles/org.openhab.core.io.http/pom.xml\n+++ b/bundles/org.openhab.core.io.http/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.jetty.certificate/pom.xml b/bundles/org.openhab.core.io.jetty.certificate/pom.xml\nindex 6d43ddd9539..33cf7fd5993 100644\n--- a/bundles/org.openhab.core.io.jetty.certificate/pom.xml\n+++ b/bundles/org.openhab.core.io.jetty.certificate/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n@@ -49,7 +51,8 @@\n               </filters>\n               <minimizeJar>true</minimizeJar>\n               <transformers>\n-                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n+                <transformer\n+                  implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n                   <manifestEntries>\n                     <Bundle-Classpath>.</Bundle-Classpath>\n                   </manifestEntries>\n\ndiff --git a/bundles/org.openhab.core.io.monitor/pom.xml b/bundles/org.openhab.core.io.monitor/pom.xml\nindex ea907a25c7f..7ec8868abd3 100644\n--- a/bundles/org.openhab.core.io.monitor/pom.xml\n+++ b/bundles/org.openhab.core.io.monitor/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.net/pom.xml b/bundles/org.openhab.core.io.net/pom.xml\nindex b0715816e50..f17dea444a4 100644\n--- a/bundles/org.openhab.core.io.net/pom.xml\n+++ b/bundles/org.openhab.core.io.net/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.audio/pom.xml b/bundles/org.openhab.core.io.rest.audio/pom.xml\nindex 7dd5b45e2a7..09c65bf887e 100644\n--- a/bundles/org.openhab.core.io.rest.audio/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.audio/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.auth/pom.xml b/bundles/org.openhab.core.io.rest.auth/pom.xml\nindex 6781884dec9..06f7db1c750 100644\n--- a/bundles/org.openhab.core.io.rest.auth/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.auth/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.core/pom.xml b/bundles/org.openhab.core.io.rest.core/pom.xml\nindex 45fec2cec1d..9fe8a20c134 100644\n--- a/bundles/org.openhab.core.io.rest.core/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.core/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.log/pom.xml b/bundles/org.openhab.core.io.rest.log/pom.xml\nindex ac76d4bcb92..1c5183a9ee4 100644\n--- a/bundles/org.openhab.core.io.rest.log/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.log/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.mdns/pom.xml b/bundles/org.openhab.core.io.rest.mdns/pom.xml\nindex 6b6ea3d504c..6f26eab71cf 100644\n--- a/bundles/org.openhab.core.io.rest.mdns/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.mdns/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.sitemap/pom.xml b/bundles/org.openhab.core.io.rest.sitemap/pom.xml\nindex b220ca6ddf0..70cfd881a58 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.sitemap/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.sse/pom.xml b/bundles/org.openhab.core.io.rest.sse/pom.xml\nindex 487d978f659..224868206bd 100644\n--- a/bundles/org.openhab.core.io.rest.sse/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.sse/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.swagger/pom.xml b/bundles/org.openhab.core.io.rest.swagger/pom.xml\nindex 52059e3ebcd..7f44036b2f0 100644\n--- a/bundles/org.openhab.core.io.rest.swagger/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.swagger/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.transform/pom.xml b/bundles/org.openhab.core.io.rest.transform/pom.xml\nindex 487a6523e68..0870c63eec1 100644\n--- a/bundles/org.openhab.core.io.rest.transform/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.transform/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.ui/pom.xml b/bundles/org.openhab.core.io.rest.ui/pom.xml\nindex 0236b53a615..b34615686d1 100644\n--- a/bundles/org.openhab.core.io.rest.ui/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.ui/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest.voice/pom.xml b/bundles/org.openhab.core.io.rest.voice/pom.xml\nindex 60b1a4fffe6..136af284263 100644\n--- a/bundles/org.openhab.core.io.rest.voice/pom.xml\n+++ b/bundles/org.openhab.core.io.rest.voice/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.rest/pom.xml b/bundles/org.openhab.core.io.rest/pom.xml\nindex 795ec7f5646..76c16538863 100644\n--- a/bundles/org.openhab.core.io.rest/pom.xml\n+++ b/bundles/org.openhab.core.io.rest/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.transport.mdns/pom.xml b/bundles/org.openhab.core.io.transport.mdns/pom.xml\nindex 71a86c85207..72ab9304639 100644\n--- a/bundles/org.openhab.core.io.transport.mdns/pom.xml\n+++ b/bundles/org.openhab.core.io.transport.mdns/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.transport.modbus/pom.xml b/bundles/org.openhab.core.io.transport.modbus/pom.xml\nindex d40f9cffb77..e67bddb2424 100644\n--- a/bundles/org.openhab.core.io.transport.modbus/pom.xml\n+++ b/bundles/org.openhab.core.io.transport.modbus/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.io.transport.mqtt/pom.xml b/bundles/org.openhab.core.io.transport.mqtt/pom.xml\nindex 254a136ae12..854dfd57c53 100644\n--- a/bundles/org.openhab.core.io.transport.mqtt/pom.xml\n+++ b/bundles/org.openhab.core.io.transport.mqtt/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n\ndiff --git a/bundles/org.openhab.core.io.transport.serial.javacomm/pom.xml b/bundles/org.openhab.core.io.transport.serial.javacomm/pom.xml\nindex d61305d171d..979611b33fc 100644\n--- a/bundles/org.openhab.core.io.transport.serial.javacomm/pom.xml\n+++ b/bundles/org.openhab.core.io.transport.serial.javacomm/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n\ndiff --git a/bundles/org.openhab.core.io.transport.serial.rxtx.rfc2217/pom.xml b/bundles/org.openhab.core.io.transport.serial.rxtx.rfc2217/pom.xml\nindex d5e6263a8d0..7317a44788c 100644\n--- a/bundles/org.openhab.core.io.transport.serial.rxtx.rfc2217/pom.xml\n+++ b/bundles/org.openhab.core.io.transport.serial.rxtx.rfc2217/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n\ndiff --git a/bundles/org.openhab.core.io.transport.serial.rxtx/pom.xml b/bundles/org.openhab.core.io.transport.serial.rxtx/pom.xml\nindex b12417b2003..e505f69fdef 100644\n--- a/bundles/org.openhab.core.io.transport.serial.rxtx/pom.xml\n+++ b/bundles/org.openhab.core.io.transport.serial.rxtx/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n\ndiff --git a/bundles/org.openhab.core.io.transport.serial/pom.xml b/bundles/org.openhab.core.io.transport.serial/pom.xml\nindex d6129f3c5ed..dc6933efa7f 100644\n--- a/bundles/org.openhab.core.io.transport.serial/pom.xml\n+++ b/bundles/org.openhab.core.io.transport.serial/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n\ndiff --git a/bundles/org.openhab.core.io.transport.upnp/pom.xml b/bundles/org.openhab.core.io.transport.upnp/pom.xml\nindex 37aefdedaa1..cc348f7c062 100644\n--- a/bundles/org.openhab.core.io.transport.upnp/pom.xml\n+++ b/bundles/org.openhab.core.io.transport.upnp/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n \n   <parent>\n\ndiff --git a/bundles/org.openhab.core.io.websocket/pom.xml b/bundles/org.openhab.core.io.websocket/pom.xml\nindex 027b9cd046c..1dcd49b79aa 100644\n--- a/bundles/org.openhab.core.io.websocket/pom.xml\n+++ b/bundles/org.openhab.core.io.websocket/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.karaf/pom.xml b/bundles/org.openhab.core.karaf/pom.xml\nindex a0115ed4474..0873cdf66ca 100644\n--- a/bundles/org.openhab.core.karaf/pom.xml\n+++ b/bundles/org.openhab.core.karaf/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.core/pom.xml b/bundles/org.openhab.core.model.core/pom.xml\nindex b0325b599ae..ce91eb736a5 100644\n--- a/bundles/org.openhab.core.model.core/pom.xml\n+++ b/bundles/org.openhab.core.model.core/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.item.ide/pom.xml b/bundles/org.openhab.core.model.item.ide/pom.xml\nindex b888bf7bd8f..b81113435d6 100644\n--- a/bundles/org.openhab.core.model.item.ide/pom.xml\n+++ b/bundles/org.openhab.core.model.item.ide/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.item.runtime/pom.xml b/bundles/org.openhab.core.model.item.runtime/pom.xml\nindex 034df24bfbb..f82f934f82b 100644\n--- a/bundles/org.openhab.core.model.item.runtime/pom.xml\n+++ b/bundles/org.openhab.core.model.item.runtime/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.item/pom.xml b/bundles/org.openhab.core.model.item/pom.xml\nindex 2b7c8e537a6..59379ead2b0 100644\n--- a/bundles/org.openhab.core.model.item/pom.xml\n+++ b/bundles/org.openhab.core.model.item/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.lazygen/pom.xml b/bundles/org.openhab.core.model.lazygen/pom.xml\nindex 78077837944..d6880a8fca5 100644\n--- a/bundles/org.openhab.core.model.lazygen/pom.xml\n+++ b/bundles/org.openhab.core.model.lazygen/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.lsp/pom.xml b/bundles/org.openhab.core.model.lsp/pom.xml\nindex b4a94b5ea12..494d16fe2f3 100644\n--- a/bundles/org.openhab.core.model.lsp/pom.xml\n+++ b/bundles/org.openhab.core.model.lsp/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.persistence.ide/pom.xml b/bundles/org.openhab.core.model.persistence.ide/pom.xml\nindex 70f70c28e4a..6f09055154e 100644\n--- a/bundles/org.openhab.core.model.persistence.ide/pom.xml\n+++ b/bundles/org.openhab.core.model.persistence.ide/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.persistence.runtime/pom.xml b/bundles/org.openhab.core.model.persistence.runtime/pom.xml\nindex 60bc052261c..185bd0df985 100644\n--- a/bundles/org.openhab.core.model.persistence.runtime/pom.xml\n+++ b/bundles/org.openhab.core.model.persistence.runtime/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.persistence/pom.xml b/bundles/org.openhab.core.model.persistence/pom.xml\nindex d648f05eb82..20ed6956f4a 100644\n--- a/bundles/org.openhab.core.model.persistence/pom.xml\n+++ b/bundles/org.openhab.core.model.persistence/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.rule.ide/pom.xml b/bundles/org.openhab.core.model.rule.ide/pom.xml\nindex 74ac3b4d958..c4bc893e5dd 100644\n--- a/bundles/org.openhab.core.model.rule.ide/pom.xml\n+++ b/bundles/org.openhab.core.model.rule.ide/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.rule.runtime/pom.xml b/bundles/org.openhab.core.model.rule.runtime/pom.xml\nindex d01efccb2b1..ec5fb5bec79 100644\n--- a/bundles/org.openhab.core.model.rule.runtime/pom.xml\n+++ b/bundles/org.openhab.core.model.rule.runtime/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.rule/pom.xml b/bundles/org.openhab.core.model.rule/pom.xml\nindex 2b8efa812b9..4beb1f8d27b 100644\n--- a/bundles/org.openhab.core.model.rule/pom.xml\n+++ b/bundles/org.openhab.core.model.rule/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.script.ide/pom.xml b/bundles/org.openhab.core.model.script.ide/pom.xml\nindex 40f28780448..e16edbdfd90 100644\n--- a/bundles/org.openhab.core.model.script.ide/pom.xml\n+++ b/bundles/org.openhab.core.model.script.ide/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.script.runtime/pom.xml b/bundles/org.openhab.core.model.script.runtime/pom.xml\nindex 11f2c863c6a..76a0ca195ef 100644\n--- a/bundles/org.openhab.core.model.script.runtime/pom.xml\n+++ b/bundles/org.openhab.core.model.script.runtime/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.script/pom.xml b/bundles/org.openhab.core.model.script/pom.xml\nindex cb08d42f257..92736aaa273 100644\n--- a/bundles/org.openhab.core.model.script/pom.xml\n+++ b/bundles/org.openhab.core.model.script/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.sitemap.ide/pom.xml b/bundles/org.openhab.core.model.sitemap.ide/pom.xml\nindex b39b00f2029..2de27b1e232 100644\n--- a/bundles/org.openhab.core.model.sitemap.ide/pom.xml\n+++ b/bundles/org.openhab.core.model.sitemap.ide/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.sitemap.runtime/pom.xml b/bundles/org.openhab.core.model.sitemap.runtime/pom.xml\nindex 6429f72935d..d7aa132ba3d 100644\n--- a/bundles/org.openhab.core.model.sitemap.runtime/pom.xml\n+++ b/bundles/org.openhab.core.model.sitemap.runtime/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.sitemap/pom.xml b/bundles/org.openhab.core.model.sitemap/pom.xml\nindex 582776cbd48..4e76aa43fd3 100644\n--- a/bundles/org.openhab.core.model.sitemap/pom.xml\n+++ b/bundles/org.openhab.core.model.sitemap/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.thing.ide/pom.xml b/bundles/org.openhab.core.model.thing.ide/pom.xml\nindex 0dc7b14bcad..eec22690e33 100644\n--- a/bundles/org.openhab.core.model.thing.ide/pom.xml\n+++ b/bundles/org.openhab.core.model.thing.ide/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.thing.runtime/pom.xml b/bundles/org.openhab.core.model.thing.runtime/pom.xml\nindex 48098891d3e..d002421a761 100644\n--- a/bundles/org.openhab.core.model.thing.runtime/pom.xml\n+++ b/bundles/org.openhab.core.model.thing.runtime/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.thing/pom.xml b/bundles/org.openhab.core.model.thing/pom.xml\nindex c6005e703d6..bd63f8b49d9 100644\n--- a/bundles/org.openhab.core.model.thing/pom.xml\n+++ b/bundles/org.openhab.core.model.thing/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.model.yaml/pom.xml b/bundles/org.openhab.core.model.yaml/pom.xml\nindex e97653e3c51..d9ee59f9cf3 100644\n--- a/bundles/org.openhab.core.model.yaml/pom.xml\n+++ b/bundles/org.openhab.core.model.yaml/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.persistence/pom.xml b/bundles/org.openhab.core.persistence/pom.xml\nindex d7d59a7f4ba..8f57dd5569b 100644\n--- a/bundles/org.openhab.core.persistence/pom.xml\n+++ b/bundles/org.openhab.core.persistence/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.semantics/pom.xml b/bundles/org.openhab.core.semantics/pom.xml\nindex 0f4af25542d..30f409f0257 100644\n--- a/bundles/org.openhab.core.semantics/pom.xml\n+++ b/bundles/org.openhab.core.semantics/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.storage.json/pom.xml b/bundles/org.openhab.core.storage.json/pom.xml\nindex 16d9addd3b8..e2db408df66 100644\n--- a/bundles/org.openhab.core.storage.json/pom.xml\n+++ b/bundles/org.openhab.core.storage.json/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.thing/pom.xml b/bundles/org.openhab.core.thing/pom.xml\nindex 4f304d3756e..12cf68adbed 100644\n--- a/bundles/org.openhab.core.thing/pom.xml\n+++ b/bundles/org.openhab.core.thing/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.transform/pom.xml b/bundles/org.openhab.core.transform/pom.xml\nindex 52d1c03d1e5..d48685af628 100644\n--- a/bundles/org.openhab.core.transform/pom.xml\n+++ b/bundles/org.openhab.core.transform/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.ui.icon/pom.xml b/bundles/org.openhab.core.ui.icon/pom.xml\nindex 7331845be54..56191058617 100644\n--- a/bundles/org.openhab.core.ui.icon/pom.xml\n+++ b/bundles/org.openhab.core.ui.icon/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.ui/pom.xml b/bundles/org.openhab.core.ui/pom.xml\nindex 96f08194a7e..a560ae2fa1a 100644\n--- a/bundles/org.openhab.core.ui/pom.xml\n+++ b/bundles/org.openhab.core.ui/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n",
    "test_patch": "diff --git a/bom/test-index/pom.xml b/bom/test-index/pom.xml\nindex 3eb79b8f0b0..fe176069958 100644\n--- a/bom/test-index/pom.xml\n+++ b/bom/test-index/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bom/test/pom.xml b/bom/test/pom.xml\nindex 0a77f0157da..3ef0f307b8f 100644\n--- a/bom/test/pom.xml\n+++ b/bom/test/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.test.magic/pom.xml b/bundles/org.openhab.core.test.magic/pom.xml\nindex fccb5185b39..d5cc915de27 100644\n--- a/bundles/org.openhab.core.test.magic/pom.xml\n+++ b/bundles/org.openhab.core.test.magic/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n\ndiff --git a/bundles/org.openhab.core.test/pom.xml b/bundles/org.openhab.core.test/pom.xml\nindex 5385e96b670..bd23910a93e 100644\n--- a/bundles/org.openhab.core.test/pom.xml\n+++ b/bundles/org.openhab.core.test/pom.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n   <modelVersion>4.0.0</modelVersion>\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3888",
    "pr_id": 3888,
    "issue_id": 3887,
    "repo": "openhab/openhab-core",
    "problem_statement": "Auto update policy is not working on channel level\nIn this XSD:\r\nhttps://www.openhab.org/schemas/thing-description-1.0.0.xsd\r\n\r\n`autoUpdatePolicy` is defined at channel level:\r\n\r\n```xml\r\n<xs:complexType name=\"channel\">\r\n    <xs:sequence>\r\n        <xs:element name=\"label\" type=\"xs:string\" minOccurs=\"0\"/>\r\n        <xs:element name=\"description\" type=\"xs:string\" minOccurs=\"0\"/>\r\n        <xs:element name=\"properties\" type=\"thing-description:properties\" minOccurs=\"0\"/>\r\n        <xs:element name=\"autoUpdatePolicy\" type=\"thing-description:auto-update-policy\" minOccurs=\"0\"/>\r\n    </xs:sequence>\r\n    <xs:attribute name=\"id\" type=\"config-description:idRestrictionPattern\" use=\"required\"/>\r\n    <xs:attribute name=\"typeId\" type=\"thing-description:namespaceIdRestrictionPattern\" use=\"required\"/>\r\n</xs:complexType>\r\n```\r\n\r\nHowever, this has no effect. Example:\r\n\r\n```xml\r\n<channel id=\"brightness\" typeId=\"system.brightness\">\r\n    <autoUpdatePolicy>veto</autoUpdatePolicy>\r\n</channel>\r\n```\r\n\r\nThis has also been reported in the foum:\r\nhttps://community.openhab.org/t/autoupdatepolicy-seems-to-be-ignored-on-xml-channel-definitions/149271\r\n\r\nAccording to the [documentation](https://www.openhab.org/docs/developer/bindings/thing-xml.html#auto-update-policies) this should work.\r\n\r\n## Expected Behavior\r\n\r\nDefined auto update policy for the channel should be respected.\r\n\r\n## Current Behavior\r\n\r\nDefined auto update policy for the channel is ignored, and the auto update policy from the channel type will be used.\r\n\r\n## Steps to Reproduce\r\n\r\n1. Declare a channel with veto policy.\r\n2. Send a command to the channel for changing state.\r\n3. Observe that state is updated immediately.\r\n\r\n## Context\r\n\r\nI'm currently working on the Hue binding where many API v2 channels are using system channel types. I need to apply the **veto** policy to all of them, so currently they all need to be duplicated into the binding for this to work.\r\n\r\n## Your Environment\r\n* Version used: 4.1.0-SNAPSHOT - Build 3725",
    "issue_word_count": 277,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/binding/builder/ChannelBuilder.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java",
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/builder/ChannelBuilderTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/builder/ChannelBuilderTest.java"
    ],
    "base_commit": "32237a9bdc861e94554fc3c56ec8be02490744eb",
    "head_commit": "b193c3886e8eb4234bb98827cf600e46f42b2a98",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3888",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3888",
    "dockerfile": "",
    "pr_merged_at": "2023-12-04T09:56:33.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/binding/builder/ChannelBuilder.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/binding/builder/ChannelBuilder.java\nindex b7703a19ba6..94cbbf40b7c 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/binding/builder/ChannelBuilder.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/binding/builder/ChannelBuilder.java\n@@ -96,7 +96,7 @@ public static ChannelBuilder create(Channel channel) {\n         ChannelBuilder channelBuilder = create(channel.getUID(), channel.getAcceptedItemType())\n                 .withConfiguration(channel.getConfiguration()).withDefaultTags(channel.getDefaultTags())\n                 .withKind(channel.getKind()).withProperties(channel.getProperties())\n-                .withType(channel.getChannelTypeUID());\n+                .withType(channel.getChannelTypeUID()).withAutoUpdatePolicy(channel.getAutoUpdatePolicy());\n         String label = channel.getLabel();\n         if (label != null) {\n             channelBuilder.withLabel(label);\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java\nindex 3322f845f0b..b0300ca2209 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java\n@@ -26,6 +26,7 @@\n import org.openhab.core.thing.ThingUID;\n import org.openhab.core.thing.binding.ThingFactory;\n import org.openhab.core.thing.binding.builder.ChannelBuilder;\n+import org.openhab.core.thing.type.AutoUpdatePolicy;\n import org.openhab.core.thing.type.ChannelDefinition;\n import org.openhab.core.thing.type.ChannelGroupDefinition;\n import org.openhab.core.thing.type.ChannelGroupType;\n@@ -184,12 +185,17 @@ public static ChannelBuilder createChannelBuilder(ChannelUID channelUID, Channel\n             label = channelType.getLabel();\n         }\n \n+        AutoUpdatePolicy autoUpdatePolicy = channelDefinition.getAutoUpdatePolicy();\n+        if (autoUpdatePolicy == null) {\n+            autoUpdatePolicy = channelType.getAutoUpdatePolicy();\n+        }\n+\n         final ChannelBuilder channelBuilder = ChannelBuilder.create(channelUID, channelType.getItemType()) //\n                 .withType(channelType.getUID()) //\n                 .withDefaultTags(channelType.getTags()) //\n                 .withKind(channelType.getKind()) //\n                 .withLabel(label) //\n-                .withAutoUpdatePolicy(channelType.getAutoUpdatePolicy());\n+                .withAutoUpdatePolicy(autoUpdatePolicy);\n \n         String description = channelDefinition.getDescription();\n         if (description == null) {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/builder/ChannelBuilderTest.java b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/builder/ChannelBuilderTest.java\nindex efa439da8e1..5d8bc561faa 100644\n--- a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/builder/ChannelBuilderTest.java\n+++ b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/builder/ChannelBuilderTest.java\n@@ -84,6 +84,7 @@ public void testChannelBuilderFromChannel() {\n         assertThat(otherChannel.getDescription(), is(channel.getDescription()));\n         assertThat(otherChannel.getKind(), is(channel.getKind()));\n         assertThat(otherChannel.getLabel(), is(channel.getLabel()));\n+        assertThat(otherChannel.getAutoUpdatePolicy(), is(channel.getAutoUpdatePolicy()));\n         assertThat(otherChannel.getProperties().size(), is(channel.getProperties().size()));\n         assertThat(otherChannel.getProperties().get(KEY1), is(channel.getProperties().get(KEY1)));\n         assertThat(otherChannel.getProperties().get(KEY2), is(channel.getProperties().get(KEY2)));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3819",
    "pr_id": 3819,
    "issue_id": 3058,
    "repo": "openhab/openhab-core",
    "problem_statement": "Be able to connect multiple conditions with AND in sitemap's valuecolor\nCurrenlty Sitemapsâs can have dynamic `valuecolor=[â¦]`.  In the brackets conditions can be written, followed by colour.  When a condition is met, the following colour is used and the remaining conditions are not evaluated.\r\n\r\nI want to be able conjunct two conditions, as in `valuecolor=[A==ON AND B==ON â \"green\" A==ON AND B==OFF â \"RED\" A==OFF AND B==ON â \"blue\" A==OFF AND B==OFF â \"white\"]`, or the equivalent but shorter `valuecolor=[A==ON AND B==ON â \"green\" A==ON=\"red\" A==OFF AND B==ON â \"blue\" A==OFF=\"white\"]`.\r\n\r\nRationale:\r\n\r\nI have a Group with item=.  By using the value of the item I want to encode the state of two different items in the group, so that I can conclude that states without having to open the Group by clicking on it.",
    "issue_word_count": 149,
    "test_files_count": 2,
    "non_test_files_count": 5,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java",
      "bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext",
      "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java",
      "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java",
      "bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java",
      "bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java"
    ],
    "base_commit": "dda021ae07f91921b68524dfc38d4f65f3d8fd08",
    "head_commit": "ddc63beea6c096d7b2724b0be4b105509d040474",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3819",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3819",
    "dockerfile": "",
    "pr_merged_at": "2023-10-08T07:48:58.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java\nindex 30aa6bc5e92..aeb6926435c 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java\n@@ -23,6 +23,7 @@\n import java.util.stream.Collectors;\n \n import org.eclipse.emf.common.util.EList;\n+import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.common.ThreadPoolManager;\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventSubscriber;\n@@ -36,6 +37,7 @@\n import org.openhab.core.library.CoreItemFactory;\n import org.openhab.core.model.sitemap.sitemap.Chart;\n import org.openhab.core.model.sitemap.sitemap.ColorArray;\n+import org.openhab.core.model.sitemap.sitemap.Condition;\n import org.openhab.core.model.sitemap.sitemap.Frame;\n import org.openhab.core.model.sitemap.sitemap.VisibilityRule;\n import org.openhab.core.model.sitemap.sitemap.Widget;\n@@ -47,6 +49,7 @@\n  *\n  * @author Kai Kreuzer - Initial contribution\n  * @author Laurent Garnier - Added support for icon color\n+ * @author Laurent Garnier - Support added for multiple AND conditions in labelcolor/valuecolor/visibility\n  */\n public class PageChangeListener implements EventSubscriber {\n \n@@ -121,25 +124,33 @@ private Set<Item> getAllItems(EList<Widget> widgets) {\n                 }\n                 // now scan visibility rules\n                 for (VisibilityRule rule : widget.getVisibility()) {\n-                    addItemWithName(items, rule.getItem());\n+                    addItemsFromConditions(items, rule.getConditions());\n                 }\n                 // now scan label color rules\n                 for (ColorArray rule : widget.getLabelColor()) {\n-                    addItemWithName(items, rule.getItem());\n+                    addItemsFromConditions(items, rule.getConditions());\n                 }\n                 // now scan value color rules\n                 for (ColorArray rule : widget.getValueColor()) {\n-                    addItemWithName(items, rule.getItem());\n+                    addItemsFromConditions(items, rule.getConditions());\n                 }\n-                // now scan value icon rules\n+                // now scan icon color rules\n                 for (ColorArray rule : widget.getIconColor()) {\n-                    addItemWithName(items, rule.getItem());\n+                    addItemsFromConditions(items, rule.getConditions());\n                 }\n             }\n         }\n         return items;\n     }\n \n+    private void addItemsFromConditions(Set<Item> items, @Nullable EList<Condition> conditions) {\n+        if (conditions != null) {\n+            for (Condition condition : conditions) {\n+                addItemWithName(items, condition.getItem());\n+            }\n+        }\n+    }\n+\n     private void addItemWithName(Set<Item> items, String itemName) {\n         if (itemName != null) {\n             try {\n@@ -238,10 +249,14 @@ private Item getItemForWidget(Widget w) {\n     }\n \n     private boolean definesVisibilityOrColor(Widget w, String name) {\n-        return w.getVisibility().stream().anyMatch(r -> name.equals(r.getItem()))\n-                || w.getLabelColor().stream().anyMatch(r -> name.equals(r.getItem()))\n-                || w.getValueColor().stream().anyMatch(r -> name.equals(r.getItem()))\n-                || w.getIconColor().stream().anyMatch(r -> name.equals(r.getItem()));\n+        return w.getVisibility().stream().anyMatch(r -> conditionsDependsOnItem(r.getConditions(), name))\n+                || w.getLabelColor().stream().anyMatch(r -> conditionsDependsOnItem(r.getConditions(), name))\n+                || w.getValueColor().stream().anyMatch(r -> conditionsDependsOnItem(r.getConditions(), name))\n+                || w.getIconColor().stream().anyMatch(r -> conditionsDependsOnItem(r.getConditions(), name));\n+    }\n+\n+    private boolean conditionsDependsOnItem(@Nullable EList<Condition> conditions, String name) {\n+        return conditions != null && conditions.stream().anyMatch(c -> name.equals(c.getItem()));\n     }\n \n     public void sitemapContentChanged(EList<Widget> widgets) {\n\ndiff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\nindex 1b73d4222da..c25e865668e 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\n@@ -80,6 +80,7 @@\n import org.openhab.core.model.sitemap.sitemap.Buttongrid;\n import org.openhab.core.model.sitemap.sitemap.Chart;\n import org.openhab.core.model.sitemap.sitemap.ColorArray;\n+import org.openhab.core.model.sitemap.sitemap.Condition;\n import org.openhab.core.model.sitemap.sitemap.Frame;\n import org.openhab.core.model.sitemap.sitemap.Image;\n import org.openhab.core.model.sitemap.sitemap.Input;\n@@ -135,6 +136,7 @@\n  * @author Mark Herwege - Added pattern and unit fields\n  * @author Laurent Garnier - Added support for new sitemap element Buttongrid\n  * @author Laurent Garnier - Added icon field for mappings used for switch element\n+ * @author Laurent Garnier - Support added for multiple AND conditions in labelcolor/valuecolor/visibility\n  */\n @Component(service = { RESTResource.class, EventSubscriber.class })\n @JaxrsResource\n@@ -769,37 +771,35 @@ private Set<GenericItem> getAllItems(EList<Widget> widgets) {\n     private Set<GenericItem> getItemsInVisibilityCond(EList<VisibilityRule> ruleList) {\n         Set<GenericItem> items = new HashSet<>();\n         for (VisibilityRule rule : ruleList) {\n-            String itemName = rule.getItem();\n-            if (itemName != null) {\n-                try {\n-                    Item item = itemUIRegistry.getItem(itemName);\n-                    if (item instanceof GenericItem genericItem) {\n-                        items.add(genericItem);\n-                    }\n-                } catch (ItemNotFoundException e) {\n-                    // ignore\n-                }\n-            }\n+            getItemsInConditions(rule.getConditions(), items);\n         }\n         return items;\n     }\n \n     private Set<GenericItem> getItemsInColorCond(EList<ColorArray> colorList) {\n         Set<GenericItem> items = new HashSet<>();\n-        for (ColorArray color : colorList) {\n-            String itemName = color.getItem();\n-            if (itemName != null) {\n-                try {\n-                    Item item = itemUIRegistry.getItem(itemName);\n-                    if (item instanceof GenericItem genericItem) {\n-                        items.add(genericItem);\n+        for (ColorArray rule : colorList) {\n+            getItemsInConditions(rule.getConditions(), items);\n+        }\n+        return items;\n+    }\n+\n+    private void getItemsInConditions(@Nullable EList<Condition> conditions, Set<GenericItem> items) {\n+        if (conditions != null) {\n+            for (Condition condition : conditions) {\n+                String itemName = condition.getItem();\n+                if (itemName != null) {\n+                    try {\n+                        Item item = itemUIRegistry.getItem(itemName);\n+                        if (item instanceof GenericItem genericItem) {\n+                            items.add(genericItem);\n+                        }\n+                    } catch (ItemNotFoundException e) {\n+                        // ignore\n                     }\n-                } catch (ItemNotFoundException e) {\n-                    // ignore\n                 }\n             }\n         }\n-        return items;\n     }\n \n     @Override\n\ndiff --git a/bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext b/bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext\nindex f4716e46008..4808a827f4e 100644\n--- a/bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext\n+++ b/bundles/org.openhab.core.model.sitemap/src/org/openhab/core/model/sitemap/Sitemap.xtext\n@@ -26,147 +26,147 @@ LinkableWidget:\n Frame:\n     {Frame} 'Frame' (('item=' item=ItemRef)? & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Text:\n     {Text} 'Text' (('item=' item=ItemRef)? & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Group:\n     'Group' (('item=' item=GroupItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Image:\n     'Image' (('item=' item=ItemRef)? & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('url=' url=STRING)? & ('refresh=' refresh=INT)? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Video:\n     'Video' (('item=' item=ItemRef)? & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('url=' url=STRING) & ('encoding=' encoding=STRING)? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Chart:\n     'Chart' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('service=' service=STRING)? & ('refresh=' refresh=INT)? & ('period=' period=ID) &\n     ('legend=' legend=BOOLEAN_OBJECT)? & ('forceasitem=' forceAsItem=BOOLEAN_OBJECT)? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))? &\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')? &\n     ('yAxisDecimalPattern=' yAxisDecimalPattern=(STRING))?);\n \n Webview:\n     'Webview' (('item=' item=ItemRef)? & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('height=' height=INT)? & ('url=' url=STRING) &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Switch:\n     'Switch' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('mappings=[' mappings+=Mapping (',' mappings+=Mapping)* ']')? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Mapview:\n     'Mapview' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('height=' height=INT)? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Slider:\n     'Slider' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('sendFrequency=' frequency=INT)? & (switchEnabled?='switchSupport')? &\n     ('minValue=' minValue=Number)? & ('maxValue=' maxValue=Number)? & ('step=' step=Number)? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Selection:\n     'Selection' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('mappings=[' mappings+=Mapping (',' mappings+=Mapping)* ']')? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Setpoint:\n     'Setpoint' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('minValue=' minValue=Number)? & ('maxValue=' maxValue=Number)? & ('step=' step=Number)? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Colorpicker:\n     'Colorpicker' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('sendFrequency=' frequency=INT)? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Input:\n     'Input' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('inputHint=' inputHint=STRING)? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Buttongrid:\n     'Buttongrid' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('columns=' columns=INT) &\n     ('buttons=[' buttons+=Button (',' buttons+=Button)* ']') &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Default:\n     'Default' (('item=' item=ItemRef) & ('label=' label=(ID | STRING))? &\n     (('icon=' icon=Icon) | ('staticIcon=' staticIcon=Icon))? &\n     ('height=' height=INT)? &\n-    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)* ']'))? &\n-    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)* ']'))? &\n-    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)* ']'))? &\n-    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)* ']'))?);\n+    ('labelcolor=[' (LabelColor+=ColorArray (',' LabelColor+=ColorArray)*) ']')? &\n+    ('valuecolor=[' (ValueColor+=ColorArray (',' ValueColor+=ColorArray)*) ']')? &\n+    ('iconcolor=[' (IconColor+=ColorArray (',' IconColor+=ColorArray)*) ']')? &\n+    ('visibility=[' (Visibility+=VisibilityRule (',' Visibility+=VisibilityRule)*) ']')?);\n \n Button:\n     position=INT ':' cmd=Command '=' label=(ID | STRING) ('=' icon=Icon)?;\n@@ -175,7 +175,7 @@ Mapping:\n     cmd=Command '=' label=(ID | STRING) ('=' icon=Icon)?;\n \n VisibilityRule:\n-    (item=ID) (condition=('==' | '>' | '<' | '>=' | '<=' | '!=')) (sign=('-' | '+'))? (state=XState);\n+    conditions+=Condition ('AND' conditions+=Condition)*;\n \n ItemRef:\n     ID;\n@@ -191,8 +191,10 @@ IconName:\n     (ID '-')* ID;\n \n ColorArray:\n-    ((item=ID)? (condition=('==' | '>' | '<' | '>=' | '<=' | '!='))? (sign=('-' | '+'))? (state=XState) '=')?\n-    (arg=STRING);\n+    ((conditions+=Condition ('AND' conditions+=Condition)*) '=')? (arg=STRING);\n+\n+Condition:\n+    (item=ID)? (condition=('==' | '>' | '<' | '>=' | '<=' | '!='))? (sign=('-' | '+'))? (state=XState);\n \n Command returns ecore::EString:\n     Number | ID | STRING;\n\ndiff --git a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java\nindex 2f59e2ed531..71cac6a96e7 100644\n--- a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java\n+++ b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java\n@@ -44,6 +44,7 @@\n import org.openhab.core.model.sitemap.sitemap.impl.ChartImpl;\n import org.openhab.core.model.sitemap.sitemap.impl.ColorArrayImpl;\n import org.openhab.core.model.sitemap.sitemap.impl.ColorpickerImpl;\n+import org.openhab.core.model.sitemap.sitemap.impl.ConditionImpl;\n import org.openhab.core.model.sitemap.sitemap.impl.DefaultImpl;\n import org.openhab.core.model.sitemap.sitemap.impl.FrameImpl;\n import org.openhab.core.model.sitemap.sitemap.impl.GroupImpl;\n@@ -378,10 +379,12 @@ private void addWidgetVisibility(EList<VisibilityRule> visibility, UIComponent c\n                     if (matcher.matches()) {\n                         VisibilityRuleImpl visibilityRule = (VisibilityRuleImpl) SitemapFactory.eINSTANCE\n                                 .createVisibilityRule();\n-                        visibilityRule.setItem(matcher.group(\"item\"));\n-                        visibilityRule.setCondition(matcher.group(\"condition\"));\n-                        visibilityRule.setSign(matcher.group(\"sign\"));\n-                        visibilityRule.setState(matcher.group(\"state\"));\n+                        ConditionImpl condition = (ConditionImpl) SitemapFactory.eINSTANCE.createCondition();\n+                        condition.setItem(matcher.group(\"item\"));\n+                        condition.setCondition(matcher.group(\"condition\"));\n+                        condition.setSign(matcher.group(\"sign\"));\n+                        condition.setState(matcher.group(\"state\"));\n+                        visibilityRule.eSet(SitemapPackage.VISIBILITY_RULE__CONDITIONS, condition);\n                         visibility.add(visibilityRule);\n                     } else {\n                         logger.warn(\"Syntax error in visibility rule '{}' for widget {}\", sourceVisibility,\n@@ -411,11 +414,12 @@ private void addColor(EList<ColorArray> color, UIComponent component, String key\n                     Matcher matcher = COLOR_PATTERN.matcher(sourceColor.toString());\n                     if (matcher.matches()) {\n                         ColorArrayImpl colorArray = (ColorArrayImpl) SitemapFactory.eINSTANCE.createColorArray();\n-                        colorArray.setItem(matcher.group(\"item\"));\n-                        colorArray.setCondition(matcher.group(\"condition\"));\n-                        colorArray.setSign(matcher.group(\"sign\"));\n-                        colorArray.setState(matcher.group(\"state\"));\n-                        colorArray.setArg(matcher.group(\"arg\"));\n+                        ConditionImpl condition = (ConditionImpl) SitemapFactory.eINSTANCE.createCondition();\n+                        condition.setItem(matcher.group(\"item\"));\n+                        condition.setCondition(matcher.group(\"condition\"));\n+                        condition.setSign(matcher.group(\"sign\"));\n+                        condition.setState(matcher.group(\"state\"));\n+                        colorArray.eSet(SitemapPackage.COLOR_ARRAY__CONDITIONS, condition);\n                         color.add(colorArray);\n                     } else {\n                         logger.warn(\"Syntax error in {} rule '{}' for widget {}\", key, sourceColor,\n\ndiff --git a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java\nindex c290fb52640..94b040104bc 100644\n--- a/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java\n+++ b/bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java\n@@ -109,6 +109,7 @@\n  * @author Erdoan Hadzhiyusein - Adapted the class to work with the new DateTimeType\n  * @author Laurent Garnier - new method getIconColor\n  * @author Mark Herwege - new method getFormatPattern(widget), clean pattern\n+ * @author Laurent Garnier - Support added for multiple AND conditions in labelcolor/valuecolor/visibility\n  */\n @NonNullByDefault\n @Component(immediate = true, configurationPid = \"org.openhab.sitemap\", //\n@@ -1149,150 +1150,118 @@ private boolean matchStateToValue(State state, String value, @Nullable String ma\n         return matched;\n     }\n \n-    private @Nullable String processColorDefinition(@Nullable State state, @Nullable List<ColorArray> colorList) {\n+    private @Nullable String processColorDefinition(Widget w, @Nullable List<ColorArray> colorList, String colorType) {\n         // Sanity check\n-        if (colorList == null) {\n+        if (colorList == null || colorList.isEmpty()) {\n             return null;\n         }\n-        if (colorList.isEmpty()) {\n-            return null;\n-        }\n-\n-        String colorString = null;\n-\n-        // Check for the \"arg\". If it doesn't exist, assume there's just an\n-        // static colour\n-        if (colorList.size() == 1 && colorList.get(0).getState() == null) {\n-            colorString = colorList.get(0).getArg();\n-        } else {\n-            // Loop through all elements looking for the definition associated\n-            // with the supplied value\n-            for (ColorArray color : colorList) {\n-                // Use a local state variable in case it gets overridden below\n-                State cmpState = state;\n-\n-                if (color.getState() == null) {\n-                    // If no state associated to the condition, we consider the condition as fulfilled.\n-                    // It allows defining a default color as last condition in particular.\n-                    colorString = color.getArg();\n-                    break;\n-                }\n \n-                // If there's an item defined here, get its state\n-                String itemName = color.getItem();\n-                if (itemName != null) {\n-                    // Try and find the item to test.\n-                    // If it's not found, return visible\n-                    Item item;\n-                    try {\n-                        item = itemRegistry.getItem(itemName);\n+        logger.debug(\"Checking {} color for widget '{}'.\", colorType, w.getLabel());\n \n-                        // Get the item state\n-                        cmpState = item.getState();\n-                    } catch (ItemNotFoundException e) {\n-                        logger.warn(\"Cannot retrieve color item {} for widget\", color.getItem());\n-                    }\n-                }\n-\n-                // Handle the sign\n-                String value;\n-                if (color.getSign() != null) {\n-                    value = color.getSign() + color.getState();\n-                } else {\n-                    value = color.getState();\n-                }\n+        String colorString = null;\n \n-                if (cmpState != null && matchStateToValue(cmpState, value, color.getCondition())) {\n-                    // We have the color for this value - break!\n-                    colorString = color.getArg();\n-                    break;\n-                }\n+        // Loop through all elements looking for the definition associated\n+        // with the supplied value\n+        for (ColorArray rule : colorList) {\n+            if (allConditionsOk(rule.getConditions(), w)) {\n+                // We have the color for this value - break!\n+                colorString = rule.getArg();\n+                break;\n             }\n         }\n \n-        // Remove quotes off the colour - if they exist\n         if (colorString == null) {\n+            logger.debug(\"No {} color found for widget '{}'.\", colorType, w.getLabel());\n             return null;\n         }\n \n+        // Remove quotes off the colour - if they exist\n         if (colorString.startsWith(\"\\\"\") && colorString.endsWith(\"\\\"\")) {\n             colorString = colorString.substring(1, colorString.length() - 1);\n         }\n+        logger.debug(\"{} color for widget '{}' is '{}'.\", colorType, w.getLabel(), colorString);\n \n         return colorString;\n     }\n \n     @Override\n     public @Nullable String getLabelColor(Widget w) {\n-        return processColorDefinition(getState(w), w.getLabelColor());\n+        return processColorDefinition(w, w.getLabelColor(), \"label\");\n     }\n \n     @Override\n     public @Nullable String getValueColor(Widget w) {\n-        return processColorDefinition(getState(w), w.getValueColor());\n+        return processColorDefinition(w, w.getValueColor(), \"value\");\n     }\n \n     @Override\n     public @Nullable String getIconColor(Widget w) {\n-        return processColorDefinition(getState(w), w.getIconColor());\n+        return processColorDefinition(w, w.getIconColor(), \"icon\");\n     }\n \n     @Override\n     public boolean getVisiblity(Widget w) {\n         // Default to visible if parameters not set\n         List<VisibilityRule> ruleList = w.getVisibility();\n-        if (ruleList == null) {\n-            return true;\n-        }\n-        if (ruleList.isEmpty()) {\n+        if (ruleList == null || ruleList.isEmpty()) {\n             return true;\n         }\n \n         logger.debug(\"Checking visiblity for widget '{}'.\", w.getLabel());\n \n-        for (VisibilityRule rule : w.getVisibility()) {\n-            String itemName = rule.getItem();\n-            if (itemName == null) {\n-                continue;\n-            }\n-            if (rule.getState() == null) {\n-                continue;\n+        for (VisibilityRule rule : ruleList) {\n+            if (allConditionsOk(rule.getConditions(), w)) {\n+                return true;\n             }\n+        }\n \n-            // Try and find the item to test.\n-            // If it's not found, return visible\n-            Item item;\n-            try {\n-                item = itemRegistry.getItem(itemName);\n-            } catch (ItemNotFoundException e) {\n-                logger.warn(\"Cannot retrieve visibility item {} for widget {}\", rule.getItem(),\n-                        w.eClass().getInstanceTypeName());\n+        logger.debug(\"Widget {} is not visible.\", w.getLabel());\n \n-                // Default to visible!\n-                return true;\n-            }\n+        return false;\n+    }\n \n-            // Get the item state\n-            State state = item.getState();\n+    private boolean allConditionsOk(@Nullable List<org.openhab.core.model.sitemap.sitemap.Condition> conditions,\n+            Widget w) {\n+        boolean allConditionsOk = true;\n+        if (conditions != null) {\n+            State defaultState = getState(w);\n \n-            // Handle the sign\n-            String value;\n-            if (rule.getSign() != null) {\n-                value = rule.getSign() + rule.getState();\n-            } else {\n-                value = rule.getState();\n-            }\n+            // Go through all AND conditions\n+            for (org.openhab.core.model.sitemap.sitemap.Condition condition : conditions) {\n+                // Use a local state variable in case it gets overridden below\n+                State state = defaultState;\n \n-            if (matchStateToValue(state, value, rule.getCondition())) {\n-                // We have the name for this value!\n-                return true;\n-            }\n-        }\n+                // If there's an item defined here, get its state\n+                String itemName = condition.getItem();\n+                if (itemName != null) {\n+                    // Try and find the item to test.\n+                    Item item;\n+                    try {\n+                        item = itemRegistry.getItem(itemName);\n \n-        logger.debug(\"Widget {} is not visible.\", w.getLabel());\n+                        // Get the item state\n+                        state = item.getState();\n+                    } catch (ItemNotFoundException e) {\n+                        logger.warn(\"Cannot retrieve item {} for widget {}\", itemName,\n+                                w.eClass().getInstanceTypeName());\n+                    }\n+                }\n \n-        // The state wasn't in the list, so we don't display it\n-        return false;\n+                // Handle the sign\n+                String value;\n+                if (condition.getSign() != null) {\n+                    value = condition.getSign() + condition.getState();\n+                } else {\n+                    value = condition.getState();\n+                }\n+\n+                if (state == null || !matchStateToValue(state, value, condition.getCondition())) {\n+                    allConditionsOk = false;\n+                    break;\n+                }\n+            }\n+        }\n+        return allConditionsOk;\n     }\n \n     enum Condition {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java b/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java\nindex b8a0b0da6ab..22e69e520af 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java\n@@ -49,6 +49,7 @@\n import org.openhab.core.library.types.PercentType;\n import org.openhab.core.model.sitemap.SitemapProvider;\n import org.openhab.core.model.sitemap.sitemap.ColorArray;\n+import org.openhab.core.model.sitemap.sitemap.Condition;\n import org.openhab.core.model.sitemap.sitemap.Sitemap;\n import org.openhab.core.model.sitemap.sitemap.VisibilityRule;\n import org.openhab.core.model.sitemap.sitemap.Widget;\n@@ -251,6 +252,30 @@ public void whenLongPollingShouldObserveItemsFromValueColorConditions() {\n                                                 // return\n     }\n \n+    @Test\n+    public void whenLongPollingShouldObserveItemsFromIconColorConditions() {\n+        ItemEvent itemEvent = mock(ItemEvent.class);\n+        when(itemEvent.getItemName()).thenReturn(iconColorItem.getName());\n+        new Thread(() -> {\n+            try {\n+                Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n+                                                      // item\n+                sitemapResource.receive(itemEvent);\n+            } catch (InterruptedException e) {\n+            }\n+        }).start();\n+\n+        // non-null is sufficient here.\n+        when(headersMock.getRequestHeader(HTTP_HEADER_X_ATMOSPHERE_TRANSPORT)).thenReturn(List.of());\n+\n+        Response response = sitemapResource.getPageData(headersMock, null, SITEMAP_MODEL_NAME, SITEMAP_NAME, null,\n+                false);\n+\n+        PageDTO pageDTO = (PageDTO) response.getEntity();\n+        assertThat(pageDTO.timeout, is(false)); // assert that the item state change did trigger the blocking method to\n+                                                // return\n+    }\n+\n     @Test\n     public void whenGetPageDataShouldReturnPageBean() throws ItemNotFoundException {\n         item.setState(new PercentType(50));\n@@ -333,28 +358,44 @@ private EList<Widget> initSitemapWidgets() {\n \n         // add visibility rules to the mock widget:\n         VisibilityRule visibilityRule = mock(VisibilityRule.class);\n-        when(visibilityRule.getItem()).thenReturn(VISIBILITY_RULE_ITEM_NAME);\n-        BasicEList<VisibilityRule> visibilityRules = new BasicEList<>(1);\n+        Condition conditon = mock(Condition.class);\n+        when(conditon.getItem()).thenReturn(VISIBILITY_RULE_ITEM_NAME);\n+        EList<Condition> conditions = new BasicEList<>();\n+        conditions.add(conditon);\n+        when(visibilityRule.getConditions()).thenReturn(conditions);\n+        EList<VisibilityRule> visibilityRules = new BasicEList<>(1);\n         visibilityRules.add(visibilityRule);\n         when(w1.getVisibility()).thenReturn(visibilityRules);\n \n         // add label color conditions to the item:\n         ColorArray labelColor = mock(ColorArray.class);\n-        when(labelColor.getItem()).thenReturn(LABEL_COLOR_ITEM_NAME);\n+        Condition conditon1 = mock(Condition.class);\n+        when(conditon1.getItem()).thenReturn(LABEL_COLOR_ITEM_NAME);\n+        EList<Condition> conditions1 = new BasicEList<>();\n+        conditions1.add(conditon1);\n+        when(labelColor.getConditions()).thenReturn(conditions1);\n         EList<ColorArray> labelColors = new BasicEList<>();\n         labelColors.add(labelColor);\n         when(w1.getLabelColor()).thenReturn(labelColors);\n \n         // add value color conditions to the item:\n         ColorArray valueColor = mock(ColorArray.class);\n-        when(valueColor.getItem()).thenReturn(VALUE_COLOR_ITEM_NAME);\n+        Condition conditon2 = mock(Condition.class);\n+        when(conditon2.getItem()).thenReturn(VALUE_COLOR_ITEM_NAME);\n+        EList<Condition> conditions2 = new BasicEList<>();\n+        conditions2.add(conditon2);\n+        when(valueColor.getConditions()).thenReturn(conditions2);\n         EList<ColorArray> valueColors = new BasicEList<>();\n         valueColors.add(valueColor);\n         when(w1.getValueColor()).thenReturn(valueColors);\n \n         // add icon color conditions to the item:\n         ColorArray iconColor = mock(ColorArray.class);\n-        when(iconColor.getItem()).thenReturn(ICON_COLOR_ITEM_NAME);\n+        Condition conditon3 = mock(Condition.class);\n+        when(conditon3.getItem()).thenReturn(ICON_COLOR_ITEM_NAME);\n+        EList<Condition> conditions3 = new BasicEList<>();\n+        conditions3.add(conditon3);\n+        when(iconColor.getConditions()).thenReturn(conditions3);\n         EList<ColorArray> iconColors = new BasicEList<>();\n         iconColors.add(iconColor);\n         when(w1.getIconColor()).thenReturn(iconColors);\n@@ -376,7 +417,7 @@ private EList<Widget> initSitemapWidgets() {\n         when(w2.getValueColor()).thenReturn(valueColors);\n         when(w2.getIconColor()).thenReturn(iconColors);\n \n-        BasicEList<Widget> widgets = new BasicEList<>(2);\n+        EList<Widget> widgets = new BasicEList<>(2);\n         widgets.add(w1);\n         widgets.add(w2);\n         return widgets;\n\ndiff --git a/bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java b/bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java\nindex cd00015cac1..f4866d272a8 100644\n--- a/bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java\n+++ b/bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java\n@@ -60,6 +60,7 @@\n import org.openhab.core.library.types.StringType;\n import org.openhab.core.model.sitemap.sitemap.ColorArray;\n import org.openhab.core.model.sitemap.sitemap.Colorpicker;\n+import org.openhab.core.model.sitemap.sitemap.Condition;\n import org.openhab.core.model.sitemap.sitemap.Group;\n import org.openhab.core.model.sitemap.sitemap.Image;\n import org.openhab.core.model.sitemap.sitemap.Mapping;\n@@ -70,6 +71,7 @@\n import org.openhab.core.model.sitemap.sitemap.Slider;\n import org.openhab.core.model.sitemap.sitemap.Switch;\n import org.openhab.core.model.sitemap.sitemap.Text;\n+import org.openhab.core.model.sitemap.sitemap.VisibilityRule;\n import org.openhab.core.model.sitemap.sitemap.Widget;\n import org.openhab.core.types.CommandDescriptionBuilder;\n import org.openhab.core.types.CommandOption;\n@@ -83,6 +85,7 @@\n \n /**\n  * @author Kai Kreuzer - Initial contribution\n+ * @author Laurent Garnier - Tests updated to consider multiple AND conditions + tests added for getVisiblity\n  */\n @ExtendWith(MockitoExtension.class)\n @MockitoSettings(strictness = Strictness.LENIENT)\n@@ -736,18 +739,27 @@ public void getLabelColorLabelWithDecimalValue() {\n \n         when(widgetMock.getLabel()).thenReturn(testLabel);\n \n-        ColorArray colorArray = mock(ColorArray.class);\n-        when(colorArray.getState()).thenReturn(\"21\");\n-        when(colorArray.getCondition()).thenReturn(\"<\");\n-        when(colorArray.getArg()).thenReturn(\"yellow\");\n-        BasicEList<ColorArray> colorArrays = new BasicEList<>();\n-        colorArrays.add(colorArray);\n-        when(widgetMock.getLabelColor()).thenReturn(colorArrays);\n+        Condition conditon = mock(Condition.class);\n+        when(conditon.getState()).thenReturn(\"21\");\n+        when(conditon.getCondition()).thenReturn(\"<\");\n+        BasicEList<Condition> conditions = new BasicEList<>();\n+        conditions.add(conditon);\n+        ColorArray rule = mock(ColorArray.class);\n+        when(rule.getConditions()).thenReturn(conditions);\n+        when(rule.getArg()).thenReturn(\"yellow\");\n+        BasicEList<ColorArray> rules = new BasicEList<>();\n+        rules.add(rule);\n+        when(widgetMock.getLabelColor()).thenReturn(rules);\n \n         when(itemMock.getState()).thenReturn(new DecimalType(10f / 3f));\n \n         String color = uiRegistry.getLabelColor(widgetMock);\n         assertEquals(\"yellow\", color);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(21f));\n+\n+        color = uiRegistry.getLabelColor(widgetMock);\n+        assertNull(color);\n     }\n \n     @Test\n@@ -756,18 +768,27 @@ public void getLabelColorLabelWithUnitValue() {\n \n         when(widgetMock.getLabel()).thenReturn(testLabel);\n \n-        ColorArray colorArray = mock(ColorArray.class);\n-        when(colorArray.getState()).thenReturn(\"20\");\n-        when(colorArray.getCondition()).thenReturn(\"==\");\n-        when(colorArray.getArg()).thenReturn(\"yellow\");\n-        BasicEList<ColorArray> colorArrays = new BasicEList<>();\n-        colorArrays.add(colorArray);\n-        when(widgetMock.getLabelColor()).thenReturn(colorArrays);\n+        Condition conditon = mock(Condition.class);\n+        when(conditon.getState()).thenReturn(\"20\");\n+        when(conditon.getCondition()).thenReturn(\"==\");\n+        BasicEList<Condition> conditions = new BasicEList<>();\n+        conditions.add(conditon);\n+        ColorArray rule = mock(ColorArray.class);\n+        when(rule.getConditions()).thenReturn(conditions);\n+        when(rule.getArg()).thenReturn(\"yellow\");\n+        BasicEList<ColorArray> rules = new BasicEList<>();\n+        rules.add(rule);\n+        when(widgetMock.getLabelColor()).thenReturn(rules);\n \n         when(itemMock.getState()).thenReturn(new QuantityType<>(\"20 Â°C\"));\n \n         String color = uiRegistry.getLabelColor(widgetMock);\n         assertEquals(\"yellow\", color);\n+\n+        when(itemMock.getState()).thenReturn(new QuantityType<>(\"20.1 Â°C\"));\n+\n+        color = uiRegistry.getLabelColor(widgetMock);\n+        assertNull(color);\n     }\n \n     @Test\n@@ -925,44 +946,108 @@ public void getLabelColorDefaultColor() {\n \n         when(widgetMock.getLabel()).thenReturn(testLabel);\n \n-        ColorArray colorArray = mock(ColorArray.class);\n-        when(colorArray.getState()).thenReturn(\"21\");\n-        when(colorArray.getCondition()).thenReturn(\"<\");\n-        when(colorArray.getArg()).thenReturn(\"yellow\");\n-        BasicEList<ColorArray> colorArrays = new BasicEList<>();\n-        colorArrays.add(colorArray);\n-        ColorArray colorArray2 = mock(ColorArray.class);\n-        when(colorArray2.getState()).thenReturn(null);\n-        when(colorArray2.getCondition()).thenReturn(null);\n-        when(colorArray2.getArg()).thenReturn(\"blue\");\n-        colorArrays.add(colorArray2);\n-        when(widgetMock.getLabelColor()).thenReturn(colorArrays);\n+        Condition conditon = mock(Condition.class);\n+        when(conditon.getState()).thenReturn(\"18\");\n+        when(conditon.getCondition()).thenReturn(\">=\");\n+        Condition conditon2 = mock(Condition.class);\n+        when(conditon2.getState()).thenReturn(\"21\");\n+        when(conditon2.getCondition()).thenReturn(\"<\");\n+        BasicEList<Condition> conditions = new BasicEList<>();\n+        conditions.add(conditon);\n+        conditions.add(conditon2);\n+        ColorArray rule = mock(ColorArray.class);\n+        when(rule.getConditions()).thenReturn(conditions);\n+        when(rule.getArg()).thenReturn(\"yellow\");\n+        BasicEList<ColorArray> rules = new BasicEList<>();\n+        rules.add(rule);\n+        Condition conditon3 = mock(Condition.class);\n+        when(conditon3.getState()).thenReturn(\"21\");\n+        when(conditon3.getCondition()).thenReturn(\">=\");\n+        Condition conditon4 = mock(Condition.class);\n+        when(conditon4.getState()).thenReturn(\"24\");\n+        when(conditon4.getCondition()).thenReturn(\"<\");\n+        BasicEList<Condition> conditions2 = new BasicEList<>();\n+        conditions2.add(conditon3);\n+        conditions2.add(conditon4);\n+        ColorArray rule2 = mock(ColorArray.class);\n+        when(rule2.getConditions()).thenReturn(conditions2);\n+        when(rule2.getArg()).thenReturn(\"red\");\n+        rules.add(rule2);\n+        BasicEList<Condition> conditions5 = new BasicEList<>();\n+        ColorArray rule3 = mock(ColorArray.class);\n+        when(rule3.getConditions()).thenReturn(conditions5);\n+        when(rule3.getArg()).thenReturn(\"blue\");\n+        rules.add(rule3);\n+        when(widgetMock.getLabelColor()).thenReturn(rules);\n \n-        when(itemMock.getState()).thenReturn(new DecimalType(21.0));\n+        when(itemMock.getState()).thenReturn(new DecimalType(20.9));\n \n         String color = uiRegistry.getLabelColor(widgetMock);\n+        assertEquals(\"yellow\", color);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(23.5));\n+\n+        color = uiRegistry.getLabelColor(widgetMock);\n+        assertEquals(\"red\", color);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(24.0));\n+\n+        color = uiRegistry.getLabelColor(widgetMock);\n+        assertEquals(\"blue\", color);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(17.5));\n+\n+        color = uiRegistry.getLabelColor(widgetMock);\n+        assertEquals(\"blue\", color);\n+\n+        conditions5 = null;\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(24.0));\n+\n+        color = uiRegistry.getLabelColor(widgetMock);\n+        assertEquals(\"blue\", color);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(17.5));\n+\n+        color = uiRegistry.getLabelColor(widgetMock);\n         assertEquals(\"blue\", color);\n     }\n \n     @Test\n     public void getValueColor() {\n-        ColorArray colorArray = mock(ColorArray.class);\n-        when(colorArray.getState()).thenReturn(\"21\");\n-        when(colorArray.getCondition()).thenReturn(\"<\");\n-        when(colorArray.getArg()).thenReturn(\"yellow\");\n-        BasicEList<ColorArray> colorArrays = new BasicEList<>();\n-        colorArrays.add(colorArray);\n-        ColorArray colorArray2 = mock(ColorArray.class);\n-        when(colorArray2.getState()).thenReturn(\"24\");\n-        when(colorArray2.getCondition()).thenReturn(\"<\");\n-        when(colorArray2.getArg()).thenReturn(\"red\");\n-        colorArrays.add(colorArray2);\n-        ColorArray colorArray3 = mock(ColorArray.class);\n-        when(colorArray3.getState()).thenReturn(null);\n-        when(colorArray3.getCondition()).thenReturn(null);\n-        when(colorArray3.getArg()).thenReturn(\"blue\");\n-        colorArrays.add(colorArray3);\n-        when(widgetMock.getValueColor()).thenReturn(colorArrays);\n+        Condition conditon = mock(Condition.class);\n+        when(conditon.getState()).thenReturn(\"18\");\n+        when(conditon.getCondition()).thenReturn(\">=\");\n+        Condition conditon2 = mock(Condition.class);\n+        when(conditon2.getState()).thenReturn(\"21\");\n+        when(conditon2.getCondition()).thenReturn(\"<\");\n+        BasicEList<Condition> conditions = new BasicEList<>();\n+        conditions.add(conditon);\n+        conditions.add(conditon2);\n+        ColorArray rule = mock(ColorArray.class);\n+        when(rule.getConditions()).thenReturn(conditions);\n+        when(rule.getArg()).thenReturn(\"yellow\");\n+        BasicEList<ColorArray> rules = new BasicEList<>();\n+        rules.add(rule);\n+        Condition conditon3 = mock(Condition.class);\n+        when(conditon3.getState()).thenReturn(\"21\");\n+        when(conditon3.getCondition()).thenReturn(\">=\");\n+        Condition conditon4 = mock(Condition.class);\n+        when(conditon4.getState()).thenReturn(\"24\");\n+        when(conditon4.getCondition()).thenReturn(\"<\");\n+        BasicEList<Condition> conditions2 = new BasicEList<>();\n+        conditions2.add(conditon3);\n+        conditions2.add(conditon4);\n+        ColorArray rule2 = mock(ColorArray.class);\n+        when(rule2.getConditions()).thenReturn(conditions2);\n+        when(rule2.getArg()).thenReturn(\"red\");\n+        rules.add(rule2);\n+        BasicEList<Condition> conditions5 = new BasicEList<>();\n+        ColorArray rule3 = mock(ColorArray.class);\n+        when(rule3.getConditions()).thenReturn(conditions5);\n+        when(rule3.getArg()).thenReturn(\"blue\");\n+        rules.add(rule3);\n+        when(widgetMock.getValueColor()).thenReturn(rules);\n \n         when(itemMock.getState()).thenReturn(new DecimalType(20.9));\n \n@@ -974,7 +1059,24 @@ public void getValueColor() {\n         color = uiRegistry.getValueColor(widgetMock);\n         assertEquals(\"red\", color);\n \n-        when(itemMock.getState()).thenReturn(new DecimalType(30.0));\n+        when(itemMock.getState()).thenReturn(new DecimalType(24.0));\n+\n+        color = uiRegistry.getValueColor(widgetMock);\n+        assertEquals(\"blue\", color);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(17.5));\n+\n+        color = uiRegistry.getValueColor(widgetMock);\n+        assertEquals(\"blue\", color);\n+\n+        conditions5 = null;\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(24.0));\n+\n+        color = uiRegistry.getValueColor(widgetMock);\n+        assertEquals(\"blue\", color);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(17.5));\n \n         color = uiRegistry.getValueColor(widgetMock);\n         assertEquals(\"blue\", color);\n@@ -982,23 +1084,39 @@ public void getValueColor() {\n \n     @Test\n     public void getIconColor() {\n-        ColorArray colorArray = mock(ColorArray.class);\n-        when(colorArray.getState()).thenReturn(\"21\");\n-        when(colorArray.getCondition()).thenReturn(\"<\");\n-        when(colorArray.getArg()).thenReturn(\"yellow\");\n-        BasicEList<ColorArray> colorArrays = new BasicEList<>();\n-        colorArrays.add(colorArray);\n-        ColorArray colorArray2 = mock(ColorArray.class);\n-        when(colorArray2.getState()).thenReturn(\"24\");\n-        when(colorArray2.getCondition()).thenReturn(\"<\");\n-        when(colorArray2.getArg()).thenReturn(\"red\");\n-        colorArrays.add(colorArray2);\n-        ColorArray colorArray3 = mock(ColorArray.class);\n-        when(colorArray3.getState()).thenReturn(null);\n-        when(colorArray3.getCondition()).thenReturn(null);\n-        when(colorArray3.getArg()).thenReturn(\"blue\");\n-        colorArrays.add(colorArray3);\n-        when(widgetMock.getIconColor()).thenReturn(colorArrays);\n+        Condition conditon = mock(Condition.class);\n+        when(conditon.getState()).thenReturn(\"18\");\n+        when(conditon.getCondition()).thenReturn(\">=\");\n+        Condition conditon2 = mock(Condition.class);\n+        when(conditon2.getState()).thenReturn(\"21\");\n+        when(conditon2.getCondition()).thenReturn(\"<\");\n+        BasicEList<Condition> conditions = new BasicEList<>();\n+        conditions.add(conditon);\n+        conditions.add(conditon2);\n+        ColorArray rule = mock(ColorArray.class);\n+        when(rule.getConditions()).thenReturn(conditions);\n+        when(rule.getArg()).thenReturn(\"yellow\");\n+        BasicEList<ColorArray> rules = new BasicEList<>();\n+        rules.add(rule);\n+        Condition conditon3 = mock(Condition.class);\n+        when(conditon3.getState()).thenReturn(\"21\");\n+        when(conditon3.getCondition()).thenReturn(\">=\");\n+        Condition conditon4 = mock(Condition.class);\n+        when(conditon4.getState()).thenReturn(\"24\");\n+        when(conditon4.getCondition()).thenReturn(\"<\");\n+        BasicEList<Condition> conditions2 = new BasicEList<>();\n+        conditions2.add(conditon3);\n+        conditions2.add(conditon4);\n+        ColorArray rule2 = mock(ColorArray.class);\n+        when(rule2.getConditions()).thenReturn(conditions2);\n+        when(rule2.getArg()).thenReturn(\"red\");\n+        rules.add(rule2);\n+        BasicEList<Condition> conditions5 = new BasicEList<>();\n+        ColorArray rule3 = mock(ColorArray.class);\n+        when(rule3.getConditions()).thenReturn(conditions5);\n+        when(rule3.getArg()).thenReturn(\"blue\");\n+        rules.add(rule3);\n+        when(widgetMock.getIconColor()).thenReturn(rules);\n \n         when(itemMock.getState()).thenReturn(new DecimalType(20.9));\n \n@@ -1010,9 +1128,60 @@ public void getIconColor() {\n         color = uiRegistry.getIconColor(widgetMock);\n         assertEquals(\"red\", color);\n \n-        when(itemMock.getState()).thenReturn(new DecimalType(30.0));\n+        when(itemMock.getState()).thenReturn(new DecimalType(24.0));\n+\n+        color = uiRegistry.getIconColor(widgetMock);\n+        assertEquals(\"blue\", color);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(17.5));\n \n         color = uiRegistry.getIconColor(widgetMock);\n         assertEquals(\"blue\", color);\n+\n+        conditions5 = null;\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(24.0));\n+\n+        color = uiRegistry.getIconColor(widgetMock);\n+        assertEquals(\"blue\", color);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(17.5));\n+\n+        color = uiRegistry.getIconColor(widgetMock);\n+        assertEquals(\"blue\", color);\n+    }\n+\n+    @Test\n+    public void getVisibility() {\n+        Condition conditon = mock(Condition.class);\n+        when(conditon.getState()).thenReturn(\"21\");\n+        when(conditon.getCondition()).thenReturn(\">=\");\n+        Condition conditon2 = mock(Condition.class);\n+        when(conditon2.getState()).thenReturn(\"24\");\n+        when(conditon2.getCondition()).thenReturn(\"<\");\n+        BasicEList<Condition> conditions = new BasicEList<>();\n+        conditions.add(conditon);\n+        conditions.add(conditon2);\n+        VisibilityRule rule = mock(VisibilityRule.class);\n+        when(rule.getConditions()).thenReturn(conditions);\n+        BasicEList<VisibilityRule> rules = new BasicEList<>();\n+        rules.add(rule);\n+        when(widgetMock.getVisibility()).thenReturn(rules);\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(20.9));\n+\n+        assertFalse(uiRegistry.getVisiblity(widgetMock));\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(21.0));\n+\n+        assertTrue(uiRegistry.getVisiblity(widgetMock));\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(23.5));\n+\n+        assertTrue(uiRegistry.getVisiblity(widgetMock));\n+\n+        when(itemMock.getState()).thenReturn(new DecimalType(24.0));\n+\n+        assertFalse(uiRegistry.getVisiblity(widgetMock));\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3817",
    "pr_id": 3817,
    "issue_id": 3321,
    "repo": "openhab/openhab-core",
    "problem_statement": "Upgrade Gson to 2.10\nNow that we have Java 17 support, it would be nice to upgrade Gson to the latest version (currently 2.10.1). Version 2.10 supports Java records: https://github.com/google/gson/releases/tag/gson-parent-2.10. Records are particularly useful when used in combination with Gson for serializing/deserializing from/to DTO's.\r\n\r\nI'm working on a new binding (openhab/openhab-addons#14222) where I have initially taken advantage of this:\r\n\r\n```java\r\n@NonNullByDefault\r\npublic record ElspotpriceRecord(@SerializedName(\"HourUTC\") Instant hour,\r\n        @SerializedName(\"SpotPriceDKK\") double spotPrice) {\r\n}\r\n```\r\n\r\nHowever, including this Gson dependency within the binding adds more than 250 kB, which is probably not acceptable:\r\n```xml\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>com.google.code.gson</groupId>\r\n      <artifactId>gson</artifactId>\r\n      <version>2.10.1</version>\r\n    </dependency>\r\n  </dependencies>\r\n```\r\n\r\nI tried upgrading from 2.9.1 to 2.10.1 in core, but ended up with a dependency problem:\r\n\r\n`[ERROR] Failed to execute goal on project org.openhab.core.bom.compile-model: Could not resolve dependencies for project org.openhab.core.bom:org.openhab.core.bom.compile-model:pom:4.0.0-SNAPSHOT: Failed to collect dependencies at org.eclipse.xtext:org.eclipse.xtext.xbase.ide:jar:2.29.0 -> org.eclipse.xtext:org.eclipse.xtext.ide:jar:2.29.0 -> org.eclipse.lsp4j:org.eclipse.lsp4j:jar:0.19.0 -> org.eclipse.lsp4j:org.eclipse.lsp4j.generator:jar:0.19.0 -> org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:jar:0.19.0 -> com.google.code.gson:gson:jar:[2.9.1,2.10): No versions available for com.google.code.gson:gson:jar:[2.9.1,2.10) within specified range -> [Help 1]`\r\n\r\nI don't know how to fix this, but I'm wondering if it would be possible and acceptable to have both 2.9.1 (because of this dependency) and 2.10.1 in core? At least 2.10.1 would only be included once and all bindings could take advantage of it.",
    "issue_word_count": 328,
    "test_files_count": 24,
    "non_test_files_count": 6,
    "pr_changed_files": [
      "bom/compile-model/pom.xml",
      "bom/compile/pom.xml",
      "bom/runtime/pom.xml",
      "features/karaf/openhab-core/src/main/feature/feature.xml",
      "features/karaf/openhab-tp/src/main/feature/feature.xml",
      "itests/org.openhab.core.addon.tests/itest.bndrun",
      "itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun",
      "itests/org.openhab.core.automation.integration.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.core.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.script.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.timer.tests/itest.bndrun",
      "itests/org.openhab.core.automation.tests/itest.bndrun",
      "itests/org.openhab.core.config.core.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun",
      "itests/org.openhab.core.config.dispatch.tests/itest.bndrun",
      "itests/org.openhab.core.ephemeris.tests/itest.bndrun",
      "itests/org.openhab.core.io.net.tests/itest.bndrun",
      "itests/org.openhab.core.io.rest.core.tests/itest.bndrun",
      "itests/org.openhab.core.model.item.tests/itest.bndrun",
      "itests/org.openhab.core.model.rule.tests/itest.bndrun",
      "itests/org.openhab.core.model.script.tests/itest.bndrun",
      "itests/org.openhab.core.model.thing.tests/itest.bndrun",
      "itests/org.openhab.core.storage.json.tests/itest.bndrun",
      "itests/org.openhab.core.tests/itest.bndrun",
      "itests/org.openhab.core.thing.tests/itest.bndrun",
      "itests/org.openhab.core.voice.tests/itest.bndrun",
      "pom.xml"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.addon.tests/itest.bndrun",
      "itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun",
      "itests/org.openhab.core.automation.integration.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.core.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.script.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.timer.tests/itest.bndrun",
      "itests/org.openhab.core.automation.tests/itest.bndrun",
      "itests/org.openhab.core.config.core.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun",
      "itests/org.openhab.core.config.dispatch.tests/itest.bndrun",
      "itests/org.openhab.core.ephemeris.tests/itest.bndrun",
      "itests/org.openhab.core.io.net.tests/itest.bndrun",
      "itests/org.openhab.core.io.rest.core.tests/itest.bndrun",
      "itests/org.openhab.core.model.item.tests/itest.bndrun",
      "itests/org.openhab.core.model.rule.tests/itest.bndrun",
      "itests/org.openhab.core.model.script.tests/itest.bndrun",
      "itests/org.openhab.core.model.thing.tests/itest.bndrun",
      "itests/org.openhab.core.storage.json.tests/itest.bndrun",
      "itests/org.openhab.core.tests/itest.bndrun",
      "itests/org.openhab.core.thing.tests/itest.bndrun",
      "itests/org.openhab.core.voice.tests/itest.bndrun"
    ],
    "base_commit": "d4a433a4ce8b6fe6eeca53a2a945e98b339f1093",
    "head_commit": "0486d4bc8d29ba95fea93c45659a906d20fca1a5",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3817",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3817",
    "dockerfile": "",
    "pr_merged_at": "2023-10-01T20:04:28.000Z",
    "patch": "diff --git a/bom/compile-model/pom.xml b/bom/compile-model/pom.xml\nindex 30b86ed6cd6..1e978a5f069 100644\n--- a/bom/compile-model/pom.xml\n+++ b/bom/compile-model/pom.xml\n@@ -83,12 +83,6 @@\n     <dependency>\n       <groupId>org.eclipse.emf</groupId>\n       <artifactId>org.eclipse.emf.mwe2.launch</artifactId>\n-      <exclusions>\n-        <exclusion>\n-          <groupId>com.google.inject</groupId>\n-          <artifactId>guice</artifactId>\n-        </exclusion>\n-      </exclusions>\n     </dependency>\n \n     <dependency>\n@@ -144,14 +138,6 @@\n       <scope>compile</scope>\n     </dependency>\n \n-    <!-- Guice -->\n-    <dependency>\n-      <groupId>org.eclipse.orbit.bundles</groupId>\n-      <artifactId>com.google.inject</artifactId>\n-      <version>5.0.1.v20210324-2015</version>\n-      <scope>compile</scope>\n-    </dependency>\n-\n     <!-- TEST -->\n     <dependency>\n       <groupId>org.eclipse.xtext</groupId>\n@@ -163,10 +149,6 @@\n           <groupId>org.eclipse.platform</groupId>\n           <artifactId>org.eclipse.osgi</artifactId>\n         </exclusion>\n-        <exclusion>\n-          <groupId>com.google.inject</groupId>\n-          <artifactId>guice</artifactId>\n-        </exclusion>\n       </exclusions>\n     </dependency>\n \n\ndiff --git a/bom/compile/pom.xml b/bom/compile/pom.xml\nindex f849b2c12a3..bdf45233ffd 100644\n--- a/bom/compile/pom.xml\n+++ b/bom/compile/pom.xml\n@@ -117,10 +117,11 @@\n     </dependency>\n \n     <!-- Gson -->\n+    <!-- The Orbit bundle is used because LSP4J imports com.google.gson.internal -->\n     <dependency>\n-      <groupId>com.google.code.gson</groupId>\n-      <artifactId>gson</artifactId>\n-      <version>2.9.1</version>\n+      <groupId>org.eclipse.orbit.bundles</groupId>\n+      <artifactId>com.google.gson</artifactId>\n+      <version>2.10.1.v20230109-0753</version>\n       <scope>compile</scope>\n     </dependency>\n \n\ndiff --git a/bom/runtime/pom.xml b/bom/runtime/pom.xml\nindex b905ef530e4..622207f6db8 100644\n--- a/bom/runtime/pom.xml\n+++ b/bom/runtime/pom.xml\n@@ -443,9 +443,9 @@\n \n     <!-- Gson -->\n     <dependency>\n-      <groupId>com.google.code.gson</groupId>\n-      <artifactId>gson</artifactId>\n-      <version>2.9.1</version>\n+      <groupId>org.eclipse.orbit.bundles</groupId>\n+      <artifactId>com.google.gson</artifactId>\n+      <version>2.10.1.v20230109-0753</version>\n       <scope>compile</scope>\n     </dependency>\n \n@@ -789,7 +789,7 @@\n     <dependency>\n       <groupId>com.google.guava</groupId>\n       <artifactId>guava</artifactId>\n-      <version>30.1-jre</version>\n+      <version>32.1.2-jre</version>\n       <scope>compile</scope>\n     </dependency>\n \n@@ -849,12 +849,6 @@\n       <artifactId>org.eclipse.xtext</artifactId>\n       <version>${xtext.version}</version>\n       <scope>compile</scope>\n-      <exclusions>\n-        <exclusion>\n-          <groupId>com.google.inject</groupId>\n-          <artifactId>guice</artifactId>\n-        </exclusion>\n-      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.eclipse.xtext</groupId>\n@@ -885,12 +879,6 @@\n       <artifactId>org.eclipse.xtext.util</artifactId>\n       <version>${xtext.version}</version>\n       <scope>compile</scope>\n-      <exclusions>\n-        <exclusion>\n-          <groupId>com.google.inject</groupId>\n-          <artifactId>guice</artifactId>\n-        </exclusion>\n-      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.eclipse.xtext</groupId>\n\ndiff --git a/features/karaf/openhab-core/src/main/feature/feature.xml b/features/karaf/openhab-core/src/main/feature/feature.xml\nindex 9cd839b2cbf..5cdcf866a1e 100644\n--- a/features/karaf/openhab-core/src/main/feature/feature.xml\n+++ b/features/karaf/openhab-core/src/main/feature/feature.xml\n@@ -28,7 +28,7 @@\n \n \t\t<feature dependency=\"true\">openhab.tp-gson</feature>\n \n-\t\t<requirement>openhab.tp;filter:=\"(&amp;(feature=xtext)(version&gt;=2.29.0)(!(version&gt;=2.30.0)))\"</requirement>\n+\t\t<requirement>openhab.tp;filter:=\"(&amp;(feature=xtext)(version&gt;=2.32.0)(!(version&gt;=2.33.0)))\"</requirement>\n \t\t<feature dependency=\"true\">openhab.tp-xtext</feature>\n \n \t\t<requirement>openhab.tp;filter:=\"(feature=jax-rs-whiteboard)\"</requirement>\n@@ -352,10 +352,10 @@\n \n \t<feature name=\"openhab-core-model-lsp\" version=\"${project.version}\">\n \n-\t\t<requirement>openhab.tp;filter:=\"(&amp;(feature=xtext-ide)(version&gt;=2.29.0)(!(version&gt;=2.30.0)))\"</requirement>\n+\t\t<requirement>openhab.tp;filter:=\"(&amp;(feature=xtext-ide)(version&gt;=2.32.0)(!(version&gt;=2.33.0)))\"</requirement>\n \t\t<feature dependency=\"true\">openhab.tp-xtext-ide</feature>\n \n-\t\t<requirement>openhab.tp;filter:=\"(&amp;(feature=lsp4j)(version&gt;=0.19.0)(!(version&gt;=0.20.0)))\"</requirement>\n+\t\t<requirement>openhab.tp;filter:=\"(&amp;(feature=lsp4j)(version&gt;=0.21.0)(!(version&gt;=0.22.0)))\"</requirement>\n \t\t<feature dependency=\"true\">openhab.tp-lsp4j</feature>\n \n \t\t<feature>openhab-core-model-item-ide</feature>\n\ndiff --git a/features/karaf/openhab-tp/src/main/feature/feature.xml b/features/karaf/openhab-tp/src/main/feature/feature.xml\nindex 6b0d43da969..cdf424fc1e1 100644\n--- a/features/karaf/openhab-tp/src/main/feature/feature.xml\n+++ b/features/karaf/openhab-tp/src/main/feature/feature.xml\n@@ -24,10 +24,9 @@\n \t\t<feature>pax-web-jetty-extras</feature>\n \t\t<!-- Apache Commons -->\n \t\t<bundle dependency=\"true\">mvn:org.apache.commons/commons-lang3/3.12.0</bundle>\n-\n \t\t<!-- Measurement -->\n \t\t<bundle dependency=\"true\">mvn:jakarta.annotation/jakarta.annotation-api/2.0.0</bundle>\n-\t\t<bundle dependency=\"true\">mvn:jakarta.inject/jakarta.inject-api/2.0.0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:jakarta.inject/jakarta.inject-api/1.0.5</bundle>\n \t\t<bundle dependency=\"true\">mvn:javax.measure/unit-api/2.2</bundle>\n \t\t<!-- The si.uom:si-units manifest has no Export-Package entry. As workaround this OSGi-ify bundle is used. -->\n \t\t<bundle dependency=\"true\">mvn:org.openhab.osgiify/si.uom.si-units/2.1</bundle>\n@@ -55,8 +54,8 @@\n \t</feature>\n \n \t<feature name=\"openhab.tp-gson\" description=\"Gson\" version=\"${project.version}\">\n-\t\t<capability>openhab.tp;feature=gson;version=2.9.1</capability>\n-\t\t<bundle>mvn:com.google.code.gson/gson/2.9.1</bundle>\n+\t\t<capability>openhab.tp;feature=gson;version=2.10.1</capability>\n+\t\t<bundle>mvn:org.eclipse.orbit.bundles/com.google.gson/2.10.1.v20230109-0753</bundle>\n \t</feature>\n \n \t<feature name=\"openhab.tp-hivemqclient\" description=\"MQTT Client\" version=\"${project.version}\">\n@@ -198,9 +197,9 @@\n \t</feature>\n \n \t<feature name=\"openhab.tp-lsp4j\" description=\"Eclipse LSP4J\" version=\"${project.version}\">\n-\t\t<capability>openhab.tp;feature=lsp4j;version=0.19.0</capability>\n-\t\t<bundle>mvn:org.eclipse.lsp4j/org.eclipse.lsp4j/0.19.0</bundle>\n-\t\t<bundle>mvn:org.eclipse.lsp4j/org.eclipse.lsp4j.jsonrpc/0.19.0</bundle>\n+\t\t<capability>openhab.tp;feature=lsp4j;version=0.21.0</capability>\n+\t\t<bundle>mvn:org.eclipse.lsp4j/org.eclipse.lsp4j/0.21.0</bundle>\n+\t\t<bundle>mvn:org.eclipse.lsp4j/org.eclipse.lsp4j.jsonrpc/0.21.0</bundle>\n \n \t\t<feature dependency=\"true\">openhab.tp-gson</feature>\n \t\t<feature dependency=\"true\">openhab.tp-xtext</feature>\n@@ -220,50 +219,49 @@\n \t</feature>\n \n \t<feature name=\"openhab.tp-xtext\" description=\"Xtext - Language Engineering Made Easy\" version=\"${project.version}\">\n-\t\t<capability>openhab.tp;feature=xtext;version=2.29.0</capability>\n+\t\t<capability>openhab.tp;feature=xtext;version=${xtext.version}</capability>\n \n-\t\t<bundle>mvn:org.eclipse.xtext/org.eclipse.xtext/2.29.0</bundle>\n+\t\t<bundle>mvn:org.eclipse.xtext/org.eclipse.xtext/${xtext.version}</bundle>\n \n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.emf/org.eclipse.emf.common/2.17.0</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.emf/org.eclipse.emf.ecore/2.20.0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.emf/org.eclipse.emf.common/2.24.0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.emf/org.eclipse.emf.ecore/2.26.0</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.emf/org.eclipse.emf.ecore.change/2.14.0</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.emf/org.eclipse.emf.ecore.xmi/2.16.0</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.common.types/2.29.0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.common.types/${xtext.version}</bundle>\n \n \t\t<bundle dependency=\"true\">mvn:javax.annotation/javax.annotation-api/1.2</bundle>\n \n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.xbase/2.29.0</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.xbase.lib/2.29.0</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.smap/2.29.0</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.util/2.29.0</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtend/org.eclipse.xtend.lib/2.29.0</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtend/org.eclipse.xtend.lib.macro/2.29.0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.xbase/${xtext.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.xbase.lib/${xtext.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.smap/${xtext.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.util/${xtext.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtend/org.eclipse.xtend.lib/${xtext.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtend/org.eclipse.xtend.lib.macro/${xtext.version}</bundle>\n \n \t\t<bundle dependency=\"true\">mvn:com.google.guava/failureaccess/1.0.1</bundle>\n-\t\t<bundle dependency=\"true\">mvn:com.google.guava/guava/30.1-jre</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.javax-inject/1_2</bundle>\n+\t\t<bundle dependency=\"true\">mvn:com.google.guava/guava/32.1.2-jre</bundle>\n+\t\t<bundle dependency=\"true\">mvn:com.google.inject/guice/7.0.0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:jakarta.inject/jakarta.inject-api/2.0.1</bundle>\n \n \t\t<bundle dependency=\"true\">mvn:org.eclipse.orbit.bundles/org.aopalliance/1.0.0.v201105210816</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.orbit.bundles/com.google.inject/5.0.1.v20210324-2015</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.orbit.bundles/io.github.classgraph/4.8.149.v20220915-0556</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.orbit.bundles/org.antlr.runtime/3.2.0.v201101311130</bundle>\n \n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.platform/org.eclipse.equinox.common/3.13.0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.platform/org.eclipse.equinox.common/3.18.0</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.platform/org.eclipse.equinox.registry/3.9.0</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.platform/org.eclipse.equinox.supplement/1.9.0</bundle>\n \n-\t\t<!-- Add ASM package -->\n-\t\t<!-- org.eclipse.xtext.common.types is using Require-Bundle -->\n-\t\t<bundle dependency=\"true\" start-level=\"20\">mvn:org.ow2.asm/asm/9.4</bundle>\n+\t\t<!-- Used for feature verification only because this is already provided by Karaf -->\n+\t\t<bundle dependency=\"true\" start=\"false\">mvn:org.eclipse.platform/org.eclipse.osgi/3.18.0</bundle>\n \t</feature>\n \n \t<feature name=\"openhab.tp-xtext-ide\" description=\"Xtext - IDE Support\" version=\"${project.version}\">\n-\t\t<capability>openhab.tp;feature=xtext-ide;version=2.29.0</capability>\n+\t\t<capability>openhab.tp;feature=xtext-ide;version=${xtext.version}</capability>\n \t\t<feature dependency=\"true\">openhab.tp-xtext</feature>\n \n \t\t<!-- Support for the Language Server Protocol -->\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.ide/2.29.0</bundle>\n-\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.xbase.ide/2.29.0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.ide/${xtext.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.xtext/org.eclipse.xtext.xbase.ide/${xtext.version}</bundle>\n \t</feature>\n \n \t<feature name=\"openhab.tp-swagger-jaxrs\" description=\"JAX-RS Whiteboard Swagger Support\" version=\"${project.version}\">\n\ndiff --git a/pom.xml b/pom.xml\nindex 1e91f7fc1bf..70dfe85ed5f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -76,7 +76,7 @@\n     <karaf.tooling.version>4.4.4</karaf.tooling.version>\n     <sat.version>0.15.0</sat.version>\n     <slf4j.version>2.0.6</slf4j.version>\n-    <xtext.version>2.29.0</xtext.version>\n+    <xtext.version>2.32.0</xtext.version>\n     <spotless.version>2.38.0</spotless.version>\n     <!-- Eclipse Java formatter version 4.26+ does not check test files -->\n     <spotless.eclipse.version>4.25</spotless.eclipse.version>\n",
    "test_patch": "diff --git a/itests/org.openhab.core.addon.tests/itest.bndrun b/itests/org.openhab.core.addon.tests/itest.bndrun\nindex 94f22d89a20..e7248d32b4e 100644\n--- a/itests/org.openhab.core.addon.tests/itest.bndrun\n+++ b/itests/org.openhab.core.addon.tests/itest.bndrun\n@@ -25,7 +25,6 @@ Fragment-Host: org.openhab.core.addon\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -60,11 +59,12 @@ Fragment-Host: org.openhab.core.addon\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun b/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun\nindex cbe8e4c66f7..29b0a7a78f9 100644\n--- a/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun\n+++ b/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun\n@@ -21,7 +21,6 @@ Fragment-Host: org.openhab.core.auth.oauth2client\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -68,11 +67,12 @@ Fragment-Host: org.openhab.core.auth.oauth2client\n \torg.eclipse.jetty.websocket.api;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.websocket.client;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.websocket.common;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/itest.bndrun b/itests/org.openhab.core.automation.integration.tests/itest.bndrun\nindex 24c2da2b17c..6f972acc8b4 100644\n--- a/itests/org.openhab.core.automation.integration.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.integration.tests/itest.bndrun\n@@ -23,7 +23,6 @@ Fragment-Host: org.openhab.core.automation\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -66,11 +65,12 @@ Fragment-Host: org.openhab.core.automation\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/itest.bndrun b/itests/org.openhab.core.automation.module.core.tests/itest.bndrun\nindex 4e1b52ffb00..68f670a8f2a 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.module.core.tests/itest.bndrun\n@@ -23,7 +23,6 @@ Fragment-Host: org.openhab.core.automation\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -66,11 +65,12 @@ Fragment-Host: org.openhab.core.automation\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.automation.module.script.tests/itest.bndrun b/itests/org.openhab.core.automation.module.script.tests/itest.bndrun\nindex 1aeddd4a618..288244ad76f 100644\n--- a/itests/org.openhab.core.automation.module.script.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.module.script.tests/itest.bndrun\n@@ -23,7 +23,6 @@ Fragment-Host: org.openhab.core.automation.module.script\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -63,11 +62,12 @@ Fragment-Host: org.openhab.core.automation.module.script\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun b/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun\nindex e11bb2f194a..f25114937e5 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun\n@@ -23,7 +23,6 @@ Fragment-Host: org.openhab.core.automation\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -66,11 +65,12 @@ Fragment-Host: org.openhab.core.automation\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.automation.tests/itest.bndrun b/itests/org.openhab.core.automation.tests/itest.bndrun\nindex 9659fd5022d..30bb63297dc 100644\n--- a/itests/org.openhab.core.automation.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.tests/itest.bndrun\n@@ -23,7 +23,6 @@ Fragment-Host: org.openhab.core.automation\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -66,11 +65,12 @@ Fragment-Host: org.openhab.core.automation\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.config.core.tests/itest.bndrun b/itests/org.openhab.core.config.core.tests/itest.bndrun\nindex bd13b2510fa..003140113c3 100644\n--- a/itests/org.openhab.core.config.core.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.core.tests/itest.bndrun\n@@ -22,7 +22,6 @@ Fragment-Host: org.openhab.core.config.core\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -61,11 +60,12 @@ Fragment-Host: org.openhab.core.config.core\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun b/itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun\nindex f98535a2a3e..fae608590c9 100644\n--- a/itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun\n@@ -22,7 +22,6 @@ Fragment-Host: org.openhab.core.config.discovery.mdns\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tjavax.jmdns;version='[3.5.8,3.5.9)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -66,11 +65,12 @@ Fragment-Host: org.openhab.core.config.discovery.mdns\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.config.discovery.tests/itest.bndrun b/itests/org.openhab.core.config.discovery.tests/itest.bndrun\nindex bcfb5f7a2d7..9e36b90a437 100644\n--- a/itests/org.openhab.core.config.discovery.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.discovery.tests/itest.bndrun\n@@ -22,7 +22,6 @@ Fragment-Host: org.openhab.core.config.discovery\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -65,11 +64,12 @@ Fragment-Host: org.openhab.core.config.discovery\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun b/itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun\nindex ac8c6634c34..db3061a1a0f 100644\n--- a/itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun\n@@ -21,7 +21,6 @@ Fragment-Host: org.openhab.core.config.discovery.usbserial.linuxsysfs\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -66,11 +65,12 @@ Fragment-Host: org.openhab.core.config.discovery.usbserial.linuxsysfs\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun b/itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun\nindex 37e444c1541..1a6aff53440 100644\n--- a/itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun\n@@ -31,7 +31,6 @@ Provide-Capability: \\\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -74,11 +73,12 @@ Provide-Capability: \\\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.config.dispatch.tests/itest.bndrun b/itests/org.openhab.core.config.dispatch.tests/itest.bndrun\nindex 722d6db159d..acc4be34925 100644\n--- a/itests/org.openhab.core.config.dispatch.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.dispatch.tests/itest.bndrun\n@@ -21,7 +21,6 @@ Fragment-Host: org.openhab.core.config.dispatch\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -54,11 +53,12 @@ Fragment-Host: org.openhab.core.config.dispatch\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.ephemeris.tests/itest.bndrun b/itests/org.openhab.core.ephemeris.tests/itest.bndrun\nindex a24f20f88e2..125d983e43e 100644\n--- a/itests/org.openhab.core.ephemeris.tests/itest.bndrun\n+++ b/itests/org.openhab.core.ephemeris.tests/itest.bndrun\n@@ -28,7 +28,6 @@ feature.openhab-config: \\\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -63,11 +62,12 @@ feature.openhab-config: \\\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.io.net.tests/itest.bndrun b/itests/org.openhab.core.io.net.tests/itest.bndrun\nindex 42789b0c4cc..64d6032cf3c 100644\n--- a/itests/org.openhab.core.io.net.tests/itest.bndrun\n+++ b/itests/org.openhab.core.io.net.tests/itest.bndrun\n@@ -11,7 +11,6 @@ Fragment-Host: org.openhab.core.io.net\n \n -runbundles: \\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \tjakarta.inject.jakarta.inject-api;version='[2.0.0,2.0.1)',\\\n \tjakarta.xml.bind-api;version='[2.3.3,2.3.4)',\\\n \tjunit-jupiter-api;version='[5.9.2,5.9.3)',\\\n@@ -31,7 +30,6 @@ Fragment-Host: org.openhab.core.io.net\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tsi-units;version='[2.1.0,2.1.1)',\\\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.apache.aries.spifly.dynamic.bundle;version='[1.3.6,1.3.7)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n@@ -73,4 +71,6 @@ Fragment-Host: org.openhab.core.io.net\n \torg.eclipse.jetty.websocket.servlet;version='[9.4.52,9.4.53)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.io.rest.core.tests/itest.bndrun b/itests/org.openhab.core.io.rest.core.tests/itest.bndrun\nindex cdbdda5ede2..31276e27e40 100644\n--- a/itests/org.openhab.core.io.rest.core.tests/itest.bndrun\n+++ b/itests/org.openhab.core.io.rest.core.tests/itest.bndrun\n@@ -29,8 +29,6 @@ Fragment-Host: org.openhab.core.io.rest.core\n \torg.apache.aries.jax.rs.whiteboard;version='[2.0.0,2.0.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -104,4 +102,6 @@ Fragment-Host: org.openhab.core.io.rest.core\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.22,8.0.23)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.22,8.0.23)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.model.item.tests/itest.bndrun b/itests/org.openhab.core.model.item.tests/itest.bndrun\nindex 6ea19f1c247..91ced2f5a11 100644\n--- a/itests/org.openhab.core.model.item.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.item.tests/itest.bndrun\n@@ -22,28 +22,14 @@ Fragment-Host: org.openhab.core.model.item\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \tjollyday;version='[0.5.10,0.5.11)',\\\n \torg.threeten.extra;version='[1.5.0,1.5.1)',\\\n-\torg.eclipse.emf.common;version='[2.17.0,2.17.1)',\\\n-\torg.eclipse.emf.ecore;version='[2.20.0,2.20.1)',\\\n \torg.eclipse.emf.ecore.xmi;version='[2.16.0,2.16.1)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n-\tcom.google.guava;version='[30.1.0,30.1.1)',\\\n \tjakarta.inject.jakarta.inject-api;version='[2.0.0,2.0.1)',\\\n \tsi-units;version='[2.1.0,2.1.1)',\\\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n-\tcom.google.inject;version='[5.0.1,5.0.2)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \tio.github.classgraph;version='[4.8.149,4.8.150)',\\\n-\torg.eclipse.equinox.common;version='[3.16.200,3.16.201)',\\\n-\torg.eclipse.xtend.lib;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtend.lib.macro;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.common.types;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.util;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.xbase;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.xbase.lib;version='[2.29.0,2.29.1)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n \txstream;version='[1.4.20,1.4.21)',\\\n@@ -119,4 +105,18 @@ Fragment-Host: org.openhab.core.model.item\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.22,8.0.23)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.22,8.0.23)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\tcom.google.guava;version='[32.1.2,32.1.3)',\\\n+\tcom.google.inject;version='[7.0.0,7.0.1)',\\\n+\torg.eclipse.emf.common;version='[2.24.0,2.24.1)',\\\n+\torg.eclipse.emf.ecore;version='[2.26.0,2.26.1)',\\\n+\torg.eclipse.equinox.common;version='[3.17.100,3.17.101)',\\\n+\torg.eclipse.xtend.lib;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtend.lib.macro;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.common.types;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.util;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.xbase;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.xbase.lib;version='[2.32.0,2.32.1)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.model.rule.tests/itest.bndrun b/itests/org.openhab.core.model.rule.tests/itest.bndrun\nindex f467334c6e6..a3397dbac54 100644\n--- a/itests/org.openhab.core.model.rule.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.rule.tests/itest.bndrun\n@@ -26,28 +26,14 @@ Fragment-Host: org.openhab.core.model.rule.runtime\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \tjollyday;version='[0.5.10,0.5.11)',\\\n \torg.threeten.extra;version='[1.5.0,1.5.1)',\\\n-\torg.eclipse.emf.common;version='[2.17.0,2.17.1)',\\\n-\torg.eclipse.emf.ecore;version='[2.20.0,2.20.1)',\\\n \torg.eclipse.emf.ecore.xmi;version='[2.16.0,2.16.1)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n-\tcom.google.guava;version='[30.1.0,30.1.1)',\\\n \tjakarta.inject.jakarta.inject-api;version='[2.0.0,2.0.1)',\\\n \tsi-units;version='[2.1.0,2.1.1)',\\\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n-\tcom.google.inject;version='[5.0.1,5.0.2)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \tio.github.classgraph;version='[4.8.149,4.8.150)',\\\n-\torg.eclipse.equinox.common;version='[3.16.200,3.16.201)',\\\n-\torg.eclipse.xtend.lib;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtend.lib.macro;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.common.types;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.util;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.xbase;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.xbase.lib;version='[2.29.0,2.29.1)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -123,4 +109,18 @@ Fragment-Host: org.openhab.core.model.rule.runtime\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.22,8.0.23)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.22,8.0.23)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\tcom.google.guava;version='[32.1.2,32.1.3)',\\\n+\tcom.google.inject;version='[7.0.0,7.0.1)',\\\n+\torg.eclipse.emf.common;version='[2.24.0,2.24.1)',\\\n+\torg.eclipse.emf.ecore;version='[2.26.0,2.26.1)',\\\n+\torg.eclipse.equinox.common;version='[3.17.100,3.17.101)',\\\n+\torg.eclipse.xtend.lib;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtend.lib.macro;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.common.types;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.util;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.xbase;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.xbase.lib;version='[2.32.0,2.32.1)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.model.script.tests/itest.bndrun b/itests/org.openhab.core.model.script.tests/itest.bndrun\nindex a7ac5da32d1..7d4908606e6 100644\n--- a/itests/org.openhab.core.model.script.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.script.tests/itest.bndrun\n@@ -25,28 +25,14 @@ Fragment-Host: org.openhab.core.model.script\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \tjollyday;version='[0.5.10,0.5.11)',\\\n \torg.threeten.extra;version='[1.5.0,1.5.1)',\\\n-\torg.eclipse.emf.common;version='[2.17.0,2.17.1)',\\\n-\torg.eclipse.emf.ecore;version='[2.20.0,2.20.1)',\\\n \torg.eclipse.emf.ecore.xmi;version='[2.16.0,2.16.1)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n-\tcom.google.guava;version='[30.1.0,30.1.1)',\\\n \tjakarta.inject.jakarta.inject-api;version='[2.0.0,2.0.1)',\\\n \tsi-units;version='[2.1.0,2.1.1)',\\\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n-\tcom.google.inject;version='[5.0.1,5.0.2)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \tio.github.classgraph;version='[4.8.149,4.8.150)',\\\n-\torg.eclipse.equinox.common;version='[3.16.200,3.16.201)',\\\n-\torg.eclipse.xtend.lib;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtend.lib.macro;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.common.types;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.util;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.xbase;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.xbase.lib;version='[2.29.0,2.29.1)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -126,4 +112,18 @@ Fragment-Host: org.openhab.core.model.script\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.22,8.0.23)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.22,8.0.23)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\tcom.google.guava;version='[32.1.2,32.1.3)',\\\n+\tcom.google.inject;version='[7.0.0,7.0.1)',\\\n+\torg.eclipse.emf.common;version='[2.24.0,2.24.1)',\\\n+\torg.eclipse.emf.ecore;version='[2.26.0,2.26.1)',\\\n+\torg.eclipse.equinox.common;version='[3.17.100,3.17.101)',\\\n+\torg.eclipse.xtend.lib;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtend.lib.macro;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.common.types;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.util;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.xbase;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.xbase.lib;version='[2.32.0,2.32.1)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.model.thing.tests/itest.bndrun b/itests/org.openhab.core.model.thing.tests/itest.bndrun\nindex 9cd68607916..aed2bfa9a75 100644\n--- a/itests/org.openhab.core.model.thing.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.thing.tests/itest.bndrun\n@@ -23,28 +23,14 @@ Fragment-Host: org.openhab.core.model.thing\n \torg.apache.servicemix.specs.activation-api-1.2.1;version='[1.2.1,1.2.2)',\\\n \tjollyday;version='[0.5.10,0.5.11)',\\\n \torg.threeten.extra;version='[1.5.0,1.5.1)',\\\n-\torg.eclipse.emf.common;version='[2.17.0,2.17.1)',\\\n-\torg.eclipse.emf.ecore;version='[2.20.0,2.20.1)',\\\n \torg.eclipse.emf.ecore.xmi;version='[2.16.0,2.16.1)',\\\n \torg.glassfish.hk2.osgi-resource-locator;version='[1.0.3,1.0.4)',\\\n-\tcom.google.guava;version='[30.1.0,30.1.1)',\\\n \tjakarta.inject.jakarta.inject-api;version='[2.0.0,2.0.1)',\\\n \tsi-units;version='[2.1.0,2.1.1)',\\\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n-\tcom.google.inject;version='[5.0.1,5.0.2)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \tio.github.classgraph;version='[4.8.149,4.8.150)',\\\n-\torg.eclipse.equinox.common;version='[3.16.200,3.16.201)',\\\n-\torg.eclipse.xtend.lib;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtend.lib.macro;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.common.types;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.util;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.xbase;version='[2.29.0,2.29.1)',\\\n-\torg.eclipse.xtext.xbase.lib;version='[2.29.0,2.29.1)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n \txstream;version='[1.4.20,1.4.21)',\\\n@@ -128,4 +114,18 @@ Fragment-Host: org.openhab.core.model.thing\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.22,8.0.23)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.22,8.0.23)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\tcom.google.guava;version='[32.1.2,32.1.3)',\\\n+\tcom.google.inject;version='[7.0.0,7.0.1)',\\\n+\torg.eclipse.emf.common;version='[2.24.0,2.24.1)',\\\n+\torg.eclipse.emf.ecore;version='[2.26.0,2.26.1)',\\\n+\torg.eclipse.equinox.common;version='[3.17.100,3.17.101)',\\\n+\torg.eclipse.xtend.lib;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtend.lib.macro;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.common.types;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.util;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.xbase;version='[2.32.0,2.32.1)',\\\n+\torg.eclipse.xtext.xbase.lib;version='[2.32.0,2.32.1)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.storage.json.tests/itest.bndrun b/itests/org.openhab.core.storage.json.tests/itest.bndrun\nindex a5938e603a3..a2541cc2315 100644\n--- a/itests/org.openhab.core.storage.json.tests/itest.bndrun\n+++ b/itests/org.openhab.core.storage.json.tests/itest.bndrun\n@@ -21,7 +21,6 @@ Fragment-Host: org.openhab.core.storage.json\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -59,11 +58,12 @@ Fragment-Host: org.openhab.core.storage.json\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.tests/itest.bndrun b/itests/org.openhab.core.tests/itest.bndrun\nindex ba95bf1416f..81c31308b21 100644\n--- a/itests/org.openhab.core.tests/itest.bndrun\n+++ b/itests/org.openhab.core.tests/itest.bndrun\n@@ -21,7 +21,6 @@ Fragment-Host: org.openhab.core\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -58,11 +57,12 @@ Fragment-Host: org.openhab.core\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.thing.tests/itest.bndrun b/itests/org.openhab.core.thing.tests/itest.bndrun\nindex 048b7521043..bf6c408365e 100644\n--- a/itests/org.openhab.core.thing.tests/itest.bndrun\n+++ b/itests/org.openhab.core.thing.tests/itest.bndrun\n@@ -25,7 +25,6 @@ Fragment-Host: org.openhab.core.thing\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -67,11 +66,12 @@ Fragment-Host: org.openhab.core.thing\n \torg.eclipse.jetty.servlet;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.util;version='[9.4.0,9.4.1)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.3,2.2.4)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n\ndiff --git a/itests/org.openhab.core.voice.tests/itest.bndrun b/itests/org.openhab.core.voice.tests/itest.bndrun\nindex 0a3408e5c74..9fe918aa333 100644\n--- a/itests/org.openhab.core.voice.tests/itest.bndrun\n+++ b/itests/org.openhab.core.voice.tests/itest.bndrun\n@@ -25,7 +25,6 @@ Fragment-Host: org.openhab.core.voice\n \tsi.uom.si-quantity;version='[2.1.0,2.1.1)',\\\n \torg.osgi.util.function;version='[1.2.0,1.2.1)',\\\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n-\tcom.google.gson;version='[2.9.1,2.9.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n \torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n@@ -67,7 +66,6 @@ Fragment-Host: org.openhab.core.voice\n \torg.eclipse.jetty.util;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.util.ajax;version='[9.4.52,9.4.53)',\\\n \torg.eclipse.jetty.xml;version='[9.4.52,9.4.53)',\\\n-\torg.objectweb.asm;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.commons;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree;version='[9.4.0,9.4.1)',\\\n \torg.objectweb.asm.tree.analysis;version='[9.4.0,9.4.1)',\\\n@@ -79,4 +77,6 @@ Fragment-Host: org.openhab.core.voice\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.22,8.0.23)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.22,8.0.23)',\\\n \torg.osgi.service.event;version='[1.4.1,1.4.2)',\\\n-\torg.osgi.util.promise;version='[1.3.0,1.3.1)'\n+\torg.osgi.util.promise;version='[1.3.0,1.3.1)',\\\n+\tcom.google.gson;version='[2.10.1,2.10.2)',\\\n+\torg.objectweb.asm;version='[9.5.0,9.5.1)'\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3756",
    "pr_id": 3756,
    "issue_id": 3755,
    "repo": "openhab/openhab-core",
    "problem_statement": "LinkedTransferQueue in OpenJDK 17 sometimes causes high CPU usage\nAs reported in the [community](https://community.openhab.org/t/consistent-100-cpu-use-of-safecall-queue-thread/143792?u=wborn) the `LinkedTransferQueue` in OpenJDK 17 is buggy and sometimes causes high CPU usage.\r\n\r\nSee also [JDK-8301341: LinkedTransferQueue does not respect timeout for poll()](https://bugs.openjdk.org/browse/JDK-8301341).\r\n\r\nThere is a fix for JDK 22 with https://github.com/openjdk/jdk/pull/14317 but it hasn't been backported yet.\r\n\r\nIt is probably better to create a workaround for this because the first possibility for a backport to be released with 17.0.9 is on October 17 2023 (see [JDK 17u timelines](https://wiki.openjdk.org/display/JDKUpdates/JDK+17u)). After a JDK 17u release it may take another month before it reaches users via distro package updates or the Zulu/Temurin builds.\r\n\r\nA [workaround](https://community.openhab.org/t/consistent-100-cpu-use-of-safecall-queue-thread/143792/44?u=wborn) that seems to work so far is using the Java 11 `LinkedTransferQueue` implementation with openhab-core and jupnp.",
    "issue_word_count": 184,
    "test_files_count": 24,
    "non_test_files_count": 5,
    "pr_changed_files": [
      "bom/compile/pom.xml",
      "bom/runtime/pom.xml",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/common/QueueingThreadPoolExecutor.java",
      "features/karaf/openhab-core/src/main/feature/feature.xml",
      "features/karaf/openhab-tp/src/main/feature/feature.xml",
      "itests/org.openhab.core.addon.tests/itest.bndrun",
      "itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun",
      "itests/org.openhab.core.automation.integration.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.core.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.script.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.timer.tests/itest.bndrun",
      "itests/org.openhab.core.automation.tests/itest.bndrun",
      "itests/org.openhab.core.config.core.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun",
      "itests/org.openhab.core.config.dispatch.tests/itest.bndrun",
      "itests/org.openhab.core.ephemeris.tests/itest.bndrun",
      "itests/org.openhab.core.io.net.tests/itest.bndrun",
      "itests/org.openhab.core.io.rest.core.tests/itest.bndrun",
      "itests/org.openhab.core.model.item.tests/itest.bndrun",
      "itests/org.openhab.core.model.rule.tests/itest.bndrun",
      "itests/org.openhab.core.model.script.tests/itest.bndrun",
      "itests/org.openhab.core.model.thing.tests/itest.bndrun",
      "itests/org.openhab.core.storage.json.tests/itest.bndrun",
      "itests/org.openhab.core.tests/itest.bndrun",
      "itests/org.openhab.core.thing.tests/itest.bndrun",
      "itests/org.openhab.core.voice.tests/itest.bndrun"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.addon.tests/itest.bndrun",
      "itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun",
      "itests/org.openhab.core.automation.integration.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.core.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.script.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.timer.tests/itest.bndrun",
      "itests/org.openhab.core.automation.tests/itest.bndrun",
      "itests/org.openhab.core.config.core.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun",
      "itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun",
      "itests/org.openhab.core.config.dispatch.tests/itest.bndrun",
      "itests/org.openhab.core.ephemeris.tests/itest.bndrun",
      "itests/org.openhab.core.io.net.tests/itest.bndrun",
      "itests/org.openhab.core.io.rest.core.tests/itest.bndrun",
      "itests/org.openhab.core.model.item.tests/itest.bndrun",
      "itests/org.openhab.core.model.rule.tests/itest.bndrun",
      "itests/org.openhab.core.model.script.tests/itest.bndrun",
      "itests/org.openhab.core.model.thing.tests/itest.bndrun",
      "itests/org.openhab.core.storage.json.tests/itest.bndrun",
      "itests/org.openhab.core.tests/itest.bndrun",
      "itests/org.openhab.core.thing.tests/itest.bndrun",
      "itests/org.openhab.core.voice.tests/itest.bndrun"
    ],
    "base_commit": "c12067a63bf053ff1d71b632ef0ab36c9c1a9faf",
    "head_commit": "ad876e72b5dd62d0fed9826d48547f1ab2106409",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3756",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3756",
    "dockerfile": "",
    "pr_merged_at": "2023-08-14T08:37:20.000Z",
    "patch": "diff --git a/bom/compile/pom.xml b/bom/compile/pom.xml\nindex a5940ac6ecf..54f8b5f5af0 100644\n--- a/bom/compile/pom.xml\n+++ b/bom/compile/pom.xml\n@@ -202,7 +202,8 @@\n     <dependency>\n       <groupId>org.jupnp</groupId>\n       <artifactId>org.jupnp</artifactId>\n-      <version>2.7.1</version>\n+      <!-- Uses the Java 11 LinkedTransferQueue as workaround for JDK-8301341 -->\n+      <version>2.7.1.OH1</version>\n       <scope>compile</scope>\n     </dependency>\n \n@@ -436,6 +437,14 @@\n       <version>5.12.1</version>\n       <scope>compile</scope>\n     </dependency>\n+\n+    <!-- Provides the Java 11 LinkedTransferQueue used in workarounds for JDK-8301341 -->\n+    <dependency>\n+      <groupId>org.openhab</groupId>\n+      <artifactId>base-fixes</artifactId>\n+      <version>1.0.0</version>\n+      <scope>compile</scope>\n+    </dependency>\n   </dependencies>\n \n </project>\n\ndiff --git a/bom/runtime/pom.xml b/bom/runtime/pom.xml\nindex c883fb19883..a17459cd21a 100644\n--- a/bom/runtime/pom.xml\n+++ b/bom/runtime/pom.xml\n@@ -469,7 +469,8 @@\n     <dependency>\n       <groupId>org.jupnp</groupId>\n       <artifactId>org.jupnp</artifactId>\n-      <version>2.7.1</version>\n+      <!-- Uses the Java 11 LinkedTransferQueue as workaround for JDK-8301341 -->\n+      <version>2.7.1.OH1</version>\n       <scope>compile</scope>\n     </dependency>\n \n@@ -1090,6 +1091,14 @@\n       <version>5.12.1</version>\n       <scope>compile</scope>\n     </dependency>\n+\n+    <!-- Provides the Java 11 LinkedTransferQueue used in workarounds for JDK-8301341 -->\n+    <dependency>\n+      <groupId>org.openhab</groupId>\n+      <artifactId>base-fixes</artifactId>\n+      <version>1.0.0</version>\n+      <scope>compile</scope>\n+    </dependency>\n   </dependencies>\n \n </project>\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/common/QueueingThreadPoolExecutor.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/common/QueueingThreadPoolExecutor.java\nindex bc71ab2068a..1da5f7dcdf3 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/common/QueueingThreadPoolExecutor.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/common/QueueingThreadPoolExecutor.java\n@@ -13,7 +13,6 @@\n package org.openhab.core.common;\n \n import java.util.concurrent.BlockingQueue;\n-import java.util.concurrent.LinkedTransferQueue;\n import java.util.concurrent.RejectedExecutionHandler;\n import java.util.concurrent.SynchronousQueue;\n import java.util.concurrent.ThreadFactory;\n@@ -24,6 +23,7 @@\n import java.util.concurrent.locks.ReentrantReadWriteLock;\n import java.util.function.Consumer;\n \n+import org.openhab.basefixes.util.concurrent.LinkedTransferQueue;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n\ndiff --git a/features/karaf/openhab-core/src/main/feature/feature.xml b/features/karaf/openhab-core/src/main/feature/feature.xml\nindex 615a415ab7b..c64f864734c 100644\n--- a/features/karaf/openhab-core/src/main/feature/feature.xml\n+++ b/features/karaf/openhab-core/src/main/feature/feature.xml\n@@ -40,6 +40,7 @@\n \t\t<requirement>openhab.tp;filter:=\"(feature=jna)\"</requirement>\n \t\t<feature dependency=\"true\">openhab.tp-jna</feature>\n \n+\t\t<bundle>mvn:org.openhab/base-fixes/1.0.0</bundle>\n \t\t<bundle>mvn:org.openhab.core.bundles/org.openhab.core.automation/${project.version}</bundle>\n \t\t<bundle>mvn:org.openhab.core.bundles/org.openhab.core.config.core/${project.version}</bundle>\n \t\t<bundle>mvn:org.openhab.core.bundles/org.openhab.core.config.discovery/${project.version}</bundle>\n\ndiff --git a/features/karaf/openhab-tp/src/main/feature/feature.xml b/features/karaf/openhab-tp/src/main/feature/feature.xml\nindex ddbea330283..4f9460ad05f 100644\n--- a/features/karaf/openhab-tp/src/main/feature/feature.xml\n+++ b/features/karaf/openhab-tp/src/main/feature/feature.xml\n@@ -212,7 +212,8 @@\n \t\t<feature dependency=\"true\">http</feature>\n \t\t<feature dependency=\"true\">scr</feature>\n \t\t<feature dependency=\"true\">openhab.tp-httpclient</feature>\n-\t\t<bundle>mvn:org.jupnp/org.jupnp/2.7.1</bundle>\n+\t\t<bundle>mvn:org.openhab/base-fixes/1.0.0</bundle>\n+\t\t<bundle>mvn:org.jupnp/org.jupnp/2.7.1.OH1</bundle>\n \t</feature>\n \n \t<feature name=\"openhab.tp-lsp4j\" description=\"Eclipse LSP4J\" version=\"${project.version}\">\n",
    "test_patch": "diff --git a/itests/org.openhab.core.addon.tests/itest.bndrun b/itests/org.openhab.core.addon.tests/itest.bndrun\nindex 6bed7a950eb..6b48ac8a27c 100644\n--- a/itests/org.openhab.core.addon.tests/itest.bndrun\n+++ b/itests/org.openhab.core.addon.tests/itest.bndrun\n@@ -60,4 +60,5 @@ Fragment-Host: org.openhab.core.addon\n \torg.openhab.core.addon;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.addon.tests;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.config.core;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.test;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)'\n\ndiff --git a/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun b/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun\nindex 4a4ce243c5d..aa66d13dd16 100644\n--- a/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun\n+++ b/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun\n@@ -68,4 +68,6 @@ Fragment-Host: org.openhab.core.auth.oauth2client\n \torg.openhab.core.auth.oauth2client.tests;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.io.console;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.io.net;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.test;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/itest.bndrun b/itests/org.openhab.core.automation.integration.tests/itest.bndrun\nindex 7e0167eb827..144dab3b0cb 100644\n--- a/itests/org.openhab.core.automation.integration.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.integration.tests/itest.bndrun\n@@ -66,4 +66,6 @@ Fragment-Host: org.openhab.core.automation\n \torg.openhab.core.io.console;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/itest.bndrun b/itests/org.openhab.core.automation.module.core.tests/itest.bndrun\nindex cf1fa0f01da..249f29b4359 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.module.core.tests/itest.bndrun\n@@ -66,4 +66,6 @@ Fragment-Host: org.openhab.core.automation\n \torg.openhab.core.io.console;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.automation.module.script.tests/itest.bndrun b/itests/org.openhab.core.automation.module.script.tests/itest.bndrun\nindex a37ae6570a9..af8a495d68a 100644\n--- a/itests/org.openhab.core.automation.module.script.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.module.script.tests/itest.bndrun\n@@ -63,4 +63,6 @@ Fragment-Host: org.openhab.core.automation.module.script\n \torg.openhab.core.io.console;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun b/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun\nindex 002c12fc7be..6dd0913a1e6 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun\n@@ -66,4 +66,6 @@ Fragment-Host: org.openhab.core.automation\n \torg.openhab.core.io.console;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.automation.tests/itest.bndrun b/itests/org.openhab.core.automation.tests/itest.bndrun\nindex dd9c25b98a1..ecd0ce801fe 100644\n--- a/itests/org.openhab.core.automation.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.tests/itest.bndrun\n@@ -66,4 +66,6 @@ Fragment-Host: org.openhab.core.automation\n \torg.openhab.core.io.console;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.config.core.tests/itest.bndrun b/itests/org.openhab.core.config.core.tests/itest.bndrun\nindex 6b546af613e..53b88e4bfc3 100644\n--- a/itests/org.openhab.core.config.core.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.core.tests/itest.bndrun\n@@ -61,4 +61,6 @@ Fragment-Host: org.openhab.core.config.core\n \torg.openhab.core;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.config.core;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.config.core.tests;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.test;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun b/itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun\nindex 9c56f25b3c3..660e7c8a32d 100644\n--- a/itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.discovery.mdns.tests/itest.bndrun\n@@ -66,4 +66,6 @@ Fragment-Host: org.openhab.core.config.discovery.mdns\n \torg.openhab.core.io.transport.mdns;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.config.discovery.tests/itest.bndrun b/itests/org.openhab.core.config.discovery.tests/itest.bndrun\nindex 2c9765d125e..f1b8c437517 100644\n--- a/itests/org.openhab.core.config.discovery.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.discovery.tests/itest.bndrun\n@@ -65,4 +65,6 @@ Fragment-Host: org.openhab.core.config.discovery\n \torg.openhab.core.io.console;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun b/itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun\nindex 272f51848c9..8ef16286b5f 100644\n--- a/itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/itest.bndrun\n@@ -66,4 +66,6 @@ Fragment-Host: org.openhab.core.config.discovery.usbserial.linuxsysfs\n \torg.openhab.core.io.console;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun b/itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun\nindex a0f6bff136f..fa053964cba 100644\n--- a/itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.discovery.usbserial.tests/itest.bndrun\n@@ -74,4 +74,6 @@ Provide-Capability: \\\n \torg.openhab.core.io.console;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.config.dispatch.tests/itest.bndrun b/itests/org.openhab.core.config.dispatch.tests/itest.bndrun\nindex 041c09e5e18..4d720adb4c4 100644\n--- a/itests/org.openhab.core.config.dispatch.tests/itest.bndrun\n+++ b/itests/org.openhab.core.config.dispatch.tests/itest.bndrun\n@@ -54,4 +54,6 @@ Fragment-Host: org.openhab.core.config.dispatch\n \torg.openhab.core;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.config.dispatch;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.config.dispatch.tests;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.test;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.ephemeris.tests/itest.bndrun b/itests/org.openhab.core.ephemeris.tests/itest.bndrun\nindex 6eccdf29ad2..6a02c504517 100644\n--- a/itests/org.openhab.core.ephemeris.tests/itest.bndrun\n+++ b/itests/org.openhab.core.ephemeris.tests/itest.bndrun\n@@ -63,4 +63,6 @@ feature.openhab-config: \\\n \torg.openhab.core.config.core;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.ephemeris;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.ephemeris.tests;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.test;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.io.net.tests/itest.bndrun b/itests/org.openhab.core.io.net.tests/itest.bndrun\nindex d091b905e59..0eaf7dd727e 100644\n--- a/itests/org.openhab.core.io.net.tests/itest.bndrun\n+++ b/itests/org.openhab.core.io.net.tests/itest.bndrun\n@@ -72,4 +72,6 @@ Fragment-Host: org.openhab.core.io.net\n \torg.openhab.core;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.io.net;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.io.net.tests;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.test;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.io.rest.core.tests/itest.bndrun b/itests/org.openhab.core.io.rest.core.tests/itest.bndrun\nindex 8d7c0e47cad..ae97d588564 100644\n--- a/itests/org.openhab.core.io.rest.core.tests/itest.bndrun\n+++ b/itests/org.openhab.core.io.rest.core.tests/itest.bndrun\n@@ -106,4 +106,6 @@ Fragment-Host: org.openhab.core.io.rest.core\n \torg.openhab.core.semantics;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.model.item.tests/itest.bndrun b/itests/org.openhab.core.model.item.tests/itest.bndrun\nindex e1bf65fd265..7178a6b927a 100644\n--- a/itests/org.openhab.core.model.item.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.item.tests/itest.bndrun\n@@ -104,7 +104,6 @@ Fragment-Host: org.openhab.core.model.item\n \torg.openhab.core.model.item.tests;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.persistence;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.rule;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.model.rule.runtime;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.script;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.script.runtime;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.sitemap;version='[4.1.0,4.1.1)',\\\n@@ -114,4 +113,7 @@ Fragment-Host: org.openhab.core.model.item\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.voice;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.voice;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.openhab.core.model.thing.runtime;version='[4.1.0,4.1.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.model.rule.tests/itest.bndrun b/itests/org.openhab.core.model.rule.tests/itest.bndrun\nindex cf58e39a8ab..b668c453207 100644\n--- a/itests/org.openhab.core.model.rule.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.rule.tests/itest.bndrun\n@@ -117,4 +117,7 @@ Fragment-Host: org.openhab.core.model.rule.runtime\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.voice;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.voice;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.openhab.core.model.thing.runtime;version='[4.1.0,4.1.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.model.script.tests/itest.bndrun b/itests/org.openhab.core.model.script.tests/itest.bndrun\nindex a76292b3714..b278764476d 100644\n--- a/itests/org.openhab.core.model.script.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.script.tests/itest.bndrun\n@@ -110,7 +110,6 @@ Fragment-Host: org.openhab.core.model.script\n \torg.openhab.core.model.item;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.persistence;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.rule;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.model.rule.runtime;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.script;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.script.runtime;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.script.tests;version='[4.1.0,4.1.1)',\\\n@@ -121,4 +120,6 @@ Fragment-Host: org.openhab.core.model.script\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.voice;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.voice;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.openhab.core.model.thing.runtime;version='[4.1.0,4.1.1)'\n\ndiff --git a/itests/org.openhab.core.model.thing.tests/itest.bndrun b/itests/org.openhab.core.model.thing.tests/itest.bndrun\nindex 6fc4089479e..8de4af86738 100644\n--- a/itests/org.openhab.core.model.thing.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.thing.tests/itest.bndrun\n@@ -110,7 +110,6 @@ Fragment-Host: org.openhab.core.model.thing\n \torg.openhab.core.model.item.runtime;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.persistence;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.rule;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.model.rule.runtime;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.script;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.script.runtime;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.model.sitemap;version='[4.1.0,4.1.1)',\\\n@@ -123,4 +122,6 @@ Fragment-Host: org.openhab.core.model.thing\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.voice;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.voice;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.storage.json.tests/itest.bndrun b/itests/org.openhab.core.storage.json.tests/itest.bndrun\nindex ecafe773e10..4e75aaf5f13 100644\n--- a/itests/org.openhab.core.storage.json.tests/itest.bndrun\n+++ b/itests/org.openhab.core.storage.json.tests/itest.bndrun\n@@ -59,4 +59,6 @@ Fragment-Host: org.openhab.core.storage.json\n \torg.openhab.core.storage.json.tests;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.tests/itest.bndrun b/itests/org.openhab.core.tests/itest.bndrun\nindex 45bafe3586c..c39489581df 100644\n--- a/itests/org.openhab.core.tests/itest.bndrun\n+++ b/itests/org.openhab.core.tests/itest.bndrun\n@@ -58,4 +58,6 @@ Fragment-Host: org.openhab.core\n \torg.objenesis;version='[3.3.0,3.3.1)',\\\n \torg.openhab.core;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.tests;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.tests;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.thing.tests/itest.bndrun b/itests/org.openhab.core.thing.tests/itest.bndrun\nindex 85765748f4d..407c7de4c2a 100644\n--- a/itests/org.openhab.core.thing.tests/itest.bndrun\n+++ b/itests/org.openhab.core.thing.tests/itest.bndrun\n@@ -67,4 +67,5 @@ Fragment-Host: org.openhab.core.thing\n \torg.openhab.core.test;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.thing.tests;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.transform;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)'\n\ndiff --git a/itests/org.openhab.core.voice.tests/itest.bndrun b/itests/org.openhab.core.voice.tests/itest.bndrun\nindex 334784caa5c..e50ed771a88 100644\n--- a/itests/org.openhab.core.voice.tests/itest.bndrun\n+++ b/itests/org.openhab.core.voice.tests/itest.bndrun\n@@ -72,4 +72,5 @@ Fragment-Host: org.openhab.core.voice\n \torg.openhab.core.thing;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.transform;version='[4.1.0,4.1.1)',\\\n \torg.openhab.core.voice;version='[4.1.0,4.1.1)',\\\n-\torg.openhab.core.voice.tests;version='[4.1.0,4.1.1)'\n+\torg.openhab.core.voice.tests;version='[4.1.0,4.1.1)',\\\n+\torg.openhab.base-fixes;version='[1.0.0,1.0.1)'\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3747",
    "pr_id": 3747,
    "issue_id": 3718,
    "repo": "openhab/openhab-core",
    "problem_statement": "Java 11.0.20 breaks OpenHAB 3.4.4 (Improved ZIP64 Extra Field Validation)\n<!-- Provide a general summary of the issue in the *Title* above -->\r\nAfter upgrade of zulu11 Java from 11.0.19 to 11.0.20 starting OpenHAB 3.4.4 failed starting with messages like\r\n```\r\n2023-07-21 14:55:10.438 [ERROR] [Events.Framework                    ] - FrameworkEvent ERROR\r\njava.util.zip.ZipException: Exception in opening zip file: /var/lib/openhab/cache/org.eclipse.osgi/18/0/bundleFile\r\n[...]\r\nCaused by: java.util.zip.ZipException: Invalid CEN header (invalid zip64 extra data field size)\r\n\r\n```\r\n\r\nThis seems to be triggered by the following change in Java 11.0.20 (same with 17.0.8):\r\nhttps://www.oracle.com/java/technologies/javase/11all-relnotes.html \r\n\r\n> core-libs/java.util.jar\r\n> [â](https://www.oracle.com/java/technologies/javase/11all-relnotes.html#JDK-8302483) Improved ZIP64 Extra Field Validation (JDK-8302483 (not public))\r\n> java.util.zip.ZipFile has been updated to provide additional validation of ZIP64 extra fields when opening a ZIP file. This validation may be disabled by setting the system property jdk.util.zip.disableZip64ExtraFieldValidation to true.\r\n\r\n<!-- Important: Please contact the openHAB community forum for questions or -->\r\nThis topic is already discussed in the community forum: https://community.openhab.org/t/openhab-not-working-with-zulu11-0-20/147910\r\n<!-- for configuration and usage guidance: https://community.openhab.org -->\r\n\r\n<!-- Feel free to delete any comment lines in the template (starting with \"<!--\") -->\r\n\r\n## Expected Behavior\r\n<!-- If you're describing a bug, tell us what should happen -->\r\n<!-- If you're suggesting a change/improvement, tell us how it should work -->\r\nOpenHAB should work with recent Java version.\r\n\r\n## Current Behavior\r\nOpenHAB 3.4.4 fails starting with suggested zulu11 in most recent 11.0.20 version.\r\n<!-- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!-- Include related log information (preferably debug level) and related configs -->\r\n<!-- Use a file attachment for log and config information longer than a few lines -->\r\n<!-- Enclose multi-line log/code snippets with ``` on new lines for proper formatting -->\r\n<!-- If suggesting a change/improvement, explain the difference from current behavior -->\r\n<!-- For improvements, discuss at community.openhab.org first and include link to topic -->\r\n\r\n## Possible Solution\r\n<!-- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!-- or ideas how to implement the addition or change -->\r\nAs a workaround it helps adding\r\n```\r\nEXTRA_JAVA_OPTS=\"-Djdk.util.zip.disableZip64ExtraFieldValidation=true\"\r\n```\r\nto /etc/default/openhab (for a Debian system, this may be different on other systems).\r\n\r\nIt may be better to either change the code to support additional ZIP64 extra fields or at least do some Java voodoo to automatically set the above option.\r\n\r\n## Steps to Reproduce (for Bugs)\r\n<!-- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!-- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Start with a working system with OpenHAB 3.4.4 and ZULU11 11.0.19\r\n2. Upgrade ZULU11 to 11.0.20\r\n3. OpenHAB does not work any more.\r\n\r\n## Your Environment\r\n<!-- Include as many relevant details about the environment you experienced the bug in -->\r\n* Version used: OpenHAB 3.4.4-2 (Debian Package), zulu11 11.0.20-1 (Debian Package), both installed via apt repos.\r\n* Debian 11 (bullseye) on amd64 architecture",
    "issue_word_count": 539,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "itests/itest-include.bndrun",
      "pom.xml"
    ],
    "pr_changed_test_files": [
      "itests/itest-include.bndrun"
    ],
    "base_commit": "b3cc326217129465b625a9e0abfc0eb56e3cac8c",
    "head_commit": "d3e51161a036ba4241b9e8058fc71375788dc3b5",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3747",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3747",
    "dockerfile": "",
    "pr_merged_at": "2023-08-11T12:10:00.000Z",
    "patch": "diff --git a/pom.xml b/pom.xml\nindex 1b40e048c38..d92eb97a4e2 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -72,7 +72,7 @@\n     <bnd.version>6.4.0</bnd.version>\n     <commons.net.version>3.7.2</commons.net.version>\n     <eea.version>2.3.0</eea.version>\n-    <karaf.compile.version>4.4.0</karaf.compile.version>\n+    <karaf.compile.version>4.4.3</karaf.compile.version>\n     <karaf.tooling.version>4.4.3</karaf.tooling.version>\n     <sat.version>0.15.0</sat.version>\n     <slf4j.version>1.7.32</slf4j.version>\n",
    "test_patch": "diff --git a/itests/itest-include.bndrun b/itests/itest-include.bndrun\nindex 443bb32c621..f66b3987571 100644\n--- a/itests/itest-include.bndrun\n+++ b/itests/itest-include.bndrun\n@@ -19,7 +19,9 @@ Test-Cases: ${classes;CONCRETE;PUBLIC;NAMED;*Test}\n \n # An unused random HTTP port is used during tests to prevent resource conflicts\n # This property is set by the build-helper-maven-plugin in the itests pom.xml\n--runvm: -Dorg.osgi.service.http.port=${org.osgi.service.http.port}\n+-runvm: \\\n+\t-Djdk.util.zip.disableZip64ExtraFieldValidation=true,\\\n+\t-Dorg.osgi.service.http.port=${org.osgi.service.http.port}\n \n # The integration test itself does not export anything.\n Export-Package:\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3725",
    "pr_id": 3725,
    "issue_id": 3723,
    "repo": "openhab/openhab-core",
    "problem_statement": "New warning \"No pre-parsed script found for xxx\"\nWith snapshot 3556 (equivalent to OH4 RC1), I encounter for the first time ever these warning logs \"No pre-parsed script found for rule\":\r\n```\r\n11:03:37.535 [INFO ] [del.core.internal.ModelRepositoryImpl] - Loading model 'maison3.rules'\r\n11:04:16.776 [WARN ] [ntime.internal.engine.DSLScriptEngine] - No pre-parsed script found for maison3-28.\r\n11:04:34.208 [INFO ] [org.openhab.core.model.script.Rule   ] - DÃ©marrage dÃ©but\r\n11:04:34.237 [INFO ] [org.openhab.core.model.script.Rule   ] - DÃ©marrage fin\r\n11:04:34.269 [INFO ] [re.automation.internal.RuleEngineImpl] - Rule engine started.\r\n\r\n...\r\n\r\n11:05:50.825 [WARN ] [ntime.internal.engine.DSLScriptEngine] - No pre-parsed script found for maison3-28.\r\n```\r\n\r\nmaison3-28 is my rule with trigger \"System started\", the one logging \"DÃ©marrage dÃ©but\" and \"DÃ©marrage fin\".\r\n\r\nWhat is surprising is that it occurs a second time during the startup process.",
    "issue_word_count": 149,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.rule.runtime/src/org/openhab/core/model/rule/runtime/internal/DSLRuleProvider.java",
      "itests/org.openhab.core.model.rule.tests/src/main/java/org/openhab/core/model/rule/runtime/DSLRuleProviderTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.model.rule.tests/src/main/java/org/openhab/core/model/rule/runtime/DSLRuleProviderTest.java"
    ],
    "base_commit": "5449c476e0da98b9f9a4ea738fed32983c7826f9",
    "head_commit": "68cd181b684f1abe2508b506c76b8e22fe3573dc",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3725",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3725",
    "dockerfile": "",
    "pr_merged_at": "2023-07-23T08:21:37.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.model.rule.runtime/src/org/openhab/core/model/rule/runtime/internal/DSLRuleProvider.java b/bundles/org.openhab.core.model.rule.runtime/src/org/openhab/core/model/rule/runtime/internal/DSLRuleProvider.java\nindex c96a0ca5282..3e7c493ab4b 100644\n--- a/bundles/org.openhab.core.model.rule.runtime/src/org/openhab/core/model/rule/runtime/internal/DSLRuleProvider.java\n+++ b/bundles/org.openhab.core.model.rule.runtime/src/org/openhab/core/model/rule/runtime/internal/DSLRuleProvider.java\n@@ -135,14 +135,17 @@ public void modelChanged(String modelFileName, EventType type) {\n         String ruleModelType = modelFileName.substring(modelFileName.lastIndexOf(\".\") + 1);\n         if (\"rules\".equalsIgnoreCase(ruleModelType)) {\n             String ruleModelName = modelFileName.substring(0, modelFileName.lastIndexOf(\".\"));\n+            List<ModelRulePair> modelRules = new ArrayList<>();\n             switch (type) {\n                 case ADDED:\n                     EObject model = modelRepository.getModel(modelFileName);\n                     if (model instanceof RuleModel ruleModel) {\n                         int index = 1;\n                         for (org.openhab.core.model.rule.rules.Rule rule : ruleModel.getRules()) {\n-                            addRule(toRule(ruleModelName, rule, index));\n+                            Rule newRule = toRule(ruleModelName, rule, index);\n+                            rules.put(newRule.getUID(), newRule);\n                             xExpressions.put(ruleModelName + \"-\" + index, rule.getScript());\n+                            modelRules.add(new ModelRulePair(newRule, null));\n                             index++;\n                         }\n                         handleVarDeclarations(ruleModelName, ruleModel);\n@@ -155,9 +158,10 @@ public void modelChanged(String modelFileName, EventType type) {\n                         int index = 1;\n                         for (org.openhab.core.model.rule.rules.Rule rule : ruleModel.getRules()) {\n                             Rule newRule = toRule(ruleModelName, rule, index);\n-                            Rule oldRule = rules.get(ruleModelName);\n-                            updateRule(oldRule, newRule);\n+                            Rule oldRule = rules.remove(ruleModelName);\n+                            rules.put(newRule.getUID(), newRule);\n                             xExpressions.put(ruleModelName + \"-\" + index, rule.getScript());\n+                            modelRules.add(new ModelRulePair(newRule, oldRule));\n                             index++;\n                         }\n                         handleVarDeclarations(ruleModelName, ruleModel);\n@@ -169,28 +173,30 @@ public void modelChanged(String modelFileName, EventType type) {\n                 default:\n                     logger.debug(\"Unknown event type.\");\n             }\n+            notifyProviderChangeListeners(modelRules);\n         } else if (\"script\".equals(ruleModelType)) {\n+            List<ModelRulePair> modelRules = new ArrayList<>();\n             switch (type) {\n                 case MODIFIED:\n-                    Rule oldRule = rules.remove(modelFileName);\n-                    if (oldRule != null) {\n-                        removeRule(oldRule);\n-                    }\n                 case ADDED:\n                     EObject model = modelRepository.getModel(modelFileName);\n                     if (model instanceof Script script) {\n-                        addRule(toRule(modelFileName, script));\n+                        Rule oldRule = rules.remove(modelFileName);\n+                        Rule newRule = toRule(modelFileName, script);\n+                        rules.put(newRule.getUID(), newRule);\n+                        modelRules.add(new ModelRulePair(newRule, oldRule));\n                     }\n                     break;\n                 case REMOVED:\n-                    oldRule = rules.remove(modelFileName);\n+                    Rule oldRule = rules.remove(modelFileName);\n                     if (oldRule != null) {\n-                        removeRule(oldRule);\n+                        listeners.forEach(listener -> listener.removed(this, oldRule));\n                     }\n                     break;\n                 default:\n                     logger.debug(\"Unknown event type.\");\n             }\n+            notifyProviderChangeListeners(modelRules);\n         }\n     }\n \n@@ -209,34 +215,13 @@ private void handleVarDeclarations(String modelName, RuleModel ruleModel) {\n         contexts.put(modelName, context);\n     }\n \n-    private void addRule(Rule rule) {\n-        rules.put(rule.getUID(), rule);\n-\n-        for (ProviderChangeListener<Rule> providerChangeListener : listeners) {\n-            providerChangeListener.added(this, rule);\n-        }\n-    }\n-\n-    private void updateRule(@Nullable Rule oldRule, Rule newRule) {\n-        if (oldRule != null) {\n-            rules.remove(oldRule.getUID());\n-            for (ProviderChangeListener<Rule> providerChangeListener : listeners) {\n-                providerChangeListener.updated(this, oldRule, newRule);\n-            }\n-        } else {\n-            for (ProviderChangeListener<Rule> providerChangeListener : listeners) {\n-                providerChangeListener.added(this, newRule);\n-            }\n-        }\n-        rules.put(newRule.getUID(), newRule);\n-    }\n-\n     private void removeRuleModel(String modelName) {\n         Iterator<Entry<String, Rule>> it = rules.entrySet().iterator();\n         while (it.hasNext()) {\n             Entry<String, Rule> entry = it.next();\n             if (belongsToModel(entry.getKey(), modelName)) {\n-                removeRule(entry.getValue());\n+                listeners.forEach(listener -> listener.removed(this, entry.getValue()));\n+\n                 it.remove();\n             }\n         }\n@@ -259,12 +244,6 @@ private boolean belongsToModel(String id, String modelName) {\n         return false;\n     }\n \n-    private void removeRule(Rule rule) {\n-        for (ProviderChangeListener<Rule> providerChangeListener : listeners) {\n-            providerChangeListener.removed(this, rule);\n-        }\n-    }\n-\n     private Rule toRule(String modelName, Script script) {\n         String scriptText = NodeModelUtils.findActualNodeFor(script).getText();\n \n@@ -317,7 +296,8 @@ private String removeIndentation(String script) {\n             s += \"\\n\\n\";\n         }\n         String firstLine = s.lines().findFirst().orElse(\"\");\n-        String indentation = firstLine.substring(0, firstLine.length() - firstLine.stripLeading().length());\n+        String indentation = firstLine == null ? \"\"\n+                : firstLine.substring(0, firstLine.length() - firstLine.stripLeading().length());\n         return s.lines().map(line -> (line.startsWith(indentation) ? line.substring(indentation.length()) : line))\n                 .collect(Collectors.joining(\"\\n\"));\n     }\n@@ -325,7 +305,7 @@ private String removeIndentation(String script) {\n     private @Nullable Trigger mapTrigger(EventTrigger t) {\n         if (t instanceof SystemOnStartupTrigger) {\n             Configuration cfg = new Configuration();\n-            cfg.put(\"startlevel\", 20);\n+            cfg.put(\"startlevel\", 40);\n             return TriggerBuilder.create().withId(Integer.toString(triggerId++))\n                     .withTypeUID(\"core.SystemStartlevelTrigger\").withConfiguration(cfg).build();\n         } else if (t instanceof SystemStartlevelTrigger slTrigger) {\n@@ -449,20 +429,41 @@ public void onReadyMarkerAdded(ReadyMarker readyMarker) {\n             String ruleModelName = ruleFileName.substring(0, ruleFileName.indexOf(\".\"));\n             if (model instanceof RuleModel ruleModel) {\n                 int index = 1;\n+                List<ModelRulePair> modelRules = new ArrayList<>();\n                 for (org.openhab.core.model.rule.rules.Rule rule : ruleModel.getRules()) {\n-                    addRule(toRule(ruleModelName, rule, index));\n+                    Rule newRule = toRule(ruleModelName, rule, index);\n                     xExpressions.put(ruleModelName + \"-\" + index, rule.getScript());\n+                    modelRules.add(new ModelRulePair(newRule, null));\n                     index++;\n                 }\n                 handleVarDeclarations(ruleModelName, ruleModel);\n+\n+                notifyProviderChangeListeners(modelRules);\n             }\n         }\n         modelRepository.addModelRepositoryChangeListener(this);\n         readyService.markReady(marker);\n     }\n \n+    private void notifyProviderChangeListeners(List<ModelRulePair> modelRules) {\n+        modelRules.forEach(rulePair -> {\n+            Rule oldRule = rulePair.oldRule();\n+            if (oldRule != null) {\n+                rules.remove(oldRule.getUID());\n+                rules.put(rulePair.newRule().getUID(), rulePair.newRule());\n+                listeners.forEach(listener -> listener.updated(this, oldRule, rulePair.newRule()));\n+            } else {\n+                rules.put(rulePair.newRule().getUID(), rulePair.newRule());\n+                listeners.forEach(listener -> listener.added(this, rulePair.newRule()));\n+            }\n+        });\n+    }\n+\n     @Override\n     public void onReadyMarkerRemoved(ReadyMarker readyMarker) {\n         readyService.unmarkReady(marker);\n     }\n+\n+    private record ModelRulePair(Rule newRule, @Nullable Rule oldRule) {\n+    }\n }\n",
    "test_patch": "diff --git a/itests/org.openhab.core.model.rule.tests/src/main/java/org/openhab/core/model/rule/runtime/DSLRuleProviderTest.java b/itests/org.openhab.core.model.rule.tests/src/main/java/org/openhab/core/model/rule/runtime/DSLRuleProviderTest.java\nindex b9a06f30c2d..95a57326d05 100644\n--- a/itests/org.openhab.core.model.rule.tests/src/main/java/org/openhab/core/model/rule/runtime/DSLRuleProviderTest.java\n+++ b/itests/org.openhab.core.model.rule.tests/src/main/java/org/openhab/core/model/rule/runtime/DSLRuleProviderTest.java\n@@ -174,7 +174,7 @@ public void testAllTriggers() {\n \n         assertThat(rule.getTriggers().get(0).getTypeUID(), is(SystemTriggerHandler.STARTLEVEL_MODULE_TYPE_ID));\n         assertThat(rule.getTriggers().get(0).getConfiguration().get(SystemTriggerHandler.CFG_STARTLEVEL),\n-                is(new BigDecimal(20)));\n+                is(new BigDecimal(40)));\n         assertThat(rule.getTriggers().get(1).getTypeUID(), is(GenericCronTriggerHandler.MODULE_TYPE_ID));\n         assertThat(rule.getTriggers().get(1).getConfiguration().get(GenericCronTriggerHandler.CFG_CRON_EXPRESSION),\n                 is(\"0 0 12 * * ?\"));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3717",
    "pr_id": 3717,
    "issue_id": 3713,
    "repo": "openhab/openhab-core",
    "problem_statement": "System runlevel triggered rules trigger before done being saved\n<!-- Provide a general summary of the issue in the *Title* above -->\r\n\r\n<!-- Important: Please contact the openHAB community forum for questions or -->\r\n<!-- for configuration and usage guidance: https://community.openhab.org -->\r\n\r\n<!-- Feel free to delete any comment lines in the template (starting with \"<!--\") -->\r\n\r\n## Expected Behavior\r\n<!-- If you're describing a bug, tell us what should happen -->\r\n<!-- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nGiven the recent changes to system started/runlevel triggers so they *always* trigger if that runlevel has passed I would expect a UI rule to run after the \"save\" button is pressed.\r\n\r\n## Current Behavior\r\n<!-- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!-- Include related log information (preferably debug level) and related configs -->\r\n<!-- Use a file attachment for log and config information longer than a few lines -->\r\n<!-- Enclose multi-line log/code snippets with ``` on new lines for proper formatting -->\r\n<!-- If suggesting a change/improvement, explain the difference from current behavior -->\r\n<!-- For improvements, discuss at community.openhab.org first and include link to topic -->\r\n\r\nAfter pressing \"save\" the rule attempts to run but because it's not yet ready an error is produced in the logs. \r\n\r\n```\r\n2023-07-19 09:00:16.577 [ERROR] [e.automation.internal.RuleEngineImpl] - Failed to execute rule âtime-statemachine' with status 'INITIALIZING'\r\n```\r\n\r\n## Possible Solution\r\n<!-- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!-- or ideas how to implement the addition or change -->\r\n\r\nWait for the rule to become IDLE before attempting to trigger it or go back to the old behavior and don't run the rule at all on a save.\r\n\r\n## Steps to Reproduce (for Bugs)\r\n<!-- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!-- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Create a rule in the UI (I'm seeing this with my Time Based State Machine rule template so you could use that if you want)\r\n2. Open the Action and make a change.\r\n3. Click \"Save\" and watch the error appear in the logs.\r\n\r\n## Context\r\n<!-- How has this issue affected you? What are you trying to accomplish? -->\r\n<!-- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\nErrors in the logs while doing \"normal\" actions are alarming and will generate lots of forum traffic. \r\n\r\nWithout watching the logs it is not apparent that the rule failed to run as expected. \r\n\r\n## Your Environment\r\n<!-- Include as many relevant details about the environment you experienced the bug in -->\r\n\r\n* Version used: (e.g., openHAB and add-on versions) Snapshot #3538\r\n* Environment name and version (e.g. Chrome 111, Java 17, Node.js 18.15, ...): Docker version\r\n* Operating System and version (desktop or mobile, Windows 11, Raspbian Bullseye, ...): Docker version\r\n```\r\nruntimeInfo:\r\n  version: 4.0.0\r\n  buildString: \"Build #3538\"\r\nlocale: en-US\r\nsystemInfo:\r\n  configFolder: /openhab/conf\r\n  userdataFolder: /openhab/userdata\r\n  logFolder: /openhab/userdata/logs\r\n  javaVersion: 17.0.7\r\n  javaVendor: Debian\r\n  osName: Linux\r\n  osVersion: 5.15.0-76-generic\r\n  osArchitecture: amd64\r\n  availableProcessors: 4\r\n  freeMemory: 356040672\r\n  totalMemory: 874512384\r\n  startLevel: 100\r\nbindings: null\r\nclientInfo:\r\n  device:\r\n    ios: false\r\n    android: false\r\n    androidChrome: false\r\n    desktop: true\r\n    iphone: false\r\n    ipod: false\r\n    ipad: false\r\n    edge: false\r\n    ie: false\r\n    firefox: false\r\n    macos: true\r\n    windows: false\r\n    cordova: false\r\n    phonegap: false\r\n    electron: false\r\n    nwjs: false\r\n    webView: false\r\n    webview: false\r\n    standalone: false\r\n    os: macos\r\n    pixelRatio: 2\r\n    prefersColorScheme: light\r\n  isSecureContext: false\r\n  locationbarVisible: true\r\n  menubarVisible: true\r\n  navigator:\r\n    cookieEnabled: true\r\n    deviceMemory: N/A\r\n    hardwareConcurrency: 12\r\n    language: en-US\r\n    languages:\r\n      - en-US\r\n      - en\r\n    onLine: true\r\n    platform: MacIntel\r\n  screen:\r\n    width: 2560\r\n    height: 1440\r\n    colorDepth: 24\r\n  support:\r\n    touch: false\r\n    pointerEvents: true\r\n    observer: true\r\n    passiveListener: true\r\n    gestures: false\r\n    intersectionObserver: true\r\n  themeOptions:\r\n    dark: light\r\n    filled: true\r\n    pageTransitionAnimation: default\r\n    bars: filled\r\n    homeNavbar: default\r\n    homeBackground: default\r\n    expandableCardAnimation: default\r\n  userAgent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36\r\n    (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36\r\ntimestamp: 2023-07-19T15:07:38.366Z\r\n```",
    "issue_word_count": 656,
    "test_files_count": 10,
    "non_test_files_count": 3,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/RuleSimulationTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/internal/RuleEngineTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/RuleSimulationTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/internal/RuleEngineTest.java"
    ],
    "base_commit": "5a00bfdc412917380d6f15fea502c8d41bbaf5b6",
    "head_commit": "750bdb6b89fb3e6364f35bebe44687840514745a",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3717",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3717",
    "dockerfile": "",
    "pr_merged_at": "2023-07-21T12:18:29.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java\nindex 9d3adc6e14c..aeae620de67 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java\n@@ -155,6 +155,7 @@ public class RuleEngineImpl implements RuleManager, RegistryChangeListener<Modul\n      * The storage for the disable information\n      */\n     private final Storage<Boolean> disabledRulesStorage;\n+    private final StartLevelService startLevelService;\n \n     /**\n      * Locker which does not permit rule initialization when the rule engine is stopping.\n@@ -254,7 +255,7 @@ public void runNow(String uid, boolean considerConditions, @Nullable Map<String,\n     @Activate\n     public RuleEngineImpl(final @Reference ModuleTypeRegistry moduleTypeRegistry,\n             final @Reference RuleRegistry ruleRegistry, final @Reference StorageService storageService,\n-            final @Reference ReadyService readyService) {\n+            final @Reference ReadyService readyService, final @Reference StartLevelService startLevelService) {\n         this.disabledRulesStorage = storageService.<Boolean> getStorage(DISABLED_RULE_STORAGE,\n                 this.getClass().getClassLoader());\n \n@@ -265,6 +266,7 @@ public RuleEngineImpl(final @Reference ModuleTypeRegistry moduleTypeRegistry,\n \n         this.ruleRegistry = ruleRegistry;\n         this.readyService = readyService;\n+        this.startLevelService = startLevelService;\n \n         listener = new RegistryChangeListener<>() {\n             @Override\n@@ -846,6 +848,17 @@ private boolean activateRule(final WrappedRule rule) {\n         // Register the rule and set idle status.\n         register(rule);\n         setStatus(ruleUID, new RuleStatusInfo(RuleStatus.IDLE));\n+\n+        // check if we have to trigger because of the startlevel\n+        List<Trigger> slTriggers = rule.getTriggers().stream().map(WrappedTrigger::unwrap)\n+                .filter(t -> SystemTriggerHandler.STARTLEVEL_MODULE_TYPE_ID.equals(t.getTypeUID())).toList();\n+        if (slTriggers.stream()\n+                .anyMatch(t -> ((BigDecimal) t.getConfiguration().get(SystemTriggerHandler.CFG_STARTLEVEL))\n+                        .intValue() <= startLevelService.getStartLevel())) {\n+            runNow(rule.getUID(), true,\n+                    Map.of(SystemTriggerHandler.OUT_STARTLEVEL, StartLevelService.STARTLEVEL_RULES));\n+        }\n+\n         return true;\n     }\n \n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java\nindex f69cb05cba7..a6db11d2c28 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java\n@@ -116,7 +116,7 @@ public Collection<String> getTypes() {\n             } else if (ItemCommandTriggerHandler.MODULE_TYPE_ID.equals(moduleTypeUID)) {\n                 return new ItemCommandTriggerHandler(trigger, ruleUID, bundleContext, itemRegistry);\n             } else if (SystemTriggerHandler.STARTLEVEL_MODULE_TYPE_ID.equals(moduleTypeUID)) {\n-                return new SystemTriggerHandler(trigger, bundleContext, startLevelService);\n+                return new SystemTriggerHandler(trigger, bundleContext);\n             } else if (ThingStatusTriggerHandler.CHANGE_MODULE_TYPE_ID.equals(moduleTypeUID)\n                     || ThingStatusTriggerHandler.UPDATE_MODULE_TYPE_ID.equals(moduleTypeUID)) {\n                 return new ThingStatusTriggerHandler(trigger, bundleContext);\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java\nindex 9310be832a6..d6ca1c80c93 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java\n@@ -47,15 +47,13 @@ public class SystemTriggerHandler extends BaseTriggerModuleHandler implements Ev\n \n     private final Integer startlevel;\n     private final Set<String> types;\n-    private final StartLevelService startLevelService;\n \n     private boolean triggered = false;\n \n     private final ServiceRegistration<?> eventSubscriberRegistration;\n \n-    public SystemTriggerHandler(Trigger module, BundleContext bundleContext, StartLevelService startLevelService) {\n+    public SystemTriggerHandler(Trigger module, BundleContext bundleContext) {\n         super(module);\n-        this.startLevelService = startLevelService;\n         this.startlevel = ((BigDecimal) module.getConfiguration().get(CFG_STARTLEVEL)).intValue();\n         if (STARTLEVEL_MODULE_TYPE_ID.equals(module.getTypeUID())) {\n             this.types = Set.of(StartlevelEvent.TYPE);\n@@ -69,12 +67,6 @@ public SystemTriggerHandler(Trigger module, BundleContext bundleContext, StartLe\n     @Override\n     public void setCallback(ModuleHandlerCallback callback) {\n         super.setCallback(callback);\n-\n-        // trigger immediately when start level is already reached\n-        int currentStartLevel = startLevelService.getStartLevel();\n-        if (currentStartLevel > StartLevelService.STARTLEVEL_RULEENGINE && currentStartLevel >= startlevel) {\n-            trigger();\n-        }\n     }\n \n     @Override\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java\nindex 4d25df52dec..8bee91cf982 100644\n--- a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java\n+++ b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java\n@@ -67,34 +67,17 @@ public void setup() {\n     public void testDoesNotTriggerIfStartLevelTooLow() {\n         when(startLevelServiceMock.getStartLevel()).thenReturn(0);\n \n-        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n-                startLevelServiceMock);\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock);\n         triggerHandler.setCallback(callbackMock);\n \n         verifyNoInteractions(callbackMock);\n     }\n \n-    @Test\n-    public void testDoesTriggerImmediatelyIfStartLevelHigherOnInit() {\n-        when(startLevelServiceMock.getStartLevel()).thenReturn(100);\n-\n-        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n-                startLevelServiceMock);\n-        triggerHandler.setCallback(callbackMock);\n-\n-        ArgumentCaptor<Map> captor = ArgumentCaptor.forClass(Map.class);\n-        verify(callbackMock).triggered(eq(triggerMock), captor.capture());\n-\n-        Map<String, Object> configuration = (Map<String, Object>) captor.getValue();\n-        assertThat(configuration.get(SystemTriggerHandler.OUT_STARTLEVEL), is(CFG_STARTLEVEL));\n-    }\n-\n     @Test\n     public void testDoesNotTriggerIfStartLevelEventLower() {\n         when(startLevelServiceMock.getStartLevel()).thenReturn(0);\n \n-        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n-                startLevelServiceMock);\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock);\n         triggerHandler.setCallback(callbackMock);\n \n         Event event = SystemEventFactory.createStartlevelEvent(70);\n@@ -107,8 +90,7 @@ public void testDoesNotTriggerIfStartLevelEventLower() {\n     public void testDoesTriggerIfStartLevelEventHigher() {\n         when(startLevelServiceMock.getStartLevel()).thenReturn(0);\n \n-        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n-                startLevelServiceMock);\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock);\n         triggerHandler.setCallback(callbackMock);\n \n         Event event = SystemEventFactory.createStartlevelEvent(100);\n@@ -121,32 +103,11 @@ public void testDoesTriggerIfStartLevelEventHigher() {\n         assertThat(configuration.get(SystemTriggerHandler.OUT_STARTLEVEL), is(CFG_STARTLEVEL));\n     }\n \n-    @Test\n-    public void testDoesNotTriggerAfterInitialTrigger() {\n-        when(startLevelServiceMock.getStartLevel()).thenReturn(100);\n-\n-        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n-                startLevelServiceMock);\n-        triggerHandler.setCallback(callbackMock);\n-\n-        ArgumentCaptor<Map> captor = ArgumentCaptor.forClass(Map.class);\n-        verify(callbackMock).triggered(eq(triggerMock), captor.capture());\n-\n-        Map<String, Object> configuration = (Map<String, Object>) captor.getValue();\n-        assertThat(configuration.get(SystemTriggerHandler.OUT_STARTLEVEL), is(CFG_STARTLEVEL));\n-\n-        Event event = SystemEventFactory.createStartlevelEvent(100);\n-        triggerHandler.receive(event);\n-\n-        verifyNoMoreInteractions(callbackMock);\n-    }\n-\n     @Test\n     public void testDoesNotTriggerAfterEventTrigger() {\n         when(startLevelServiceMock.getStartLevel()).thenReturn(0);\n \n-        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n-                startLevelServiceMock);\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock);\n         triggerHandler.setCallback(callbackMock);\n \n         Event event = SystemEventFactory.createStartlevelEvent(100);\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\nindex 14fcf8d0c68..c970d204012 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\n@@ -16,6 +16,7 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.Collection;\n import java.util.Optional;\n@@ -80,6 +81,7 @@ public class AutomationIntegrationJsonTest extends JavaOSGiTest {\n     private final Logger logger = LoggerFactory.getLogger(AutomationIntegrationJsonTest.class);\n     private @NonNullByDefault({}) EventPublisher eventPublisher;\n     private @NonNullByDefault({}) ItemRegistry itemRegistry;\n+    private @NonNullByDefault({}) StartLevelService startLevelService;\n     private @NonNullByDefault({}) RuleRegistry ruleRegistry;\n     private @NonNullByDefault({}) RuleManager ruleManager;\n     private @NonNullByDefault({}) ManagedRuleProvider managedRuleProvider;\n@@ -96,8 +98,12 @@ public void before() {\n \n         eventPublisher = getService(EventPublisher.class);\n         itemRegistry = getService(ItemRegistry.class);\n+        startLevelService = mock(StartLevelService.class);\n+        when(startLevelService.getStartLevel()).thenReturn(100);\n+        registerService(startLevelService, StartLevelService.class.getName());\n+\n         CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n-                eventPublisher, itemRegistry, mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+                eventPublisher, itemRegistry, mock(TimeZoneProvider.class), startLevelService);\n         mock(CoreModuleHandlerFactory.class);\n         registerService(coreModuleHandlerFactory);\n \n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\nindex 1632e368bb0..167371f7c40 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\n@@ -17,6 +17,7 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.Collection;\n import java.util.Collections;\n@@ -98,6 +99,7 @@ public class AutomationIntegrationTest extends JavaOSGiTest {\n     private final Logger logger = LoggerFactory.getLogger(AutomationIntegrationTest.class);\n     private @Nullable EventPublisher eventPublisher;\n     private @Nullable ItemRegistry itemRegistry;\n+    private @NonNullByDefault({}) StartLevelService startLevelService;\n     private @Nullable RuleRegistry ruleRegistry;\n     private @Nullable RuleManager ruleEngine;\n     private @Nullable ManagedRuleProvider managedRuleProvider;\n@@ -113,9 +115,13 @@ public void before() {\n \n         eventPublisher = getService(EventPublisher.class);\n         itemRegistry = getService(ItemRegistry.class);\n+        startLevelService = mock(StartLevelService.class);\n+        when(startLevelService.getStartLevel()).thenReturn(100);\n+        registerService(startLevelService, StartLevelService.class.getName());\n+\n         CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n                 Objects.requireNonNull(eventPublisher), Objects.requireNonNull(itemRegistry),\n-                mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+                mock(TimeZoneProvider.class), startLevelService);\n         mock(CoreModuleHandlerFactory.class);\n         registerService(coreModuleHandlerFactory);\n \n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/RuleSimulationTest.java b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/RuleSimulationTest.java\nindex 779f727e784..3852e61c248 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/RuleSimulationTest.java\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/RuleSimulationTest.java\n@@ -15,6 +15,8 @@\n import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.time.ZoneId;\n import java.time.ZonedDateTime;\n@@ -54,6 +56,7 @@\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.service.ReadyMarker;\n+import org.openhab.core.service.StartLevelService;\n import org.openhab.core.storage.StorageService;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.slf4j.Logger;\n@@ -71,11 +74,16 @@ public class RuleSimulationTest extends JavaOSGiTest {\n \n     private @Nullable RuleRegistry ruleRegistry;\n     private @Nullable RuleManager ruleEngine;\n+    private @NonNullByDefault({}) StartLevelService startLevelService;\n \n     @BeforeEach\n     public void before() {\n         registerVolatileStorageService();\n \n+        startLevelService = mock(StartLevelService.class);\n+        when(startLevelService.getStartLevel()).thenReturn(100);\n+        registerService(startLevelService, StartLevelService.class.getName());\n+\n         StorageService storageService = getService(StorageService.class);\n \n         ruleRegistry = getService(RuleRegistry.class);\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\nindex b6e0dac1487..c8242fa373f 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\n+++ b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\n@@ -15,6 +15,7 @@\n import static java.util.Map.entry;\n import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -69,9 +70,13 @@ public class RunRuleModuleTest extends JavaOSGiTest {\n \n     private final Logger logger = LoggerFactory.getLogger(RunRuleModuleTest.class);\n     private final VolatileStorageService volatileStorageService = new VolatileStorageService();\n+    private @NonNullByDefault({}) StartLevelService startLevelService;\n \n     @BeforeEach\n     public void before() {\n+        startLevelService = mock(StartLevelService.class);\n+        when(startLevelService.getStartLevel()).thenReturn(100);\n+        registerService(startLevelService, StartLevelService.class.getName());\n         EventPublisher eventPublisher = getService(EventPublisher.class);\n         ItemRegistry itemRegistry = getService(ItemRegistry.class);\n         CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\nindex 22d0e6a8f39..cca9d6cc15b 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\n+++ b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\n@@ -15,6 +15,7 @@\n import static java.util.Map.entry;\n import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.Collection;\n import java.util.Collections;\n@@ -79,9 +80,13 @@ public class RuntimeRuleTest extends JavaOSGiTest {\n \n     private final Logger logger = LoggerFactory.getLogger(RuntimeRuleTest.class);\n     private final VolatileStorageService volatileStorageService = new VolatileStorageService();\n+    private @NonNullByDefault({}) StartLevelService startLevelService;\n \n     @BeforeEach\n     public void before() {\n+        startLevelService = mock(StartLevelService.class);\n+        when(startLevelService.getStartLevel()).thenReturn(100);\n+        registerService(startLevelService, StartLevelService.class.getName());\n         EventPublisher eventPublisher = getService(EventPublisher.class);\n         ItemRegistry itemRegistry = getService(ItemRegistry.class);\n         CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\nindex 19c7b4b6d12..1e1cf933885 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\n+++ b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\n@@ -16,6 +16,7 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -78,6 +79,7 @@ public abstract class BasicConditionHandlerTest extends JavaOSGiTest {\n     private @NonNullByDefault({}) RuleRegistry ruleRegistry;\n     private @NonNullByDefault({}) RuleManager ruleEngine;\n     private @Nullable Event itemEvent;\n+    private @NonNullByDefault({}) StartLevelService startLevelService;\n \n     /**\n      * This executes before every test and before the\n@@ -86,6 +88,9 @@ public abstract class BasicConditionHandlerTest extends JavaOSGiTest {\n      */\n     @BeforeEach\n     public void beforeBase() {\n+        startLevelService = mock(StartLevelService.class);\n+        when(startLevelService.getStartLevel()).thenReturn(100);\n+        registerService(startLevelService, StartLevelService.class.getName());\n         EventPublisher eventPublisher = getService(EventPublisher.class);\n         ItemRegistry itemRegistry = getService(ItemRegistry.class);\n         CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java\nindex 120f02c4b17..2775e3c7695 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java\n+++ b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java\n@@ -16,6 +16,7 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.Collection;\n import java.util.HashMap;\n@@ -75,9 +76,13 @@ public class RuntimeRuleTest extends JavaOSGiTest {\n     private VolatileStorageService volatileStorageService = new VolatileStorageService();\n     private @NonNullByDefault({}) RuleRegistry ruleRegistry;\n     private @NonNullByDefault({}) RuleManager ruleEngine;\n+    private @NonNullByDefault({}) StartLevelService startLevelService;\n \n     @BeforeEach\n     public void before() {\n+        startLevelService = mock(StartLevelService.class);\n+        when(startLevelService.getStartLevel()).thenReturn(100);\n+        registerService(startLevelService, StartLevelService.class.getName());\n         EventPublisher eventPublisher = getService(EventPublisher.class);\n         ItemRegistry itemRegistry = getService(ItemRegistry.class);\n         CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n\ndiff --git a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\nindex fabce422523..22e4ee1e560 100644\n--- a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\n+++ b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\n@@ -17,6 +17,7 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -78,12 +79,16 @@ public class RuleEventTest extends JavaOSGiTest {\n \n     private @Nullable Event itemEvent = null;\n     private @Nullable Event ruleRemovedEvent = null;\n+    private @NonNullByDefault({}) StartLevelService startLevelService;\n \n     public RuleEventTest() {\n     }\n \n     @BeforeEach\n     public void before() {\n+        startLevelService = mock(StartLevelService.class);\n+        when(startLevelService.getStartLevel()).thenReturn(100);\n+        registerService(startLevelService, StartLevelService.class.getName());\n         EventPublisher eventPublisher = getService(EventPublisher.class);\n         ItemRegistry itemRegistry = getService(ItemRegistry.class);\n         CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n\ndiff --git a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/internal/RuleEngineTest.java b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/internal/RuleEngineTest.java\nindex c15f9f75d66..c7ebed6bf2b 100644\n--- a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/internal/RuleEngineTest.java\n+++ b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/internal/RuleEngineTest.java\n@@ -13,6 +13,8 @@\n package org.openhab.core.automation.internal;\n \n import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.math.BigDecimal;\n import java.util.ArrayList;\n@@ -41,6 +43,7 @@\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.config.core.FilterCriteria;\n import org.openhab.core.config.core.ParameterOption;\n+import org.openhab.core.service.StartLevelService;\n import org.openhab.core.test.java.JavaOSGiTest;\n \n /**\n@@ -54,10 +57,14 @@ public class RuleEngineTest extends JavaOSGiTest {\n \n     private @NonNullByDefault({}) RuleEngineImpl ruleEngine;\n     private @NonNullByDefault({}) RuleRegistry ruleRegistry;\n+    private @NonNullByDefault({}) StartLevelService startLevelService;\n \n     @BeforeEach\n     public void setup() {\n         registerVolatileStorageService();\n+        startLevelService = mock(StartLevelService.class);\n+        when(startLevelService.getStartLevel()).thenReturn(100);\n+        registerService(startLevelService, StartLevelService.class.getName());\n         ruleEngine = (RuleEngineImpl) getService(RuleManager.class);\n         ruleRegistry = getService(RuleRegistry.class);\n         registerService(new TestModuleTypeProvider(), ModuleTypeProvider.class.getName());\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3714",
    "pr_id": 3714,
    "issue_id": 3694,
    "repo": "openhab/openhab-core",
    "problem_statement": "Profile JS Transformation Item ->  Thing for Datatype Datetime not triggered \nJS-Transformation in a profile for direction item to thing is not triggered in case input value is of datatype datetime. \r\n\r\nDetails  see also reference https://community.openhab.org/t/oh4-m4-problem-with-profile-js-transformation-of-datetime-type/147662\r\n\r\nOH4 Milstone 4\r\n ",
    "issue_word_count": 54,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/ProfileCallbackImpl.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java"
    ],
    "base_commit": "5a00bfdc412917380d6f15fea502c8d41bbaf5b6",
    "head_commit": "d58a4a6704af42ef4f054ae98ff4f52b82dfb26c",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3714",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3714",
    "dockerfile": "",
    "pr_merged_at": "2023-09-13T20:27:12.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java\nindex 8b2bf6ba0a6..aa1e55aae7f 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java\n@@ -227,7 +227,7 @@ private Profile getProfile(ItemChannelLink link, Item item, @Nullable Thing thin\n \n     private ProfileCallback createCallback(ItemChannelLink link) {\n         return new ProfileCallbackImpl(eventPublisher, safeCaller, itemStateConverter, link, thingRegistry::get,\n-                this::getItem);\n+                this::getItem, this::toAcceptedCommand);\n     }\n \n     private @Nullable ProfileTypeUID determineProfileTypeUID(ItemChannelLink link, Item item, @Nullable Thing thing) {\n@@ -288,9 +288,13 @@ private ProfileCallback createCallback(ItemChannelLink link) {\n         if (item != null && thing != null) {\n             Channel channel = thing.getChannel(link.getLinkedUID());\n             if (channel != null) {\n+                String acceptedItemType = Objects.requireNonNullElse(channel.getAcceptedItemType(), \"\");\n+                if (acceptedItemType.startsWith(\"Number\")) {\n+                    acceptedItemType = \"Number\";\n+                }\n                 context = new ProfileContextImpl(link.getConfiguration(), item.getAcceptedDataTypes(),\n-                        item.getAcceptedCommandTypes(), acceptedCommandTypeMap.getOrDefault(\n-                                Objects.requireNonNullElse(channel.getAcceptedItemType(), \"\"), List.of()));\n+                        item.getAcceptedCommandTypes(),\n+                        acceptedCommandTypeMap.getOrDefault(acceptedItemType, List.of()));\n             }\n         }\n \n@@ -401,17 +405,12 @@ private <T extends Type> void handleEvent(String itemName, T type, @Nullable Str\n             if (thing != null) {\n                 Channel channel = thing.getChannel(channelUID.getId());\n                 if (channel != null) {\n-                    @Nullable\n-                    T convertedType = toAcceptedType(type, channel, acceptedTypesFunction, item);\n-                    if (convertedType != null) {\n-                        if (thing.getHandler() != null) {\n-                            Profile profile = getProfile(link, item, thing);\n-                            action.applyProfile(profile, thing, convertedType);\n-                        }\n-                    } else {\n-                        logger.debug(\n-                                \"Received event '{}' ({}) could not be converted to any type accepted by item '{}' ({})\",\n-                                type, type.getClass().getSimpleName(), itemName, item.getType());\n+                    if (thing.getHandler() != null) {\n+                        // fix QuantityType/DecimalType, leave others as-is\n+                        @Nullable\n+                        T uomType = fixUoM(type, channel, item);\n+                        Profile profile = getProfile(link, item, thing);\n+                        action.applyProfile(profile, thing, uomType != null ? uomType : type);\n                     }\n                 } else {\n                     logger.debug(\"Received  event '{}' for non-existing channel '{}', not forwarding it to the handler\",\n@@ -425,8 +424,7 @@ private <T extends Type> void handleEvent(String itemName, T type, @Nullable Str\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private <T extends Type> @Nullable T toAcceptedType(T originalType, Channel channel,\n-            Function<@Nullable String, @Nullable List<Class<? extends T>>> acceptedTypesFunction, Item item) {\n+    private <T extends Type> @Nullable T fixUoM(@Nullable T originalType, Channel channel, Item item) {\n         String channelAcceptedItemType = channel.getAcceptedItemType();\n \n         if (channelAcceptedItemType == null) {\n@@ -449,22 +447,40 @@ private <T extends Type> void handleEvent(String itemName, T type, @Nullable Str\n             Unit<?> unit = Objects.requireNonNull(((NumberItem) item).getUnit());\n             return (T) new QuantityType<>(decimalType.toBigDecimal(), unit);\n         }\n+        return null;\n+    }\n+\n+    public @Nullable Command toAcceptedCommand(Command originalType, @Nullable Channel channel, @Nullable Item item) {\n+        if (item == null || channel == null) {\n+            logger.warn(\"Trying to convert types for non-existing channel or item, discarding command.\");\n+            return null;\n+        }\n+        String channelAcceptedItemType = channel.getAcceptedItemType();\n+\n+        if (channelAcceptedItemType == null) {\n+            return originalType;\n+        }\n+\n+        Command uomCommand = fixUoM(originalType, channel, item);\n+        if (uomCommand != null) {\n+            return uomCommand;\n+        }\n \n         // handle HSBType/PercentType\n         if (CoreItemFactory.DIMMER.equals(channelAcceptedItemType) && originalType instanceof HSBType hsb) {\n-            return (T) (hsb.as(PercentType.class));\n+            return hsb.as(PercentType.class);\n         }\n \n         // check for other cases if the type is acceptable\n-        List<Class<? extends T>> acceptedTypes = acceptedTypesFunction.apply(channelAcceptedItemType);\n+        List<Class<? extends Command>> acceptedTypes = acceptedCommandTypeMap.get(channelAcceptedItemType);\n         if (acceptedTypes == null || acceptedTypes.contains(originalType.getClass())) {\n             return originalType;\n         } else if (acceptedTypes.contains(PercentType.class) && originalType instanceof State state\n                 && PercentType.class.isAssignableFrom(originalType.getClass())) {\n-            return (@Nullable T) state.as(PercentType.class);\n+            return state.as(PercentType.class);\n         } else if (acceptedTypes.contains(OnOffType.class) && originalType instanceof State state\n                 && PercentType.class.isAssignableFrom(originalType.getClass())) {\n-            return (@Nullable T) state.as(OnOffType.class);\n+            return state.as(OnOffType.class);\n         } else {\n             logger.debug(\"Received not accepted type '{}' for channel '{}'\", originalType.getClass().getSimpleName(),\n                     channel.getUID());\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/ProfileCallbackImpl.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/ProfileCallbackImpl.java\nindex 463a4c653af..a0f40e53059 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/ProfileCallbackImpl.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/profiles/ProfileCallbackImpl.java\n@@ -23,6 +23,7 @@\n import org.openhab.core.items.events.ItemEventFactory;\n import org.openhab.core.library.items.StringItem;\n import org.openhab.core.library.types.StringType;\n+import org.openhab.core.thing.Channel;\n import org.openhab.core.thing.Thing;\n import org.openhab.core.thing.ThingUID;\n import org.openhab.core.thing.binding.ThingHandler;\n@@ -52,16 +53,19 @@ public class ProfileCallbackImpl implements ProfileCallback {\n     private final Function<String, @Nullable Item> itemProvider;\n     private final SafeCaller safeCaller;\n     private final ItemStateConverter itemStateConverter;\n+    private final AcceptedTypeConverter acceptedTypeConverter;\n \n     public ProfileCallbackImpl(EventPublisher eventPublisher, SafeCaller safeCaller,\n             ItemStateConverter itemStateConverter, ItemChannelLink link,\n-            Function<ThingUID, @Nullable Thing> thingProvider, Function<String, @Nullable Item> itemProvider) {\n+            Function<ThingUID, @Nullable Thing> thingProvider, Function<String, @Nullable Item> itemProvider,\n+            AcceptedTypeConverter acceptedTypeConverter) {\n         this.eventPublisher = eventPublisher;\n         this.safeCaller = safeCaller;\n         this.itemStateConverter = itemStateConverter;\n         this.link = link;\n         this.thingProvider = thingProvider;\n         this.itemProvider = itemProvider;\n+        this.acceptedTypeConverter = acceptedTypeConverter;\n     }\n \n     @Override\n@@ -78,11 +82,22 @@ public void handleCommand(Command command) {\n                 if (ThingHandlerHelper.isHandlerInitialized(thing)) {\n                     logger.debug(\"Delegating command '{}' for item '{}' to handler for channel '{}'\", command,\n                             link.getItemName(), link.getLinkedUID());\n-                    safeCaller.create(handler, ThingHandler.class)\n-                            .withTimeout(CommunicationManager.THINGHANDLER_EVENT_TIMEOUT).onTimeout(() -> {\n-                                logger.warn(\"Handler for thing '{}' takes more than {}ms for handling a command\",\n-                                        handler.getThing().getUID(), CommunicationManager.THINGHANDLER_EVENT_TIMEOUT);\n-                            }).build().handleCommand(link.getLinkedUID(), command);\n+                    Channel channel = thing.getChannel(link.getLinkedUID());\n+                    Command convertedCommand = acceptedTypeConverter.toAcceptedCommand(command, channel,\n+                            itemProvider.apply(link.getItemName()));\n+                    if (convertedCommand != null) {\n+                        safeCaller.create(handler, ThingHandler.class)\n+                                .withTimeout(CommunicationManager.THINGHANDLER_EVENT_TIMEOUT).onTimeout(() -> {\n+                                    logger.warn(\"Handler for thing '{}' takes more than {}ms for handling a command\",\n+                                            handler.getThing().getUID(),\n+                                            CommunicationManager.THINGHANDLER_EVENT_TIMEOUT);\n+                                }).build().handleCommand(link.getLinkedUID(), command);\n+                    } else {\n+                        logger.debug(\n+                                \"Not delegating command '{}' for item '{}' to handler for channel '{}', \"\n+                                        + \"because it was not possible to convcert it to an accepted type).\",\n+                                command, link.getItemName(), link.getLinkedUID());\n+                    }\n                 } else {\n                     logger.debug(\"Not delegating command '{}' for item '{}' to handler for channel '{}', \"\n                             + \"because handler is not initialized (thing must be in status UNKNOWN, ONLINE or OFFLINE but was {}).\",\n@@ -129,4 +144,10 @@ public void sendUpdate(State state) {\n         eventPublisher.post(\n                 ItemEventFactory.createStateEvent(link.getItemName(), acceptedState, link.getLinkedUID().toString()));\n     }\n+\n+    @FunctionalInterface\n+    public interface AcceptedTypeConverter {\n+        @Nullable\n+        Command toAcceptedCommand(Command originalType, @Nullable Channel channel, @Nullable Item item);\n+    }\n }\n",
    "test_patch": "diff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java\nindex 3bac9fc85f1..e0d8539dbef 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java\n@@ -27,7 +27,6 @@\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n-import org.mockito.ArgumentCaptor;\n import org.mockito.Mock;\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.mockito.junit.jupiter.MockitoSettings;\n@@ -82,7 +81,6 @@\n import org.openhab.core.thing.type.ChannelTypeRegistry;\n import org.openhab.core.thing.type.ChannelTypeUID;\n import org.openhab.core.types.Command;\n-import org.openhab.core.types.State;\n \n /**\n  *\n@@ -558,44 +556,15 @@ public void testProfileIsNotReusedOnThingChange() {\n     }\n \n     @Test\n-    public void testItemCommandEventTypeDowncast() {\n+    public void testItemCommandTypeDowncast() {\n         Thing thing = ThingBuilder\n                 .create(THING_TYPE_UID, THING_UID).withChannels(ChannelBuilder\n                         .create(STATE_CHANNEL_UID_2, CoreItemFactory.DIMMER).withKind(ChannelKind.STATE).build())\n                 .build();\n         thing.setHandler(thingHandlerMock);\n         when(thingRegistryMock.get(eq(THING_UID))).thenReturn(thing);\n-\n-        manager.receive(ItemEventFactory.createCommandEvent(ITEM_NAME_2, HSBType.fromRGB(128, 128, 128)));\n-        waitForAssert(() -> {\n-            ArgumentCaptor<Command> commandCaptor = ArgumentCaptor.forClass(Command.class);\n-            verify(stateProfileMock).onCommandFromItem(commandCaptor.capture());\n-            Command command = commandCaptor.getValue();\n-            assertNotNull(command);\n-            assertEquals(PercentType.class, command.getClass());\n-        });\n-        verifyNoMoreInteractions(stateProfileMock);\n-        verifyNoMoreInteractions(triggerProfileMock);\n-    }\n-\n-    @Test\n-    public void testItemStateEventTypeDowncast() {\n-        Thing thing = ThingBuilder\n-                .create(THING_TYPE_UID, THING_UID).withChannels(ChannelBuilder\n-                        .create(STATE_CHANNEL_UID_2, CoreItemFactory.DIMMER).withKind(ChannelKind.STATE).build())\n-                .build();\n-        thing.setHandler(thingHandlerMock);\n-        when(thingRegistryMock.get(eq(THING_UID))).thenReturn(thing);\n-\n-        manager.receive(ItemEventFactory.createStateUpdatedEvent(ITEM_NAME_2, HSBType.fromRGB(128, 128, 128)));\n-        waitForAssert(() -> {\n-            ArgumentCaptor<State> stateCaptor = ArgumentCaptor.forClass(State.class);\n-            verify(stateProfileMock).onStateUpdateFromItem(stateCaptor.capture());\n-            State state = stateCaptor.getValue();\n-            assertNotNull(state);\n-            assertEquals(PercentType.class, state.getClass());\n-        });\n-        verifyNoMoreInteractions(stateProfileMock);\n-        verifyNoMoreInteractions(triggerProfileMock);\n+        Command command = manager.toAcceptedCommand(HSBType.fromRGB(128, 128, 128),\n+                thing.getChannel(STATE_CHANNEL_UID_2), ITEM_2);\n+        assertEquals(PercentType.class, command.getClass());\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3710",
    "pr_id": 3710,
    "issue_id": 3515,
    "repo": "openhab/openhab-core",
    "problem_statement": "Spotless neither checks nor fixes files in `src/test/java`\nFound in #3510 \r\n\r\nThe configuration is correctly imported and changed files are properly identified, but then they are reported as \"clean\" even if they are not. This could be a configuration issue at our end or n external bug.",
    "issue_word_count": 49,
    "test_files_count": 6,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/AutomaticInboxProcessorTest.java",
      "bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/PersistentInboxTest.java",
      "bundles/org.openhab.core.io.websocket/src/test/java/org/openhab/core/io/websocket/CommonWebSocketServletTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceEqualsFilterTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceIncludeFilterTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/AutoUpdateManagerTest.java",
      "pom.xml"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/AutomaticInboxProcessorTest.java",
      "bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/PersistentInboxTest.java",
      "bundles/org.openhab.core.io.websocket/src/test/java/org/openhab/core/io/websocket/CommonWebSocketServletTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceEqualsFilterTest.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceIncludeFilterTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/AutoUpdateManagerTest.java"
    ],
    "base_commit": "2ee85a75f53978651c3a33bf4bb1f6b8f35abc3a",
    "head_commit": "754996cf0e0309390bc4ee75bc3a229ba2407a94",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3710",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3710",
    "dockerfile": "",
    "pr_merged_at": "2023-07-18T07:03:16.000Z",
    "patch": "diff --git a/pom.xml b/pom.xml\nindex 9743bef665c..fd3eaf997f9 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -77,8 +77,9 @@\n     <sat.version>0.15.0</sat.version>\n     <slf4j.version>1.7.32</slf4j.version>\n     <xtext.version>2.29.0</xtext.version>\n-    <spotless.version>2.35.0</spotless.version>\n-    <spotless.eclipse.version>4.26</spotless.eclipse.version>\n+    <spotless.version>2.37.0</spotless.version>\n+    <!-- Eclipse Java formatter version 4.26+ does not check test files -->\n+    <spotless.eclipse.version>4.25</spotless.eclipse.version>\n     <spotless.eclipse.wtp.version>4.21.0</spotless.eclipse.wtp.version>\n   </properties>\n \n",
    "test_patch": "diff --git a/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/AutomaticInboxProcessorTest.java b/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/AutomaticInboxProcessorTest.java\nindex 1df9623fb2b..9f8f2fe7718 100644\n--- a/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/AutomaticInboxProcessorTest.java\n+++ b/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/AutomaticInboxProcessorTest.java\n@@ -137,10 +137,9 @@ public void setUp() {\n         when(thingHandlerFactoryMock.supportsThingType(eq(THING_TYPE_UID3))).thenReturn(true);\n         when(thingHandlerFactoryMock.createThing(any(ThingTypeUID.class), any(Configuration.class), any(ThingUID.class),\n                 nullable(ThingUID.class)))\n-                        .then(invocation -> ThingBuilder\n-                                .create((ThingTypeUID) invocation.getArguments()[0],\n-                                        (ThingUID) invocation.getArguments()[2])\n-                                .withConfiguration((Configuration) invocation.getArguments()[1]).build());\n+                .then(invocation -> ThingBuilder\n+                        .create((ThingTypeUID) invocation.getArguments()[0], (ThingUID) invocation.getArguments()[2])\n+                        .withConfiguration((Configuration) invocation.getArguments()[1]).build());\n \n         inbox = new PersistentInbox(new VolatileStorageService(), mock(DiscoveryServiceRegistry.class),\n                 thingRegistryMock, thingProviderMock, thingTypeRegistryMock, configDescriptionRegistryMock);\n\ndiff --git a/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/PersistentInboxTest.java b/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/PersistentInboxTest.java\nindex 1a1ab80f750..6fbac8ba8af 100644\n--- a/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/PersistentInboxTest.java\n+++ b/bundles/org.openhab.core.config.discovery/src/test/java/org/openhab/core/config/discovery/internal/PersistentInboxTest.java\n@@ -97,10 +97,10 @@ public void setup() {\n         when(thingHandlerFactoryMock.createThing(eq(THING_TYPE_UID), any(Configuration.class), eq(THING_UID), any()))\n                 .then(invocation -> ThingBuilder.create(THING_TYPE_UID, \"test\")\n                         .withConfiguration((Configuration) invocation.getArguments()[1]).build());\n-        when(thingHandlerFactoryMock\n-                .createThing(eq(THING_TYPE_UID), any(Configuration.class), eq(THING_OTHER_UID), any()))\n-                        .then(invocation -> ThingBuilder.create(THING_TYPE_UID, THING_OTHER_ID)\n-                                .withConfiguration((Configuration) invocation.getArguments()[1]).build());\n+        when(thingHandlerFactoryMock.createThing(eq(THING_TYPE_UID), any(Configuration.class), eq(THING_OTHER_UID),\n+                any()))\n+                .then(invocation -> ThingBuilder.create(THING_TYPE_UID, THING_OTHER_ID)\n+                        .withConfiguration((Configuration) invocation.getArguments()[1]).build());\n         inbox = new PersistentInbox(storageServiceMock, mock(DiscoveryServiceRegistry.class), thingRegistryMock,\n                 thingProviderMock, thingTypeRegistryMock, configDescriptionRegistryMock);\n         inbox.addThingHandlerFactory(thingHandlerFactoryMock);\n\ndiff --git a/bundles/org.openhab.core.io.websocket/src/test/java/org/openhab/core/io/websocket/CommonWebSocketServletTest.java b/bundles/org.openhab.core.io.websocket/src/test/java/org/openhab/core/io/websocket/CommonWebSocketServletTest.java\nindex 17a1cd85fb0..3727dee6689 100644\n--- a/bundles/org.openhab.core.io.websocket/src/test/java/org/openhab/core/io/websocket/CommonWebSocketServletTest.java\n+++ b/bundles/org.openhab.core.io.websocket/src/test/java/org/openhab/core/io/websocket/CommonWebSocketServletTest.java\n@@ -92,7 +92,7 @@ public void createWebsocketUsingDefaultAdapterPath() throws URISyntaxException {\n \n     @Test\n     public void createWebsocketUsingAdapterPath() throws URISyntaxException {\n-        when(request.getRequestURI()).thenReturn(new URI(\"http://127.0.0.1:8080/ws/\"+ testAdapterId));\n+        when(request.getRequestURI()).thenReturn(new URI(\"http://127.0.0.1:8080/ws/\" + testAdapterId));\n         webSocketCreatorAC.getValue().createWebSocket(request, response);\n         verify(testWsAdapter, times(1)).createWebSocket(request, response);\n     }\n\ndiff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceEqualsFilterTest.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceEqualsFilterTest.java\nindex 2376cc59b47..6660cbe1cf9 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceEqualsFilterTest.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceEqualsFilterTest.java\n@@ -53,7 +53,7 @@ public class PersistenceEqualsFilterTest {\n \n     @ParameterizedTest\n     @MethodSource(\"argumentProvider\")\n-    public void equalsFilterTest(State state, Collection<String> values,  boolean expected) {\n+    public void equalsFilterTest(State state, Collection<String> values, boolean expected) {\n         when(item.getState()).thenReturn(state);\n \n         PersistenceEqualsFilter filter = new PersistenceEqualsFilter(\"filter\", values, false);\n@@ -62,7 +62,7 @@ public void equalsFilterTest(State state, Collection<String> values,  boolean ex\n \n     @ParameterizedTest\n     @MethodSource(\"argumentProvider\")\n-    public void notEqualsFilterTest(State state, Collection<String> values,  boolean expected) {\n+    public void notEqualsFilterTest(State state, Collection<String> values, boolean expected) {\n         when(item.getState()).thenReturn(state);\n \n         PersistenceEqualsFilter filter = new PersistenceEqualsFilter(\"filter\", values, true);\n\ndiff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceIncludeFilterTest.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceIncludeFilterTest.java\nindex a43b85cab41..3b823cc0afe 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceIncludeFilterTest.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/filter/PersistenceIncludeFilterTest.java\n@@ -48,7 +48,7 @@ public class PersistenceIncludeFilterTest {\n \n     @ParameterizedTest\n     @MethodSource(\"argumentProvider\")\n-    public void includeFilterTest(State state, BigDecimal lower,  BigDecimal upper, String unit, boolean expected) {\n+    public void includeFilterTest(State state, BigDecimal lower, BigDecimal upper, String unit, boolean expected) {\n         when(item.getState()).thenReturn(state);\n \n         PersistenceIncludeFilter filter = new PersistenceIncludeFilter(\"filter\", lower, upper, unit, false);\n@@ -57,7 +57,7 @@ public void includeFilterTest(State state, BigDecimal lower,  BigDecimal upper,\n \n     @ParameterizedTest\n     @MethodSource(\"notArgumentProvider\")\n-    public void notIncludeFilterTest(State state, BigDecimal lower,  BigDecimal upper, String unit, boolean expected) {\n+    public void notIncludeFilterTest(State state, BigDecimal lower, BigDecimal upper, String unit, boolean expected) {\n         when(item.getState()).thenReturn(state);\n \n         PersistenceIncludeFilter filter = new PersistenceIncludeFilter(\"filter\", lower, upper, unit, true);\n\ndiff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/AutoUpdateManagerTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/AutoUpdateManagerTest.java\nindex 7286855c902..71c33008350 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/AutoUpdateManagerTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/AutoUpdateManagerTest.java\n@@ -97,7 +97,8 @@ public void setup() {\n     @Test\n     public void testAutoUpdateVetoFromChannelType() {\n         when(channelTypeRegistry.getChannelType(any(ChannelTypeUID.class)))\n-                .thenReturn(ChannelTypeBuilder.state(CHANNEL_TYPE_UID, \"label\", CoreItemFactory.SWITCH).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build());\n+                .thenReturn(ChannelTypeBuilder.state(CHANNEL_TYPE_UID, \"label\", CoreItemFactory.SWITCH)\n+                        .withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build());\n \n         autoUpdateManager.receiveCommand(ItemEventFactory.createCommandEvent(ITEM_NAME, OnOffType.ON), item);\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3688",
    "pr_id": 3688,
    "issue_id": 3685,
    "repo": "openhab/openhab-core",
    "problem_statement": "[marketplace] Unable to access add-on configuration when installed from marketplace\nSince the removal of the \"Other Services\" section in the UI, a couple of voice services that I had in the marketplace are imposible to configure through the main ui.\r\n\r\nI think is a core problem because after going around it I detected that the field  \"configDescriptionURI\", is returned black from the \"/rest/addons/marketplace:142036?serviceId=marketplace\" call. \r\nWhen the addon is installed locally that field contains the configuration uri and I can correctly access the configuration page.\r\n\r\nThis problem is reproducible in the 4.0.0-m4 version using the [ActionTemplateInterpreter Next](https://community.openhab.org/t/actiontemplateinterpreter-next-3-4-0-4-0-0/142036) or [HABSpeaker](https://community.openhab.org/t/habspeaker/140655) add-ons from the marketplace (both appear in the in the voice section now, I had the posts incorrectly tagged as binding before).\r\n\r\nEDIT: I think the problem exists in all kind of marketplace addons, not only voice.",
    "issue_word_count": 166,
    "test_files_count": 2,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityMarketplaceAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java",
      "bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/Addon.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java",
      "bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java"
    ],
    "base_commit": "e9719eb57763bed8ca5a81957bd2b65ddc5f9939",
    "head_commit": "fc17c2aa26a57f22fd1e8476d141b8cfa30cec93",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3688",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3688",
    "dockerfile": "",
    "pr_merged_at": "2023-07-06T06:26:34.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\nindex b07f57086dd..95f4b79f9e4 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonService.java\n@@ -20,6 +20,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Locale;\n+import java.util.Map;\n import java.util.Objects;\n import java.util.Set;\n import java.util.stream.Collectors;\n@@ -29,6 +30,8 @@\n import org.openhab.core.OpenHAB;\n import org.openhab.core.addon.Addon;\n import org.openhab.core.addon.AddonEventFactory;\n+import org.openhab.core.addon.AddonInfo;\n+import org.openhab.core.addon.AddonInfoRegistry;\n import org.openhab.core.addon.AddonService;\n import org.openhab.core.addon.AddonType;\n import org.openhab.core.cache.ExpiringCache;\n@@ -66,13 +69,15 @@ public abstract class AbstractRemoteAddonService implements AddonService {\n     protected final ConfigurationAdmin configurationAdmin;\n     protected final ExpiringCache<List<Addon>> cachedRemoteAddons = new ExpiringCache<>(Duration.ofMinutes(15),\n             this::getRemoteAddons);\n+    protected final AddonInfoRegistry addonInfoRegistry;\n     protected List<Addon> cachedAddons = List.of();\n     protected List<String> installedAddons = List.of();\n \n     private final Logger logger = LoggerFactory.getLogger(AbstractRemoteAddonService.class);\n \n     public AbstractRemoteAddonService(EventPublisher eventPublisher, ConfigurationAdmin configurationAdmin,\n-            StorageService storageService, String servicePid) {\n+            StorageService storageService, AddonInfoRegistry addonInfoRegistry, String servicePid) {\n+        this.addonInfoRegistry = addonInfoRegistry;\n         this.eventPublisher = eventPublisher;\n         this.configurationAdmin = configurationAdmin;\n         this.installedAddonStorage = storageService.getStorage(servicePid);\n@@ -83,6 +88,16 @@ protected BundleVersion getCoreVersion() {\n         return new BundleVersion(FrameworkUtil.getBundle(OpenHAB.class).getVersion().toString());\n     }\n \n+    private Addon convertFromStorage(Map.Entry<String, @Nullable String> entry) {\n+        Addon storedAddon = Objects.requireNonNull(gson.fromJson(entry.getValue(), Addon.class));\n+        AddonInfo addonInfo = addonInfoRegistry.getAddonInfo(storedAddon.getType() + \"-\" + storedAddon.getId());\n+        if (addonInfo != null && storedAddon.getConfigDescriptionURI().isBlank()) {\n+            return Addon.create(storedAddon).withConfigDescriptionURI(addonInfo.getConfigDescriptionURI()).build();\n+        } else {\n+            return storedAddon;\n+        }\n+    }\n+\n     @Override\n     public void refreshSource() {\n         if (!addonHandlers.stream().allMatch(MarketplaceAddonHandler::isReady)) {\n@@ -92,8 +107,7 @@ public void refreshSource() {\n         }\n         List<Addon> addons = new ArrayList<>();\n         try {\n-            installedAddonStorage.stream().map(e -> Objects.requireNonNull(gson.fromJson(e.getValue(), Addon.class)))\n-                    .forEach(addons::add);\n+            installedAddonStorage.stream().map(this::convertFromStorage).forEach(addons::add);\n         } catch (JsonSyntaxException e) {\n             List.copyOf(installedAddonStorage.getKeys()).forEach(installedAddonStorage::remove);\n             logger.error(\n\ndiff --git a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityMarketplaceAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityMarketplaceAddonService.java\nindex 7054b6f94bd..69104bec7e0 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityMarketplaceAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/community/CommunityMarketplaceAddonService.java\n@@ -36,6 +36,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.addon.Addon;\n+import org.openhab.core.addon.AddonInfoRegistry;\n import org.openhab.core.addon.AddonService;\n import org.openhab.core.addon.AddonType;\n import org.openhab.core.addon.marketplace.AbstractRemoteAddonService;\n@@ -115,8 +116,8 @@ public class CommunityMarketplaceAddonService extends AbstractRemoteAddonService\n     @Activate\n     public CommunityMarketplaceAddonService(final @Reference EventPublisher eventPublisher,\n             @Reference ConfigurationAdmin configurationAdmin, @Reference StorageService storageService,\n-            Map<String, Object> config) {\n-        super(eventPublisher, configurationAdmin, storageService, SERVICE_PID);\n+            @Reference AddonInfoRegistry addonInfoRegistry, Map<String, Object> config) {\n+        super(eventPublisher, configurationAdmin, storageService, addonInfoRegistry, SERVICE_PID);\n         modified(config);\n     }\n \n@@ -200,10 +201,13 @@ protected List<Addon> getRemoteAddons() {\n \n     @Override\n     public @Nullable Addon getAddon(String uid, @Nullable Locale locale) {\n+        String queryId = uid.startsWith(ADDON_ID_PREFIX) ? uid : ADDON_ID_PREFIX + uid;\n+\n         // check if it is an installed add-on (cachedAddons also contains possibly incomplete results from the remote\n         // side, we need to retrieve them from Discourse)\n-        if (installedAddons.contains(uid)) {\n-            return cachedAddons.stream().filter(e -> uid.equals(e.getUid())).findAny().orElse(null);\n+\n+        if (installedAddons.contains(queryId)) {\n+            return cachedAddons.stream().filter(e -> queryId.equals(e.getUid())).findAny().orElse(null);\n         }\n \n         if (!remoteEnabled()) {\n@@ -437,11 +441,13 @@ private Addon convertTopicToAddon(DiscourseTopicResponseDTO topic) {\n         boolean installed = addonHandlers.stream()\n                 .anyMatch(handler -> handler.supports(type, contentType) && handler.isInstalled(uid));\n \n-        return Addon.create(uid).withType(type).withId(id).withContentType(contentType).withLabel(topic.title)\n-                .withImageLink(topic.imageUrl).withLink(COMMUNITY_TOPIC_URL + topic.id.toString())\n+        Addon.Builder builder = Addon.create(uid).withType(type).withId(id).withContentType(contentType)\n+                .withLabel(topic.title).withImageLink(topic.imageUrl)\n+                .withLink(COMMUNITY_TOPIC_URL + topic.id.toString())\n                 .withAuthor(topic.postStream.posts[0].displayUsername).withMaturity(maturity)\n-                .withDetailedDescription(detailedDescription).withInstalled(installed).withProperties(properties)\n-                .build();\n+                .withDetailedDescription(detailedDescription).withInstalled(installed).withProperties(properties);\n+\n+        return builder.build();\n     }\n \n     private @Nullable String determineIdFromUrl(String url) {\n\ndiff --git a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java\nindex 626c6852724..0b39fd1460c 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/main/java/org/openhab/core/addon/marketplace/internal/json/JsonAddonService.java\n@@ -30,6 +30,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.addon.Addon;\n+import org.openhab.core.addon.AddonInfoRegistry;\n import org.openhab.core.addon.AddonService;\n import org.openhab.core.addon.marketplace.AbstractRemoteAddonService;\n import org.openhab.core.addon.marketplace.MarketplaceAddonHandler;\n@@ -78,8 +79,9 @@ public class JsonAddonService extends AbstractRemoteAddonService {\n \n     @Activate\n     public JsonAddonService(@Reference EventPublisher eventPublisher, @Reference StorageService storageService,\n-            @Reference ConfigurationAdmin configurationAdmin, Map<String, Object> config) {\n-        super(eventPublisher, configurationAdmin, storageService, SERVICE_PID);\n+            @Reference ConfigurationAdmin configurationAdmin, @Reference AddonInfoRegistry addonInfoRegistry,\n+            Map<String, Object> config) {\n+        super(eventPublisher, configurationAdmin, storageService, addonInfoRegistry, SERVICE_PID);\n         modified(config);\n     }\n \n\ndiff --git a/bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/Addon.java b/bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/Addon.java\nindex 84019c79fb9..e1d06175ae9 100644\n--- a/bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/Addon.java\n+++ b/bundles/org.openhab.core.addon/src/main/java/org/openhab/core/addon/Addon.java\n@@ -304,6 +304,33 @@ public static Builder create(String uid) {\n         return new Builder(uid);\n     }\n \n+    public static Builder create(Addon addon) {\n+        Addon.Builder builder = new Builder(addon.uid);\n+        builder.id = addon.id;\n+        builder.label = addon.label;\n+        builder.version = addon.version;\n+        builder.maturity = addon.maturity;\n+        builder.compatible = addon.compatible;\n+        builder.contentType = addon.contentType;\n+        builder.link = addon.link;\n+        builder.author = addon.author;\n+        builder.verifiedAuthor = addon.verifiedAuthor;\n+        builder.installed = addon.installed;\n+        builder.type = addon.type;\n+        builder.description = addon.description;\n+        builder.detailedDescription = addon.detailedDescription;\n+        builder.configDescriptionURI = addon.configDescriptionURI;\n+        builder.keywords = addon.keywords;\n+        builder.countries = addon.countries;\n+        builder.license = addon.license;\n+        builder.connection = addon.connection;\n+        builder.backgroundColor = addon.backgroundColor;\n+        builder.imageLink = addon.imageLink;\n+        builder.properties = addon.properties;\n+        builder.loggerPackages = addon.loggerPackages;\n+        return builder;\n+    }\n+\n     public static class Builder {\n         private final String uid;\n         private String id;\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\nindex 58004557856..dac9fa3fc09 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/AbstractRemoteAddonServiceTest.java\n@@ -43,6 +43,7 @@\n import org.mockito.junit.jupiter.MockitoSettings;\n import org.mockito.quality.Strictness;\n import org.openhab.core.addon.Addon;\n+import org.openhab.core.addon.AddonInfoRegistry;\n import org.openhab.core.addon.marketplace.test.TestAddonHandler;\n import org.openhab.core.addon.marketplace.test.TestAddonService;\n import org.openhab.core.events.Event;\n@@ -64,6 +65,7 @@\n @NonNullByDefault\n public class AbstractRemoteAddonServiceTest {\n     private @Mock @NonNullByDefault({}) StorageService storageService;\n+    private @Mock @NonNullByDefault({}) AddonInfoRegistry addonInfoRegistry;\n     private @Mock @NonNullByDefault({}) ConfigurationAdmin configurationAdmin;\n     private @Mock @NonNullByDefault({}) EventPublisher eventPublisher;\n     private @Mock @NonNullByDefault({}) Configuration configuration;\n@@ -82,7 +84,7 @@ public void initialize() throws IOException {\n \n         addonHandler = new TestAddonHandler();\n \n-        addonService = new TestAddonService(eventPublisher, configurationAdmin, storageService);\n+        addonService = new TestAddonService(eventPublisher, configurationAdmin, storageService, addonInfoRegistry);\n         addonService.addAddonHandler(addonHandler);\n     }\n \n@@ -93,7 +95,7 @@ public void testSourceNotRefreshedIfAddonHandlerNotReady() {\n         addonHandler = new TestAddonHandler();\n         addonHandler.setReady(false);\n \n-        addonService = new TestAddonService(eventPublisher, configurationAdmin, storageService);\n+        addonService = new TestAddonService(eventPublisher, configurationAdmin, storageService, addonInfoRegistry);\n         addonService.addAddonHandler(addonHandler);\n \n         List<Addon> addons = addonService.getAddons(null);\n\ndiff --git a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java\nindex 73ffa5cead0..fe5bc672a5a 100644\n--- a/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java\n+++ b/bundles/org.openhab.core.addon.marketplace/src/test/java/org/openhab/core/addon/marketplace/test/TestAddonService.java\n@@ -21,6 +21,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.addon.Addon;\n+import org.openhab.core.addon.AddonInfoRegistry;\n import org.openhab.core.addon.marketplace.AbstractRemoteAddonService;\n import org.openhab.core.addon.marketplace.BundleVersion;\n import org.openhab.core.addon.marketplace.MarketplaceAddonHandler;\n@@ -51,8 +52,8 @@ public class TestAddonService extends AbstractRemoteAddonService {\n     private int remoteCalls = 0;\n \n     public TestAddonService(EventPublisher eventPublisher, ConfigurationAdmin configurationAdmin,\n-            StorageService storageService) {\n-        super(eventPublisher, configurationAdmin, storageService, SERVICE_PID);\n+            StorageService storageService, AddonInfoRegistry addonInfoRegistry) {\n+        super(eventPublisher, configurationAdmin, storageService, addonInfoRegistry, SERVICE_PID);\n     }\n \n     @Override\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3684",
    "pr_id": 3684,
    "issue_id": 3667,
    "repo": "openhab/openhab-core",
    "problem_statement": "[UoM] add unit cal as energy\nCalory is missing as a unit for energy (1 cal = 4.184 J) \r\n\r\nSome Scales (with Measurement for Fat, Water, BMI) do provide a recommendation for daily energy in kcal. Would be nice to have the option to use the unit \"the openHAB way\" :)",
    "issue_word_count": 50,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java"
    ],
    "base_commit": "a656073352ee49bebbc358c2e2603de811ff0b21",
    "head_commit": "eb75ce81969ab391e34bfca992778c4fab23c213",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3684",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3684",
    "dockerfile": "",
    "pr_merged_at": "2023-07-15T20:18:27.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java\nindex ce910fe11a7..ae175a6d9e7 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/Units.java\n@@ -12,6 +12,7 @@\n  */\n package org.openhab.core.library.unit;\n \n+import java.math.BigDecimal;\n import java.math.BigInteger;\n \n import javax.measure.Quantity;\n@@ -122,6 +123,8 @@ public final class Units extends CustomUnits {\n     public static final Unit<ElectricPotential> VOLT = addUnit(tech.units.indriya.unit.Units.VOLT);\n     public static final Unit<ElectricResistance> OHM = addUnit(tech.units.indriya.unit.Units.OHM);\n     public static final Unit<Energy> JOULE = addUnit(tech.units.indriya.unit.Units.JOULE);\n+    public static final Unit<Energy> CALORIE = addUnit(JOULE.multiply(new BigDecimal(\"4.184\")));\n+    public static final Unit<Energy> KILO_CALORIE = addUnit(MetricPrefix.KILO(CALORIE));\n     public static final Unit<Energy> WATT_SECOND = addUnit(\n             new ProductUnit<>(tech.units.indriya.unit.Units.WATT.multiply(tech.units.indriya.unit.Units.SECOND)));\n     public static final Unit<Energy> WATT_HOUR = addUnit(\n@@ -241,6 +244,8 @@ public final class Units extends CustomUnits {\n         SimpleUnitFormat.getInstance().label(BIT_PER_SECOND, \"bit/s\");\n         SimpleUnitFormat.getInstance().label(BYTE, \"B\");\n         SimpleUnitFormat.getInstance().alias(BYTE, \"o\");\n+        SimpleUnitFormat.getInstance().label(CALORIE, \"cal\");\n+        SimpleUnitFormat.getInstance().label(KILO_CALORIE, \"kcal\");\n         SimpleUnitFormat.getInstance().label(CURIE, \"Ci\");\n         SimpleUnitFormat.getInstance().label(MILLI_CURIE, \"mCi\");\n         SimpleUnitFormat.getInstance().label(MICRO_CURIE, \"ÂµCi\");\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java\nindex 68bdd23b414..95264a56ac0 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/UnitsTest.java\n@@ -401,6 +401,20 @@ public void testRpm() {\n         assertThat(converted.doubleValue(), is(closeTo(1.00, DEFAULT_ERROR)));\n     }\n \n+    @Test\n+    public void testCalorie() {\n+        QuantityType<?> oneCalorie = QuantityType.valueOf(\"1 cal\");\n+        QuantityType<?> converted = oneCalorie.toUnit(\"J\");\n+        assertThat(converted.doubleValue(), is(closeTo(4.184, DEFAULT_ERROR)));\n+    }\n+\n+    @Test\n+    public void testKiloCalorie() {\n+        QuantityType<?> oneKiloCalorie = QuantityType.valueOf(\"1 kcal\");\n+        QuantityType<?> converted = oneKiloCalorie.toUnit(\"J\");\n+        assertThat(converted.doubleValue(), is(closeTo(4184.0, DEFAULT_ERROR)));\n+    }\n+\n     private static class QuantityEquals extends IsEqual<Quantity<?>> {\n         private Quantity<?> quantity;\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3674",
    "pr_id": 3674,
    "issue_id": 3672,
    "repo": "openhab/openhab-core",
    "problem_statement": "[metrics] Duplicate values in Influx for same thing\nI have installed the metrics service via .cfg file (FYI using only GUI does not seem to do anything, only once I created metrics.cfg on the backend did it start inserting values) However while setting up a Grafana Dashboard to monitor when a thing goes OFFLINE, I found loads of examples where the last value in the UID was defined by itself, but shows OFFLINE.\r\n\r\nIt would also be handy if there was a config to use Thing Label instead of UUID (substituting _ for spaces as I assume influx would not enjoy that..)\r\n\r\n## Expected Behavior\r\ntime                     metric_type openhab_core_metric thing                                               value\r\n2023-02-24T23:56:40.993Z gauge       true                sonos:Amp:RINCON_347E5C0D150501400                  3\r\n\r\n## Current Behavior\r\ntime                     metric_type openhab_core_metric thing                                               value\r\n2023-02-24T23:56:40.993Z gauge       true                sonos:Amp:RINCON_347E5C0D150501400                  3\r\n2023-02-24T23:56:40.992Z gauge       true                RINCON_347E5C0D150501400                            4\r\n\r\n\r\n## Your Environment\r\n* Version used: 3.4.0\r\n* Influx 1.8.2\r\n",
    "issue_word_count": 162,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java",
      "bundles/org.openhab.core.io.monitor/src/test/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetricTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.io.monitor/src/test/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetricTest.java"
    ],
    "base_commit": "db976101116804d65df232f283827f4b78ade096",
    "head_commit": "f4382a3fe5cfc3354d3dbc43ed25083b038da4db",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3674",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3674",
    "dockerfile": "",
    "pr_merged_at": "2023-07-02T07:31:03.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java\nindex b74cd99416a..4501bbacfed 100644\n--- a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java\n+++ b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java\n@@ -40,16 +40,18 @@\n import io.micrometer.core.instrument.Tags;\n \n /**\n- * The {@link ThingStateMetric} class implements a metric for the openHAB things states.\n+ * The {@link ThingStateMetric} class implements a metric for the openHAB things\n+ * states.\n  *\n  * @author Robert Bach - Initial contribution\n+ * @author Scott Hraban - Create Meter using thingUid instead of thingId during\n+ *         bind phase\n  */\n @NonNullByDefault\n public class ThingStateMetric implements OpenhabCoreMeterBinder, EventSubscriber {\n     private final Logger logger = LoggerFactory.getLogger(ThingStateMetric.class);\n     public static final String METRIC_NAME = \"openhab.thing.state\";\n     private static final String THING_TAG_NAME = \"thing\";\n-    private static final String THINGSTATUS_TOPIC_PREFIX = \"openhab/things/\";\n     private final ThingRegistry thingRegistry;\n     private final Meter.Id commonMeterId;\n     private final Map<Meter.Id, AtomicInteger> registeredMeters = new HashMap<>();\n@@ -70,7 +72,7 @@ public void bindTo(@NonNullByDefault({}) MeterRegistry meterRegistry) {\n         logger.debug(\"ThingStateMetric is being bound...\");\n         this.meterRegistry = meterRegistry;\n         thingRegistry.getAll().forEach(\n-                thing -> createOrUpdateMetricForBundleState(thing.getUID().getId(), thing.getStatus().ordinal()));\n+                thing -> createOrUpdateMetricForBundleState(thing.getUID().getAsString(), thing.getStatus().ordinal()));\n         eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n     }\n \n@@ -111,10 +113,13 @@ public Set<String> getSubscribedEventTypes() {\n \n     @Override\n     public void receive(Event event) {\n-        logger.trace(\"Received ThingStatusInfo(Changed)Event...\");\n-        String thingId = event.getTopic().substring(THINGSTATUS_TOPIC_PREFIX.length(),\n-                event.getTopic().lastIndexOf('/'));\n-        ThingStatus status = gson.fromJson(event.getPayload(), ThingStatusInfo.class).getStatus();\n-        createOrUpdateMetricForBundleState(thingId, status.ordinal());\n+        if (event instanceof ThingStatusInfoEvent thingEvent) {\n+            logger.trace(\"Received ThingStatusInfo(Changed)Event...\");\n+            String thingUid = thingEvent.getThingUID().getAsString();\n+            ThingStatus status = gson.fromJson(event.getPayload(), ThingStatusInfo.class).getStatus();\n+            createOrUpdateMetricForBundleState(thingUid, status.ordinal());\n+        } else {\n+            logger.trace(\"Received unsubscribed for event type {}\", event.getClass().getSimpleName());\n+        }\n     }\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.io.monitor/src/test/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetricTest.java b/bundles/org.openhab.core.io.monitor/src/test/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetricTest.java\nnew file mode 100644\nindex 00000000000..61118050546\n--- /dev/null\n+++ b/bundles/org.openhab.core.io.monitor/src/test/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetricTest.java\n@@ -0,0 +1,91 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.monitor.internal.metrics;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingRegistry;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingStatusDetail;\n+import org.openhab.core.thing.ThingStatusInfo;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.events.ThingEventFactory;\n+import org.openhab.core.thing.internal.ThingImpl;\n+import org.osgi.framework.BundleContext;\n+\n+import io.micrometer.core.instrument.Meter;\n+import io.micrometer.core.instrument.Tag;\n+import io.micrometer.core.instrument.simple.SimpleMeterRegistry;\n+\n+/**\n+ * Tests for ThingStateMetric class\n+ *\n+ * @author Scott Hraban - Initial contribution\n+ */\n+@ExtendWith(MockitoExtension.class)\n+@NonNullByDefault\n+public class ThingStateMetricTest {\n+\n+    @Test\n+    public void testThingUidAlwaysUsedToCreateMeter() {\n+        final String strThingTypeUid = \"sonos:Amp\";\n+\n+        final String strThingUid = strThingTypeUid + \":RINCON_347E5C0D150501400\";\n+        ThingUID thingUid = new ThingUID(strThingUid);\n+        Thing thing = new ThingImpl(new ThingTypeUID(strThingTypeUid), thingUid);\n+\n+        final String strThingUid2 = strThingTypeUid + \":foo\";\n+        ThingUID thingUid2 = new ThingUID(strThingUid2);\n+\n+        ThingRegistry thingRegistry = mock(ThingRegistry.class);\n+\n+        SimpleMeterRegistry meterRegistry = new SimpleMeterRegistry();\n+\n+        ThingStateMetric thingStateMetric = new ThingStateMetric(mock(BundleContext.class), thingRegistry,\n+                new HashSet<Tag>());\n+\n+        // Only one meter registered at bind time\n+        doReturn(Collections.singleton(thing)).when(thingRegistry).getAll();\n+        thingStateMetric.bindTo(meterRegistry);\n+\n+        List<Meter> meters = meterRegistry.getMeters();\n+        assertEquals(1, meters.size());\n+        assertEquals(strThingUid, meters.get(0).getId().getTag(\"thing\"));\n+\n+        // Still only one meter registered after receiving an event\n+        ThingStatusInfo thingStatusInfo = new ThingStatusInfo(ThingStatus.ONLINE, ThingStatusDetail.NONE, null);\n+        thingStateMetric.receive(ThingEventFactory.createStatusInfoEvent(thingUid, thingStatusInfo));\n+\n+        meters = meterRegistry.getMeters();\n+        assertEquals(1, meters.size());\n+        assertEquals(strThingUid, meters.get(0).getId().getTag(\"thing\"));\n+\n+        // Now another one is added\n+        thingStateMetric.receive(ThingEventFactory.createStatusInfoEvent(thingUid2, thingStatusInfo));\n+\n+        meters = meterRegistry.getMeters();\n+        assertEquals(2, meters.size());\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3652",
    "pr_id": 3652,
    "issue_id": 3650,
    "repo": "openhab/openhab-core",
    "problem_statement": "Sitemap event subscription for whole sitemap instead of one page only\nMotivation:\r\n\r\nI am trying to implement a display based on sitemaps (improving upon the [m5panel project](https://github.com/TAKeanice/m5panel)).\r\nAs my display interprets the sitemap slightly different than the BasicUI, and in general, different displays might interpret sitemaps in different ways, the subscription mechanism does not fit: An implementation for TV-sized screens may want to display all of the pages of a sitemap at once, while a small mobile display like the m5panel does not want to issue a new request on each of the frequently occuring navigations, but rather show the page navigated to with the up-to-date widgets straight away.\r\n\r\nCurrent situation:\r\n\r\nIt took me quite a while to figure out how the subscriptions work for the basic ui: The backend is involved in changing the page of the subscription on navigation to another page. This implies, that at all times only one page can be visible and kept up to date.\r\nSubscriptions are currently limited to a single page per event stream, and an alternative display implementation would have to open one subscription for each page it wants to keep up to date.\r\n\r\nProposed change:\r\n\r\nAllow subscriptions for all pages of a sitemap at once (i.e., send updates for all widgets in the whole sitemap instead of only the widgets on a single page)\r\n\r\nImplementation option:\r\n\r\n* The Rest API (specifically the SitemapResource) accepts requests that only specify the sitemap. Currently, it issues a BAD_REQUEST error response when no pageId parameter is supplied.\r\n* The SitemapSubscriptionService changes its pageOfSubscription map to hold a set of pages for each subscription id. All places where the pageOfSubscription map is used adapt to that change. Transitively, the getPageId method changes to return a set of pageIds for the subscription, and the usages of that method (two in SitemapResource) are adapted accordingly.\r\n* The method `public void setPageId(String subscriptionId, String sitemapName, String pageId)` reacts to a `null` value for pageId by subscribing to _all_ pages of the sitemap\r\n\r\nhttps://github.com/openhab/openhab-core/pull/3635 already refactors some of the SitemapSubscriptionService and the SitemapResource. Maybe itÂ´s possible for @J-N-K to increase the scope of the PR while heÂ´s at it? Otherwise, I am open to contributing a change myself. Please let me know :)",
    "issue_word_count": 391,
    "test_files_count": 1,
    "non_test_files_count": 3,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/WidgetsChangeListener.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java"
    ],
    "base_commit": "c3ada84b77ca1d083164e97417a3441a48c3ba50",
    "head_commit": "85d0bab07a609834014e514a4b02c518e74d49f0",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3652",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3652",
    "dockerfile": "",
    "pr_merged_at": "2024-05-01T14:16:08.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java\nindex 736cd05b626..39c0b2bc10c 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java\n@@ -15,6 +15,7 @@\n import java.time.Duration;\n import java.time.Instant;\n import java.util.ArrayList;\n+import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n@@ -29,8 +30,8 @@\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventSubscriber;\n-import org.openhab.core.io.rest.sitemap.internal.PageChangeListener;\n import org.openhab.core.io.rest.sitemap.internal.SitemapEvent;\n+import org.openhab.core.io.rest.sitemap.internal.WidgetsChangeListener;\n import org.openhab.core.items.GroupItem;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.events.ItemStatePredictedEvent;\n@@ -72,6 +73,7 @@ public class SitemapSubscriptionService implements ModelRepositoryChangeListener\n     private static final String SITEMAP_PAGE_SEPARATOR = \"#\";\n     private static final String SITEMAP_SUFFIX = \".sitemap\";\n     private static final int DEFAULT_MAX_SUBSCRIPTIONS = 50;\n+    private static final Duration WAIT_AFTER_CREATE_SECONDS = Duration.ofSeconds(30);\n \n     private final Logger logger = LoggerFactory.getLogger(SitemapSubscriptionService.class);\n     private final BundleContext bundleContext;\n@@ -88,7 +90,7 @@ public interface SitemapSubscriptionCallback {\n     private final List<SitemapProvider> sitemapProviders = new ArrayList<>();\n \n     /* subscription id -> sitemap+page */\n-    private final Map<String, String> pageOfSubscription = new ConcurrentHashMap<>();\n+    private final Map<String, String> scopeOfSubscription = new ConcurrentHashMap<>();\n \n     /* subscription id -> callback */\n     private final Map<String, SitemapSubscriptionCallback> callbacks = new ConcurrentHashMap<>();\n@@ -112,7 +114,7 @@ public SitemapSubscriptionService(Map<String, Object> config, final @Reference I\n \n     @Deactivate\n     protected void deactivate() {\n-        pageOfSubscription.clear();\n+        scopeOfSubscription.clear();\n         callbacks.clear();\n         creationInstants.clear();\n         pageChangeListeners.values().forEach(l -> l.serviceRegistration.unregister());\n@@ -139,12 +141,12 @@ private void applyConfig(Map<String, Object> config) {\n     }\n \n     @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n-    protected void addSitemapProvider(SitemapProvider provider) {\n+    public void addSitemapProvider(SitemapProvider provider) {\n         sitemapProviders.add(provider);\n         provider.addModelChangeListener(this);\n     }\n \n-    protected void removeSitemapProvider(SitemapProvider provider) {\n+    public void removeSitemapProvider(SitemapProvider provider) {\n         sitemapProviders.remove(provider);\n         provider.removeModelChangeListener(this);\n     }\n@@ -176,10 +178,10 @@ protected void removeSitemapProvider(SitemapProvider provider) {\n     public void removeSubscription(String subscriptionId) {\n         creationInstants.remove(subscriptionId);\n         callbacks.remove(subscriptionId);\n-        String sitemapPage = pageOfSubscription.remove(subscriptionId);\n-        if (sitemapPage != null && !pageOfSubscription.containsValue(sitemapPage)) {\n+        String sitemapWithPageId = scopeOfSubscription.remove(subscriptionId);\n+        if (sitemapWithPageId != null && !scopeOfSubscription.containsValue(sitemapWithPageId)) {\n             // this was the only subscription listening on this page, so we can dispose the listener\n-            ListenerRecord listener = pageChangeListeners.remove(sitemapPage);\n+            ListenerRecord listener = pageChangeListeners.remove(sitemapWithPageId);\n             if (listener != null) {\n                 listener.serviceRegistration().unregister();\n             }\n@@ -204,7 +206,7 @@ public boolean exists(String subscriptionId) {\n      * @return the id of the currently active page or null if no page is currently set for the subscription\n      */\n     public @Nullable String getPageId(String subscriptionId) {\n-        String sitemapWithPageId = pageOfSubscription.get(subscriptionId);\n+        String sitemapWithPageId = scopeOfSubscription.get(subscriptionId);\n         return (sitemapWithPageId == null) ? null : extractPageId(sitemapWithPageId);\n     }\n \n@@ -215,7 +217,7 @@ public boolean exists(String subscriptionId) {\n      * @return the name of the current sitemap or null if no sitemap is currently set for the subscription\n      */\n     public @Nullable String getSitemapName(String subscriptionId) {\n-        String sitemapWithPageId = pageOfSubscription.get(subscriptionId);\n+        String sitemapWithPageId = scopeOfSubscription.get(subscriptionId);\n         return (sitemapWithPageId == null) ? null : extractSitemapName(sitemapWithPageId);\n     }\n \n@@ -223,69 +225,94 @@ private String extractSitemapName(String sitemapWithPageId) {\n         return sitemapWithPageId.split(SITEMAP_PAGE_SEPARATOR)[0];\n     }\n \n+    private boolean isPageListener(String sitemapWithPageId) {\n+        return sitemapWithPageId.contains(SITEMAP_PAGE_SEPARATOR);\n+    }\n+\n     private String extractPageId(String sitemapWithPageId) {\n         return sitemapWithPageId.split(SITEMAP_PAGE_SEPARATOR)[1];\n     }\n \n     /**\n-     * Updates the subscription to send events for the provided page id.\n+     * Updates the subscription to send events for the provided page id (or whole sitemap if pageId is null).\n      *\n      * @param subscriptionId the subscription to update\n      * @param sitemapName the current sitemap name\n-     * @param pageId the current page id\n+     * @param pageId the current page id or null for whole sitemap subscription\n      */\n-    public void setPageId(String subscriptionId, String sitemapName, String pageId) {\n+    public void updateSubscriptionLocation(String subscriptionId, String sitemapName, @Nullable String pageId) {\n         SitemapSubscriptionCallback callback = callbacks.get(subscriptionId);\n         if (callback != null) {\n-            String oldSitemapPage = pageOfSubscription.remove(subscriptionId);\n-            if (oldSitemapPage != null) {\n-                removeCallbackFromListener(oldSitemapPage, callback);\n+            String oldSitemapWithPage = scopeOfSubscription.remove(subscriptionId);\n+            if (oldSitemapWithPage != null) {\n+                removeCallbackFromListener(oldSitemapWithPage, callback);\n             }\n             addCallbackToListener(sitemapName, pageId, callback);\n-            pageOfSubscription.put(subscriptionId, getValue(sitemapName, pageId));\n+            String scopeIdentifier = getScopeIdentifier(sitemapName, pageId);\n+            scopeOfSubscription.put(subscriptionId, scopeIdentifier);\n \n-            logger.debug(\"Subscription {} changed to page {} of sitemap {} ({} active subscriptions}\", subscriptionId,\n-                    pageId, sitemapName, callbacks.size());\n+            logger.debug(\"Subscription {} changed to {} ({} active subscriptions}\", subscriptionId, scopeIdentifier,\n+                    callbacks.size());\n         } else {\n             throw new IllegalArgumentException(\"Subscription \" + subscriptionId + \" does not exist!\");\n         }\n     }\n \n-    private void addCallbackToListener(String sitemapName, String pageId, SitemapSubscriptionCallback callback) {\n-        ListenerRecord listener = pageChangeListeners.computeIfAbsent(getValue(sitemapName, pageId), v -> {\n-            PageChangeListener newListener = new PageChangeListener(sitemapName, pageId, itemUIRegistry,\n+    private void addCallbackToListener(String sitemapName, @Nullable String pageId,\n+            SitemapSubscriptionCallback callback) {\n+        String sitemapWithPageId = getScopeIdentifier(sitemapName, pageId);\n+        ListenerRecord listener = pageChangeListeners.computeIfAbsent(sitemapWithPageId, v -> {\n+            WidgetsChangeListener newListener = new WidgetsChangeListener(sitemapName, pageId, itemUIRegistry,\n                     collectWidgets(sitemapName, pageId));\n             ServiceRegistration<?> registration = bundleContext.registerService(EventSubscriber.class.getName(),\n                     newListener, null);\n             return new ListenerRecord(newListener, registration);\n         });\n-        listener.pageChangeListener().addCallback(callback);\n+        listener.widgetsChangeListener().addCallback(callback);\n     }\n \n-    private EList<Widget> collectWidgets(String sitemapName, String pageId) {\n+    public EList<Widget> collectWidgets(String sitemapName, @Nullable String pageId) {\n         EList<Widget> widgets = new BasicEList<>();\n \n         Sitemap sitemap = getSitemap(sitemapName);\n-        if (sitemap != null) {\n-            if (pageId.equals(sitemap.getName())) {\n-                widgets = itemUIRegistry.getChildren(sitemap);\n-            } else {\n-                Widget pageWidget = itemUIRegistry.getWidget(sitemap, pageId);\n-                if (pageWidget instanceof LinkableWidget widget) {\n-                    widgets = itemUIRegistry.getChildren(widget);\n-                    // We add the page widget. It will help any UI to update the page title.\n-                    widgets.add(pageWidget);\n+        if (sitemap == null) {\n+            // no sitemap found with the given name\n+            return widgets;\n+        }\n+\n+        if (pageId != null && !pageId.equals(sitemap.getName())) {\n+            // subscribing to subpage of sitemap --> get all widgets from that page\n+            Widget pageWidget = itemUIRegistry.getWidget(sitemap, pageId);\n+            if (pageWidget instanceof LinkableWidget widget) {\n+                widgets.addAll(itemUIRegistry.getChildren(widget));\n+                // We add the page widget. It will help any UI to update the page title.\n+                widgets.add(pageWidget);\n+            }\n+        } else {\n+            // subscribing to main page --> get immediate children of sitemap\n+            widgets.addAll(itemUIRegistry.getChildren(sitemap));\n+            if (pageId == null) {\n+                // subscribing to whole sitemap --> get items for all subpages as well\n+                LinkedList<Widget> childrenQueue = new LinkedList<>(widgets);\n+                while (!childrenQueue.isEmpty()) {\n+                    Widget child = childrenQueue.remove(0);\n+                    if (child instanceof LinkableWidget) {\n+                        List<Widget> subWidgets = itemUIRegistry.getChildren((LinkableWidget) child);\n+                        widgets.addAll(subWidgets);\n+                        childrenQueue.addAll(subWidgets);\n+                    }\n                 }\n             }\n         }\n+        logger.debug(\"Collected {} widgets for sitemap: {}, page id {}\", widgets.size(), sitemapName, pageId);\n         return widgets;\n     }\n \n     private void removeCallbackFromListener(String sitemapPage, SitemapSubscriptionCallback callback) {\n         ListenerRecord oldListener = pageChangeListeners.get(sitemapPage);\n         if (oldListener != null) {\n-            oldListener.pageChangeListener().removeCallback(callback);\n-            if (!pageOfSubscription.containsValue(sitemapPage)) {\n+            oldListener.widgetsChangeListener().removeCallback(callback);\n+            if (!scopeOfSubscription.containsValue(sitemapPage)) {\n                 // no other callbacks are left here, so we can safely dispose the listener\n                 oldListener.serviceRegistration().unregister();\n                 pageChangeListeners.remove(sitemapPage);\n@@ -293,8 +320,8 @@ private void removeCallbackFromListener(String sitemapPage, SitemapSubscriptionC\n         }\n     }\n \n-    private String getValue(String sitemapName, String pageId) {\n-        return sitemapName + SITEMAP_PAGE_SEPARATOR + pageId;\n+    private String getScopeIdentifier(String sitemapName, @Nullable String pageId) {\n+        return pageId == null ? sitemapName : sitemapName + SITEMAP_PAGE_SEPARATOR + pageId;\n     }\n \n     private @Nullable Sitemap getSitemap(String sitemapName) {\n@@ -318,11 +345,16 @@ public void modelChanged(String modelName, EventType type) {\n         for (Entry<String, ListenerRecord> listenerEntry : pageChangeListeners.entrySet()) {\n             String sitemapWithPage = listenerEntry.getKey();\n             String sitemapName = extractSitemapName(sitemapWithPage);\n-            String pageId = extractPageId(sitemapWithPage);\n \n+            EList<Widget> widgets;\n             if (sitemapName.equals(changedSitemapName)) {\n-                EList<Widget> widgets = collectWidgets(sitemapName, pageId);\n-                listenerEntry.getValue().pageChangeListener().sitemapContentChanged(widgets);\n+                if (isPageListener(sitemapWithPage)) {\n+                    String pageId = extractPageId(sitemapWithPage);\n+                    widgets = collectWidgets(sitemapName, pageId);\n+                } else {\n+                    widgets = collectWidgets(sitemapName, null);\n+                }\n+                listenerEntry.getValue().widgetsChangeListener().sitemapContentChanged(widgets);\n             }\n         }\n     }\n@@ -332,15 +364,16 @@ public void checkAliveClients() {\n         for (Entry<String, Instant> creationEntry : creationInstants.entrySet()) {\n             String subscriptionId = creationEntry.getKey();\n             SitemapSubscriptionCallback callback = callbacks.get(subscriptionId);\n-            if (getPageId(subscriptionId) == null && callback != null\n-                    && (creationEntry.getValue().plus(Duration.ofSeconds(30)).isBefore(Instant.now()))) {\n-                logger.debug(\"Release subscription {} as sitemap page is not set\", subscriptionId);\n+            if (!scopeOfSubscription.containsKey(subscriptionId) && callback != null\n+                    && (creationEntry.getValue().plus(WAIT_AFTER_CREATE_SECONDS).isBefore(Instant.now()))) {\n+                logger.debug(\"Release subscription {} as it was not queried within {} seconds\", subscriptionId,\n+                        WAIT_AFTER_CREATE_SECONDS);\n                 removeSubscription(subscriptionId);\n                 callback.onRelease(subscriptionId);\n             }\n         }\n         // Send an ALIVE event to all subscribers to trigger an exception for dead subscribers\n-        pageChangeListeners.values().forEach(l -> l.pageChangeListener().sendAliveEvent());\n+        pageChangeListeners.values().forEach(l -> l.widgetsChangeListener().sendAliveEvent());\n     }\n \n     @Override\n@@ -359,20 +392,21 @@ public void receive(Event event) {\n             }\n             for (ListenerRecord listener : pageChangeListeners.values()) {\n                 if (prediction.isConfirmation()) {\n-                    listener.pageChangeListener().keepCurrentState(item);\n+                    listener.widgetsChangeListener().keepCurrentState(item);\n                 } else {\n-                    listener.pageChangeListener().changeStateTo(item, prediction.getPredictedState());\n+                    listener.widgetsChangeListener().changeStateTo(item, prediction.getPredictedState());\n                 }\n             }\n         } else if (event instanceof ChannelDescriptionChangedEvent channelDescriptionChangedEvent) {\n             channelDescriptionChangedEvent.getLinkedItemNames().forEach(itemName -> {\n                 for (ListenerRecord listener : pageChangeListeners.values()) {\n-                    listener.pageChangeListener().descriptionChanged(itemName);\n+                    listener.widgetsChangeListener().descriptionChanged(itemName);\n                 }\n             });\n         }\n     }\n \n-    private record ListenerRecord(PageChangeListener pageChangeListener, ServiceRegistration<?> serviceRegistration) {\n+    private record ListenerRecord(WidgetsChangeListener widgetsChangeListener,\n+            ServiceRegistration<?> serviceRegistration) {\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\nindex 2a2c82fe546..bc70d4d1702 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\n@@ -18,8 +18,10 @@\n import java.util.Date;\n import java.util.HashSet;\n import java.util.LinkedList;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Set;\n import java.util.concurrent.CopyOnWriteArraySet;\n import java.util.concurrent.ScheduledExecutorService;\n@@ -260,15 +262,55 @@ public Response getSitemapData(@Context HttpHeaders headers,\n         final Locale locale = localeService.getLocale(language);\n         logger.debug(\"Received HTTP GET request from IP {} at '{}' for media type '{}'.\", request.getRemoteAddr(),\n                 uriInfo.getPath(), type);\n+        URI uri = uriInfo.getBaseUriBuilder().build();\n+        SitemapDTO responseObject = getSitemapBean(sitemapname, uri, locale, includeHiddenWidgets, false);\n+        return Response.ok(responseObject).build();\n+    }\n+\n+    /**\n+     *\n+     * Subscribe to a whole sitemap (all pages at once).\n+     * This is not a recommended option as it incurs high traffic\n+     * and might pose a high load on the server, depending on the sitemap size.\n+     * No built-in openhab UI should use this functionality.\n+     *\n+     */\n+    @GET\n+    @Path(\"/{sitemapname: [a-zA-Z_0-9]+}/*\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Operation(operationId = \"pollDataForSitemap\", summary = \"Polls the data for a whole sitemap. Not recommended due to potentially high traffic.\", responses = {\n+            @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(schema = @Schema(implementation = SitemapDTO.class))),\n+            @ApiResponse(responseCode = \"404\", description = \"Sitemap with requested name does not exist\"),\n+            @ApiResponse(responseCode = \"400\", description = \"Invalid subscription id has been provided.\") })\n+    public Response getSitemapData(@Context HttpHeaders headers,\n+            @HeaderParam(HttpHeaders.ACCEPT_LANGUAGE) @Parameter(description = \"language\") @Nullable String language,\n+            @PathParam(\"sitemapname\") @Parameter(description = \"sitemap name\") String sitemapname,\n+            @QueryParam(\"subscriptionid\") @Parameter(description = \"subscriptionid\") @Nullable String subscriptionId,\n+            @QueryParam(\"includeHidden\") @Parameter(description = \"include hidden widgets\") boolean includeHiddenWidgets) {\n+        final Locale locale = localeService.getLocale(language);\n+        logger.debug(\"Received HTTP GET request from IP {} at '{}'\", request.getRemoteAddr(), uriInfo.getPath());\n+\n+        if (subscriptionId != null) {\n+            try {\n+                subscriptions.updateSubscriptionLocation(subscriptionId, sitemapname, null);\n+            } catch (IllegalArgumentException e) {\n+                return JSONResponse.createErrorResponse(Response.Status.BAD_REQUEST, e.getMessage());\n+            }\n+        }\n+\n+        boolean timeout = false;\n+        if (headers.getRequestHeader(\"X-Atmosphere-Transport\") != null) {\n+            timeout = blockUntilChangeOccurs(sitemapname, null);\n+        }\n         SitemapDTO responseObject = getSitemapBean(sitemapname, uriInfo.getBaseUriBuilder().build(), locale,\n-                includeHiddenWidgets);\n+                includeHiddenWidgets, timeout);\n         return Response.ok(responseObject).build();\n     }\n \n     @GET\n     @Path(\"/{sitemapname: [a-zA-Z_0-9]+}/{pageid: [a-zA-Z_0-9]+}\")\n     @Produces(MediaType.APPLICATION_JSON)\n-    @Operation(operationId = \"pollDataForSitemap\", summary = \"Polls the data for a sitemap.\", responses = {\n+    @Operation(operationId = \"pollDataForPage\", summary = \"Polls the data for one page of a sitemap.\", responses = {\n             @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(schema = @Schema(implementation = PageDTO.class))),\n             @ApiResponse(responseCode = \"404\", description = \"Sitemap with requested name does not exist or page does not exist, or page refers to a non-linkable widget\"),\n             @ApiResponse(responseCode = \"400\", description = \"Invalid subscription id has been provided.\") })\n@@ -283,7 +325,7 @@ public Response getPageData(@Context HttpHeaders headers,\n \n         if (subscriptionId != null) {\n             try {\n-                subscriptions.setPageId(subscriptionId, sitemapname, pageId);\n+                subscriptions.updateSubscriptionLocation(subscriptionId, sitemapname, pageId);\n             } catch (IllegalArgumentException e) {\n                 return JSONResponse.createErrorResponse(Response.Status.BAD_REQUEST, e.getMessage());\n             }\n@@ -296,7 +338,7 @@ public Response getPageData(@Context HttpHeaders headers,\n             // so we do a simply listening for changes on the appropriate items\n             // The blocking has a timeout of 30 seconds. If this timeout is reached,\n             // we notice this information in the response object.\n-            timeout = blockUnlessChangeOccurs(sitemapname, pageId);\n+            timeout = blockUntilChangeOccurs(sitemapname, pageId);\n         }\n         PageDTO responseObject = getPageBean(sitemapname, pageId, uriInfo.getBaseUriBuilder().build(), locale, timeout,\n                 includeHiddenWidgets);\n@@ -333,6 +375,28 @@ public Object createEventSubscription() {\n         return JerseyResponseBuilderUtils.created(uri.toASCIIString());\n     }\n \n+    /**\n+     *\n+     * Subscribe to a whole sitemap (all pages at once).\n+     * This is not a recommended option as it incurs high SSE traffic\n+     * and might pose a high load on the server, depending on the sitemap size.\n+     * No built-in openhab UI should use this functionality.\n+     *\n+     */\n+    @GET\n+    @Path(SEGMENT_EVENTS + \"/{subscriptionid: [a-zA-Z_0-9-]+}/*\")\n+    @Produces(MediaType.SERVER_SENT_EVENTS)\n+    @Operation(operationId = \"getSitemapEvents\", summary = \"Get sitemap events for a whole sitemap. Not recommended due to potentially high traffic.\", responses = {\n+            @ApiResponse(responseCode = \"200\", description = \"OK\"),\n+            @ApiResponse(responseCode = \"400\", description = \"Missing sitemap parameter, or sitemap not linked successfully to the subscription.\"),\n+            @ApiResponse(responseCode = \"404\", description = \"Subscription not found.\") })\n+    public void getSitemapEvents(@Context final SseEventSink sseEventSink, @Context final HttpServletResponse response,\n+            @PathParam(\"subscriptionid\") @Parameter(description = \"subscription id\") String subscriptionId,\n+            @QueryParam(\"sitemap\") @Parameter(description = \"sitemap name\") @Nullable String sitemapname) {\n+\n+        getSitemapEvents(sseEventSink, response, subscriptionId, sitemapname, null, true);\n+    }\n+\n     /**\n      * Subscribes the connecting client to the stream of sitemap events.\n      */\n@@ -341,26 +405,31 @@ public Object createEventSubscription() {\n     @Produces(MediaType.SERVER_SENT_EVENTS)\n     @Operation(operationId = \"getSitemapEvents\", summary = \"Get sitemap events.\", responses = {\n             @ApiResponse(responseCode = \"200\", description = \"OK\"),\n-            @ApiResponse(responseCode = \"400\", description = \"Page not linked to the subscription.\"),\n+            @ApiResponse(responseCode = \"400\", description = \"Missing sitemap or page parameter, or page not linked successfully to the subscription.\"),\n             @ApiResponse(responseCode = \"404\", description = \"Subscription not found.\") })\n     public void getSitemapEvents(@Context final SseEventSink sseEventSink, @Context final HttpServletResponse response,\n             @PathParam(\"subscriptionid\") @Parameter(description = \"subscription id\") String subscriptionId,\n             @QueryParam(\"sitemap\") @Parameter(description = \"sitemap name\") @Nullable String sitemapname,\n             @QueryParam(\"pageid\") @Parameter(description = \"page id\") @Nullable String pageId) {\n+        getSitemapEvents(sseEventSink, response, subscriptionId, sitemapname, pageId, false);\n         logger.debug(\"Received HTTP GET request from IP {} at '{}' for sitemap {} and page {}\", request.getRemoteAddr(),\n                 uriInfo.getPath(), sitemapname, pageId);\n+    }\n \n+    private void getSitemapEvents(SseEventSink sseEventSink, HttpServletResponse response, String subscriptionId,\n+            @Nullable String sitemapname, @Nullable String pageId, boolean subscribeToWholeSitemap) {\n         final SseSinkInfo sinkInfo = knownSubscriptions.get(subscriptionId);\n         if (sinkInfo == null) {\n             logger.debug(\"Subscription id {} does not exist.\", subscriptionId);\n             response.setStatus(Status.NOT_FOUND.getStatusCode());\n             return;\n         }\n-        if (sitemapname != null && pageId != null) {\n-            subscriptions.setPageId(subscriptionId, sitemapname, pageId);\n+        if (sitemapname != null && (subscribeToWholeSitemap || pageId != null)) {\n+            subscriptions.updateSubscriptionLocation(subscriptionId, sitemapname, pageId);\n         }\n-        if (subscriptions.getSitemapName(subscriptionId) == null || subscriptions.getPageId(subscriptionId) == null) {\n-            logger.debug(\"Subscription id {} is not yet linked to a sitemap/page.\", subscriptionId);\n+        if (subscriptions.getSitemapName(subscriptionId) == null\n+                || (subscriptions.getPageId(subscriptionId) == null && !subscribeToWholeSitemap)) {\n+            logger.debug(\"Subscription id {} is not yet linked to a sitemap (or sitemap and page).\", subscriptionId);\n             response.setStatus(Status.BAD_REQUEST.getStatusCode());\n             return;\n         }\n@@ -453,10 +522,11 @@ public Collection<SitemapDTO> getSitemapBeans(URI uri) {\n         return beans;\n     }\n \n-    private SitemapDTO getSitemapBean(String sitemapname, URI uri, Locale locale, boolean includeHiddenWidgets) {\n+    private SitemapDTO getSitemapBean(String sitemapname, URI uri, Locale locale, boolean includeHiddenWidgets,\n+            boolean timeout) {\n         Sitemap sitemap = getSitemap(sitemapname);\n         if (sitemap != null) {\n-            return createSitemapBean(sitemapname, sitemap, uri, locale, includeHiddenWidgets);\n+            return createSitemapBean(sitemapname, sitemap, uri, locale, includeHiddenWidgets, timeout);\n         } else {\n             logger.info(\"Received HTTP GET request at '{}' for the unknown sitemap '{}'.\", uriInfo.getPath(),\n                     sitemapname);\n@@ -465,7 +535,7 @@ private SitemapDTO getSitemapBean(String sitemapname, URI uri, Locale locale, bo\n     }\n \n     private SitemapDTO createSitemapBean(String sitemapName, Sitemap sitemap, URI uri, Locale locale,\n-            boolean includeHiddenWidgets) {\n+            boolean includeHiddenWidgets, boolean timeout) {\n         SitemapDTO bean = new SitemapDTO();\n \n         bean.name = sitemapName;\n@@ -474,7 +544,7 @@ private SitemapDTO createSitemapBean(String sitemapName, Sitemap sitemap, URI ur\n \n         bean.link = UriBuilder.fromUri(uri).path(SitemapResource.PATH_SITEMAPS).path(bean.name).build().toASCIIString();\n         bean.homepage = createPageBean(sitemap.getName(), sitemap.getLabel(), sitemap.getIcon(), sitemap.getName(),\n-                itemUIRegistry.getChildren(sitemap), true, false, uri, locale, false, includeHiddenWidgets);\n+                itemUIRegistry.getChildren(sitemap), true, false, uri, locale, timeout, includeHiddenWidgets);\n         return bean;\n     }\n \n@@ -688,22 +758,12 @@ private boolean isLeaf(EList<Widget> children) {\n         return null;\n     }\n \n-    private boolean blockUnlessChangeOccurs(String sitemapname, String pageId) {\n-        boolean timeout = false;\n-        Sitemap sitemap = getSitemap(sitemapname);\n-        if (sitemap != null) {\n-            if (pageId.equals(sitemap.getName())) {\n-                EList<Widget> children = itemUIRegistry.getChildren(sitemap);\n-                timeout = waitForChanges(children);\n-            } else {\n-                Widget pageWidget = itemUIRegistry.getWidget(sitemap, pageId);\n-                if (pageWidget instanceof LinkableWidget widget) {\n-                    EList<Widget> children = itemUIRegistry.getChildren(widget);\n-                    timeout = waitForChanges(children);\n-                }\n-            }\n+    private boolean blockUntilChangeOccurs(String sitemapname, @Nullable String pageId) {\n+        EList<Widget> widgets = subscriptions.collectWidgets(sitemapname, pageId);\n+        if (widgets.isEmpty()) {\n+            return false;\n         }\n-        return timeout;\n+        return waitForChanges(widgets);\n     }\n \n     /**\n@@ -714,13 +774,15 @@ private boolean blockUnlessChangeOccurs(String sitemapname, String pageId) {\n      *            the widgets of the page to observe\n      * @return true if the timeout is reached\n      */\n-    private boolean waitForChanges(EList<Widget> widgets) {\n+    private boolean waitForChanges(List<Widget> widgets) {\n         long startTime = (new Date()).getTime();\n         boolean timeout = false;\n         Set<String> items = getAllItems(widgets).stream().map(Item::getName).collect(Collectors.toSet());\n         BlockingStateChangeListener listener = new BlockingStateChangeListener(items);\n         stateChangeListeners.add(listener);\n \n+        logger.debug(\"Waiting for changes on {} items from {} widgets\", items.size(), widgets.size());\n+\n         while (!listener.hasChanged() && !timeout) {\n             timeout = (new Date()).getTime() - startTime > TIMEOUT_IN_MS;\n             try {\n@@ -742,7 +804,7 @@ private boolean waitForChanges(EList<Widget> widgets) {\n      *            the widget list to get the items for added to all bundles containing REST resources\n      * @return all items that are represented by the list of widgets\n      */\n-    private Set<GenericItem> getAllItems(EList<Widget> widgets) {\n+    private Set<GenericItem> getAllItems(List<Widget> widgets) {\n         Set<GenericItem> items = new HashSet<>();\n         for (Widget widget : widgets) {\n             // We skip the chart widgets having a refresh argument\n@@ -845,7 +907,7 @@ public void onEvent(SitemapEvent event) {\n             String sitemapName = event.sitemapName;\n             String pageId = event.pageId;\n             if (sitemapName != null && sitemapName.equals(subscriptions.getSitemapName(info.subscriptionId))\n-                    && pageId != null && pageId.equals(subscriptions.getPageId(info.subscriptionId))) {\n+                    && Objects.equals(pageId, subscriptions.getPageId(info.subscriptionId))) {\n                 if (logger.isDebugEnabled()) {\n                     if (event instanceof SitemapWidgetEvent widgetEvent) {\n                         logger.debug(\"Sent sitemap event for widget {} to subscription {}.\", widgetEvent.widgetId,\n\ndiff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/WidgetsChangeListener.java\nsimilarity index 98%\nrename from bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java\nrename to bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/WidgetsChangeListener.java\nindex 91860c69040..3e80d1d1474 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/WidgetsChangeListener.java\n@@ -46,14 +46,14 @@\n import org.openhab.core.ui.items.ItemUIRegistry;\n \n /**\n- * This is a class that listens on item state change events and creates sitemap events for a dedicated sitemap page.\n+ * This is a class that listens on item state change events and creates sitemap events for the registered widgets.\n  *\n  * @author Kai Kreuzer - Initial contribution\n  * @author Laurent Garnier - Added support for icon color\n  * @author Laurent Garnier - Support added for multiple AND conditions in labelcolor/valuecolor/visibility\n  * @author Laurent Garnier - New widget icon parameter based on conditional rules\n  */\n-public class PageChangeListener implements EventSubscriber {\n+public class WidgetsChangeListener implements EventSubscriber {\n \n     private static final int REVERT_INTERVAL = 300;\n     private final ScheduledExecutorService scheduler = ThreadPoolManager\n@@ -75,7 +75,8 @@ public class PageChangeListener implements EventSubscriber {\n      * @param itemUIRegistry the ItemUIRegistry which is needed for the functionality\n      * @param widgets the list of widgets that are part of the page.\n      */\n-    public PageChangeListener(String sitemapName, String pageId, ItemUIRegistry itemUIRegistry, EList<Widget> widgets) {\n+    public WidgetsChangeListener(String sitemapName, String pageId, ItemUIRegistry itemUIRegistry,\n+            EList<Widget> widgets) {\n         this.sitemapName = sitemapName;\n         this.pageId = pageId;\n         this.itemUIRegistry = itemUIRegistry;\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java b/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java\nindex 72e87fc7d16..d298ebbdeac 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java\n@@ -16,9 +16,11 @@\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.collection.IsCollectionWithSize.hasSize;\n import static org.hamcrest.collection.IsEmptyCollection.empty;\n-import static org.mockito.Mockito.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Locale;\n import java.util.Set;\n@@ -33,9 +35,8 @@\n import org.eclipse.emf.common.util.EList;\n import org.eclipse.emf.ecore.EClass;\n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.jupiter.api.*;\n+import org.junit.jupiter.api.extension.*;\n import org.mockito.Mock;\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.mockito.junit.jupiter.MockitoSettings;\n@@ -46,10 +47,12 @@\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.events.ItemEvent;\n import org.openhab.core.library.types.OnOffType;\n+import org.openhab.core.library.types.OpenClosedType;\n import org.openhab.core.library.types.PercentType;\n import org.openhab.core.model.sitemap.SitemapProvider;\n import org.openhab.core.model.sitemap.sitemap.ColorArray;\n import org.openhab.core.model.sitemap.sitemap.Condition;\n+import org.openhab.core.model.sitemap.sitemap.Group;\n import org.openhab.core.model.sitemap.sitemap.IconRule;\n import org.openhab.core.model.sitemap.sitemap.Sitemap;\n import org.openhab.core.model.sitemap.sitemap.VisibilityRule;\n@@ -59,6 +62,7 @@\n import org.openhab.core.types.State;\n import org.openhab.core.ui.items.ItemUIRegistry;\n import org.openhab.core.ui.items.ItemUIRegistry.WidgetLabelSource;\n+import org.osgi.framework.BundleContext;\n \n /**\n  * Test aspects of the {@link SitemapResource}.\n@@ -68,13 +72,14 @@\n  */\n @ExtendWith(MockitoExtension.class)\n @MockitoSettings(strictness = Strictness.LENIENT)\n-@NonNullByDefault\n public class SitemapResourceTest extends JavaTest {\n \n     private static final int STATE_UPDATE_WAIT_TIME = 100;\n \n     private static final String HTTP_HEADER_X_ATMOSPHERE_TRANSPORT = \"X-Atmosphere-Transport\";\n     private static final String ITEM_NAME = \"itemName\";\n+\n+    private static final String SUBPAGE_ITEM_NAME = \"subpabeItemName\";\n     private static final String ITEM_LABEL = \"item label\";\n     private static final String SITEMAP_PATH = \"/sitemaps\";\n     private static final String SITEMAP_MODEL_NAME = \"sitemapModel\";\n@@ -87,16 +92,22 @@ public class SitemapResourceTest extends JavaTest {\n     private static final String ICON_ITEM_NAME = \"iconItemName\";\n     private static final String WIDGET1_LABEL = \"widget 1\";\n     private static final String WIDGET3_LABEL = \"widget 3\";\n+    private static final String GROUP_LABEL = \"frame\";\n+    private static final String WIDGET4_LABEL = \"widget 4\";\n     private static final String WIDGET1_ID = \"00\";\n     private static final String WIDGET2_ID = \"01\";\n     private static final String WIDGET3_ID = \"02\";\n+    private static final String FRAME_ID = \"03\";\n+    private static final String WIDGET4_ID = \"04\";\n     private static final String WIDGET1_ICON = \"icon1\";\n     private static final String WIDGET2_ICON = \"icon2\";\n     private static final String WIDGET3_ICON = \"icon3\";\n+    private static final String GROUP_ICON = \"frame\";\n+    private static final String WIDGET4_ICON = \"icon4\";\n     private static final String CLIENT_IP = \"127.0.0.1\";\n \n     private @NonNullByDefault({}) SitemapResource sitemapResource;\n-\n+    private @NonNullByDefault({}) SitemapSubscriptionService subscriptions;\n     private @NonNullByDefault({}) GenericItem item;\n     private @NonNullByDefault({}) GenericItem visibilityRuleItem;\n     private @NonNullByDefault({}) GenericItem labelColorItem;\n@@ -110,14 +121,17 @@ public class SitemapResourceTest extends JavaTest {\n     private @Mock @NonNullByDefault({}) LocaleService localeServiceMock;\n     private @Mock @NonNullByDefault({}) HttpServletRequest requestMock;\n     private @Mock @NonNullByDefault({}) SitemapProvider sitemapProviderMock;\n-    private @Mock @NonNullByDefault({}) SitemapSubscriptionService subscriptionsMock;\n     private @Mock @NonNullByDefault({}) UriInfo uriInfoMock;\n+    private @Mock @NonNullByDefault({}) BundleContext bundleContextMock;\n \n     private EList<Widget> widgets = new BasicEList<>();\n \n     @BeforeEach\n     public void setup() throws Exception {\n-        sitemapResource = new SitemapResource(itemUIRegistryMock, localeServiceMock, subscriptionsMock);\n+        subscriptions = new SitemapSubscriptionService(Collections.emptyMap(), itemUIRegistryMock, bundleContextMock);\n+        subscriptions.addSitemapProvider(sitemapProviderMock);\n+\n+        sitemapResource = new SitemapResource(itemUIRegistryMock, localeServiceMock, subscriptions);\n \n         when(uriInfoMock.getAbsolutePathBuilder()).thenReturn(UriBuilder.fromPath(SITEMAP_PATH));\n         when(uriInfoMock.getBaseUriBuilder()).thenReturn(UriBuilder.fromPath(SITEMAP_PATH));\n@@ -139,7 +153,7 @@ public void setup() throws Exception {\n         configureSitemapMock();\n         sitemapResource.addSitemapProvider(sitemapProviderMock);\n \n-        widgets = initSitemapWidgets();\n+        widgets = initSitemapWidgetsWithSubpages();\n         configureItemUIRegistry(PercentType.HUNDRED, OnOffType.ON);\n \n         // Disable long polling\n@@ -167,18 +181,50 @@ public void whenSitemapsAreProvidedShouldReturnSitemapBeans() {\n         assertThat(dto.link, is(SITEMAP_PATH + \"/\" + SITEMAP_MODEL_NAME));\n     }\n \n+    @Test\n+    public void whenLongPollingWholeSitemapShouldObserveAllItems() throws ItemNotFoundException {\n+        configureItemUIRegistryWithSubpages(PercentType.HUNDRED, OnOffType.ON, OpenClosedType.OPEN);\n+\n+        ItemEvent itemEvent = mock(ItemEvent.class);\n+        when(itemEvent.getItemName()).thenReturn(item.getName());\n+        executeWithDelay(() -> sitemapResource.receive(itemEvent));\n+\n+        // non-null is sufficient here.\n+        when(headersMock.getRequestHeader(HTTP_HEADER_X_ATMOSPHERE_TRANSPORT)).thenReturn(List.of());\n+\n+        Response response = sitemapResource.getSitemapData(headersMock, null, SITEMAP_MODEL_NAME, null, false);\n+\n+        SitemapDTO sitemapDTO = (SitemapDTO) response.getEntity();\n+        // assert that the item state change did trigger the blocking method to return\n+        assertThat(sitemapDTO.homepage.timeout, is(false));\n+    }\n+\n+    @Test\n+    public void whenLongPollingSpecificPageMustNotObserveAllItems() throws ItemNotFoundException {\n+        configureItemUIRegistryWithSubpages(PercentType.HUNDRED, OnOffType.ON, OpenClosedType.OPEN);\n+\n+        // TODO it would be cooler to not wait 30s in this test because SitemapResource has that hardcoded timeout\n+\n+        ItemEvent itemEvent = mock(ItemEvent.class);\n+        when(itemEvent.getItemName()).thenReturn(item.getName());\n+        executeWithDelay(() -> sitemapResource.receive(itemEvent));\n+\n+        // non-null is sufficient here.\n+        when(headersMock.getRequestHeader(HTTP_HEADER_X_ATMOSPHERE_TRANSPORT)).thenReturn(List.of());\n+\n+        Response response = sitemapResource.getPageData(headersMock, null, SITEMAP_MODEL_NAME, SITEMAP_NAME, null,\n+                false);\n+\n+        PageDTO pageDTO = (PageDTO) response.getEntity();\n+        // assert that the item state change did trigger the blocking method to return\n+        assertThat(pageDTO.timeout, is(true));\n+    }\n+\n     @Test\n     public void whenLongPollingShouldObserveItems() {\n         ItemEvent itemEvent = mock(ItemEvent.class);\n         when(itemEvent.getItemName()).thenReturn(item.getName());\n-        new Thread(() -> {\n-            try {\n-                Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n-                                                      // item\n-                sitemapResource.receive(itemEvent);\n-            } catch (InterruptedException e) {\n-            }\n-        }).start();\n+        executeWithDelay(() -> sitemapResource.receive(itemEvent));\n \n         // non-null is sufficient here.\n         when(headersMock.getRequestHeader(HTTP_HEADER_X_ATMOSPHERE_TRANSPORT)).thenReturn(List.of());\n@@ -187,22 +233,15 @@ public void whenLongPollingShouldObserveItems() {\n                 false);\n \n         PageDTO pageDTO = (PageDTO) response.getEntity();\n-        assertThat(pageDTO.timeout, is(false)); // assert that the item state change did trigger the blocking method to\n-                                                // return\n+        // assert that the item state change did trigger the blocking method to return\n+        assertThat(pageDTO.timeout, is(false));\n     }\n \n     @Test\n     public void whenLongPollingShouldObserveItemsFromVisibilityRules() {\n         ItemEvent itemEvent = mock(ItemEvent.class);\n         when(itemEvent.getItemName()).thenReturn(visibilityRuleItem.getName());\n-        new Thread(() -> {\n-            try {\n-                Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n-                                                      // item\n-                sitemapResource.receive(itemEvent);\n-            } catch (InterruptedException e) {\n-            }\n-        }).start();\n+        executeWithDelay(() -> sitemapResource.receive(itemEvent));\n \n         // non-null is sufficient here.\n         when(headersMock.getRequestHeader(HTTP_HEADER_X_ATMOSPHERE_TRANSPORT)).thenReturn(List.of());\n@@ -211,22 +250,15 @@ public void whenLongPollingShouldObserveItemsFromVisibilityRules() {\n                 false);\n \n         PageDTO pageDTO = (PageDTO) response.getEntity();\n-        assertThat(pageDTO.timeout, is(false)); // assert that the item state change did trigger the blocking method to\n-                                                // return\n+        // assert that the item state change did trigger the blocking method to return\n+        assertThat(pageDTO.timeout, is(false));\n     }\n \n     @Test\n     public void whenLongPollingShouldObserveItemsFromLabelColorConditions() {\n         ItemEvent itemEvent = mock(ItemEvent.class);\n         when(itemEvent.getItemName()).thenReturn(labelColorItem.getName());\n-        new Thread(() -> {\n-            try {\n-                Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n-                                                      // item\n-                sitemapResource.receive(itemEvent);\n-            } catch (InterruptedException e) {\n-            }\n-        }).start();\n+        executeWithDelay(() -> sitemapResource.receive(itemEvent));\n \n         // non-null is sufficient here.\n         when(headersMock.getRequestHeader(HTTP_HEADER_X_ATMOSPHERE_TRANSPORT)).thenReturn(List.of());\n@@ -235,22 +267,15 @@ public void whenLongPollingShouldObserveItemsFromLabelColorConditions() {\n                 false);\n \n         PageDTO pageDTO = (PageDTO) response.getEntity();\n-        assertThat(pageDTO.timeout, is(false)); // assert that the item state change did trigger the blocking method to\n-                                                // return\n+        // assert that the item state change did trigger the blocking method to return\n+        assertThat(pageDTO.timeout, is(false));\n     }\n \n     @Test\n     public void whenLongPollingShouldObserveItemsFromValueColorConditions() {\n         ItemEvent itemEvent = mock(ItemEvent.class);\n         when(itemEvent.getItemName()).thenReturn(valueColorItem.getName());\n-        new Thread(() -> {\n-            try {\n-                Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n-                                                      // item\n-                sitemapResource.receive(itemEvent);\n-            } catch (InterruptedException e) {\n-            }\n-        }).start();\n+        executeWithDelay(() -> sitemapResource.receive(itemEvent));\n \n         // non-null is sufficient here.\n         when(headersMock.getRequestHeader(HTTP_HEADER_X_ATMOSPHERE_TRANSPORT)).thenReturn(List.of());\n@@ -267,14 +292,7 @@ public void whenLongPollingShouldObserveItemsFromValueColorConditions() {\n     public void whenLongPollingShouldObserveItemsFromIconColorConditions() {\n         ItemEvent itemEvent = mock(ItemEvent.class);\n         when(itemEvent.getItemName()).thenReturn(iconColorItem.getName());\n-        new Thread(() -> {\n-            try {\n-                Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n-                                                      // item\n-                sitemapResource.receive(itemEvent);\n-            } catch (InterruptedException e) {\n-            }\n-        }).start();\n+        executeWithDelay(() -> sitemapResource.receive(itemEvent));\n \n         // non-null is sufficient here.\n         when(headersMock.getRequestHeader(HTTP_HEADER_X_ATMOSPHERE_TRANSPORT)).thenReturn(List.of());\n@@ -291,14 +309,7 @@ public void whenLongPollingShouldObserveItemsFromIconColorConditions() {\n     public void whenLongPollingShouldObserveItemsFromIconConditions() {\n         ItemEvent itemEvent = mock(ItemEvent.class);\n         when(itemEvent.getItemName()).thenReturn(iconItem.getName());\n-        new Thread(() -> {\n-            try {\n-                Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n-                                                      // item\n-                sitemapResource.receive(itemEvent);\n-            } catch (InterruptedException e) {\n-            }\n-        }).start();\n+        executeWithDelay(() -> sitemapResource.receive(itemEvent));\n \n         // non-null is sufficient here.\n         when(headersMock.getRequestHeader(HTTP_HEADER_X_ATMOSPHERE_TRANSPORT)).thenReturn(List.of());\n@@ -307,8 +318,19 @@ public void whenLongPollingShouldObserveItemsFromIconConditions() {\n                 false);\n \n         PageDTO pageDTO = (PageDTO) response.getEntity();\n-        assertThat(pageDTO.timeout, is(false)); // assert that the item state change did trigger the blocking method to\n-                                                // return\n+        // assert that the item state change did trigger the blocking method to return\n+        assertThat(pageDTO.timeout, is(false));\n+    }\n+\n+    private static void executeWithDelay(Runnable executionWithDelay) {\n+        new Thread(() -> {\n+            try {\n+                // wait for the #getPageData call and listeners to attach to the item\n+                Thread.sleep(STATE_UPDATE_WAIT_TIME);\n+                executionWithDelay.run();\n+            } catch (InterruptedException e) {\n+            }\n+        }).start();\n     }\n \n     @Test\n@@ -370,70 +392,98 @@ public void whenGetPageDataShouldReturnPageBean() throws ItemNotFoundException {\n         assertThat(pageDTO.widgets.get(2).item.state, is(\"50\"));\n     }\n \n+    private void configureItemUIRegistryWithSubpages(State state1, State state2, State state3)\n+            throws ItemNotFoundException {\n+        Group group1 = (Group) widgets.get(0);\n+        Group group2 = (Group) widgets.get(4);\n+\n+        when(itemUIRegistryMock.getChildren(defaultSitemapMock)).thenReturn(new BasicEList<>(List.of(group1, group2)));\n+        configureCommonUIRegistryMockMethods();\n+        EList<Widget> subpage1Widgets = new BasicEList<>(group1.getChildren());\n+\n+        configureItemUIRegistryForWidget(group1, FRAME_ID, GROUP_ICON, GROUP_LABEL, WidgetLabelSource.SITEMAP_WIDGET,\n+                true, null, null, null, null);\n+        when(itemUIRegistryMock.getChildren(group1)).thenReturn(subpage1Widgets);\n+\n+        configureWidgetStatesPage1(state1, state2);\n+\n+        EList<Widget> subpage2Widgets = new BasicEList<>(group2.getChildren());\n+\n+        configureItemUIRegistryForWidget(group2, FRAME_ID, GROUP_ICON, GROUP_LABEL, WidgetLabelSource.SITEMAP_WIDGET,\n+                true, null, null, null, null);\n+        when(itemUIRegistryMock.getChildren(group2)).thenReturn(subpage2Widgets);\n+\n+        configureWidgetStatesPage2(state3);\n+    }\n+\n     private void configureItemUIRegistry(State state1, State state2) throws ItemNotFoundException {\n-        when(itemUIRegistryMock.getChildren(defaultSitemapMock)).thenReturn(widgets);\n+        EList<Widget> mainpageWidgets = new BasicEList<>(widgets.subList(1, 4));\n+\n+        when(itemUIRegistryMock.getChildren(defaultSitemapMock)).thenReturn(mainpageWidgets);\n+        configureCommonUIRegistryMockMethods();\n+\n+        configureWidgetStatesPage1(state1, state2);\n+    }\n+\n+    private void configureCommonUIRegistryMockMethods() throws ItemNotFoundException {\n         when(itemUIRegistryMock.getItem(ITEM_NAME)).thenReturn(item);\n         when(itemUIRegistryMock.getItem(VISIBILITY_RULE_ITEM_NAME)).thenReturn(visibilityRuleItem);\n         when(itemUIRegistryMock.getItem(LABEL_COLOR_ITEM_NAME)).thenReturn(labelColorItem);\n         when(itemUIRegistryMock.getItem(VALUE_COLOR_ITEM_NAME)).thenReturn(valueColorItem);\n         when(itemUIRegistryMock.getItem(ICON_COLOR_ITEM_NAME)).thenReturn(iconColorItem);\n         when(itemUIRegistryMock.getItem(ICON_ITEM_NAME)).thenReturn(iconItem);\n+    }\n+\n+    private void configureWidgetStatesPage1(State state1, State state2) {\n+        EList<Widget> mainpageWidgets = new BasicEList<>(widgets.subList(1, 4));\n+        Widget w1 = mainpageWidgets.get(0);\n+        configureItemUIRegistryForWidget(w1, WIDGET1_ID, WIDGET1_ICON, WIDGET1_LABEL, WidgetLabelSource.SITEMAP_WIDGET,\n+                true, \"GREEN\", \"BLUE\", \"ORANGE\", state1);\n \n-        when(itemUIRegistryMock.getWidgetId(widgets.get(0))).thenReturn(WIDGET1_ID);\n-        when(itemUIRegistryMock.getCategory(widgets.get(0))).thenReturn(WIDGET1_ICON);\n-        when(itemUIRegistryMock.getLabel(widgets.get(0))).thenReturn(WIDGET1_LABEL);\n-        when(itemUIRegistryMock.getLabelSource(widgets.get(0))).thenReturn(WidgetLabelSource.SITEMAP_WIDGET);\n-        when(itemUIRegistryMock.getVisiblity(widgets.get(0))).thenReturn(true);\n-        when(itemUIRegistryMock.getLabelColor(widgets.get(0))).thenReturn(\"GREEN\");\n-        when(itemUIRegistryMock.getValueColor(widgets.get(0))).thenReturn(\"BLUE\");\n-        when(itemUIRegistryMock.getIconColor(widgets.get(0))).thenReturn(\"ORANGE\");\n-        when(itemUIRegistryMock.getState(widgets.get(0))).thenReturn(state1);\n-\n-        when(itemUIRegistryMock.getWidgetId(widgets.get(1))).thenReturn(WIDGET2_ID);\n-        when(itemUIRegistryMock.getCategory(widgets.get(1))).thenReturn(WIDGET2_ICON);\n-        when(itemUIRegistryMock.getLabel(widgets.get(1))).thenReturn(ITEM_LABEL);\n-        when(itemUIRegistryMock.getLabelSource(widgets.get(1))).thenReturn(WidgetLabelSource.ITEM_LABEL);\n-        when(itemUIRegistryMock.getVisiblity(widgets.get(1))).thenReturn(true);\n-        when(itemUIRegistryMock.getLabelColor(widgets.get(1))).thenReturn(null);\n-        when(itemUIRegistryMock.getValueColor(widgets.get(1))).thenReturn(null);\n-        when(itemUIRegistryMock.getIconColor(widgets.get(1))).thenReturn(null);\n-        when(itemUIRegistryMock.getState(widgets.get(1))).thenReturn(state2);\n-\n-        when(itemUIRegistryMock.getWidgetId(widgets.get(2))).thenReturn(WIDGET3_ID);\n-        when(itemUIRegistryMock.getCategory(widgets.get(2))).thenReturn(WIDGET3_ICON);\n-        when(itemUIRegistryMock.getLabel(widgets.get(2))).thenReturn(WIDGET3_LABEL);\n-        when(itemUIRegistryMock.getLabelSource(widgets.get(2))).thenReturn(WidgetLabelSource.SITEMAP_WIDGET);\n-        when(itemUIRegistryMock.getVisiblity(widgets.get(2))).thenReturn(true);\n-        when(itemUIRegistryMock.getLabelColor(widgets.get(2))).thenReturn(null);\n-        when(itemUIRegistryMock.getValueColor(widgets.get(2))).thenReturn(null);\n-        when(itemUIRegistryMock.getIconColor(widgets.get(2))).thenReturn(null);\n-        when(itemUIRegistryMock.getState(widgets.get(2))).thenReturn(state2);\n+        Widget w2 = mainpageWidgets.get(1);\n+        configureItemUIRegistryForWidget(w2, WIDGET2_ID, WIDGET2_ICON, ITEM_LABEL, WidgetLabelSource.ITEM_LABEL, true,\n+                null, null, null, state2);\n+\n+        Widget w3 = mainpageWidgets.get(2);\n+        configureItemUIRegistryForWidget(w3, WIDGET3_ID, WIDGET3_ICON, WIDGET3_LABEL, WidgetLabelSource.SITEMAP_WIDGET,\n+                true, null, null, null, state2);\n+    }\n+\n+    private void configureWidgetStatesPage2(State state3) {\n+        Widget w4 = widgets.get(5);\n+        configureItemUIRegistryForWidget(w4, WIDGET4_ID, WIDGET4_ICON, WIDGET4_LABEL, WidgetLabelSource.SITEMAP_WIDGET,\n+                true, null, null, null, state3);\n+    }\n+\n+    private void configureItemUIRegistryForWidget(Widget w, String widgetId, String widgetIcon, String widgetLabel,\n+            WidgetLabelSource widgetLabelSource, boolean visibility, String labelColor, String valueColor,\n+            String iconColor, State state) {\n+        when(itemUIRegistryMock.getWidgetId(w)).thenReturn(widgetId);\n+        when(itemUIRegistryMock.getCategory(w)).thenReturn(widgetIcon);\n+        when(itemUIRegistryMock.getLabel(w)).thenReturn(widgetLabel);\n+        when(itemUIRegistryMock.getLabelSource(w)).thenReturn(widgetLabelSource);\n+        when(itemUIRegistryMock.getVisiblity(w)).thenReturn(visibility);\n+        when(itemUIRegistryMock.getLabelColor(w)).thenReturn(labelColor);\n+        when(itemUIRegistryMock.getValueColor(w)).thenReturn(valueColor);\n+        when(itemUIRegistryMock.getIconColor(w)).thenReturn(iconColor);\n+        when(itemUIRegistryMock.getState(w)).thenReturn(state);\n     }\n \n     private EList<Widget> initSitemapWidgets() {\n         // Initialize a sitemap containing 2 widgets linked to the same number item,\n-        // one slider and one switch\n-\n-        Widget w1 = mock(Widget.class);\n-        EClass sliderEClass = mock(EClass.class);\n-        when(sliderEClass.getName()).thenReturn(\"slider\");\n-        when(sliderEClass.getInstanceTypeName()).thenReturn(\"org.openhab.core.model.sitemap.Slider\");\n-        when(w1.eClass()).thenReturn(sliderEClass);\n-        when(w1.getLabel()).thenReturn(WIDGET1_LABEL);\n-        when(w1.getItem()).thenReturn(ITEM_NAME);\n-        when(w1.getIcon()).thenReturn(null);\n-        when(w1.getStaticIcon()).thenReturn(null);\n+        // one slider and one switch,\n+        // which has one subpage\n \n         // add icon rules to the mock widget:\n-        IconRule iconRule = mock(IconRule.class);\n+        Class<IconRule> classToMock = IconRule.class;\n+        IconRule iconRule = mock(classToMock);\n         Condition conditon0 = mock(Condition.class);\n         when(conditon0.getItem()).thenReturn(ICON_ITEM_NAME);\n         EList<Condition> conditions0 = new BasicEList<>();\n         conditions0.add(conditon0);\n         when(iconRule.getConditions()).thenReturn(conditions0);\n-        EList<IconRule> iconRules = new BasicEList<>();\n-        iconRules.add(iconRule);\n-        when(w1.getIconRules()).thenReturn(iconRules);\n+        EList<IconRule> iconRulesW1 = new BasicEList<>();\n+        iconRulesW1.add(iconRule);\n \n         // add visibility rules to the mock widget:\n         VisibilityRule visibilityRule = mock(VisibilityRule.class);\n@@ -442,9 +492,8 @@ private EList<Widget> initSitemapWidgets() {\n         EList<Condition> conditions = new BasicEList<>();\n         conditions.add(conditon);\n         when(visibilityRule.getConditions()).thenReturn(conditions);\n-        EList<VisibilityRule> visibilityRules = new BasicEList<>(1);\n-        visibilityRules.add(visibilityRule);\n-        when(w1.getVisibility()).thenReturn(visibilityRules);\n+        EList<VisibilityRule> visibilityRulesW1 = new BasicEList<>(1);\n+        visibilityRulesW1.add(visibilityRule);\n \n         // add label color conditions to the item:\n         ColorArray labelColor = mock(ColorArray.class);\n@@ -453,9 +502,8 @@ private EList<Widget> initSitemapWidgets() {\n         EList<Condition> conditions1 = new BasicEList<>();\n         conditions1.add(conditon1);\n         when(labelColor.getConditions()).thenReturn(conditions1);\n-        EList<ColorArray> labelColors = new BasicEList<>();\n-        labelColors.add(labelColor);\n-        when(w1.getLabelColor()).thenReturn(labelColors);\n+        EList<ColorArray> labelColorsW1 = new BasicEList<>();\n+        labelColorsW1.add(labelColor);\n \n         // add value color conditions to the item:\n         ColorArray valueColor = mock(ColorArray.class);\n@@ -464,9 +512,8 @@ private EList<Widget> initSitemapWidgets() {\n         EList<Condition> conditions2 = new BasicEList<>();\n         conditions2.add(conditon2);\n         when(valueColor.getConditions()).thenReturn(conditions2);\n-        EList<ColorArray> valueColors = new BasicEList<>();\n-        valueColors.add(valueColor);\n-        when(w1.getValueColor()).thenReturn(valueColors);\n+        EList<ColorArray> valueColorsW1 = new BasicEList<>();\n+        valueColorsW1.add(valueColor);\n \n         // add icon color conditions to the item:\n         ColorArray iconColor = mock(ColorArray.class);\n@@ -475,42 +522,28 @@ private EList<Widget> initSitemapWidgets() {\n         EList<Condition> conditions3 = new BasicEList<>();\n         conditions3.add(conditon3);\n         when(iconColor.getConditions()).thenReturn(conditions3);\n+        EList<ColorArray> iconColorsW1 = new BasicEList<>();\n+        iconColorsW1.add(iconColor);\n+\n+        EClass sliderEClass = mockEClass(\"slider\", \"org.openhab.core.model.sitemap.Slider\");\n+\n+        Widget w1 = mockWidget(iconRulesW1, visibilityRulesW1, labelColorsW1, valueColorsW1, iconColorsW1, sliderEClass,\n+                WIDGET1_LABEL, null, null);\n+\n+        EList<IconRule> iconRules = new BasicEList<>();\n+        EList<VisibilityRule> visibilityRules = new BasicEList<>();\n+        EList<ColorArray> labelColors = new BasicEList<>();\n+        EList<ColorArray> valueColors = new BasicEList<>();\n         EList<ColorArray> iconColors = new BasicEList<>();\n-        iconColors.add(iconColor);\n-        when(w1.getIconColor()).thenReturn(iconColors);\n-\n-        iconRules = new BasicEList<>();\n-        visibilityRules = new BasicEList<>();\n-        labelColors = new BasicEList<>();\n-        valueColors = new BasicEList<>();\n-        iconColors = new BasicEList<>();\n-\n-        Widget w2 = mock(Widget.class);\n-        EClass switchEClass = mock(EClass.class);\n-        when(switchEClass.getName()).thenReturn(\"switch\");\n-        when(switchEClass.getInstanceTypeName()).thenReturn(\"org.openhab.core.model.sitemap.Switch\");\n-        when(w2.eClass()).thenReturn(switchEClass);\n-        when(w2.getLabel()).thenReturn(null);\n-        when(w2.getItem()).thenReturn(ITEM_NAME);\n-        when(w2.getIcon()).thenReturn(WIDGET2_ICON);\n-        when(w2.getStaticIcon()).thenReturn(null);\n-        when(w2.getIconRules()).thenReturn(iconRules);\n-        when(w2.getVisibility()).thenReturn(visibilityRules);\n-        when(w2.getLabelColor()).thenReturn(labelColors);\n-        when(w2.getValueColor()).thenReturn(valueColors);\n-        when(w2.getIconColor()).thenReturn(iconColors);\n-\n-        Widget w3 = mock(Widget.class);\n-        when(w3.eClass()).thenReturn(switchEClass);\n-        when(w3.getLabel()).thenReturn(WIDGET3_LABEL);\n-        when(w3.getItem()).thenReturn(ITEM_NAME);\n-        when(w3.getIcon()).thenReturn(null);\n-        when(w3.getStaticIcon()).thenReturn(WIDGET3_ICON);\n-        when(w3.getIconRules()).thenReturn(iconRules);\n-        when(w3.getVisibility()).thenReturn(visibilityRules);\n-        when(w3.getLabelColor()).thenReturn(labelColors);\n-        when(w3.getValueColor()).thenReturn(valueColors);\n-        when(w3.getIconColor()).thenReturn(iconColors);\n+\n+        EClass switchEClass = mockEClass(\"switch\", \"org.openhab.core.model.sitemap.Switch\");\n+\n+        Widget w2 = mockWidget(iconRules, visibilityRules, labelColors, valueColors, iconColors, switchEClass, null,\n+                WIDGET2_ICON, null);\n+        mock(Widget.class);\n+\n+        Widget w3 = mockWidget(iconRules, visibilityRules, labelColors, valueColors, iconColors, switchEClass,\n+                WIDGET3_LABEL, null, WIDGET3_ICON);\n \n         EList<Widget> widgets = new BasicEList<>(3);\n         widgets.add(w1);\n@@ -519,6 +552,77 @@ private EList<Widget> initSitemapWidgets() {\n         return widgets;\n     }\n \n+    private EList<Widget> initSitemapWidgetsWithSubpages() {\n+        EList<Widget> baseWidgets = initSitemapWidgets();\n+\n+        EClass groupEClass = mockEClass(\"group\", \"org.openhab.core.model.sitemap.Group\");\n+\n+        EList<IconRule> iconRules = new BasicEList<>();\n+        EList<VisibilityRule> visibilityRules = new BasicEList<>();\n+        EList<ColorArray> labelColors = new BasicEList<>();\n+        EList<ColorArray> valueColors = new BasicEList<>();\n+        EList<ColorArray> iconColors = new BasicEList<>();\n+\n+        Widget group1 = mockGroup(iconRules, visibilityRules, labelColors, valueColors, iconColors, groupEClass,\n+                GROUP_LABEL, null, GROUP_ICON, baseWidgets);\n+\n+        EClass switchEClass = mockEClass(\"switch\", \"org.openhab.core.model.sitemap.Switch\");\n+\n+        Widget w4 = mockWidget(iconRules, visibilityRules, labelColors, valueColors, iconColors, switchEClass,\n+                WIDGET4_LABEL, null, WIDGET4_ICON);\n+\n+        Widget group2 = mockGroup(iconRules, visibilityRules, labelColors, valueColors, iconColors, groupEClass,\n+                GROUP_LABEL, null, GROUP_ICON, new BasicEList<>(List.of(w4)));\n+\n+        EList<Widget> allWidgets = new BasicEList<>();\n+        allWidgets.add(group1);\n+        allWidgets.addAll(baseWidgets);\n+        allWidgets.add(group2);\n+        allWidgets.add(w4);\n+        return allWidgets;\n+    }\n+\n+    private static EClass mockEClass(String eClassName, String eClassInstanceName) {\n+        EClass sliderEClass = mock(EClass.class);\n+        when(sliderEClass.getName()).thenReturn(eClassName);\n+        when(sliderEClass.getInstanceTypeName()).thenReturn(eClassInstanceName);\n+        return sliderEClass;\n+    }\n+\n+    private static Widget mockWidget(EList<IconRule> iconRules1, EList<VisibilityRule> visibilityRules1,\n+            EList<ColorArray> labelColors1, EList<ColorArray> valueColors1, EList<ColorArray> iconColors1,\n+            EClass eClass, String widgetLabel, String widgetIcon, String widgetStaticIcon) {\n+        Widget w = mock(Widget.class);\n+        mockWidgetMethods(iconRules1, visibilityRules1, labelColors1, valueColors1, iconColors1, eClass, widgetLabel,\n+                widgetIcon, widgetStaticIcon, w);\n+        when(w.getItem()).thenReturn(ITEM_NAME);\n+        return w;\n+    }\n+\n+    private static Group mockGroup(EList<IconRule> iconRules1, EList<VisibilityRule> visibilityRules1,\n+            EList<ColorArray> labelColors1, EList<ColorArray> valueColors1, EList<ColorArray> iconColors1,\n+            EClass eClass, String widgetLabel, String widgetIcon, String widgetStaticIcon, EList<Widget> children) {\n+        Group w = mock(Group.class);\n+        mockWidgetMethods(iconRules1, visibilityRules1, labelColors1, valueColors1, iconColors1, eClass, widgetLabel,\n+                widgetIcon, widgetStaticIcon, w);\n+        when(w.getChildren()).thenReturn(children);\n+        return w;\n+    }\n+\n+    private static void mockWidgetMethods(EList<IconRule> iconRules1, EList<VisibilityRule> visibilityRules1,\n+            EList<ColorArray> labelColors1, EList<ColorArray> valueColors1, EList<ColorArray> iconColors1,\n+            EClass eClass, String widgetLabel, String widgetIcon, String widgetStaticIcon, Widget w) {\n+        when(w.eClass()).thenReturn(eClass);\n+        when(w.getLabel()).thenReturn(widgetLabel);\n+        when(w.getIcon()).thenReturn(widgetIcon);\n+        when(w.getStaticIcon()).thenReturn(widgetStaticIcon);\n+        when(w.getIconRules()).thenReturn(iconRules1);\n+        when(w.getVisibility()).thenReturn(visibilityRules1);\n+        when(w.getLabelColor()).thenReturn(labelColors1);\n+        when(w.getValueColor()).thenReturn(valueColors1);\n+        when(w.getIconColor()).thenReturn(iconColors1);\n+    }\n+\n     private void configureSitemapMock() {\n         when(defaultSitemapMock.getName()).thenReturn(SITEMAP_NAME);\n         when(defaultSitemapMock.getLabel()).thenReturn(SITEMAP_TITLE);\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3646",
    "pr_id": 3646,
    "issue_id": 3619,
    "repo": "openhab/openhab-core",
    "problem_statement": "Letting the user extend the semantics model\nPR #3519 introduced a technical way to add dynamically new tags in the semantics model. This was an important part but this is only a small part of what must be achieved to let the final user create and control the tags he would like.\r\n\r\nI try to list all the missing steps:\r\n\r\n1. Enhance what @jimtng did to also support removing tag classes\r\n2. Add a new tag manager that will store all user defined tags in a JSON file (id, label, description, synonyms). This DB is loaded at startup and the corresponding tags are added in the model (class injection).\r\n3. Extend the REST API to add/remove a tag and its synonyms that will call the new tag manager to update the DB\r\n4. Create a new textual configuration file to let the user define a list of tags through a clear syntax\r\n5. Extend MainUI to manage tags (add/remove tags) using the extended REST API\r\n\r\nPlease let me kn ow if I am missing something.\r\n\r\nThe first 3 items are the minimum requirements and I will try to provide items 2 and 3.",
    "issue_word_count": 195,
    "test_files_count": 1,
    "non_test_files_count": 99,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java",
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/EnrichedSemanticTagDTO.java",
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/TagDTO.java",
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/TagResource.java",
      "bundles/org.openhab.core.model.script/src.moved/test/java/org/openhab/core/model/script/actions/SemanticsTest.java",
      "bundles/org.openhab.core.semantics/model/generateTagClasses.groovy",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Equipment.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Location.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/ManagedSemanticTagProvider.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Point.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Property.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTag.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagImpl.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagProvider.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagRegistry.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticsService.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/TagInfo.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/dto/SemanticTagDTO.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/dto/SemanticTagDTOMapper.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticTagRegistryImpl.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsMetadataProvider.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsServiceImpl.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/DefaultSemanticTagProvider.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/AlarmSystem.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/BackDoor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Battery.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Blinds.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Boiler.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Camera.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Car.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CeilingFan.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CellarDoor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CleaningRobot.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Dishwasher.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Door.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Doorbell.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Dryer.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Equipments.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Fan.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Freezer.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/FrontDoor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/GarageDoor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Gate.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/HVAC.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/InnerDoor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Inverter.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/KitchenHood.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/LawnMower.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/LightStripe.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Lightbulb.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Lock.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/MotionDetector.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/NetworkAppliance.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Oven.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/PowerOutlet.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Projector.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Pump.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/RadiatorControl.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Receiver.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Refrigerator.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/RemoteControl.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Screen.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Sensor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/SideDoor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Siren.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Smartphone.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/SmokeDetector.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Speaker.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Television.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Valve.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/VoiceAssistant.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WallSwitch.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WashingMachine.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WeatherService.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WebService.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WhiteGood.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Window.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Apartment.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Attic.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Basement.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Bathroom.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Bedroom.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/BoilerRoom.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Building.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Carport.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Cellar.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Corridor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/DiningRoom.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Driveway.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Entry.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/FamilyRoom.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/FirstFloor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Floor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Garage.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Garden.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/GroundFloor.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/GuestRoom.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/House.java",
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Indoor.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.script/src.moved/test/java/org/openhab/core/model/script/actions/SemanticsTest.java"
    ],
    "base_commit": "6e83d3f8def866af727e30c59b031a86ccbad18a",
    "head_commit": "f54ea18d3460932f680933d936d12778737ba13a",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3646",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3646",
    "dockerfile": "",
    "pr_merged_at": "2023-06-16T14:38:03.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java\nindex 28e1b6e5ef0..59f8e4c465c 100644\n--- a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java\n+++ b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java\n@@ -88,7 +88,7 @@\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.library.types.RawType;\n import org.openhab.core.library.types.UpDownType;\n-import org.openhab.core.semantics.SemanticTags;\n+import org.openhab.core.semantics.SemanticTagRegistry;\n import org.openhab.core.semantics.SemanticsPredicates;\n import org.openhab.core.types.Command;\n import org.openhab.core.types.State;\n@@ -182,6 +182,7 @@ private static void respectForwarded(final UriBuilder uriBuilder, final @Context\n     private final ManagedItemProvider managedItemProvider;\n     private final MetadataRegistry metadataRegistry;\n     private final MetadataSelectorMatcher metadataSelectorMatcher;\n+    private final SemanticTagRegistry semanticTagRegistry;\n     private final ItemRegistryChangeListener resetLastModifiedItemChangeListener = new ResetLastModifiedItemChangeListener();\n     private final RegistryChangeListener<Metadata> resetLastModifiedMetadataChangeListener = new ResetLastModifiedMetadataChangeListener();\n \n@@ -196,7 +197,8 @@ public ItemResource(//\n             final @Reference LocaleService localeService, //\n             final @Reference ManagedItemProvider managedItemProvider,\n             final @Reference MetadataRegistry metadataRegistry,\n-            final @Reference MetadataSelectorMatcher metadataSelectorMatcher) {\n+            final @Reference MetadataSelectorMatcher metadataSelectorMatcher,\n+            final @Reference SemanticTagRegistry semanticTagRegistry) {\n         this.dtoMapper = dtoMapper;\n         this.eventPublisher = eventPublisher;\n         this.itemBuilderFactory = itemBuilderFactory;\n@@ -205,6 +207,7 @@ public ItemResource(//\n         this.managedItemProvider = managedItemProvider;\n         this.metadataRegistry = metadataRegistry;\n         this.metadataSelectorMatcher = metadataSelectorMatcher;\n+        this.semanticTagRegistry = semanticTagRegistry;\n \n         this.itemRegistry.addRegistryChangeListener(resetLastModifiedItemChangeListener);\n         this.metadataRegistry.addRegistryChangeListener(resetLastModifiedMetadataChangeListener);\n@@ -865,7 +868,8 @@ public Response getSemanticItem(final @Context UriInfo uriInfo, final @Context H\n             @PathParam(\"semanticClass\") @Parameter(description = \"semantic class\") String semanticClassName) {\n         Locale locale = localeService.getLocale(language);\n \n-        Class<? extends org.openhab.core.semantics.Tag> semanticClass = SemanticTags.getById(semanticClassName);\n+        Class<? extends org.openhab.core.semantics.Tag> semanticClass = semanticTagRegistry\n+                .getTagClassById(semanticClassName);\n         if (semanticClass == null) {\n             return Response.status(Status.NOT_FOUND).build();\n         }\n\ndiff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/EnrichedSemanticTagDTO.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/EnrichedSemanticTagDTO.java\nnew file mode 100644\nindex 00000000000..f19d33f6802\n--- /dev/null\n+++ b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/EnrichedSemanticTagDTO.java\n@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.io.rest.core.internal.tag;\n+\n+import java.util.List;\n+\n+import org.openhab.core.semantics.SemanticTag;\n+\n+/**\n+ * A DTO representing a {@link SemanticTag}.\n+ *\n+ * @author Jimmy Tanagra - initial contribution\n+ * @author Laurent Garnier - Class renamed and members uid, description and editable added\n+ */\n+public class EnrichedSemanticTagDTO {\n+    String uid;\n+    String name;\n+    String label;\n+    String description;\n+    List<String> synonyms;\n+    boolean editable;\n+\n+    public EnrichedSemanticTagDTO(SemanticTag tag, boolean editable) {\n+        this.uid = tag.getUID();\n+        this.name = tag.getUID().substring(tag.getUID().lastIndexOf(\"_\") + 1);\n+        this.label = tag.getLabel();\n+        this.description = tag.getDescription();\n+        this.synonyms = tag.getSynonyms();\n+        this.editable = editable;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/TagDTO.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/TagDTO.java\ndeleted file mode 100644\nindex 37d68f17cec..00000000000\n--- a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/TagDTO.java\n+++ /dev/null\n@@ -1,38 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.io.rest.core.internal.tag;\n-\n-import java.util.List;\n-import java.util.Locale;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.SemanticTags;\n-import org.openhab.core.semantics.Tag;\n-\n-/**\n- * A DTO representing a Semantic {@link Tag}.\n- *\n- * @author Jimmy Tanagra - initial contribution\n- */\n-@NonNullByDefault\n-public class TagDTO {\n-    String name;\n-    String label;\n-    List<String> synonyms;\n-\n-    public TagDTO(Class<? extends Tag> tag, Locale locale) {\n-        this.name = tag.getSimpleName();\n-        this.label = SemanticTags.getLabel(tag, locale);\n-        this.synonyms = SemanticTags.getSynonyms(tag, locale);\n-    }\n-}\n\ndiff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/TagResource.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/TagResource.java\nindex be55ca2d26c..b3d954f3d3c 100644\n--- a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/TagResource.java\n+++ b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/tag/TagResource.java\n@@ -12,14 +12,19 @@\n  */\n package org.openhab.core.io.rest.core.internal.tag;\n \n+import java.util.Comparator;\n import java.util.List;\n import java.util.Locale;\n-import java.util.Map;\n \n import javax.annotation.security.RolesAllowed;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;\n import javax.ws.rs.HeaderParam;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.Context;\n import javax.ws.rs.core.HttpHeaders;\n@@ -35,10 +40,10 @@\n import org.openhab.core.io.rest.LocaleService;\n import org.openhab.core.io.rest.RESTConstants;\n import org.openhab.core.io.rest.RESTResource;\n-import org.openhab.core.semantics.model.equipment.Equipments;\n-import org.openhab.core.semantics.model.location.Locations;\n-import org.openhab.core.semantics.model.point.Points;\n-import org.openhab.core.semantics.model.property.Properties;\n+import org.openhab.core.semantics.ManagedSemanticTagProvider;\n+import org.openhab.core.semantics.SemanticTag;\n+import org.openhab.core.semantics.SemanticTagImpl;\n+import org.openhab.core.semantics.SemanticTagRegistry;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n import org.osgi.service.component.annotations.Reference;\n@@ -54,11 +59,13 @@\n import io.swagger.v3.oas.annotations.media.Content;\n import io.swagger.v3.oas.annotations.media.Schema;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n \n /**\n  * This class acts as a REST resource for retrieving a list of tags.\n  *\n  * @author Jimmy Tanagra - Initial contribution\n+ * @author Laurent Garnier - Extend REST API to allow adding/updating/removing user tags\n  */\n @Component\n @JaxrsResource\n@@ -74,28 +81,166 @@ public class TagResource implements RESTResource {\n     public static final String PATH_TAGS = \"tags\";\n \n     private final LocaleService localeService;\n+    private final SemanticTagRegistry semanticTagRegistry;\n+    private final ManagedSemanticTagProvider managedSemanticTagProvider;\n+\n+    // TODO pattern in @Path\n \n     @Activate\n-    public TagResource(final @Reference LocaleService localeService) {\n+    public TagResource(final @Reference LocaleService localeService,\n+            final @Reference SemanticTagRegistry semanticTagRegistry,\n+            final @Reference ManagedSemanticTagProvider managedSemanticTagProvider) {\n         this.localeService = localeService;\n+        this.semanticTagRegistry = semanticTagRegistry;\n+        this.managedSemanticTagProvider = managedSemanticTagProvider;\n     }\n \n     @GET\n     @RolesAllowed({ Role.USER, Role.ADMIN })\n     @Produces(MediaType.APPLICATION_JSON)\n-    @Operation(operationId = \"getTags\", summary = \"Get all available tags.\", responses = {\n-            @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(array = @ArraySchema(schema = @Schema(implementation = TagDTO.class)))) })\n+    @Operation(operationId = \"getSemanticTags\", summary = \"Get all available semantic tags.\", responses = {\n+            @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(array = @ArraySchema(schema = @Schema(implementation = EnrichedSemanticTagDTO.class)))) })\n     public Response getTags(final @Context UriInfo uriInfo, final @Context HttpHeaders httpHeaders,\n             @HeaderParam(HttpHeaders.ACCEPT_LANGUAGE) @Parameter(description = \"language\") @Nullable String language) {\n         final Locale locale = localeService.getLocale(language);\n \n-        Map<String, List<TagDTO>> tags = Map.of( //\n-                Locations.class.getSimpleName(), Locations.stream().map(tag -> new TagDTO(tag, locale)).toList(), //\n-                Equipments.class.getSimpleName(), Equipments.stream().map(tag -> new TagDTO(tag, locale)).toList(), //\n-                Points.class.getSimpleName(), Points.stream().map(tag -> new TagDTO(tag, locale)).toList(), //\n-                Properties.class.getSimpleName(), Properties.stream().map(tag -> new TagDTO(tag, locale)).toList() //\n-        );\n+        List<EnrichedSemanticTagDTO> tagsDTO = semanticTagRegistry.getAll().stream()\n+                .sorted(Comparator.comparing(SemanticTag::getUID))\n+                .map(t -> new EnrichedSemanticTagDTO(t.localized(locale), semanticTagRegistry.isEditable(t))).toList();\n+        return JSONResponse.createResponse(Status.OK, tagsDTO, null);\n+    }\n+\n+    @GET\n+    @RolesAllowed({ Role.USER, Role.ADMIN })\n+    @Path(\"/{tagId}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Operation(operationId = \"getSemanticTagAndSubTags\", summary = \"Gets a semantic tag and its sub tags.\", responses = {\n+            @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(array = @ArraySchema(schema = @Schema(implementation = EnrichedSemanticTagDTO.class)))),\n+            @ApiResponse(responseCode = \"404\", description = \"Semantic tag not found.\") })\n+    public Response getTagAndSubTags(\n+            @HeaderParam(HttpHeaders.ACCEPT_LANGUAGE) @Parameter(description = \"language\") @Nullable String language,\n+            @PathParam(\"tagId\") @Parameter(description = \"tag id\") String tagId) {\n+        final Locale locale = localeService.getLocale(language);\n+        String uid = tagId.trim();\n+\n+        SemanticTag tag = semanticTagRegistry.get(uid);\n+        if (tag != null) {\n+            List<EnrichedSemanticTagDTO> tagsDTO = semanticTagRegistry.getSubTree(tag).stream()\n+                    .sorted(Comparator.comparing(SemanticTag::getUID))\n+                    .map(t -> new EnrichedSemanticTagDTO(t.localized(locale), semanticTagRegistry.isEditable(t)))\n+                    .toList();\n+            return JSONResponse.createResponse(Status.OK, tagsDTO, null);\n+        } else {\n+            return JSONResponse.createErrorResponse(Status.NOT_FOUND, \"Tag \" + uid + \" does not exist!\");\n+        }\n+    }\n+\n+    @POST\n+    @RolesAllowed({ Role.ADMIN })\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Operation(operationId = \"createSemanticTag\", summary = \"Creates a new semantic tag and adds it to the registry.\", security = {\n+            @SecurityRequirement(name = \"oauth2\", scopes = { \"admin\" }) }, responses = {\n+                    @ApiResponse(responseCode = \"201\", description = \"Created\", content = @Content(schema = @Schema(implementation = EnrichedSemanticTagDTO.class))),\n+                    @ApiResponse(responseCode = \"400\", description = \"The tag identifier is invalid.\"),\n+                    @ApiResponse(responseCode = \"409\", description = \"A tag with the same identifier already exists.\") })\n+    public Response create(\n+            @HeaderParam(HttpHeaders.ACCEPT_LANGUAGE) @Parameter(description = \"language\") @Nullable String language,\n+            @Parameter(description = \"tag data\", required = true) EnrichedSemanticTagDTO data) {\n+        final Locale locale = localeService.getLocale(language);\n+\n+        if (data.uid == null) {\n+            return JSONResponse.createErrorResponse(Status.BAD_REQUEST, \"Tag identifier is required!\");\n+        }\n+\n+        String uid = data.uid.trim();\n+\n+        // check if a tag with this UID already exists\n+        SemanticTag tag = semanticTagRegistry.get(uid);\n+        if (tag != null) {\n+            // report a conflict\n+            return JSONResponse.createResponse(Status.CONFLICT,\n+                    new EnrichedSemanticTagDTO(tag.localized(locale), semanticTagRegistry.isEditable(tag)),\n+                    \"Tag \" + uid + \" already exists!\");\n+        }\n+\n+        tag = new SemanticTagImpl(uid, data.label, data.description, data.synonyms);\n+\n+        // Check that a tag with this uid can be added to the registry\n+        if (!semanticTagRegistry.canBeAdded(tag)) {\n+            return JSONResponse.createErrorResponse(Status.BAD_REQUEST, \"Invalid tag identifier \" + uid);\n+        }\n+\n+        managedSemanticTagProvider.add(tag);\n+\n+        return JSONResponse.createResponse(Status.CREATED,\n+                new EnrichedSemanticTagDTO(tag.localized(locale), semanticTagRegistry.isEditable(tag)), null);\n+    }\n+\n+    @DELETE\n+    @RolesAllowed({ Role.ADMIN })\n+    @Path(\"/{tagId}\")\n+    @Operation(operationId = \"removeSemanticTag\", summary = \"Removes a semantic tag and its sub tags from the registry.\", security = {\n+            @SecurityRequirement(name = \"oauth2\", scopes = { \"admin\" }) }, responses = {\n+                    @ApiResponse(responseCode = \"200\", description = \"OK, was deleted.\"),\n+                    @ApiResponse(responseCode = \"404\", description = \"Semantic tag not found.\"),\n+                    @ApiResponse(responseCode = \"405\", description = \"Semantic tag not removable.\") })\n+    public Response remove(\n+            @HeaderParam(HttpHeaders.ACCEPT_LANGUAGE) @Parameter(description = \"language\") @Nullable String language,\n+            @PathParam(\"tagId\") @Parameter(description = \"tag id\") String tagId) {\n+        final Locale locale = localeService.getLocale(language);\n+\n+        String uid = tagId.trim();\n+\n+        // check whether tag exists and throw 404 if not\n+        SemanticTag tag = semanticTagRegistry.get(uid);\n+        if (tag == null) {\n+            return JSONResponse.createErrorResponse(Status.NOT_FOUND, \"Tag \" + uid + \" does not exist!\");\n+        }\n+\n+        // Check that tag is removable, 405 otherwise\n+        if (!semanticTagRegistry.isEditable(tag)) {\n+            return JSONResponse.createErrorResponse(Status.METHOD_NOT_ALLOWED, \"Tag \" + uid + \" is not removable.\");\n+        }\n+\n+        semanticTagRegistry.removeSubTree(tag);\n+\n+        return Response.ok(null, MediaType.TEXT_PLAIN).build();\n+    }\n+\n+    @PUT\n+    @RolesAllowed({ Role.ADMIN })\n+    @Path(\"/{tagId}\")\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Operation(operationId = \"updateSemanticTag\", summary = \"Updates a semantic tag.\", security = {\n+            @SecurityRequirement(name = \"oauth2\", scopes = { \"admin\" }) }, responses = {\n+                    @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(schema = @Schema(implementation = EnrichedSemanticTagDTO.class))),\n+                    @ApiResponse(responseCode = \"404\", description = \"Semantic tag not found.\"),\n+                    @ApiResponse(responseCode = \"405\", description = \"Semantic tag not editable.\") })\n+    public Response update(\n+            @HeaderParam(HttpHeaders.ACCEPT_LANGUAGE) @Parameter(description = \"language\") @Nullable String language,\n+            @PathParam(\"tagId\") @Parameter(description = \"tag id\") String tagId,\n+            @Parameter(description = \"tag data\", required = true) EnrichedSemanticTagDTO data) {\n+        final Locale locale = localeService.getLocale(language);\n+\n+        String uid = tagId.trim();\n+\n+        // check whether tag exists and throw 404 if not\n+        SemanticTag tag = semanticTagRegistry.get(uid);\n+        if (tag == null) {\n+            return JSONResponse.createErrorResponse(Status.NOT_FOUND, \"Tag \" + uid + \" does not exist!\");\n+        }\n+\n+        // Check that tag is editable, 405 otherwise\n+        if (!semanticTagRegistry.isEditable(tag)) {\n+            return JSONResponse.createErrorResponse(Status.METHOD_NOT_ALLOWED, \"Tag \" + uid + \" is not editable.\");\n+        }\n+\n+        tag = new SemanticTagImpl(uid, data.label != null ? data.label : tag.getLabel(),\n+                data.description != null ? data.description : tag.getDescription(),\n+                data.synonyms != null ? data.synonyms : tag.getSynonyms());\n+        managedSemanticTagProvider.update(tag);\n \n-        return JSONResponse.createResponse(Status.OK, tags, null);\n+        return JSONResponse.createResponse(Status.OK,\n+                new EnrichedSemanticTagDTO(tag.localized(locale), semanticTagRegistry.isEditable(tag)), null);\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.semantics/model/generateTagClasses.groovy b/bundles/org.openhab.core.semantics/model/generateTagClasses.groovy\nindex 20f9cb58e79..0012ff6be0b 100755\n--- a/bundles/org.openhab.core.semantics/model/generateTagClasses.groovy\n+++ b/bundles/org.openhab.core.semantics/model/generateTagClasses.groovy\n@@ -22,10 +22,6 @@ baseDir = Paths.get(getClass().protectionDomain.codeSource.location.toURI()).get\n header = header()\n \n def tagSets = new TreeMap<String, String>()\n-def locations = new TreeSet<String>()\n-def equipments = new TreeSet<String>()\n-def points = new TreeSet<String>()\n-def properties = new TreeSet<String>()\n \n def labelsFile = new FileWriter(\"${baseDir}/src/main/resources/tags.properties\")\n labelsFile.write(\"# Generated content - do not edit!\\n\")\n@@ -36,63 +32,26 @@ for (line in parseCsv(new FileReader(\"${baseDir}/model/SemanticTags.csv\"), separ\n     def tagSet = (line.Parent ? tagSets.get(line.Parent) : line.Type) + \"_\" + line.Tag\n     tagSets.put(line.Tag,tagSet)\n \n-    createTagSetClass(line, tagSet)\n     appendLabelsFile(labelsFile, line, tagSet)\n \n     switch(line.Type) {\n-        case \"Location\"            : locations.add(line.Tag); break;\n-        case \"Equipment\"           : equipments.add(line.Tag); break;\n-        case \"Point\"               : points.add(line.Tag); break;\n-        case \"Property\"            : properties.add(line.Tag); break;\n+        case \"Location\"            : break;\n+        case \"Equipment\"           : break;\n+        case \"Point\"               : break;\n+        case \"Property\"            : break;\n         default : println \"Unrecognized type \" + line.Type\n     }\n }\n \n labelsFile.close()\n \n-createLocationsFile(locations)\n-createEquipmentsFile(equipments)\n-createPointsFile(points)\n-createPropertiesFile(properties)\n+createDefaultProviderFile(tagSets)\n \n println \"\\n\\nTagSets:\"\n for (String tagSet : tagSets) {\n     println tagSet\n }\n \n-def createTagSetClass(def line, String tagSet) {\n-    def tag = line.Tag\n-    def type = line.Type\n-    def label = line.Label\n-    def synonyms = line.Synonyms\n-    def desc = line.Description\n-    def parent = line.Parent\n-    def parentClass = parent ? parent : type\n-    def pkg = type.toLowerCase()\n-    def ch = label.toLowerCase().charAt(0)\n-    def article = ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' ? \"an\" : \"a\"\n-    def file = new FileWriter(\"${baseDir}/src/main/java/org/openhab/core/semantics/model/${pkg}/${tag}.java\")\n-    file.write(header)\n-    file.write(\"package org.openhab.core.semantics.model.\" + pkg + \";\\n\\n\")\n-    file.write(\"import org.eclipse.jdt.annotation.NonNullByDefault;\\n\")\n-    if (!parent) {\n-            file.write(\"import org.openhab.core.semantics.\" + type + \";\\n\")\n-    }\n-    file.write(\"\"\"import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines ${article} ${label}.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"${tagSet}\", label = \"${label}\", synonyms = \"${synonyms}\", description = \"${desc}\")\n-public interface ${tag} extends ${parentClass} {\n-}\n-\"\"\")\n-    file.close()\n-}\n-\n def appendLabelsFile(FileWriter file, def line, String tagSet) {\n     file.write(tagSet + \"=\" + line.Label)\n     if (line.Synonyms) {\n@@ -101,168 +60,59 @@ def appendLabelsFile(FileWriter file, def line, String tagSet) {\n     file.write(\"\\n\")\n }\n \n-def createLocationsFile(Set<String> locations) {\n-    def file = new FileWriter(\"${baseDir}/src/main/java/org/openhab/core/semantics/model/location/Locations.java\")\n+def createDefaultProviderFile(def tagSets) {\n+    def file = new FileWriter(\"${baseDir}/src/main/java/org/openhab/core/semantics/model/DefaultSemanticTagProvider.java\")\n     file.write(header)\n-    file.write(\"\"\"package org.openhab.core.semantics.model.location;\n+    file.write(\"\"\"package org.openhab.core.semantics.model;\n \n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.stream.Stream;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Location;\n+import org.openhab.core.common.registry.ProviderChangeListener;\n+import org.openhab.core.semantics.SemanticTag;\n+import org.openhab.core.semantics.SemanticTagImpl;\n+import org.openhab.core.semantics.SemanticTagProvider;\n+import org.osgi.service.component.annotations.Component;\n \n /**\n- * This class provides a stream of all defined locations.\n+ * This class defines a provider of all default semantic tags.\n  *\n  * @author Generated from generateTagClasses.groovy - Initial contribution\n  */\n @NonNullByDefault\n-public class Locations {\n+@Component(immediate = true, service = { SemanticTagProvider.class, DefaultSemanticTagProvider.class })\n+public class DefaultSemanticTagProvider implements SemanticTagProvider {\n \n-    static final Set<Class<? extends Location>> LOCATIONS = new HashSet<>();\n+    private List<SemanticTag> defaultTags;\n \n-    static {\n-        LOCATIONS.add(Location.class);\n+    public DefaultSemanticTagProvider() {\n+        this.defaultTags = new ArrayList<>();\n+        defaultTags.add(new SemanticTagImpl(\"Equipment\", \"\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location\", \"\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point\", \"\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property\", \"\", \"\", \"\"));\n \"\"\")    \n-    for (String location : locations) {\n-        file.write(\"        LOCATIONS.add(${location}.class);\\n\")\n-    }\n-    file.write(\"\"\"    }\n-\n-    public static Stream<Class<? extends Location>> stream() {\n-        return LOCATIONS.stream();\n-    }\n-\n-    public static boolean add(Class<? extends Location> tag) {\n-        return LOCATIONS.add(tag);\n-    }\n-}\n-\"\"\")\n-    file.close()\n-}\n-\n-def createEquipmentsFile(Set<String> equipments) {\n-    def file = new FileWriter(\"${baseDir}/src/main/java/org/openhab/core/semantics/model/equipment/Equipments.java\")\n-    file.write(header)\n-    file.write(\"\"\"package org.openhab.core.semantics.model.equipment;\n-\n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.stream.Stream;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-\n-/**\n- * This class provides a stream of all defined equipments.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-public class Equipments {\n-\n-    static final Set<Class<? extends Equipment>> EQUIPMENTS = new HashSet<>();\n-\n-    static {\n-        EQUIPMENTS.add(Equipment.class);\n-\"\"\")    \n-    for (String equipment : equipments) {\n-        file.write(\"        EQUIPMENTS.add(${equipment}.class);\\n\")\n-    }\n-    file.write(\"\"\"    }\n-\n-    public static Stream<Class<? extends Equipment>> stream() {\n-        return EQUIPMENTS.stream();\n-    }\n-\n-    public static boolean add(Class<? extends Equipment> tag) {\n-        return EQUIPMENTS.add(tag);\n-    }\n-}\n+    for (line in parseCsv(new FileReader(\"${baseDir}/model/SemanticTags.csv\"), separator: ',')) {\n+        def tagId = (line.Parent ? tagSets.get(line.Parent) : line.Type) + \"_\" + line.Tag\n+        file.write(\"\"\"        defaultTags.add(new SemanticTagImpl(\"${tagId}\", //\n+                \"${line.Label}\", \"${line.Description}\", \"${line.Synonyms}\"));\n \"\"\")\n-    file.close()\n-}\n-\n-def createPointsFile(Set<String> points) {\n-    def file = new FileWriter(\"${baseDir}/src/main/java/org/openhab/core/semantics/model/point/Points.java\")\n-    file.write(header)\n-    file.write(\"\"\"package org.openhab.core.semantics.model.point;\n-\n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.stream.Stream;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Point;\n-\n-/**\n- * This class provides a stream of all defined points.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-public class Points {\n-\n-    static final Set<Class<? extends Point>> POINTS = new HashSet<>();\n-\n-    static {\n-        POINTS.add(Point.class);\n-\"\"\")    \n-    for (String point : points) {\n-        file.write(\"        POINTS.add(${point}.class);\\n\")\n     }\n     file.write(\"\"\"    }\n \n-    public static Stream<Class<? extends Point>> stream() {\n-        return POINTS.stream();\n-    }\n-\n-    public static boolean add(Class<? extends Point> tag) {\n-        return POINTS.add(tag);\n+    @Override\n+    public Collection<SemanticTag> getAll() {\n+        return defaultTags;\n     }\n-}\n-\"\"\")\n-    file.close()\n-}\n-\n-def createPropertiesFile(Set<String> properties) {\n-    def file = new FileWriter(\"${baseDir}/src/main/java/org/openhab/core/semantics/model/property/Properties.java\")\n-    file.write(header)\n-    file.write(\"\"\"package org.openhab.core.semantics.model.property;\n-\n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.stream.Stream;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Property;\n-\n-/**\n- * This class provides a stream of all defined properties.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-public class Properties {\n-\n-    static final Set<Class<? extends Property>> PROPERTIES = new HashSet<>();\n-\n-    static {\n-        PROPERTIES.add(Property.class);\n-\"\"\")    \n-    for (String property : properties) {\n-        file.write(\"        PROPERTIES.add(${property}.class);\\n\")\n-    }\n-    file.write(\"\"\"    }\n \n-    public static Stream<Class<? extends Property>> stream() {\n-        return PROPERTIES.stream();\n+    @Override\n+    public void addProviderChangeListener(ProviderChangeListener<SemanticTag> listener) {\n     }\n \n-    public static boolean add(Class<? extends Property> tag) {\n-        return PROPERTIES.add(tag);\n+    @Override\n+    public void removeProviderChangeListener(ProviderChangeListener<SemanticTag> listener) {\n     }\n }\n \"\"\")\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Equipment.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Equipment.java\nindex f3de8702dc0..096093cfa31 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Equipment.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Equipment.java\n@@ -22,7 +22,6 @@\n  * @author Kai Kreuzer - Initial contribution\n  */\n @NonNullByDefault\n-@TagInfo(id = \"Equipment\")\n public interface Equipment extends Tag {\n \n     @Nullable\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Location.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Location.java\nindex cc4497205e1..cc5a890dfb3 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Location.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Location.java\n@@ -22,7 +22,6 @@\n  * @author Kai Kreuzer - Initial contribution\n  */\n @NonNullByDefault\n-@TagInfo(id = \"Location\")\n public interface Location extends Tag {\n \n     static String name() {\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/ManagedSemanticTagProvider.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/ManagedSemanticTagProvider.java\nnew file mode 100644\nindex 00000000000..fbb7be82559\n--- /dev/null\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/ManagedSemanticTagProvider.java\n@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.semantics;\n+\n+import java.util.Collection;\n+import java.util.Comparator;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.common.registry.AbstractManagedProvider;\n+import org.openhab.core.semantics.dto.SemanticTagDTO;\n+import org.openhab.core.semantics.dto.SemanticTagDTOMapper;\n+import org.openhab.core.storage.StorageService;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+/**\n+ * {@link ManagedSemanticTagProvider} is an OSGi service, that allows to add or remove\n+ * semantic tags at runtime by calling {@link ManagedSemanticTagProvider#add(SemanticTag)}\n+ * or {@link ManagedSemanticTagProvider#remove(String)}.\n+ * An added semantic tag is automatically exposed to the {@link SemanticTagRegistry}.\n+ * Persistence of added semantic tags is handled by a {@link StorageService}.\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(immediate = true, service = { SemanticTagProvider.class, ManagedSemanticTagProvider.class })\n+public class ManagedSemanticTagProvider extends AbstractManagedProvider<SemanticTag, String, SemanticTagDTO>\n+        implements SemanticTagProvider {\n+\n+    @Activate\n+    public ManagedSemanticTagProvider(final @Reference StorageService storageService) {\n+        super(storageService);\n+    }\n+\n+    @Override\n+    protected String getStorageName() {\n+        return SemanticTag.class.getName();\n+    }\n+\n+    @Override\n+    protected String keyToString(String key) {\n+        return key;\n+    }\n+\n+    @Override\n+    public Collection<SemanticTag> getAll() {\n+        // Sort tags by uid to be sure that tag classes will be created in the right order\n+        return super.getAll().stream().sorted(Comparator.comparing(SemanticTag::getUID)).toList();\n+    }\n+\n+    @Override\n+    protected @Nullable SemanticTag toElement(String uid, SemanticTagDTO persistedTag) {\n+        return SemanticTagDTOMapper.map(persistedTag);\n+    }\n+\n+    @Override\n+    protected SemanticTagDTO toPersistableElement(SemanticTag tag) {\n+        return SemanticTagDTOMapper.map(tag);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Point.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Point.java\nindex a707ae9976d..8971feb32ce 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Point.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Point.java\n@@ -22,7 +22,6 @@\n  * @author Kai Kreuzer - Initial contribution\n  */\n @NonNullByDefault\n-@TagInfo(id = \"Point\")\n public interface Point extends Tag {\n \n     @Nullable\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Property.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Property.java\nindex b2a003023a7..d119925c14d 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Property.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/Property.java\n@@ -20,6 +20,5 @@\n  * @author Kai Kreuzer - Initial contribution\n  */\n @NonNullByDefault\n-@TagInfo(id = \"Property\")\n public interface Property extends Tag {\n }\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTag.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTag.java\nnew file mode 100644\nindex 00000000000..d1782911521\n--- /dev/null\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTag.java\n@@ -0,0 +1,71 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.semantics;\n+\n+import java.util.List;\n+import java.util.Locale;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.common.registry.Identifiable;\n+\n+/**\n+ * This interface defines the core features of an openHAB semantic tag.\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface SemanticTag extends Identifiable<String> {\n+\n+    /**\n+     * Returns the name of the semantic tag.\n+     *\n+     * @return the name of the semantic tag\n+     */\n+    String getName();\n+\n+    /**\n+     * Returns the UID of the parent tag.\n+     *\n+     * @return the UID of the parent tag\n+     */\n+    String getParentUID();\n+\n+    /**\n+     * Returns the label of the semantic tag.\n+     *\n+     * @return semantic tag label or an empty string if undefined\n+     */\n+    String getLabel();\n+\n+    /**\n+     * Returns the description of the semantic tag.\n+     *\n+     * @return semantic tag description or an empty string if undefined\n+     */\n+    String getDescription();\n+\n+    /**\n+     * Returns the synonyms of the semantic tag.\n+     *\n+     * @return semantic tag synonyms as a List\n+     */\n+    List<String> getSynonyms();\n+\n+    /**\n+     * Returns the localized semantic tag.\n+     *\n+     * @param locale the locale to be used\n+     * @return the localized semantic tag\n+     */\n+    SemanticTag localized(Locale locale);\n+}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagImpl.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagImpl.java\nnew file mode 100644\nindex 00000000000..37c7cd0381d\n--- /dev/null\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagImpl.java\n@@ -0,0 +1,133 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.semantics;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+import java.util.ResourceBundle.Control;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+/**\n+ * This is the main implementing class of the {@link SemanticTag} interface.\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+@NonNullByDefault\n+public class SemanticTagImpl implements SemanticTag {\n+\n+    private static final String TAGS_BUNDLE_NAME = \"tags\";\n+\n+    private String uid;\n+    private String name;\n+    private String parent;\n+    private String label;\n+    private String description;\n+    private List<String> synonyms;\n+\n+    public SemanticTagImpl(String uid, @Nullable String label, @Nullable String description,\n+            @Nullable List<String> synonyms) {\n+        this(uid, label, description);\n+        if (synonyms != null) {\n+            this.synonyms = new ArrayList<>();\n+            for (String synonym : synonyms) {\n+                this.synonyms.add(synonym.trim());\n+            }\n+        }\n+    }\n+\n+    public SemanticTagImpl(String uid, @Nullable String label, @Nullable String description,\n+            @Nullable String synonyms) {\n+        this(uid, label, description);\n+        if (synonyms != null && !synonyms.isBlank()) {\n+            this.synonyms = new ArrayList<>();\n+            for (String synonym : synonyms.split(\",\")) {\n+                this.synonyms.add(synonym.trim());\n+            }\n+        }\n+    }\n+\n+    private SemanticTagImpl(String uid, @Nullable String label, @Nullable String description) {\n+        this.uid = uid;\n+        int idx = uid.lastIndexOf(\"_\");\n+        if (idx < 0) {\n+            this.name = uid.trim();\n+            this.parent = \"\";\n+        } else {\n+            this.name = uid.substring(idx + 1).trim();\n+            this.parent = uid.substring(0, idx).trim();\n+        }\n+        this.label = label == null ? \"\" : label.trim();\n+        this.description = description == null ? \"\" : description.trim();\n+        this.synonyms = List.of();\n+    }\n+\n+    @Override\n+    public String getUID() {\n+        return uid;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public String getParentUID() {\n+        return parent;\n+    }\n+\n+    @Override\n+    public String getLabel() {\n+        return label;\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    @Override\n+    public List<String> getSynonyms() {\n+        return synonyms;\n+    }\n+\n+    @Override\n+    public SemanticTag localized(Locale locale) {\n+        ResourceBundle rb = ResourceBundle.getBundle(TAGS_BUNDLE_NAME, locale,\n+                Control.getNoFallbackControl(Control.FORMAT_PROPERTIES));\n+        String label;\n+        List<String> synonyms;\n+        try {\n+            String entry = rb.getString(uid);\n+            int idx = entry.indexOf(\",\");\n+            if (idx >= 0) {\n+                label = entry.substring(0, idx);\n+                String synonymsCsv = entry.substring(idx + 1);\n+                synonyms = synonymsCsv.isBlank() ? null : List.of(synonymsCsv.split(\",\"));\n+            } else {\n+                label = entry;\n+                synonyms = null;\n+            }\n+        } catch (MissingResourceException e) {\n+            label = getLabel();\n+            synonyms = getSynonyms();\n+        }\n+\n+        return new SemanticTagImpl(uid, label, getDescription(), synonyms);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/point/Tilt.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagProvider.java\nsimilarity index 59%\nrename from bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/point/Tilt.java\nrename to bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagProvider.java\nindex 23a86709233..3d4c0a5a14f 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/point/Tilt.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagProvider.java\n@@ -10,17 +10,17 @@\n  *\n  * SPDX-License-Identifier: EPL-2.0\n  */\n-package org.openhab.core.semantics.model.point;\n+package org.openhab.core.semantics;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n+import org.openhab.core.common.registry.Provider;\n \n /**\n- * This class defines a Tilt.\n+ * The {@link SemanticTagProvider} is responsible for providing semantic tags.\n  *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n+ * @author Laurent Garnier - Initial contribution\n  */\n @NonNullByDefault\n-@TagInfo(id = \"Point_Status_Tilt\", label = \"Tilt\", synonyms = \"\", description = \"\")\n-public interface Tilt extends Status {\n+public interface SemanticTagProvider extends Provider<SemanticTag> {\n+\n }\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagRegistry.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagRegistry.java\nnew file mode 100644\nindex 00000000000..7c84ab65c2c\n--- /dev/null\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTagRegistry.java\n@@ -0,0 +1,80 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.semantics;\n+\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.common.registry.Registry;\n+\n+/**\n+ * {@link SemanticTagRegistry} tracks all {@link SemanticTag}s from different {@link SemanticTagProvider}s\n+ * and provides access to them.\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface SemanticTagRegistry extends Registry<SemanticTag, String> {\n+\n+    /**\n+     * Retrieves the class for a given id.\n+     *\n+     * @param tagId the id of the tag. The id can be fully qualified (e.g. \"Location_Room_Bedroom\") or a segment, if\n+     *            this uniquely identifies the tag\n+     *            (e.g. \"Bedroom\").\n+     * @return the class for the id or null, if non exists.\n+     */\n+    @Nullable\n+    Class<? extends Tag> getTagClassById(String tagId);\n+\n+    /**\n+     * Checks if a tag with a given id can be added to the registry.\n+     *\n+     * To be added, no tag with this id must already exist in the registry, the tag name extracted from this id\n+     * must have a valid syntax, the parent tag extracted from this id must already exists in the registry and\n+     * should be either a default semantic tag or a managed semantic tag, and no tag with a same name must already\n+     * exist in the registry.\n+     *\n+     * @param tag a tag to be added to the registry\n+     * @return true if the tag can be added, false if not\n+     */\n+    boolean canBeAdded(SemanticTag tag);\n+\n+    /**\n+     * Returns the provided tag + all tags having the provided tag as ancestor.\n+     *\n+     * @param tag a tag in the registry\n+     * @return a list of all tags having the provided tag as ancestor, including the provided tag itself\n+     */\n+    List<SemanticTag> getSubTree(SemanticTag tag);\n+\n+    /**\n+     * Indicates if a tag is editable.\n+     *\n+     * To be editable, a tag must be managed.\n+     *\n+     * @param tag a tag in the registry\n+     * @return true if the provided tag is editable, false if not\n+     */\n+    boolean isEditable(SemanticTag tag);\n+\n+    /**\n+     * Removes the provided tag and all tags having the provided tag as ancestor.\n+     *\n+     * Only removable (managed) tags are removed.\n+     *\n+     * @param tag a tag in the registry\n+     */\n+    void removeSubTree(SemanticTag tag);\n+}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java\nindex 58982dab6ce..fecebc542ab 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java\n@@ -12,32 +12,15 @@\n  */\n package org.openhab.core.semantics;\n \n-import java.util.List;\n-import java.util.Locale;\n+import java.util.Collections;\n import java.util.Map;\n-import java.util.MissingResourceException;\n-import java.util.Optional;\n-import java.util.ResourceBundle;\n-import java.util.ResourceBundle.Control;\n import java.util.Set;\n import java.util.TreeMap;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n-import org.objectweb.asm.AnnotationVisitor;\n-import org.objectweb.asm.ClassWriter;\n-import org.objectweb.asm.Opcodes;\n import org.openhab.core.items.Item;\n-import org.openhab.core.semantics.model.equipment.Equipments;\n-import org.openhab.core.semantics.model.location.Locations;\n-import org.openhab.core.semantics.model.point.Measurement;\n-import org.openhab.core.semantics.model.point.Points;\n-import org.openhab.core.semantics.model.property.Properties;\n import org.openhab.core.types.StateDescription;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n /**\n  * This is a class that gives static access to the semantic tag library.\n@@ -45,22 +28,18 @@\n  *\n  * @author Kai Kreuzer - Initial contribution\n  * @author Jimmy Tanagra - Add the ability to add new tags at runtime\n+ * @author Laurent Garnier - Several methods moved into class SemanticsService or SemanticTagRegistry\n  */\n @NonNullByDefault\n public class SemanticTags {\n \n-    private static final String TAGS_BUNDLE_NAME = \"tags\";\n-\n-    private static final Map<String, Class<? extends Tag>> TAGS = new TreeMap<>();\n-\n-    private static final Logger LOGGER = LoggerFactory.getLogger(SemanticTags.class);\n-    private static final SemanticClassLoader CLASS_LOADER = new SemanticClassLoader();\n+    private static final Map<String, Class<? extends Tag>> TAGS = Collections.synchronizedMap(new TreeMap<>());\n \n     static {\n-        Locations.stream().forEach(location -> addTagSet(location));\n-        Equipments.stream().forEach(equipment -> addTagSet(equipment));\n-        Points.stream().forEach(point -> addTagSet(point));\n-        Properties.stream().forEach(property -> addTagSet(property));\n+        addTagSet(\"Location\", Location.class);\n+        addTagSet(\"Equipment\", Equipment.class);\n+        addTagSet(\"Point\", Point.class);\n+        addTagSet(\"Property\", Property.class);\n     }\n \n     /**\n@@ -75,69 +54,6 @@ public class SemanticTags {\n         return TAGS.get(tagId);\n     }\n \n-    public static @Nullable Class<? extends Tag> getByLabel(String tagLabel, Locale locale) {\n-        Optional<Class<? extends Tag>> tag = TAGS.values().stream().distinct()\n-                .filter(t -> getLabel(t, locale).equalsIgnoreCase(tagLabel)).findFirst();\n-        return tag.isPresent() ? tag.get() : null;\n-    }\n-\n-    public static List<Class<? extends Tag>> getByLabelOrSynonym(String tagLabelOrSynonym, Locale locale) {\n-        return TAGS.values().stream().distinct()\n-                .filter(t -> getLabelAndSynonyms(t, locale).contains(tagLabelOrSynonym.toLowerCase(locale)))\n-                .collect(Collectors.toList());\n-    }\n-\n-    public static List<String> getLabelAndSynonyms(Class<? extends Tag> tag, Locale locale) {\n-        ResourceBundle rb = ResourceBundle.getBundle(TAGS_BUNDLE_NAME, locale,\n-                Control.getNoFallbackControl(Control.FORMAT_PROPERTIES));\n-        TagInfo tagInfo = tag.getAnnotation(TagInfo.class);\n-        try {\n-            String entry = rb.getString(tagInfo.id());\n-            return List.of(entry.toLowerCase(locale).split(\",\"));\n-        } catch (MissingResourceException e) {\n-            Stream<String> label = Stream.of(tagInfo.label());\n-            Stream<String> synonyms = Stream.of(tagInfo.synonyms().split(\",\")).map(String::trim);\n-            return Stream.concat(label, synonyms).map(s -> s.toLowerCase(locale)).distinct().toList();\n-        }\n-    }\n-\n-    public static String getLabel(Class<? extends Tag> tag, Locale locale) {\n-        ResourceBundle rb = ResourceBundle.getBundle(TAGS_BUNDLE_NAME, locale,\n-                Control.getNoFallbackControl(Control.FORMAT_PROPERTIES));\n-        TagInfo tagInfo = tag.getAnnotation(TagInfo.class);\n-        try {\n-            String entry = rb.getString(tagInfo.id());\n-            if (entry.contains(\",\")) {\n-                return entry.substring(0, entry.indexOf(\",\"));\n-            } else {\n-                return entry;\n-            }\n-        } catch (MissingResourceException e) {\n-            return tagInfo.label();\n-        }\n-    }\n-\n-    public static List<String> getSynonyms(Class<? extends Tag> tag, Locale locale) {\n-        ResourceBundle rb = ResourceBundle.getBundle(TAGS_BUNDLE_NAME, locale,\n-                Control.getNoFallbackControl(Control.FORMAT_PROPERTIES));\n-        String synonyms = \"\";\n-        TagInfo tagInfo = tag.getAnnotation(TagInfo.class);\n-        try {\n-            String entry = rb.getString(tagInfo.id());\n-            int start = entry.indexOf(\",\") + 1;\n-            if (start > 0 && entry.length() > start) {\n-                synonyms = entry.substring(start);\n-            }\n-        } catch (MissingResourceException e) {\n-            synonyms = tagInfo.synonyms();\n-        }\n-        return Stream.of(synonyms.split(\",\")).map(String::trim).toList();\n-    }\n-\n-    public static String getDescription(Class<? extends Tag> tag, Locale locale) {\n-        return tag.getAnnotation(TagInfo.class).description();\n-    }\n-\n     /**\n      * Determines the semantic type of an {@link Item} i.e. a sub-type of {@link Location}, {@link Equipment} or\n      * {@link Point}.\n@@ -156,9 +72,9 @@ public static String getDescription(Class<? extends Tag> tag, Locale locale) {\n         if (getProperty(item) != null) {\n             StateDescription stateDescription = item.getStateDescription();\n             if (stateDescription != null && stateDescription.isReadOnly()) {\n-                return Measurement.class;\n+                return getById(\"Point_Measurement\");\n             } else {\n-                return org.openhab.core.semantics.model.point.Control.class;\n+                return getById(\"Point_Control\");\n             }\n         } else {\n             return null;\n@@ -234,147 +150,11 @@ public static String getDescription(Class<? extends Tag> tag, Locale locale) {\n         return null;\n     }\n \n-    /**\n-     * Adds a new semantic tag with inferred label, empty synonyms and description.\n-     * \n-     * The label will be inferred from the tag name by splitting the CamelCase with a space.\n-     * \n-     * @param name the tag name to add\n-     * @param parent the parent tag that the new tag should belong to\n-     * @return the created semantic tag class, or null if it was already added.\n-     */\n-    public static @Nullable Class<? extends Tag> add(String name, String parent) {\n-        return add(name, parent, null, null, null);\n-    }\n-\n-    /**\n-     * Adds a new semantic tag.\n-     * \n-     * @param name the tag name to add\n-     * @param parent the parent tag that the new tag should belong to\n-     * @param label an optional label. When null, the label will be inferred from the tag name,\n-     *            splitting the CamelCase with a space.\n-     * @param synonyms a comma separated list of synonyms\n-     * @param description the tag description\n-     * @return the created semantic tag class, or null if it was already added.\n-     */\n-    public static @Nullable Class<? extends Tag> add(String name, String parent, @Nullable String label,\n-            @Nullable String synonyms, @Nullable String description) {\n-        Class<? extends Tag> parentClass = getById(parent);\n-        if (parentClass == null) {\n-            LOGGER.warn(\"Adding semantic tag '{}' failed because parent tag '{}' is not found.\", name, parent);\n-            return null;\n-        }\n-        return add(name, parentClass, label, synonyms, description);\n-    }\n-\n-    /**\n-     * Adds a new semantic tag with inferred label, empty synonyms and description.\n-     * \n-     * The label will be inferred from the tag name by splitting the CamelCase with a space.\n-     * \n-     * @param name the tag name to add\n-     * @param parent the parent tag that the new tag should belong to\n-     * @return the created semantic tag class, or null if it was already added.\n-     */\n-    public static @Nullable Class<? extends Tag> add(String name, Class<? extends Tag> parent) {\n-        return add(name, parent, null, null, null);\n-    }\n-\n-    /**\n-     * Adds a new semantic tag.\n-     * \n-     * @param name the tag name to add\n-     * @param parent the parent tag that the new tag should belong to\n-     * @param label an optional label. When null, the label will be inferred from the tag name,\n-     *            splitting the CamelCase with a space.\n-     * @param synonyms a comma separated list of synonyms\n-     * @param description the tag description\n-     * @return the created semantic tag class, or null if it was already added.\n-     */\n-    public static @Nullable Class<? extends Tag> add(String name, Class<? extends Tag> parent, @Nullable String label,\n-            @Nullable String synonyms, @Nullable String description) {\n-        if (getById(name) != null) {\n-            return null;\n-        }\n-\n-        if (!name.matches(\"[A-Z][a-zA-Z0-9]+\")) {\n-            throw new IllegalArgumentException(\n-                    \"The tag name '\" + name + \"' must start with a capital letter and contain only alphanumerics.\");\n-        }\n-\n-        String parentId = parent.getAnnotation(TagInfo.class).id();\n-        String type = parentId.split(\"_\")[0];\n-        String className = \"org.openhab.core.semantics.model.\" + type.toLowerCase() + \".\" + name;\n-\n-        // Infer label from name, splitting up CamelCaseALL99 -> Camel Case ALL 99\n-        label = Optional.ofNullable(label).orElseGet(() -> name.replaceAll(\"([A-Z][a-z]+|[A-Z][A-Z]+|[0-9]+)\", \" $1\"))\n-                .trim();\n-        synonyms = Optional.ofNullable(synonyms).orElse(\"\").replaceAll(\"\\\\s*,\\\\s*\", \",\").trim();\n-\n-        // Create the tag interface\n-        ClassWriter classWriter = new ClassWriter(0);\n-        classWriter.visit(Opcodes.V11, Opcodes.ACC_PUBLIC + Opcodes.ACC_ABSTRACT + Opcodes.ACC_INTERFACE,\n-                className.replace('.', '/'), null, \"java/lang/Object\",\n-                new String[] { parent.getName().replace('.', '/') });\n-\n-        // Add TagInfo Annotation\n-        classWriter.visitSource(\"Status.java\", null);\n-\n-        AnnotationVisitor annotation = classWriter.visitAnnotation(\"Lorg/openhab/core/semantics/TagInfo;\", true);\n-        annotation.visit(\"id\", parentId + \"_\" + name);\n-        annotation.visit(\"label\", label);\n-        annotation.visit(\"synonyms\", synonyms);\n-        annotation.visit(\"description\", Optional.ofNullable(description).orElse(\"\").trim());\n-        annotation.visitEnd();\n-\n-        classWriter.visitEnd();\n-        byte[] byteCode = classWriter.toByteArray();\n-        Class newTag = null;\n-        try {\n-            newTag = CLASS_LOADER.defineClass(className, byteCode);\n-        } catch (Exception e) {\n-            LOGGER.warn(\"Failed creating a new semantic tag '{}': {}\", className, e.getMessage());\n-            return null;\n-        }\n-        addToModel(newTag);\n-        addTagSet(newTag);\n-        if (LOGGER.isTraceEnabled()) {\n-            LOGGER.trace(\"'{}' semantic {} tag added.\", className, type);\n-        }\n-        return newTag;\n-    }\n-\n-    private static void addTagSet(Class<? extends Tag> tagSet) {\n-        String id = tagSet.getAnnotation(TagInfo.class).id();\n-        while (id.indexOf(\"_\") != -1) {\n-            TAGS.put(id, tagSet);\n-            id = id.substring(id.indexOf(\"_\") + 1);\n-        }\n+    public static void addTagSet(String id, Class<? extends Tag> tagSet) {\n         TAGS.put(id, tagSet);\n     }\n \n-    private static boolean addToModel(Class<? extends Tag> tag) {\n-        if (Location.class.isAssignableFrom(tag)) {\n-            return Locations.add((Class<? extends Location>) tag);\n-        } else if (Equipment.class.isAssignableFrom(tag)) {\n-            return Equipments.add((Class<? extends Equipment>) tag);\n-        } else if (Point.class.isAssignableFrom(tag)) {\n-            return Points.add((Class<? extends Point>) tag);\n-        } else if (Property.class.isAssignableFrom(tag)) {\n-            return Properties.add((Class<? extends Property>) tag);\n-        }\n-        throw new IllegalArgumentException(\"Unknown type of tag \" + tag);\n-    }\n-\n-    private static class SemanticClassLoader extends ClassLoader {\n-        public SemanticClassLoader() {\n-            super(SemanticTags.class.getClassLoader());\n-        }\n-\n-        public Class<?> defineClass(String className, byte[] byteCode) {\n-            // defineClass is protected in the normal ClassLoader\n-            return defineClass(className, byteCode, 0, byteCode.length);\n-        }\n+    public static void removeTagSet(String id, Class<? extends Tag> tagSet) {\n+        TAGS.remove(id, tagSet);\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticsService.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticsService.java\nindex 7e321aaaf78..df36cc33cd2 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticsService.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticsService.java\n@@ -12,16 +12,19 @@\n  */\n package org.openhab.core.semantics;\n \n+import java.util.List;\n import java.util.Locale;\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.items.Item;\n \n /**\n  * This interface defines a service, which offers functionality regarding semantic tags.\n  *\n  * @author Kai Kreuzer - Initial contribution\n+ * @author Laurent Garnier - Few methods moved from class SemanticTags in order to use the semantic tag registry\n  */\n @NonNullByDefault\n public interface SemanticsService {\n@@ -45,4 +48,34 @@ public interface SemanticsService {\n      * @return as set of items that are located in the given location(s)\n      */\n     Set<Item> getItemsInLocation(String labelOrSynonym, Locale locale);\n+\n+    /**\n+     * Retrieves the first semantic tag having label matching the given parameter.\n+     * Case is ignored.\n+     *\n+     * @param tagLabel the searched label\n+     * @param locale the locale to be considered\n+     * @return the tag class of the first matching semantic tag or null if no matching found\n+     */\n+    @Nullable\n+    Class<? extends Tag> getByLabel(String tagLabel, Locale locale);\n+\n+    /**\n+     * Retrieves all semantic tags having label or a synonym matching the given parameter.\n+     * Case is ignored.\n+     *\n+     * @param tagLabelOrSynonym the searched label or synonym\n+     * @param locale the locale to be considered\n+     * @return the List of tag classes of all matching semantic tags\n+     */\n+    List<Class<? extends Tag>> getByLabelOrSynonym(String tagLabelOrSynonym, Locale locale);\n+\n+    /**\n+     * Gets the label and all synonyms of a semantic tag using the given locale.\n+     *\n+     * @param tagClass the tag class\n+     * @param locale the locale to be considered\n+     * @return the list containing the label and all synonyms of a semantic tag\n+     */\n+    List<String> getLabelAndSynonyms(Class<? extends Tag> tagClass, Locale locale);\n }\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/TagInfo.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/TagInfo.java\ndeleted file mode 100644\nindex 89b53e7e607..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/TagInfo.java\n+++ /dev/null\n@@ -1,37 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics;\n-\n-import static java.lang.annotation.ElementType.TYPE;\n-import static java.lang.annotation.RetentionPolicy.RUNTIME;\n-\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.Target;\n-\n-/**\n- * This is an annotation to be used on semantic tag classes for providing their ids, labels and descriptions.\n- *\n- * @author Kai Kreuzer - Initial contribution\n- */\n-@Retention(RUNTIME)\n-@Target(TYPE)\n-public @interface TagInfo {\n-\n-    String id();\n-\n-    String label() default \"\";\n-\n-    String synonyms() default \"\";\n-\n-    String description() default \"\";\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/dto/SemanticTagDTO.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/dto/SemanticTagDTO.java\nnew file mode 100644\nindex 00000000000..db00e10f968\n--- /dev/null\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/dto/SemanticTagDTO.java\n@@ -0,0 +1,31 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.semantics.dto;\n+\n+import java.util.List;\n+\n+/**\n+ * This is a data transfer object that is used to serialize semantic tags.\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+public class SemanticTagDTO {\n+\n+    public String uid;\n+    public String label;\n+    public String description;\n+    public List<String> synonyms;\n+\n+    public SemanticTagDTO() {\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/dto/SemanticTagDTOMapper.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/dto/SemanticTagDTOMapper.java\nnew file mode 100644\nindex 00000000000..0987bb6e1d4\n--- /dev/null\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/dto/SemanticTagDTOMapper.java\n@@ -0,0 +1,60 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.semantics.dto;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.semantics.SemanticTag;\n+import org.openhab.core.semantics.SemanticTagImpl;\n+\n+/**\n+ * The {@link SemanticTagDTOMapper} is an utility class to map semantic tags into\n+ * semantic tag data transfer objects (DTOs).\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+@NonNullByDefault\n+public class SemanticTagDTOMapper {\n+\n+    /**\n+     * Maps semantic tag DTO into semantic tag object.\n+     *\n+     * @param tagDTO the DTO\n+     * @return the semantic tag object\n+     */\n+    public static @Nullable SemanticTag map(@Nullable SemanticTagDTO tagDTO) {\n+        if (tagDTO == null) {\n+            throw new IllegalArgumentException(\"The argument 'tagDTO' must not be null.\");\n+        }\n+        if (tagDTO.uid == null) {\n+            throw new IllegalArgumentException(\"The argument 'tagDTO.uid' must not be null.\");\n+        }\n+\n+        return new SemanticTagImpl(tagDTO.uid, tagDTO.label, tagDTO.description, tagDTO.synonyms);\n+    }\n+\n+    /**\n+     * Maps semantic tag object into semantic tag DTO.\n+     *\n+     * @param tag the semantic tag\n+     * @return the semantic tag DTO\n+     */\n+    public static SemanticTagDTO map(SemanticTag tag) {\n+        SemanticTagDTO tagDTO = new SemanticTagDTO();\n+        tagDTO.uid = tag.getUID();\n+        tagDTO.label = tag.getLabel();\n+        tagDTO.description = tag.getDescription();\n+        tagDTO.synonyms = tag.getSynonyms();\n+        return tagDTO;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticTagRegistryImpl.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticTagRegistryImpl.java\nnew file mode 100644\nindex 00000000000..55a9d01151c\n--- /dev/null\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticTagRegistryImpl.java\n@@ -0,0 +1,285 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.semantics.internal;\n+\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.objectweb.asm.ClassWriter;\n+import org.objectweb.asm.Opcodes;\n+import org.openhab.core.common.registry.AbstractRegistry;\n+import org.openhab.core.common.registry.Provider;\n+import org.openhab.core.semantics.Equipment;\n+import org.openhab.core.semantics.Location;\n+import org.openhab.core.semantics.ManagedSemanticTagProvider;\n+import org.openhab.core.semantics.Point;\n+import org.openhab.core.semantics.Property;\n+import org.openhab.core.semantics.SemanticTag;\n+import org.openhab.core.semantics.SemanticTagProvider;\n+import org.openhab.core.semantics.SemanticTagRegistry;\n+import org.openhab.core.semantics.SemanticTags;\n+import org.openhab.core.semantics.Tag;\n+import org.openhab.core.semantics.model.DefaultSemanticTagProvider;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is the main implementing class of the {@link SemanticTagRegistry} interface. It\n+ * keeps track of all declared semantic tags of all semantic tags providers and keeps\n+ * their current state in memory.\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(immediate = true)\n+public class SemanticTagRegistryImpl extends AbstractRegistry<SemanticTag, String, SemanticTagProvider>\n+        implements SemanticTagRegistry {\n+\n+    private static final SemanticClassLoader CLASS_LOADER = new SemanticClassLoader();\n+\n+    private final Logger logger = LoggerFactory.getLogger(SemanticTagRegistryImpl.class);\n+\n+    private final DefaultSemanticTagProvider defaultSemanticTagProvider;\n+    private final ManagedSemanticTagProvider managedProvider;\n+\n+    @Activate\n+    public SemanticTagRegistryImpl(@Reference DefaultSemanticTagProvider defaultSemanticTagProvider,\n+            @Reference ManagedSemanticTagProvider managedProvider) {\n+        super(SemanticTagProvider.class);\n+        this.defaultSemanticTagProvider = defaultSemanticTagProvider;\n+        this.managedProvider = managedProvider;\n+        // Add the default semantic tags provider first, before all others\n+        super.addProvider(defaultSemanticTagProvider);\n+        super.addProvider(managedProvider);\n+        setManagedProvider(managedProvider);\n+    }\n+\n+    @Override\n+    protected void addProvider(Provider<SemanticTag> provider) {\n+        // Ignore the default semantic tags provider and the managed provider (they are added in the constructor)\n+        if (!provider.equals(defaultSemanticTagProvider) && !provider.equals(managedProvider)) {\n+            logger.trace(\"addProvider {} => calling super.addProvider\", provider.getClass().getSimpleName());\n+            super.addProvider(provider);\n+        } else {\n+            logger.trace(\"addProvider {} => ignoring it\", provider.getClass().getSimpleName());\n+        }\n+    }\n+\n+    @Override\n+    public @Nullable Class<? extends Tag> getTagClassById(String tagId) {\n+        return SemanticTags.getById(tagId);\n+    }\n+\n+    /**\n+     * Builds the fully qualified id for a semantic tag class.\n+     *\n+     * @param tag the semantic tag class\n+     * @return the fully qualified id\n+     */\n+    public static String buildId(Class<? extends Tag> tag) {\n+        return buildId(\"\", tag);\n+    }\n+\n+    private static String buildId(String relativeId, Class<?> tag) {\n+        if (!Location.class.isAssignableFrom(tag) && !Equipment.class.isAssignableFrom(tag)\n+                && !Point.class.isAssignableFrom(tag) && !Property.class.isAssignableFrom(tag)) {\n+            return relativeId;\n+        }\n+        String id = tag.getSimpleName();\n+        if (!relativeId.isEmpty()) {\n+            id += \"_\" + relativeId;\n+        }\n+        return buildId(id, tag.getInterfaces()[0]);\n+    }\n+\n+    @Override\n+    public boolean canBeAdded(SemanticTag tag) {\n+        String id = tag.getUID();\n+        // check that a tag with this id does not already exist in the registry\n+        if (get(id) != null) {\n+            return false;\n+        }\n+        // Extract the tag name and the parent tag\n+        int lastSeparator = id.lastIndexOf(\"_\");\n+        if (lastSeparator <= 0) {\n+            return false;\n+        }\n+        String name = id.substring(lastSeparator + 1);\n+        String parentId = id.substring(0, lastSeparator);\n+        SemanticTag parent = get(parentId);\n+        // Check that the tag name has a valid syntax and the parent tag already exists\n+        // and is either a default tag or a managed tag\n+        // Check also that a semantic tag class with the same name does not already exist\n+        return name.matches(\"[A-Z][a-zA-Z0-9]+\") && parent != null\n+                && (managedProvider.get(parentId) != null || defaultSemanticTagProvider.getAll().contains(parent))\n+                && getTagClassById(name) == null;\n+    }\n+\n+    @Override\n+    public List<SemanticTag> getSubTree(SemanticTag tag) {\n+        List<String> ids = getAll().stream().map(t -> t.getUID()).filter(uid -> uid.startsWith(tag.getUID() + \"_\"))\n+                .toList();\n+        List<SemanticTag> tags = new ArrayList<>();\n+        tags.add(tag);\n+        ids.forEach(id -> {\n+            SemanticTag t = get(id);\n+            if (t != null) {\n+                tags.add(t);\n+            }\n+        });\n+        return tags;\n+    }\n+\n+    @Override\n+    public boolean isEditable(SemanticTag tag) {\n+        return managedProvider.get(tag.getUID()) != null;\n+    }\n+\n+    @Override\n+    public void removeSubTree(SemanticTag tag) {\n+        // Get tags id in reverse order\n+        List<String> ids = getSubTree(tag).stream().filter(this::isEditable).map(SemanticTag::getUID)\n+                .sorted(Comparator.reverseOrder()).toList();\n+        ids.forEach(managedProvider::remove);\n+    }\n+\n+    @Override\n+    protected void onAddElement(SemanticTag tag) throws IllegalArgumentException {\n+        logger.trace(\"onAddElement {}\", tag.getUID());\n+        super.onAddElement(tag);\n+\n+        String uid = tag.getUID();\n+        Class<? extends Tag> tagClass = getTagClassById(uid);\n+        if (tagClass != null) {\n+            // Class already exists\n+            return;\n+        }\n+\n+        String type;\n+        String className;\n+        Class<? extends Tag> newTag;\n+        int lastSeparator = uid.lastIndexOf(\"_\");\n+        if (lastSeparator < 0) {\n+            switch (uid) {\n+                case \"Equipment\":\n+                    newTag = Equipment.class;\n+                    break;\n+                case \"Location\":\n+                    newTag = Location.class;\n+                    break;\n+                case \"Point\":\n+                    newTag = Point.class;\n+                    break;\n+                case \"Property\":\n+                    newTag = Property.class;\n+                    break;\n+                default:\n+                    throw new IllegalArgumentException(\"Failed to create semantic tag '\" + uid\n+                            + \"': only Equipment, Location, Point and Property are allowed as root tags.\");\n+            }\n+            type = uid;\n+            className = newTag.getClass().getName();\n+        } else {\n+            String name = uid.substring(lastSeparator + 1);\n+            String parentId = uid.substring(0, lastSeparator);\n+            Class<? extends Tag> parentTagClass = getTagClassById(parentId);\n+            if (parentTagClass == null) {\n+                throw new IllegalArgumentException(\n+                        \"Failed to create semantic tag '\" + uid + \"': no existing parent tag with id \" + parentId);\n+            }\n+            if (!name.matches(\"[A-Z][a-zA-Z0-9]+\")) {\n+                throw new IllegalArgumentException(\"Failed to create semantic tag '\" + uid\n+                        + \"': tag name must start with a capital letter and contain only alphanumerics.\");\n+            }\n+            tagClass = getTagClassById(name);\n+            if (tagClass != null) {\n+                throw new IllegalArgumentException(\n+                        \"Failed to create semantic tag '\" + uid + \"': tag '\" + buildId(tagClass) + \"' already exists.\");\n+            }\n+\n+            type = parentId.split(\"_\")[0];\n+            className = \"org.openhab.core.semantics.model.\" + type.toLowerCase() + \".\" + name;\n+            try {\n+                newTag = (Class<? extends Tag>) Class.forName(className, false, CLASS_LOADER);\n+                logger.debug(\"'{}' semantic {} tag already exists.\", className, type);\n+            } catch (ClassNotFoundException e) {\n+                // Create the tag interface\n+                ClassWriter classWriter = new ClassWriter(0);\n+                classWriter.visit(Opcodes.V11, Opcodes.ACC_PUBLIC + Opcodes.ACC_ABSTRACT + Opcodes.ACC_INTERFACE,\n+                        className.replace('.', '/'), null, \"java/lang/Object\",\n+                        new String[] { parentTagClass.getName().replace('.', '/') });\n+                classWriter.visitSource(\"Status.java\", null);\n+                classWriter.visitEnd();\n+                byte[] byteCode = classWriter.toByteArray();\n+                try {\n+                    newTag = (Class<? extends Tag>) CLASS_LOADER.defineClass(className, byteCode);\n+                    logger.debug(\"'{}' semantic {} tag created.\", className, type);\n+                } catch (Exception ex) {\n+                    logger.warn(\"Failed to create semantic tag '{}': {}\", className, ex.getMessage());\n+                    throw new IllegalArgumentException(\"Failed to create semantic tag '\" + className + \"'\", ex);\n+                }\n+            }\n+        }\n+\n+        addTagSet(uid, newTag);\n+        logger.debug(\"'{}' semantic {} tag added.\", className, type);\n+    }\n+\n+    @Override\n+    protected void onRemoveElement(SemanticTag tag) {\n+        logger.trace(\"onRemoveElement {}\", tag.getUID());\n+        super.onRemoveElement(tag);\n+        removeTagSet(tag.getUID());\n+    }\n+\n+    private void addTagSet(String tagId, Class<? extends Tag> tagSet) {\n+        logger.trace(\"addTagSet {}\", tagId);\n+        String id = tagId;\n+        while (id.indexOf(\"_\") != -1) {\n+            SemanticTags.addTagSet(id, tagSet);\n+            id = id.substring(id.indexOf(\"_\") + 1);\n+        }\n+        SemanticTags.addTagSet(id, tagSet);\n+    }\n+\n+    private void removeTagSet(String tagId) {\n+        logger.trace(\"removeTagSet {}\", tagId);\n+        Class<? extends Tag> tagSet = getTagClassById(tagId);\n+        if (tagSet == null) {\n+            return;\n+        }\n+        String id = tagId;\n+        while (id.indexOf(\"_\") != -1) {\n+            SemanticTags.removeTagSet(id, tagSet);\n+            id = id.substring(id.indexOf(\"_\") + 1);\n+        }\n+        SemanticTags.removeTagSet(id, tagSet);\n+    }\n+\n+    private static class SemanticClassLoader extends ClassLoader {\n+        public SemanticClassLoader() {\n+            super(SemanticTagRegistryImpl.class.getClassLoader());\n+        }\n+\n+        public Class<?> defineClass(String className, byte[] byteCode) {\n+            // defineClass is protected in the normal ClassLoader\n+            return defineClass(className, byteCode, 0, byteCode.length);\n+        }\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsMetadataProvider.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsMetadataProvider.java\nindex 2f64548c0e7..535fc3f4a3e 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsMetadataProvider.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsMetadataProvider.java\n@@ -33,9 +33,9 @@\n import org.openhab.core.semantics.Location;\n import org.openhab.core.semantics.Point;\n import org.openhab.core.semantics.Property;\n+import org.openhab.core.semantics.SemanticTagRegistry;\n import org.openhab.core.semantics.SemanticTags;\n import org.openhab.core.semantics.Tag;\n-import org.openhab.core.semantics.TagInfo;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n import org.osgi.service.component.annotations.Deactivate;\n@@ -75,7 +75,8 @@ public int compare(String s1, String s2) {\n     private final ItemRegistry itemRegistry;\n \n     @Activate\n-    public SemanticsMetadataProvider(final @Reference ItemRegistry itemRegistry) {\n+    public SemanticsMetadataProvider(final @Reference ItemRegistry itemRegistry,\n+            final @Reference SemanticTagRegistry semanticTagRegistry) {\n         this.itemRegistry = itemRegistry;\n     }\n \n@@ -111,7 +112,7 @@ private void processItem(Item item) {\n         if (type != null) {\n             processProperties(item, configuration);\n             processHierarchy(item, configuration);\n-            Metadata md = new Metadata(key, type.getAnnotation(TagInfo.class).id(), configuration);\n+            Metadata md = new Metadata(key, SemanticTagRegistryImpl.buildId(type), configuration);\n             Metadata oldMd = semantics.put(item.getName(), md);\n             if (oldMd == null) {\n                 notifyListenersAboutAddedElement(md);\n@@ -148,7 +149,7 @@ private void processProperties(Item item, Map<String, Object> configuration) {\n             if (entityClass.isAssignableFrom(type)) {\n                 Class<? extends Property> p = SemanticTags.getProperty(item);\n                 if (p != null) {\n-                    configuration.put(relation.getValue(), p.getAnnotation(TagInfo.class).id());\n+                    configuration.put(relation.getValue(), SemanticTagRegistryImpl.buildId(p));\n                 }\n             }\n         }\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsServiceImpl.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsServiceImpl.java\nindex 4ef13018d74..61a27a40b43 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsServiceImpl.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsServiceImpl.java\n@@ -12,14 +12,19 @@\n  */\n package org.openhab.core.semantics.internal;\n \n+import java.util.ArrayList;\n+import java.util.Comparator;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Locale;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.function.Predicate;\n import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.items.GroupItem;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemPredicates;\n@@ -30,7 +35,8 @@\n import org.openhab.core.semantics.Equipment;\n import org.openhab.core.semantics.Location;\n import org.openhab.core.semantics.Point;\n-import org.openhab.core.semantics.SemanticTags;\n+import org.openhab.core.semantics.SemanticTag;\n+import org.openhab.core.semantics.SemanticTagRegistry;\n import org.openhab.core.semantics.SemanticsPredicates;\n import org.openhab.core.semantics.SemanticsService;\n import org.openhab.core.semantics.Tag;\n@@ -42,6 +48,7 @@\n  * The internal implementation of the {@link SemanticsService} interface, which is registered as an OSGi service.\n  *\n  * @author Kai Kreuzer - Initial contribution\n+ * @author Laurent Garnier - Few methods moved from class SemanticTags in order to use the semantic tag registry\n  */\n @NonNullByDefault\n @Component\n@@ -51,12 +58,15 @@ public class SemanticsServiceImpl implements SemanticsService {\n \n     private final ItemRegistry itemRegistry;\n     private final MetadataRegistry metadataRegistry;\n+    private final SemanticTagRegistry semanticTagRegistry;\n \n     @Activate\n     public SemanticsServiceImpl(final @Reference ItemRegistry itemRegistry,\n-            final @Reference MetadataRegistry metadataRegistry) {\n+            final @Reference MetadataRegistry metadataRegistry,\n+            final @Reference SemanticTagRegistry semanticTagRegistry) {\n         this.itemRegistry = itemRegistry;\n         this.metadataRegistry = metadataRegistry;\n+        this.semanticTagRegistry = semanticTagRegistry;\n     }\n \n     @Override\n@@ -77,7 +87,7 @@ public Set<Item> getItemsInLocation(Class<? extends Location> locationType) {\n     @Override\n     public Set<Item> getItemsInLocation(String labelOrSynonym, Locale locale) {\n         Set<Item> items = new HashSet<>();\n-        List<Class<? extends Tag>> tagList = SemanticTags.getByLabelOrSynonym(labelOrSynonym, locale);\n+        List<Class<? extends Tag>> tagList = getByLabelOrSynonym(labelOrSynonym, locale);\n         if (!tagList.isEmpty()) {\n             for (Class<? extends Tag> tag : tagList) {\n                 if (Location.class.isAssignableFrom(tag)) {\n@@ -112,4 +122,40 @@ private Predicate<? super Item> hasSynonym(String labelOrSynonym) {\n             return false;\n         };\n     }\n+\n+    @Override\n+    public @Nullable Class<? extends Tag> getByLabel(String tagLabel, Locale locale) {\n+        Optional<SemanticTag> tag = semanticTagRegistry.getAll().stream()\n+                .filter(t -> t.localized(locale).getLabel().equalsIgnoreCase(tagLabel))\n+                .sorted(Comparator.comparing(SemanticTag::getUID)).findFirst();\n+        return tag.isPresent() ? semanticTagRegistry.getTagClassById(tag.get().getUID()) : null;\n+    }\n+\n+    @Override\n+    public List<Class<? extends Tag>> getByLabelOrSynonym(String tagLabelOrSynonym, Locale locale) {\n+        List<SemanticTag> tags = semanticTagRegistry.getAll().stream()\n+                .filter(t -> getLabelAndSynonyms(t, locale).contains(tagLabelOrSynonym.toLowerCase(locale)))\n+                .sorted(Comparator.comparing(SemanticTag::getUID)).toList();\n+        List<Class<? extends Tag>> tagList = new ArrayList<>();\n+        tags.forEach(t -> {\n+            Class<? extends Tag> tag = semanticTagRegistry.getTagClassById(t.getUID());\n+            if (tag != null) {\n+                tagList.add(tag);\n+            }\n+        });\n+        return tagList;\n+    }\n+\n+    @Override\n+    public List<String> getLabelAndSynonyms(Class<? extends Tag> tagClass, Locale locale) {\n+        SemanticTag tag = semanticTagRegistry.get(SemanticTagRegistryImpl.buildId(tagClass));\n+        return tag == null ? List.of() : getLabelAndSynonyms(tag, locale);\n+    }\n+\n+    private List<String> getLabelAndSynonyms(SemanticTag tag, Locale locale) {\n+        SemanticTag localizedTag = tag.localized(locale);\n+        Stream<String> label = Stream.of(localizedTag.getLabel());\n+        Stream<String> synonyms = localizedTag.getSynonyms().stream();\n+        return Stream.concat(label, synonyms).map(s -> s.toLowerCase(locale)).distinct().toList();\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/DefaultSemanticTagProvider.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/DefaultSemanticTagProvider.java\nnew file mode 100644\nindex 00000000000..177d0657e95\n--- /dev/null\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/DefaultSemanticTagProvider.java\n@@ -0,0 +1,311 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.semantics.model;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.common.registry.ProviderChangeListener;\n+import org.openhab.core.semantics.SemanticTag;\n+import org.openhab.core.semantics.SemanticTagImpl;\n+import org.openhab.core.semantics.SemanticTagProvider;\n+import org.osgi.service.component.annotations.Component;\n+\n+/**\n+ * This class defines a provider of all default semantic tags.\n+ *\n+ * @author Generated from generateTagClasses.groovy - Initial contribution\n+ */\n+@NonNullByDefault\n+@Component(immediate = true, service = { SemanticTagProvider.class, DefaultSemanticTagProvider.class })\n+public class DefaultSemanticTagProvider implements SemanticTagProvider {\n+\n+    private List<SemanticTag> defaultTags;\n+\n+    public DefaultSemanticTagProvider() {\n+        this.defaultTags = new ArrayList<>();\n+        defaultTags.add(new SemanticTagImpl(\"Equipment\", \"\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location\", \"\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point\", \"\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property\", \"\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor\", //\n+                \"Indoor\", \"Anything that is inside a closed building\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Apartment\", //\n+                \"Apartment\", \"\", \"Apartments\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Building\", //\n+                \"Building\", \"\", \"Buildings\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Building_Garage\", //\n+                \"Garage\", \"\", \"Garages\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Building_House\", //\n+                \"House\", \"\", \"Houses\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Building_Shed\", //\n+                \"Shed\", \"\", \"Sheds\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Building_SummerHouse\", //\n+                \"Summer House\", \"\", \"Summer Houses, Second Home, Second Homes\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Floor\", //\n+                \"Floor\", \"\", \"Floors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Floor_GroundFloor\", //\n+                \"Ground Floor\", \"\", \"Ground Floors, Downstairs\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Floor_FirstFloor\", //\n+                \"First Floor\", \"\", \"First Floors, Upstairs\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Floor_SecondFloor\", //\n+                \"Second Floor\", \"\", \"Second Floors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Floor_ThirdFloor\", //\n+                \"Third Floor\", \"\", \"Third Floors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Floor_Attic\", //\n+                \"Attic\", \"\", \"Attics\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Floor_Basement\", //\n+                \"Basement\", \"\", \"Basements\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Corridor\", //\n+                \"Corridor\", \"\", \"Corridors, Hallway, Hallways\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room\", //\n+                \"Room\", \"\", \"Rooms\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_Bathroom\", //\n+                \"Bathroom\", \"\", \"Bathrooms, Bath, Baths, Powder Room, Powder Rooms\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_Bedroom\", //\n+                \"Bedroom\", \"\", \"Bedrooms\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_BoilerRoom\", //\n+                \"Boiler Room\", \"\", \"Boiler Rooms\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_Cellar\", //\n+                \"Cellar\", \"\", \"Cellars\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_DiningRoom\", //\n+                \"Dining Room\", \"\", \"Dining Rooms\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_Entry\", //\n+                \"Entry\", \"\", \"Entries, Foyer, Foyers\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_FamilyRoom\", //\n+                \"Family Room\", \"\", \"Family Rooms\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_GuestRoom\", //\n+                \"Guest Room\", \"\", \"Guest Rooms\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_Kitchen\", //\n+                \"Kitchen\", \"\", \"Kitchens\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_LaundryRoom\", //\n+                \"Laundry Room\", \"\", \"Laundry Rooms\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_LivingRoom\", //\n+                \"Living Room\", \"\", \"Living Rooms\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_Office\", //\n+                \"Office\", \"\", \"Offices\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Indoor_Room_Veranda\", //\n+                \"Veranda\", \"\", \"Verandas\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Outdoor\", //\n+                \"Outdoor\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Outdoor_Carport\", //\n+                \"Carport\", \"\", \"Carports\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Outdoor_Driveway\", //\n+                \"Driveway\", \"\", \"Driveways\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Outdoor_Garden\", //\n+                \"Garden\", \"\", \"Gardens\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Outdoor_Patio\", //\n+                \"Patio\", \"\", \"Patios\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Outdoor_Porch\", //\n+                \"Porch\", \"\", \"Porches\"));\n+        defaultTags.add(new SemanticTagImpl(\"Location_Outdoor_Terrace\", //\n+                \"Terrace\", \"\", \"Terraces, Deck, Decks\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Temperature\", //\n+                \"Temperature\", \"\", \"Temperatures\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Light\", //\n+                \"Light\", \"\", \"Lights, Lighting\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_ColorTemperature\", //\n+                \"Color Temperature\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Humidity\", //\n+                \"Humidity\", \"\", \"Moisture\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Presence\", //\n+                \"Presence\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Pressure\", //\n+                \"Pressure\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Smoke\", //\n+                \"Smoke\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Noise\", //\n+                \"Noise\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Rain\", //\n+                \"Rain\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Wind\", //\n+                \"Wind\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Water\", //\n+                \"Water\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_CO2\", //\n+                \"CO2\", \"\", \"Carbon Dioxide\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_CO\", //\n+                \"CO\", \"\", \"Carbon Monoxide\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Energy\", //\n+                \"Energy\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Power\", //\n+                \"Power\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Voltage\", //\n+                \"Voltage\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Current\", //\n+                \"Current\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Frequency\", //\n+                \"Frequency\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Gas\", //\n+                \"Gas\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_SoundVolume\", //\n+                \"Sound Volume\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Oil\", //\n+                \"Oil\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Duration\", //\n+                \"Duration\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Level\", //\n+                \"Level\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Opening\", //\n+                \"Opening\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Timestamp\", //\n+                \"Timestamp\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Ultraviolet\", //\n+                \"Ultraviolet\", \"\", \"UV\"));\n+        defaultTags.add(new SemanticTagImpl(\"Property_Vibration\", //\n+                \"Vibration\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Alarm\", //\n+                \"Alarm\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Control\", //\n+                \"Control\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Control_Switch\", //\n+                \"Switch\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Measurement\", //\n+                \"Measurement\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Setpoint\", //\n+                \"Setpoint\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Status\", //\n+                \"Status\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Status_LowBattery\", //\n+                \"LowBattery\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Status_OpenLevel\", //\n+                \"OpenLevel\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Status_OpenState\", //\n+                \"OpenState\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Status_Tampered\", //\n+                \"Tampered\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Point_Status_Tilt\", //\n+                \"Tilt\", \"\", \"\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_AlarmSystem\", //\n+                \"Alarm System\", \"\", \"Alarm Systems\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Battery\", //\n+                \"Battery\", \"\", \"Batteries\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Blinds\", //\n+                \"Blinds\", \"\", \"Rollershutter, Rollershutters, Roller shutter, Roller shutters, Shutter, Shutters\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Boiler\", //\n+                \"Boiler\", \"\", \"Boilers\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Camera\", //\n+                \"Camera\", \"\", \"Cameras\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Car\", //\n+                \"Car\", \"\", \"Cars\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_CleaningRobot\", //\n+                \"Cleaning Robot\", \"\", \"Cleaning Robots, Vacuum robot, Vacuum robots\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Door\", //\n+                \"Door\", \"\", \"Doors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Door_BackDoor\", //\n+                \"Back Door\", \"\", \"Back Doors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Door_CellarDoor\", //\n+                \"Cellar Door\", \"\", \"Cellar Doors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Door_FrontDoor\", //\n+                \"Front Door\", \"\", \"Front Doors, Frontdoor, Frontdoors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Door_GarageDoor\", //\n+                \"Garage Door\", \"\", \"Garage Doors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Door_Gate\", //\n+                \"Gate\", \"\", \"Gates\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Door_InnerDoor\", //\n+                \"Inner Door\", \"\", \"Inner Doors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Door_SideDoor\", //\n+                \"Side Door\", \"\", \"Side Doors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Doorbell\", //\n+                \"Doorbell\", \"\", \"Doorbells\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Fan\", //\n+                \"Fan\", \"\", \"Fans\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Fan_CeilingFan\", //\n+                \"Ceiling Fan\", \"\", \"Ceiling Fans\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Fan_KitchenHood\", //\n+                \"Kitchen Hood\", \"\", \"Kitchen Hoods\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_HVAC\", //\n+                \"HVAC\", \"\", \"Heating, Ventilation, Air Conditioning, A/C, A/Cs, AC\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Inverter\", //\n+                \"Inverter\", \"\", \"Inverters\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_LawnMower\", //\n+                \"Lawn Mower\", \"\", \"Lawn Mowers\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Lightbulb\", //\n+                \"Lightbulb\", \"\", \"Lightbulbs, Bulb, Bulbs, Lamp, Lamps, Lights, Lighting\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Lightbulb_LightStripe\", //\n+                \"Light Stripe\", \"\", \"Light Stripes\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Lock\", //\n+                \"Lock\", \"\", \"Locks\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_NetworkAppliance\", //\n+                \"Network Appliance\", \"\", \"Network Appliances\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_PowerOutlet\", //\n+                \"Power Outlet\", \"\", \"Power Outlets, Outlet, Outlets\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Projector\", //\n+                \"Projector\", \"\", \"Projectors, Beamer, Beamers\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Pump\", //\n+                \"Pump\", \"\", \"Pumps\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_RadiatorControl\", //\n+                \"Radiator Control\", \"\", \"Radiator Controls, Radiator, Radiators\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Receiver\", //\n+                \"Receiver\", \"\", \"Receivers, Audio Receiver, Audio Receivers, AV Receiver, AV Receivers\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_RemoteControl\", //\n+                \"Remote Control\", \"\", \"Remote Controls\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Screen\", //\n+                \"Screen\", \"\", \"Screens\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Screen_Television\", //\n+                \"Television\", \"\", \"Televisions, TV, TVs\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Sensor\", //\n+                \"Sensor\", \"\", \"Sensors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Sensor_MotionDetector\", //\n+                \"Motion Detector\", \"\", \"Motion Detectors, Motion sensor, Motion sensors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Sensor_SmokeDetector\", //\n+                \"Smoke Detector\", \"\", \"Smoke Detectors\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Siren\", //\n+                \"Siren\", \"\", \"Sirens\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Smartphone\", //\n+                \"Smartphone\", \"\", \"Smartphones, Phone, Phones\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Speaker\", //\n+                \"Speaker\", \"\", \"Speakers\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Valve\", //\n+                \"Valve\", \"\", \"Valves\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_VoiceAssistant\", //\n+                \"Voice Assistant\", \"\", \"Voice Assistants\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WallSwitch\", //\n+                \"Wall Switch\", \"\", \"Wall Switches\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WebService\", //\n+                \"Web Service\", \"\", \"Web Services\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WebService_WeatherService\", //\n+                \"Weather Service\", \"\", \"Weather Services\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WhiteGood\", //\n+                \"White Good\", \"\", \"White Goods\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WhiteGood_Dishwasher\", //\n+                \"Dishwasher\", \"\", \"Dishwashers\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WhiteGood_Dryer\", //\n+                \"Dryer\", \"\", \"Dryers\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WhiteGood_Freezer\", //\n+                \"Freezer\", \"\", \"Freezers\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WhiteGood_Oven\", //\n+                \"Oven\", \"\", \"Ovens\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WhiteGood_Refrigerator\", //\n+                \"Refrigerator\", \"\", \"Refrigerators\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_WhiteGood_WashingMachine\", //\n+                \"Washing Machine\", \"\", \"Washing Machines\"));\n+        defaultTags.add(new SemanticTagImpl(\"Equipment_Window\", //\n+                \"Window\", \"\", \"Windows\"));\n+    }\n+\n+    @Override\n+    public Collection<SemanticTag> getAll() {\n+        return defaultTags;\n+    }\n+\n+    @Override\n+    public void addProviderChangeListener(ProviderChangeListener<SemanticTag> listener) {\n+    }\n+\n+    @Override\n+    public void removeProviderChangeListener(ProviderChangeListener<SemanticTag> listener) {\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/AlarmSystem.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/AlarmSystem.java\ndeleted file mode 100644\nindex bc810386bdf..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/AlarmSystem.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines an Alarm System.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_AlarmSystem\", label = \"Alarm System\", synonyms = \"Alarm Systems\", description = \"\")\n-public interface AlarmSystem extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/BackDoor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/BackDoor.java\ndeleted file mode 100644\nindex f693b7df429..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/BackDoor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Back Door.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Door_BackDoor\", label = \"Back Door\", synonyms = \"Back Doors\", description = \"\")\n-public interface BackDoor extends Door {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Battery.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Battery.java\ndeleted file mode 100644\nindex f1bdad31eda..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Battery.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Battery.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Battery\", label = \"Battery\", synonyms = \"Batteries\", description = \"\")\n-public interface Battery extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Blinds.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Blinds.java\ndeleted file mode 100644\nindex cf282d1ce37..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Blinds.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Blinds.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Blinds\", label = \"Blinds\", synonyms = \"Rollershutter, Rollershutters, Roller shutter, Roller shutters, Shutter, Shutters\", description = \"\")\n-public interface Blinds extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Boiler.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Boiler.java\ndeleted file mode 100644\nindex 0ea0d34b930..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Boiler.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Boiler.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Boiler\", label = \"Boiler\", synonyms = \"Boilers\", description = \"\")\n-public interface Boiler extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Camera.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Camera.java\ndeleted file mode 100644\nindex bd983ae404e..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Camera.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Camera.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Camera\", label = \"Camera\", synonyms = \"Cameras\", description = \"\")\n-public interface Camera extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Car.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Car.java\ndeleted file mode 100644\nindex 2875a98b5dd..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Car.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Car.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Car\", label = \"Car\", synonyms = \"Cars\", description = \"\")\n-public interface Car extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CeilingFan.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CeilingFan.java\ndeleted file mode 100644\nindex 61628444b2b..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CeilingFan.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Ceiling Fan.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Fan_CeilingFan\", label = \"Ceiling Fan\", synonyms = \"Ceiling Fans\", description = \"\")\n-public interface CeilingFan extends Fan {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CellarDoor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CellarDoor.java\ndeleted file mode 100644\nindex c61ce7ee805..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CellarDoor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Cellar Door.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Door_CellarDoor\", label = \"Cellar Door\", synonyms = \"Cellar Doors\", description = \"\")\n-public interface CellarDoor extends Door {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CleaningRobot.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CleaningRobot.java\ndeleted file mode 100644\nindex ff5c995fb1c..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/CleaningRobot.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Cleaning Robot.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_CleaningRobot\", label = \"Cleaning Robot\", synonyms = \"Cleaning Robots, Vacuum robot, Vacuum robots\", description = \"\")\n-public interface CleaningRobot extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Dishwasher.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Dishwasher.java\ndeleted file mode 100644\nindex ecb707ab016..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Dishwasher.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Dishwasher.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WhiteGood_Dishwasher\", label = \"Dishwasher\", synonyms = \"Dishwashers\", description = \"\")\n-public interface Dishwasher extends WhiteGood {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Door.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Door.java\ndeleted file mode 100644\nindex 584d5ebf5c4..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Door.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Door.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Door\", label = \"Door\", synonyms = \"Doors\", description = \"\")\n-public interface Door extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Doorbell.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Doorbell.java\ndeleted file mode 100644\nindex 61875ce66fa..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Doorbell.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Doorbell.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Doorbell\", label = \"Doorbell\", synonyms = \"Doorbells\", description = \"\")\n-public interface Doorbell extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Dryer.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Dryer.java\ndeleted file mode 100644\nindex 8860419ffb9..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Dryer.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Dryer.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WhiteGood_Dryer\", label = \"Dryer\", synonyms = \"Dryers\", description = \"\")\n-public interface Dryer extends WhiteGood {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Equipments.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Equipments.java\ndeleted file mode 100644\nindex d99172b88c6..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Equipments.java\n+++ /dev/null\n@@ -1,96 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.stream.Stream;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-\n-/**\n- * This class provides a stream of all defined equipments.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-public class Equipments {\n-\n-    static final Set<Class<? extends Equipment>> EQUIPMENTS = new HashSet<>();\n-\n-    static {\n-        EQUIPMENTS.add(Equipment.class);\n-        EQUIPMENTS.add(AlarmSystem.class);\n-        EQUIPMENTS.add(BackDoor.class);\n-        EQUIPMENTS.add(Battery.class);\n-        EQUIPMENTS.add(Blinds.class);\n-        EQUIPMENTS.add(Boiler.class);\n-        EQUIPMENTS.add(Camera.class);\n-        EQUIPMENTS.add(Car.class);\n-        EQUIPMENTS.add(CeilingFan.class);\n-        EQUIPMENTS.add(CellarDoor.class);\n-        EQUIPMENTS.add(CleaningRobot.class);\n-        EQUIPMENTS.add(Dishwasher.class);\n-        EQUIPMENTS.add(Door.class);\n-        EQUIPMENTS.add(Doorbell.class);\n-        EQUIPMENTS.add(Dryer.class);\n-        EQUIPMENTS.add(Fan.class);\n-        EQUIPMENTS.add(Freezer.class);\n-        EQUIPMENTS.add(FrontDoor.class);\n-        EQUIPMENTS.add(GarageDoor.class);\n-        EQUIPMENTS.add(Gate.class);\n-        EQUIPMENTS.add(HVAC.class);\n-        EQUIPMENTS.add(InnerDoor.class);\n-        EQUIPMENTS.add(Inverter.class);\n-        EQUIPMENTS.add(KitchenHood.class);\n-        EQUIPMENTS.add(LawnMower.class);\n-        EQUIPMENTS.add(LightStripe.class);\n-        EQUIPMENTS.add(Lightbulb.class);\n-        EQUIPMENTS.add(Lock.class);\n-        EQUIPMENTS.add(MotionDetector.class);\n-        EQUIPMENTS.add(NetworkAppliance.class);\n-        EQUIPMENTS.add(Oven.class);\n-        EQUIPMENTS.add(PowerOutlet.class);\n-        EQUIPMENTS.add(Projector.class);\n-        EQUIPMENTS.add(Pump.class);\n-        EQUIPMENTS.add(RadiatorControl.class);\n-        EQUIPMENTS.add(Receiver.class);\n-        EQUIPMENTS.add(Refrigerator.class);\n-        EQUIPMENTS.add(RemoteControl.class);\n-        EQUIPMENTS.add(Screen.class);\n-        EQUIPMENTS.add(Sensor.class);\n-        EQUIPMENTS.add(SideDoor.class);\n-        EQUIPMENTS.add(Siren.class);\n-        EQUIPMENTS.add(Smartphone.class);\n-        EQUIPMENTS.add(SmokeDetector.class);\n-        EQUIPMENTS.add(Speaker.class);\n-        EQUIPMENTS.add(Television.class);\n-        EQUIPMENTS.add(Valve.class);\n-        EQUIPMENTS.add(VoiceAssistant.class);\n-        EQUIPMENTS.add(WallSwitch.class);\n-        EQUIPMENTS.add(WashingMachine.class);\n-        EQUIPMENTS.add(WeatherService.class);\n-        EQUIPMENTS.add(WebService.class);\n-        EQUIPMENTS.add(WhiteGood.class);\n-        EQUIPMENTS.add(Window.class);\n-    }\n-\n-    public static Stream<Class<? extends Equipment>> stream() {\n-        return EQUIPMENTS.stream();\n-    }\n-\n-    public static boolean add(Class<? extends Equipment> tag) {\n-        return EQUIPMENTS.add(tag);\n-    }\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Fan.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Fan.java\ndeleted file mode 100644\nindex 8df120d40b7..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Fan.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Fan.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Fan\", label = \"Fan\", synonyms = \"Fans\", description = \"\")\n-public interface Fan extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Freezer.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Freezer.java\ndeleted file mode 100644\nindex da57322726f..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Freezer.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Freezer.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WhiteGood_Freezer\", label = \"Freezer\", synonyms = \"Freezers\", description = \"\")\n-public interface Freezer extends WhiteGood {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/FrontDoor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/FrontDoor.java\ndeleted file mode 100644\nindex 4fd6ce52306..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/FrontDoor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Front Door.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Door_FrontDoor\", label = \"Front Door\", synonyms = \"Front Doors, Frontdoor, Frontdoors\", description = \"\")\n-public interface FrontDoor extends Door {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/GarageDoor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/GarageDoor.java\ndeleted file mode 100644\nindex 177c0eb1981..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/GarageDoor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Garage Door.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Door_GarageDoor\", label = \"Garage Door\", synonyms = \"Garage Doors\", description = \"\")\n-public interface GarageDoor extends Door {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Gate.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Gate.java\ndeleted file mode 100644\nindex beadc24bce1..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Gate.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Gate.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Door_Gate\", label = \"Gate\", synonyms = \"Gates\", description = \"\")\n-public interface Gate extends Door {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/HVAC.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/HVAC.java\ndeleted file mode 100644\nindex 0073408c846..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/HVAC.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a HVAC.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_HVAC\", label = \"HVAC\", synonyms = \"Heating, Ventilation, Air Conditioning, A/C, A/Cs, AC\", description = \"\")\n-public interface HVAC extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/InnerDoor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/InnerDoor.java\ndeleted file mode 100644\nindex bfc3f11d2e9..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/InnerDoor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines an Inner Door.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Door_InnerDoor\", label = \"Inner Door\", synonyms = \"Inner Doors\", description = \"\")\n-public interface InnerDoor extends Door {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Inverter.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Inverter.java\ndeleted file mode 100644\nindex 303893113d3..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Inverter.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines an Inverter.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Inverter\", label = \"Inverter\", synonyms = \"Inverters\", description = \"\")\n-public interface Inverter extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/KitchenHood.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/KitchenHood.java\ndeleted file mode 100644\nindex e53b7f56860..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/KitchenHood.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Kitchen Hood.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Fan_KitchenHood\", label = \"Kitchen Hood\", synonyms = \"Kitchen Hoods\", description = \"\")\n-public interface KitchenHood extends Fan {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/LawnMower.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/LawnMower.java\ndeleted file mode 100644\nindex 9b354437dbb..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/LawnMower.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Lawn Mower.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_LawnMower\", label = \"Lawn Mower\", synonyms = \"Lawn Mowers\", description = \"\")\n-public interface LawnMower extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/LightStripe.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/LightStripe.java\ndeleted file mode 100644\nindex 7e628d3b9cf..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/LightStripe.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Light Stripe.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Lightbulb_LightStripe\", label = \"Light Stripe\", synonyms = \"Light Stripes\", description = \"\")\n-public interface LightStripe extends Lightbulb {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Lightbulb.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Lightbulb.java\ndeleted file mode 100644\nindex 76eb0d4992d..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Lightbulb.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Lightbulb.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Lightbulb\", label = \"Lightbulb\", synonyms = \"Lightbulbs, Bulb, Bulbs, Lamp, Lamps, Lights, Lighting\", description = \"\")\n-public interface Lightbulb extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Lock.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Lock.java\ndeleted file mode 100644\nindex 26c303b1329..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Lock.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Lock.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Lock\", label = \"Lock\", synonyms = \"Locks\", description = \"\")\n-public interface Lock extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/MotionDetector.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/MotionDetector.java\ndeleted file mode 100644\nindex 3a7c0f40ffa..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/MotionDetector.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Motion Detector.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Sensor_MotionDetector\", label = \"Motion Detector\", synonyms = \"Motion Detectors, Motion sensor, Motion sensors\", description = \"\")\n-public interface MotionDetector extends Sensor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/NetworkAppliance.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/NetworkAppliance.java\ndeleted file mode 100644\nindex e873a53d2a0..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/NetworkAppliance.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Network Appliance.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_NetworkAppliance\", label = \"Network Appliance\", synonyms = \"Network Appliances\", description = \"\")\n-public interface NetworkAppliance extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Oven.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Oven.java\ndeleted file mode 100644\nindex 18578cd0d6c..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Oven.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines an Oven.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WhiteGood_Oven\", label = \"Oven\", synonyms = \"Ovens\", description = \"\")\n-public interface Oven extends WhiteGood {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/PowerOutlet.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/PowerOutlet.java\ndeleted file mode 100644\nindex bbeb001eb4f..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/PowerOutlet.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Power Outlet.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_PowerOutlet\", label = \"Power Outlet\", synonyms = \"Power Outlets, Outlet, Outlets\", description = \"\")\n-public interface PowerOutlet extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Projector.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Projector.java\ndeleted file mode 100644\nindex 5fb617c4692..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Projector.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Projector.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Projector\", label = \"Projector\", synonyms = \"Projectors, Beamer, Beamers\", description = \"\")\n-public interface Projector extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Pump.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Pump.java\ndeleted file mode 100644\nindex 02cd22bebb0..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Pump.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Pump.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Pump\", label = \"Pump\", synonyms = \"Pumps\", description = \"\")\n-public interface Pump extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/RadiatorControl.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/RadiatorControl.java\ndeleted file mode 100644\nindex 882289fa68f..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/RadiatorControl.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Radiator Control.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_RadiatorControl\", label = \"Radiator Control\", synonyms = \"Radiator Controls, Radiator, Radiators\", description = \"\")\n-public interface RadiatorControl extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Receiver.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Receiver.java\ndeleted file mode 100644\nindex d1cdfe7b87a..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Receiver.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Receiver.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Receiver\", label = \"Receiver\", synonyms = \"Receivers, Audio Receiver, Audio Receivers, AV Receiver, AV Receivers\", description = \"\")\n-public interface Receiver extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Refrigerator.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Refrigerator.java\ndeleted file mode 100644\nindex fa855447615..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Refrigerator.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Refrigerator.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WhiteGood_Refrigerator\", label = \"Refrigerator\", synonyms = \"Refrigerators\", description = \"\")\n-public interface Refrigerator extends WhiteGood {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/RemoteControl.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/RemoteControl.java\ndeleted file mode 100644\nindex 4befed3c843..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/RemoteControl.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Remote Control.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_RemoteControl\", label = \"Remote Control\", synonyms = \"Remote Controls\", description = \"\")\n-public interface RemoteControl extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Screen.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Screen.java\ndeleted file mode 100644\nindex c3cb10e0c2e..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Screen.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Screen.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Screen\", label = \"Screen\", synonyms = \"Screens\", description = \"\")\n-public interface Screen extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Sensor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Sensor.java\ndeleted file mode 100644\nindex ef60408ada6..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Sensor.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Sensor.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Sensor\", label = \"Sensor\", synonyms = \"Sensors\", description = \"\")\n-public interface Sensor extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/SideDoor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/SideDoor.java\ndeleted file mode 100644\nindex ba2e3bb1595..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/SideDoor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Side Door.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Door_SideDoor\", label = \"Side Door\", synonyms = \"Side Doors\", description = \"\")\n-public interface SideDoor extends Door {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Siren.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Siren.java\ndeleted file mode 100644\nindex e436b39ebbc..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Siren.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Siren.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Siren\", label = \"Siren\", synonyms = \"Sirens\", description = \"\")\n-public interface Siren extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Smartphone.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Smartphone.java\ndeleted file mode 100644\nindex fbecc781aab..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Smartphone.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Smartphone.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Smartphone\", label = \"Smartphone\", synonyms = \"Smartphones, Phone, Phones\", description = \"\")\n-public interface Smartphone extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/SmokeDetector.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/SmokeDetector.java\ndeleted file mode 100644\nindex 2ee50b2ea44..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/SmokeDetector.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Smoke Detector.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Sensor_SmokeDetector\", label = \"Smoke Detector\", synonyms = \"Smoke Detectors\", description = \"\")\n-public interface SmokeDetector extends Sensor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Speaker.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Speaker.java\ndeleted file mode 100644\nindex ce42af983c8..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Speaker.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Speaker.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Speaker\", label = \"Speaker\", synonyms = \"Speakers\", description = \"\")\n-public interface Speaker extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Television.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Television.java\ndeleted file mode 100644\nindex c84af6d7cc4..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Television.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Television.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Screen_Television\", label = \"Television\", synonyms = \"Televisions, TV, TVs\", description = \"\")\n-public interface Television extends Screen {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Valve.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Valve.java\ndeleted file mode 100644\nindex a30ad2fd9a6..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Valve.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Valve.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Valve\", label = \"Valve\", synonyms = \"Valves\", description = \"\")\n-public interface Valve extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/VoiceAssistant.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/VoiceAssistant.java\ndeleted file mode 100644\nindex af28a055e85..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/VoiceAssistant.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Voice Assistant.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_VoiceAssistant\", label = \"Voice Assistant\", synonyms = \"Voice Assistants\", description = \"\")\n-public interface VoiceAssistant extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WallSwitch.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WallSwitch.java\ndeleted file mode 100644\nindex d2d68e2d85d..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WallSwitch.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Wall Switch.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WallSwitch\", label = \"Wall Switch\", synonyms = \"Wall Switches\", description = \"\")\n-public interface WallSwitch extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WashingMachine.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WashingMachine.java\ndeleted file mode 100644\nindex b70aa93db22..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WashingMachine.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Washing Machine.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WhiteGood_WashingMachine\", label = \"Washing Machine\", synonyms = \"Washing Machines\", description = \"\")\n-public interface WashingMachine extends WhiteGood {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WeatherService.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WeatherService.java\ndeleted file mode 100644\nindex 2f3118d3bc0..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WeatherService.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Weather Service.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WebService_WeatherService\", label = \"Weather Service\", synonyms = \"Weather Services\", description = \"\")\n-public interface WeatherService extends WebService {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WebService.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WebService.java\ndeleted file mode 100644\nindex 33f14f5500e..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WebService.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Web Service.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WebService\", label = \"Web Service\", synonyms = \"Web Services\", description = \"\")\n-public interface WebService extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WhiteGood.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WhiteGood.java\ndeleted file mode 100644\nindex 687e056dbd6..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/WhiteGood.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a White Good.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_WhiteGood\", label = \"White Good\", synonyms = \"White Goods\", description = \"\")\n-public interface WhiteGood extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Window.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Window.java\ndeleted file mode 100644\nindex d2f305cb128..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/equipment/Window.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.equipment;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Equipment;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Window.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Equipment_Window\", label = \"Window\", synonyms = \"Windows\", description = \"\")\n-public interface Window extends Equipment {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Apartment.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Apartment.java\ndeleted file mode 100644\nindex 389e7844dc9..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Apartment.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines an Apartment.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Apartment\", label = \"Apartment\", synonyms = \"Apartments\", description = \"\")\n-public interface Apartment extends Indoor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Attic.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Attic.java\ndeleted file mode 100644\nindex f766e622e1d..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Attic.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines an Attic.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Floor_Attic\", label = \"Attic\", synonyms = \"Attics\", description = \"\")\n-public interface Attic extends Floor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Basement.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Basement.java\ndeleted file mode 100644\nindex 8fc8cb3baad..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Basement.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Basement.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Floor_Basement\", label = \"Basement\", synonyms = \"Basements\", description = \"\")\n-public interface Basement extends Floor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Bathroom.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Bathroom.java\ndeleted file mode 100644\nindex 4b6c3fb78b4..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Bathroom.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Bathroom.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Room_Bathroom\", label = \"Bathroom\", synonyms = \"Bathrooms, Bath, Baths, Powder Room, Powder Rooms\", description = \"\")\n-public interface Bathroom extends Room {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Bedroom.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Bedroom.java\ndeleted file mode 100644\nindex 8c5c0fc987b..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Bedroom.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Bedroom.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Room_Bedroom\", label = \"Bedroom\", synonyms = \"Bedrooms\", description = \"\")\n-public interface Bedroom extends Room {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/BoilerRoom.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/BoilerRoom.java\ndeleted file mode 100644\nindex d149ef4468d..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/BoilerRoom.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Boiler Room.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Room_BoilerRoom\", label = \"Boiler Room\", synonyms = \"Boiler Rooms\", description = \"\")\n-public interface BoilerRoom extends Room {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Building.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Building.java\ndeleted file mode 100644\nindex 46577c537f6..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Building.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Building.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Building\", label = \"Building\", synonyms = \"Buildings\", description = \"\")\n-public interface Building extends Indoor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Carport.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Carport.java\ndeleted file mode 100644\nindex 322ddfe103e..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Carport.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Carport.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Outdoor_Carport\", label = \"Carport\", synonyms = \"Carports\", description = \"\")\n-public interface Carport extends Outdoor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Cellar.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Cellar.java\ndeleted file mode 100644\nindex e5f0ab2709b..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Cellar.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Cellar.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Room_Cellar\", label = \"Cellar\", synonyms = \"Cellars\", description = \"\")\n-public interface Cellar extends Room {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Corridor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Corridor.java\ndeleted file mode 100644\nindex 6509b82659e..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Corridor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Corridor.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Corridor\", label = \"Corridor\", synonyms = \"Corridors, Hallway, Hallways\", description = \"\")\n-public interface Corridor extends Indoor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/DiningRoom.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/DiningRoom.java\ndeleted file mode 100644\nindex 21c7affc1d7..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/DiningRoom.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Dining Room.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Room_DiningRoom\", label = \"Dining Room\", synonyms = \"Dining Rooms\", description = \"\")\n-public interface DiningRoom extends Room {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Driveway.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Driveway.java\ndeleted file mode 100644\nindex 44930624558..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Driveway.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Driveway.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Outdoor_Driveway\", label = \"Driveway\", synonyms = \"Driveways\", description = \"\")\n-public interface Driveway extends Outdoor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Entry.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Entry.java\ndeleted file mode 100644\nindex f88c4f10bd7..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Entry.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines an Entry.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Room_Entry\", label = \"Entry\", synonyms = \"Entries, Foyer, Foyers\", description = \"\")\n-public interface Entry extends Room {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/FamilyRoom.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/FamilyRoom.java\ndeleted file mode 100644\nindex d4c095f059d..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/FamilyRoom.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Family Room.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Room_FamilyRoom\", label = \"Family Room\", synonyms = \"Family Rooms\", description = \"\")\n-public interface FamilyRoom extends Room {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/FirstFloor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/FirstFloor.java\ndeleted file mode 100644\nindex 977606b7ea5..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/FirstFloor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a First Floor.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Floor_FirstFloor\", label = \"First Floor\", synonyms = \"First Floors, Upstairs\", description = \"\")\n-public interface FirstFloor extends Floor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Floor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Floor.java\ndeleted file mode 100644\nindex e6a71e4e6a5..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Floor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Floor.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Floor\", label = \"Floor\", synonyms = \"Floors\", description = \"\")\n-public interface Floor extends Indoor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Garage.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Garage.java\ndeleted file mode 100644\nindex 8f592538f52..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Garage.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Garage.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Building_Garage\", label = \"Garage\", synonyms = \"Garages\", description = \"\")\n-public interface Garage extends Building {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Garden.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Garden.java\ndeleted file mode 100644\nindex 1efedd39b76..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Garden.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Garden.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Outdoor_Garden\", label = \"Garden\", synonyms = \"Gardens\", description = \"\")\n-public interface Garden extends Outdoor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/GroundFloor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/GroundFloor.java\ndeleted file mode 100644\nindex b8b2942d71c..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/GroundFloor.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Ground Floor.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Floor_GroundFloor\", label = \"Ground Floor\", synonyms = \"Ground Floors, Downstairs\", description = \"\")\n-public interface GroundFloor extends Floor {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/GuestRoom.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/GuestRoom.java\ndeleted file mode 100644\nindex cfafb8f99ff..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/GuestRoom.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a Guest Room.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Room_GuestRoom\", label = \"Guest Room\", synonyms = \"Guest Rooms\", description = \"\")\n-public interface GuestRoom extends Room {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/House.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/House.java\ndeleted file mode 100644\nindex b22410e8c55..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/House.java\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines a House.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor_Building_House\", label = \"House\", synonyms = \"Houses\", description = \"\")\n-public interface House extends Building {\n-}\n\ndiff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Indoor.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Indoor.java\ndeleted file mode 100644\nindex 48c652aaa85..00000000000\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/model/location/Indoor.java\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-/**\n- * Copyright (c) 2010-2023 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.semantics.model.location;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.semantics.Location;\n-import org.openhab.core.semantics.TagInfo;\n-\n-/**\n- * This class defines an Indoor.\n- *\n- * @author Generated from generateTagClasses.groovy - Initial contribution\n- */\n-@NonNullByDefault\n-@TagInfo(id = \"Location_Indoor\", label = \"Indoor\", synonyms = \"\", description = \"Anything that is inside a closed building\")\n-public interface Indoor extends Location {\n-}\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.model.script/src.moved/test/java/org/openhab/core/model/script/actions/SemanticsTest.java b/bundles/org.openhab.core.model.script/src.moved/test/java/org/openhab/core/model/script/actions/SemanticsTest.java\nindex cfd575d6fa6..be07ec03be5 100644\n--- a/bundles/org.openhab.core.model.script/src.moved/test/java/org/openhab/core/model/script/actions/SemanticsTest.java\n+++ b/bundles/org.openhab.core.model.script/src.moved/test/java/org/openhab/core/model/script/actions/SemanticsTest.java\n@@ -12,12 +12,13 @@\n  */\n package org.openhab.core.model.script.actions;\n \n-import static org.hamcrest.CoreMatchers.is;\n-import static org.hamcrest.CoreMatchers.nullValue;\n+import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.mockito.Mockito.when;\n \n+import java.util.List;\n+\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -33,10 +34,10 @@\n import org.openhab.core.items.ItemRegistry;\n import org.openhab.core.library.CoreItemFactory;\n import org.openhab.core.model.script.internal.engine.action.SemanticsActionService;\n-import org.openhab.core.semantics.model.equipment.Battery;\n-import org.openhab.core.semantics.model.equipment.CleaningRobot;\n-import org.openhab.core.semantics.model.location.Bathroom;\n-import org.openhab.core.semantics.model.location.Indoor;\n+import org.openhab.core.semantics.ManagedSemanticTagProvider;\n+import org.openhab.core.semantics.Tag;\n+import org.openhab.core.semantics.internal.SemanticTagRegistryImpl;\n+import org.openhab.core.semantics.model.DefaultSemanticTagProvider;\n \n /**\n  * This are tests for {@link Semantics} actions.\n@@ -50,6 +51,7 @@ public class SemanticsTest {\n \n     private @Mock @NonNullByDefault({}) ItemRegistry itemRegistryMock;\n     private @Mock @NonNullByDefault({}) UnitProvider unitProviderMock;\n+    private @Mock @NonNullByDefault({}) ManagedSemanticTagProvider managedSemanticTagProviderMock;\n \n     private @NonNullByDefault({}) GroupItem indoorLocationItem;\n     private @NonNullByDefault({}) GroupItem bathroomLocationItem;\n@@ -58,6 +60,11 @@ public class SemanticsTest {\n     private @NonNullByDefault({}) GenericItem humidityPointItem;\n     private @NonNullByDefault({}) GenericItem subEquipmentItem;\n \n+    private @NonNullByDefault({}) Class<? extends Tag> indoorTagClass;\n+    private @NonNullByDefault({}) Class<? extends Tag> bathroomTagClass;\n+    private @NonNullByDefault({}) Class<? extends Tag> cleaningRobotTagClass;\n+    private @NonNullByDefault({}) Class<? extends Tag> batteryTagClass;\n+\n     @BeforeEach\n     public void setup() throws ItemNotFoundException {\n         CoreItemFactory itemFactory = new CoreItemFactory(unitProviderMock);\n@@ -98,6 +105,15 @@ public void setup() throws ItemNotFoundException {\n         equipmentItem.addMember(subEquipmentItem);\n         subEquipmentItem.addGroupName(equipmentItem.getName());\n \n+        when(managedSemanticTagProviderMock.getAll()).thenReturn(List.of());\n+        SemanticTagRegistryImpl semanticTagRegistryImpl = new SemanticTagRegistryImpl(new DefaultSemanticTagProvider(),\n+                managedSemanticTagProviderMock);\n+\n+        indoorTagClass = semanticTagRegistryImpl.getTagClassById(\"Location_Indoor\");\n+        bathroomTagClass = semanticTagRegistryImpl.getTagClassById(\"Location_Indoor_Room_Bathroom\");\n+        cleaningRobotTagClass = semanticTagRegistryImpl.getTagClassById(\"Equipment_CleaningRobot\");\n+        batteryTagClass = semanticTagRegistryImpl.getTagClassById(\"Equipment_Battery\");\n+\n         when(itemRegistryMock.getItem(\"TestHouse\")).thenReturn(indoorLocationItem);\n         when(itemRegistryMock.getItem(\"TestBathRoom\")).thenReturn(bathroomLocationItem);\n         when(itemRegistryMock.getItem(\"Test08\")).thenReturn(equipmentItem);\n@@ -122,9 +138,9 @@ public void testGetLocation() {\n \n     @Test\n     public void testGetLocationType() {\n-        assertThat(Semantics.getLocationType(indoorLocationItem), is(Indoor.class));\n+        assertThat(Semantics.getLocationType(indoorLocationItem), is(indoorTagClass));\n \n-        assertThat(Semantics.getLocationType(bathroomLocationItem), is(Bathroom.class));\n+        assertThat(Semantics.getLocationType(bathroomLocationItem), is(bathroomTagClass));\n \n         assertNull(Semantics.getLocationType(humidityPointItem));\n     }\n@@ -142,11 +158,11 @@ public void testGetEquipment() {\n \n     @Test\n     public void testGetEquipmentType() {\n-        assertThat(Semantics.getEquipmentType(equipmentItem), is(CleaningRobot.class));\n+        assertThat(Semantics.getEquipmentType(equipmentItem), is(cleaningRobotTagClass));\n \n-        assertThat(Semantics.getEquipmentType(temperaturePointItem), is(CleaningRobot.class));\n+        assertThat(Semantics.getEquipmentType(temperaturePointItem), is(cleaningRobotTagClass));\n \n-        assertThat(Semantics.getEquipmentType(subEquipmentItem), is(Battery.class));\n+        assertThat(Semantics.getEquipmentType(subEquipmentItem), is(batteryTagClass));\n \n         assertNull(Semantics.getEquipmentType(humidityPointItem));\n     }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3635",
    "pr_id": 3635,
    "issue_id": 3620,
    "repo": "openhab/openhab-core",
    "problem_statement": "(Many) Issues with Sitemap Event Subscription\nSitemap Event Subscription is incredible unreliable. There are many scenarios where events are not sent or subscriptions stall. This occurs and can be reproduced within the browser (basic UI) and the android app (sitemaps).\r\n\r\n## Expected Behavior\r\nAll changes to items should be reflected in real time for the sitemap which is currently opened.\r\n\r\n## Current Behavior\r\nThere are many issues where this is not the case:\r\n1. Subscription is stalled completely after creation (e.g. android app refresh swipe down, or browser reload). I managed to reproduce it reliably with this script, though I'm not 100% sure that this is what is happening when it occurs on the android app. \r\n``` javascript\r\nconst res = await got.post(`${openhabUrl}/rest/sitemaps/events/subscribe`).json();\r\nconst location = res.context.headers.Location;\r\n// choosing any time >= 2000 here will reproduce this issue reliably. \r\nawait new Promise(resolve => setTimeout(resolve, 2000));\r\nconst stream = await got.stream(`${location}?sitemap=main&pageid=04`);\r\nfor await (const data of stream) {\r\n    console.log(data.toString());\r\n}\r\n```\r\nThis will create the following log output (grepping for this subscription id):\r\n```\r\ncat openhab.log | grep -a '2c365d7d-9581-4f64-87dd-54941213e343'\r\n2023-05-19 16:39:27.197 [DEBUG] [t.sitemap.SitemapSubscriptionService] - Created new subscription with id 2c365d7d-9581-4f64-87dd-54941213e343 (7 active subscriptions for a max of 50)\r\n2023-05-19 16:39:27.200 [DEBUG] [est.sitemap.internal.SitemapResource] - Client from IP 192.168.10.134 requested new subscription => got id 2c365d7d-9581-4f64-87dd-54941213e343.\r\n2023-05-19 16:39:29.228 [DEBUG] [est.sitemap.internal.SitemapResource] - Subscription id 2c365d7d-9581-4f64-87dd-54941213e343 does not exist.\r\n```\r\nAlso very important to notice is that the connection is kept open! It is not closed as I think was desired [here.](https://github.com/openhab/openhab-core/blob/769aa562a10f9e007ff08723b31b60da240dc8c4/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java#L339) This tricks the client to think the connection will send events but it never will. You can also easily reproduce it with curl and manually copy the subscription id from request 1 to request 2, as this will always take longer than 2 seconds. \r\n\r\n2. Often if the subscription is successfully subscribed by the client, updates are sent not fast enough. I have a sitemap which updates items multiple times a second, but often I can discover this on the logs:\r\n```\r\n2023-05-19 15:45:50.761 [DEBUG] [t.sitemap.SitemapSubscriptionService] - Created new subscription with id c009170c-0537-45d6-b1f8-b00639e622b8 (6 active subscriptions for a max of 50)\r\n2023-05-19 15:45:50.763 [DEBUG] [est.sitemap.internal.SitemapResource] - Client from IP 192.168.10.55 requested new subscription => got id c009170c-0537-45d6-b1f8-b00639e622b8.\r\n2023-05-19 15:45:50.773 [DEBUG] [t.sitemap.SitemapSubscriptionService] - Subscription c009170c-0537-45d6-b1f8-b00639e622b8 changed to page electricity of sitemap electricity (6 active subscriptions}\r\n2023-05-19 15:45:50.774 [DEBUG] [est.sitemap.internal.SitemapResource] - Client from IP 192.168.10.55 requested sitemap event stream for subscription c009170c-0537-45d6-b1f8-b00639e622b8.\r\n2023-05-19 15:46:07.694 [DEBUG] [est.sitemap.internal.SitemapResource] - Sent sitemap event for widget 0100 to subscription c009170c-0537-45d6-b1f8-b00639e622b8.\r\n2023-05-19 15:46:19.553 [DEBUG] [est.sitemap.internal.SitemapResource] - Sent sitemap event for widget 0100 to subscription c009170c-0537-45d6-b1f8-b00639e622b8.\r\n2023-05-19 15:46:28.000 [DEBUG] [est.sitemap.internal.SitemapResource] - Sent sitemap event for widget 0001 to subscription c009170c-0537-45d6-b1f8-b00639e622b8.\r\n2023-05-19 15:46:45.879 [DEBUG] [est.sitemap.internal.SitemapResource] - Sent sitemap event for widget 0001 to subscription c009170c-0537-45d6-b1f8-b00639e622b8.\r\n2023-05-19 15:47:16.174 [DEBUG] [est.sitemap.internal.SitemapResource] - Sent sitemap event for widget 0100 to subscription c009170c-0537-45d6-b1f8-b00639e622b8.\r\n2023-05-19 15:47:40.237 [DEBUG] [est.sitemap.internal.SitemapResource] - Sent sitemap event for widget 0100 to subscription c009170c-0537-45d6-b1f8-b00639e622b8.\r\n```\r\nHere somehow only a few events are sent within minutes, while in reality multiple events should be sent per second. In this state, whenever I refresh the page/app manually it will update to the latest correct values which clearly indicates the current values were outdated. \r\n\r\nI thought that openhab might be overloaded as indeed I have a setup with 10-30 item updates per second, but I don't think it is as CPU load is <= 50% and also everything loads incredible fast when refreshing manually and also all other services (like persistence) don't encounter any problems.\r\n\r\n3. Items with `autoupdate=\"false\"` are never (event-based) updated on the UI when changed on the UI. To reproduce, create such an item, include it to a sitemap as `Setpoint`, write a script/rule which listens for commands of this item and update the state of the item. Now the logs look like this when changing it with the setpoint element:\r\n```\r\n2023-05-19 16:32:18.332 [INFO ] [openhab.event.ItemCommandEvent      ] - Item 'My_Item' received command 7\r\n2023-05-19 16:32:18.418 [INFO ] [openhab.event.ItemStateChangedEvent ] - Item 'My_Item' changed from 8 to 7\r\n```\r\nbut the sitemap event stream never contains this change even for a working subscription (where point 1 and 2 did not occur). \r\n\r\n## Possible Solution\r\nFor me it looks like the sitemap event subscription could need a rework, maybe replacing it entirely with websockets as openhab supports this by now already. \r\n\r\n## Steps to Reproduce (for Bugs)\r\nprovided in the description\r\n\r\n## Context\r\nI'm using sitemaps to show the state of my home. Sitemaps are awesome and in my opinion far superior to the OH3 UI (e.g. they are blazing fast, no cumbersome login setups required on android, native app navigation works, video streams work through openhab cloud, way easier to setup, etc.). I think it's a pity they don't see a lot of love since OH3 UI. \r\n\r\n## Your Environment\r\n* Version used: openhab 3.4.4 release build\r\n* Environment name and version android 13.0 with 3.6.1 app version, chrome 113\r\n* Operating System and version: raspbian setup\r\n",
    "issue_word_count": 1024,
    "test_files_count": 1,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/events/EventHandler.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java"
    ],
    "base_commit": "4d3535a4116364084a19610dfc9dd4152356145b",
    "head_commit": "fa4099f314b65f3d38df64754fbb1773580cfa12",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3635",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3635",
    "dockerfile": "",
    "pr_merged_at": "2023-07-02T10:12:54.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java\nindex 70bafa9e4bf..d788c1762ea 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java\n@@ -42,6 +42,8 @@\n import org.openhab.core.model.sitemap.sitemap.Widget;\n import org.openhab.core.thing.events.ChannelDescriptionChangedEvent;\n import org.openhab.core.ui.items.ItemUIRegistry;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.ServiceRegistration;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n import org.osgi.service.component.annotations.Deactivate;\n@@ -72,6 +74,7 @@ public class SitemapSubscriptionService implements ModelRepositoryChangeListener\n     private static final int DEFAULT_MAX_SUBSCRIPTIONS = 50;\n \n     private final Logger logger = LoggerFactory.getLogger(SitemapSubscriptionService.class);\n+    private final BundleContext bundleContext;\n \n     public interface SitemapSubscriptionCallback {\n \n@@ -94,15 +97,17 @@ public interface SitemapSubscriptionCallback {\n     private final Map<String, Instant> creationInstants = new ConcurrentHashMap<>();\n \n     /* sitemap+page -> listener */\n-    private final Map<String, PageChangeListener> pageChangeListeners = new ConcurrentHashMap<>();\n+    private final Map<String, ListenerRecord> pageChangeListeners = new ConcurrentHashMap<>();\n \n     /* Max number of subscriptions at the same time */\n     private int maxSubscriptions = DEFAULT_MAX_SUBSCRIPTIONS;\n \n     @Activate\n-    public SitemapSubscriptionService(Map<String, Object> config, final @Reference ItemUIRegistry itemUIRegistry) {\n-        applyConfig(config);\n+    public SitemapSubscriptionService(Map<String, Object> config, final @Reference ItemUIRegistry itemUIRegistry,\n+            BundleContext bundleContext) {\n         this.itemUIRegistry = itemUIRegistry;\n+        this.bundleContext = bundleContext;\n+        applyConfig(config);\n     }\n \n     @Deactivate\n@@ -110,9 +115,7 @@ protected void deactivate() {\n         pageOfSubscription.clear();\n         callbacks.clear();\n         creationInstants.clear();\n-        for (PageChangeListener listener : pageChangeListeners.values()) {\n-            listener.dispose();\n-        }\n+        pageChangeListeners.values().forEach(l -> l.serviceRegistration.unregister());\n         pageChangeListeners.clear();\n     }\n \n@@ -150,7 +153,7 @@ protected void removeSitemapProvider(SitemapProvider provider) {\n      * Creates a new subscription with the given id.\n      *\n      * @param callback an instance that should receive the events\n-     * @returns a unique id that identifies the subscription or null if the limit of subscriptions is already reached\n+     * @return a unique id that identifies the subscription or null if the limit of subscriptions is already reached\n      */\n     public @Nullable String createSubscription(SitemapSubscriptionCallback callback) {\n         if (maxSubscriptions >= 0 && callbacks.size() >= maxSubscriptions) {\n@@ -176,9 +179,9 @@ public void removeSubscription(String subscriptionId) {\n         String sitemapPage = pageOfSubscription.remove(subscriptionId);\n         if (sitemapPage != null && !pageOfSubscription.values().contains(sitemapPage)) {\n             // this was the only subscription listening on this page, so we can dispose the listener\n-            PageChangeListener listener = pageChangeListeners.remove(sitemapPage);\n+            ListenerRecord listener = pageChangeListeners.remove(sitemapPage);\n             if (listener != null) {\n-                listener.dispose();\n+                listener.serviceRegistration().unregister();\n             }\n         }\n         logger.debug(\"Removed subscription with id {} ({} active subscriptions)\", subscriptionId, callbacks.size());\n@@ -249,13 +252,14 @@ public void setPageId(String subscriptionId, String sitemapName, String pageId)\n     }\n \n     private void addCallbackToListener(String sitemapName, String pageId, SitemapSubscriptionCallback callback) {\n-        PageChangeListener listener = pageChangeListeners.get(getValue(sitemapName, pageId));\n-        if (listener == null) {\n-            // there is no listener for this page yet, so let's try to create one\n-            listener = new PageChangeListener(sitemapName, pageId, itemUIRegistry, collectWidgets(sitemapName, pageId));\n-            pageChangeListeners.put(getValue(sitemapName, pageId), listener);\n-        }\n-        listener.addCallback(callback);\n+        ListenerRecord listener = pageChangeListeners.computeIfAbsent(getValue(sitemapName, pageId), v -> {\n+            PageChangeListener newListener = new PageChangeListener(sitemapName, pageId, itemUIRegistry,\n+                    collectWidgets(sitemapName, pageId));\n+            ServiceRegistration<?> registration = bundleContext.registerService(EventSubscriber.class.getName(),\n+                    newListener, null);\n+            return new ListenerRecord(newListener, registration);\n+        });\n+        listener.pageChangeListener().addCallback(callback);\n     }\n \n     private EList<Widget> collectWidgets(String sitemapName, String pageId) {\n@@ -278,12 +282,12 @@ private EList<Widget> collectWidgets(String sitemapName, String pageId) {\n     }\n \n     private void removeCallbackFromListener(String sitemapPage, SitemapSubscriptionCallback callback) {\n-        PageChangeListener oldListener = pageChangeListeners.get(sitemapPage);\n+        ListenerRecord oldListener = pageChangeListeners.get(sitemapPage);\n         if (oldListener != null) {\n-            oldListener.removeCallback(callback);\n-            if (!pageOfSubscription.values().contains(sitemapPage)) {\n+            oldListener.pageChangeListener().removeCallback(callback);\n+            if (!pageOfSubscription.containsValue(sitemapPage)) {\n                 // no other callbacks are left here, so we can safely dispose the listener\n-                oldListener.dispose();\n+                oldListener.serviceRegistration().unregister();\n                 pageChangeListeners.remove(sitemapPage);\n             }\n         }\n@@ -311,14 +315,14 @@ public void modelChanged(String modelName, EventType type) {\n \n         String changedSitemapName = modelName.substring(0, modelName.length() - SITEMAP_SUFFIX.length());\n \n-        for (Entry<String, PageChangeListener> listenerEntry : pageChangeListeners.entrySet()) {\n+        for (Entry<String, ListenerRecord> listenerEntry : pageChangeListeners.entrySet()) {\n             String sitemapWithPage = listenerEntry.getKey();\n             String sitemapName = extractSitemapName(sitemapWithPage);\n             String pageId = extractPageId(sitemapWithPage);\n \n             if (sitemapName.equals(changedSitemapName)) {\n                 EList<Widget> widgets = collectWidgets(sitemapName, pageId);\n-                listenerEntry.getValue().sitemapContentChanged(widgets);\n+                listenerEntry.getValue().pageChangeListener().sitemapContentChanged(widgets);\n             }\n         }\n     }\n@@ -336,9 +340,7 @@ public void checkAliveClients() {\n             }\n         }\n         // Send an ALIVE event to all subscribers to trigger an exception for dead subscribers\n-        for (Entry<String, PageChangeListener> listenerEntry : pageChangeListeners.entrySet()) {\n-            listenerEntry.getValue().sendAliveEvent();\n-        }\n+        pageChangeListeners.values().forEach(l -> l.pageChangeListener().sendAliveEvent());\n     }\n \n     @Override\n@@ -355,19 +357,22 @@ public void receive(Event event) {\n                 // members and predictions aren't really possible in that case (or at least would be highly complex).\n                 return;\n             }\n-            for (PageChangeListener pageChangeListener : pageChangeListeners.values()) {\n+            for (ListenerRecord listener : pageChangeListeners.values()) {\n                 if (prediction.isConfirmation()) {\n-                    pageChangeListener.keepCurrentState(item);\n+                    listener.pageChangeListener().keepCurrentState(item);\n                 } else {\n-                    pageChangeListener.changeStateTo(item, prediction.getPredictedState());\n+                    listener.pageChangeListener().changeStateTo(item, prediction.getPredictedState());\n                 }\n             }\n         } else if (event instanceof ChannelDescriptionChangedEvent channelDescriptionChangedEvent) {\n             channelDescriptionChangedEvent.getLinkedItemNames().forEach(itemName -> {\n-                for (PageChangeListener pageChangeListener : pageChangeListeners.values()) {\n-                    pageChangeListener.descriptionChanged(itemName);\n+                for (ListenerRecord listener : pageChangeListeners.values()) {\n+                    listener.pageChangeListener().descriptionChanged(itemName);\n                 }\n             });\n         }\n     }\n+\n+    private record ListenerRecord(PageChangeListener pageChangeListener, ServiceRegistration<?> serviceRegistration) {\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java\nindex 3252af2f6bd..30aa6bc5e92 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/PageChangeListener.java\n@@ -20,16 +20,19 @@\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.TimeUnit;\n import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n \n import org.eclipse.emf.common.util.EList;\n import org.openhab.core.common.ThreadPoolManager;\n+import org.openhab.core.events.Event;\n+import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.io.rest.core.item.EnrichedItemDTOMapper;\n import org.openhab.core.io.rest.sitemap.SitemapSubscriptionService.SitemapSubscriptionCallback;\n-import org.openhab.core.items.GenericItem;\n-import org.openhab.core.items.GroupItem;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n-import org.openhab.core.items.StateChangeListener;\n+import org.openhab.core.items.events.GroupStateUpdatedEvent;\n+import org.openhab.core.items.events.ItemEvent;\n+import org.openhab.core.items.events.ItemStateChangedEvent;\n import org.openhab.core.library.CoreItemFactory;\n import org.openhab.core.model.sitemap.sitemap.Chart;\n import org.openhab.core.model.sitemap.sitemap.ColorArray;\n@@ -45,7 +48,7 @@\n  * @author Kai Kreuzer - Initial contribution\n  * @author Laurent Garnier - Added support for icon color\n  */\n-public class PageChangeListener implements StateChangeListener {\n+public class PageChangeListener implements EventSubscriber {\n \n     private static final int REVERT_INTERVAL = 300;\n     private final ScheduledExecutorService scheduler = ThreadPoolManager\n@@ -55,6 +58,7 @@ public class PageChangeListener implements StateChangeListener {\n     private final ItemUIRegistry itemUIRegistry;\n     private EList<Widget> widgets;\n     private Set<Item> items;\n+    private final HashSet<String> filterItems = new HashSet<>();\n     private final List<SitemapSubscriptionCallback> callbacks = Collections.synchronizedList(new ArrayList<>());\n     private Set<SitemapSubscriptionCallback> distinctCallbacks = Collections.emptySet();\n \n@@ -75,23 +79,10 @@ public PageChangeListener(String sitemapName, String pageId, ItemUIRegistry item\n     }\n \n     private void updateItemsAndWidgets(EList<Widget> widgets) {\n-        if (this.widgets != null) {\n-            // cleanup statechange listeners in case widgets were removed\n-            items = getAllItems(this.widgets);\n-            for (Item item : items) {\n-                if (item instanceof GenericItem genericItem) {\n-                    genericItem.removeStateChangeListener(this);\n-                }\n-            }\n-        }\n-\n         this.widgets = widgets;\n         items = getAllItems(widgets);\n-        for (Item item : items) {\n-            if (item instanceof GenericItem genericItem) {\n-                genericItem.addStateChangeListener(this);\n-            }\n-        }\n+        filterItems.clear();\n+        filterItems.addAll(items.stream().map(Item::getName).collect(Collectors.toSet()));\n     }\n \n     public String getSitemapName() {\n@@ -113,19 +104,6 @@ public void removeCallback(SitemapSubscriptionCallback callback) {\n         distinctCallbacks = new HashSet<>(callbacks);\n     }\n \n-    /**\n-     * Disposes this instance and releases all resources.\n-     */\n-    public void dispose() {\n-        for (Item item : items) {\n-            if (item instanceof GenericItem genericItem) {\n-                genericItem.removeStateChangeListener(this);\n-            } else if (item instanceof GroupItem groupItem) {\n-                groupItem.removeStateChangeListener(this);\n-            }\n-        }\n-    }\n-\n     /**\n      * Collects all items that are represented by a given list of widgets\n      *\n@@ -182,26 +160,6 @@ private void constructAndSendEvents(Item item, State newState) {\n         }\n     }\n \n-    @Override\n-    public void stateChanged(Item item, State oldState, State newState) {\n-        // For all items except group, send an event only when the event state is changed.\n-        if (item instanceof GroupItem) {\n-            return;\n-        }\n-        constructAndSendEvents(item, newState);\n-    }\n-\n-    @Override\n-    public void stateUpdated(Item item, State state) {\n-        // For group item only, send an event each time the event state is updated.\n-        // It allows updating the group label while the group state is unchanged,\n-        // for example the count in label for Group:Switch:OR\n-        if (!(item instanceof GroupItem)) {\n-            return;\n-        }\n-        constructAndSendEvents(item, state);\n-    }\n-\n     public void keepCurrentState(Item item) {\n         scheduler.schedule(() -> {\n             constructAndSendEvents(item, item.getState());\n@@ -338,4 +296,24 @@ private Set<SitemapEvent> constructSitemapEventsForUpdatedDescr(Item item, List<\n         }\n         return events;\n     }\n+\n+    @Override\n+    public Set<String> getSubscribedEventTypes() {\n+        return Set.of(ItemStateChangedEvent.TYPE, GroupStateUpdatedEvent.TYPE);\n+    }\n+\n+    @Override\n+    public void receive(Event event) {\n+        if (event instanceof ItemEvent itemEvent && filterItems.contains(itemEvent.getItemName())) {\n+            Item item = itemUIRegistry.get(itemEvent.getItemName());\n+            if (item == null) {\n+                return;\n+            }\n+            if (event instanceof GroupStateUpdatedEvent groupStateUpdatedEvent) {\n+                constructAndSendEvents(item, groupStateUpdatedEvent.getItemState());\n+            } else if (event instanceof ItemStateChangedEvent itemStateChangedEvent) {\n+                constructAndSendEvents(item, itemStateChangedEvent.getItemState());\n+            }\n+        }\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\nindex 478f244a141..4446548c63e 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/internal/SitemapResource.java\n@@ -21,10 +21,12 @@\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n+import java.util.concurrent.CopyOnWriteArraySet;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.TimeUnit;\n import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n \n import javax.annotation.security.RolesAllowed;\n import javax.servlet.http.HttpServletRequest;\n@@ -56,6 +58,8 @@\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.auth.Role;\n import org.openhab.core.common.ThreadPoolManager;\n+import org.openhab.core.events.Event;\n+import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.io.rest.JSONResponse;\n import org.openhab.core.io.rest.LocaleService;\n import org.openhab.core.io.rest.RESTConstants;\n@@ -67,7 +71,8 @@\n import org.openhab.core.items.GenericItem;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n-import org.openhab.core.items.StateChangeListener;\n+import org.openhab.core.items.events.ItemEvent;\n+import org.openhab.core.items.events.ItemStateChangedEvent;\n import org.openhab.core.library.CoreItemFactory;\n import org.openhab.core.library.types.HSBType;\n import org.openhab.core.model.sitemap.SitemapProvider;\n@@ -126,7 +131,7 @@\n  * @author Wouter Born - Migrated to OpenAPI annotations\n  * @author Laurent Garnier - Added support for icon color\n  */\n-@Component(service = RESTResource.class)\n+@Component(service = { RESTResource.class, EventSubscriber.class })\n @JaxrsResource\n @JaxrsName(SitemapResource.PATH_SITEMAPS)\n @JaxrsApplicationSelect(\"(\" + JaxrsWhiteboardConstants.JAX_RS_NAME + \"=\" + RESTConstants.JAX_RS_NAME + \")\")\n@@ -136,7 +141,7 @@\n @Tag(name = SitemapResource.PATH_SITEMAPS)\n @NonNullByDefault\n public class SitemapResource\n-        implements RESTResource, SitemapSubscriptionCallback, SseBroadcaster.Listener<SseSinkInfo> {\n+        implements RESTResource, SitemapSubscriptionCallback, SseBroadcaster.Listener<SseSinkInfo>, EventSubscriber {\n \n     private final Logger logger = LoggerFactory.getLogger(SitemapResource.class);\n \n@@ -176,6 +181,7 @@ public class SitemapResource\n             .getScheduledPool(ThreadPoolManager.THREAD_POOL_NAME_COMMON);\n \n     private @Nullable ScheduledFuture<?> cleanSubscriptionsJob;\n+    private Set<BlockingStateChangeListener> stateChangeListeners = new CopyOnWriteArraySet<>();\n \n     @Activate\n     public SitemapResource( //\n@@ -683,13 +689,11 @@ private boolean blockUnlessChangeOccurs(String sitemapname, String pageId) {\n     private boolean waitForChanges(EList<Widget> widgets) {\n         long startTime = (new Date()).getTime();\n         boolean timeout = false;\n-        BlockingStateChangeListener listener = new BlockingStateChangeListener();\n-        // let's get all items for these widgets\n-        Set<GenericItem> items = getAllItems(widgets);\n-        for (GenericItem item : items) {\n-            item.addStateChangeListener(listener);\n-        }\n-        while (!listener.hasChangeOccurred() && !timeout) {\n+        Set<String> items = getAllItems(widgets).stream().map(Item::getName).collect(Collectors.toSet());\n+        BlockingStateChangeListener listener = new BlockingStateChangeListener(items);\n+        stateChangeListeners.add(listener);\n+\n+        while (!listener.hasChanged() && !timeout) {\n             timeout = (new Date()).getTime() - startTime > TIMEOUT_IN_MS;\n             try {\n                 Thread.sleep(300);\n@@ -698,9 +702,8 @@ private boolean waitForChanges(EList<Widget> widgets) {\n                 break;\n             }\n         }\n-        for (GenericItem item : items) {\n-            item.removeStateChangeListener(listener);\n-        }\n+\n+        stateChangeListeners.remove(listener);\n         return timeout;\n     }\n \n@@ -779,34 +782,16 @@ private Set<GenericItem> getItemsInColorCond(EList<ColorArray> colorList) {\n         return items;\n     }\n \n-    /**\n-     * This is a state change listener, which is merely used to determine, if a\n-     * state change has occurred on one of a list of items.\n-     *\n-     * @author Kai Kreuzer - Initial contribution\n-     *\n-     */\n-    private static class BlockingStateChangeListener implements StateChangeListener {\n-\n-        private boolean changed = false;\n-\n-        @Override\n-        public void stateChanged(Item item, State oldState, State newState) {\n-            changed = true;\n-        }\n-\n-        /**\n-         * determines, whether a state change has occurred since its creation\n-         *\n-         * @return true, if a state has changed\n-         */\n-        public boolean hasChangeOccurred() {\n-            return changed;\n-        }\n+    @Override\n+    public Set<String> getSubscribedEventTypes() {\n+        return Set.of(ItemStateChangedEvent.TYPE);\n+    }\n \n-        @Override\n-        public void stateUpdated(Item item, State state) {\n-            // ignore if the state did not change\n+    @Override\n+    public void receive(Event event) {\n+        if (event instanceof ItemEvent itemEvent) {\n+            String itemName = itemEvent.getItemName();\n+            stateChangeListeners.forEach(l -> l.itemChanged(itemName));\n         }\n     }\n \n@@ -852,4 +837,23 @@ public void sseEventSinkRemoved(SseEventSink sink, SseSinkInfo info) {\n         subscriptions.removeSubscription(info.subscriptionId);\n         knownSubscriptions.remove(info.subscriptionId);\n     }\n+\n+    private static class BlockingStateChangeListener {\n+        private final Set<String> items;\n+        private boolean changed = false;\n+\n+        public BlockingStateChangeListener(Set<String> items) {\n+            this.items = items;\n+        }\n+\n+        public void itemChanged(String item) {\n+            if (items.contains(item)) {\n+                changed = true;\n+            }\n+        }\n+\n+        public boolean hasChanged() {\n+            return changed;\n+        }\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/events/EventHandler.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/events/EventHandler.java\nindex 4217bec0a24..aa8cbd624e3 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/events/EventHandler.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/events/EventHandler.java\n@@ -13,14 +13,18 @@\n package org.openhab.core.internal.events;\n \n import java.util.Arrays;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Set;\n+import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.ScheduledFuture;\n import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -47,9 +51,7 @@ public class EventHandler implements AutoCloseable {\n     private final Map<String, Set<EventSubscriber>> typedEventSubscribers;\n     private final Map<String, EventFactory> typedEventFactories;\n \n-    private final ScheduledExecutorService watcher = Executors\n-            .newSingleThreadScheduledExecutor(new NamedThreadFactory(\"eventwatcher\"));\n-    private final ExecutorService executor = Executors.newSingleThreadExecutor(new NamedThreadFactory(\"eventexecutor\"));\n+    private final Map<Class<? extends EventSubscriber>, ExecutorRecord> executors = new HashMap<>();\n \n     /**\n      * Create a new event handler.\n@@ -63,10 +65,19 @@ public EventHandler(final Map<String, Set<EventSubscriber>> typedEventSubscriber\n         this.typedEventFactories = typedEventFactories;\n     }\n \n+    private synchronized ExecutorRecord createExecutorRecord(Class<? extends EventSubscriber> subscriber) {\n+        return new ExecutorRecord(\n+                Executors.newSingleThreadExecutor(new NamedThreadFactory(\"eventexecutor-\" + executors.size())),\n+                Executors.newSingleThreadScheduledExecutor(new NamedThreadFactory(\"eventwatcher-\" + executors.size())),\n+                new AtomicInteger());\n+    }\n+\n     @Override\n     public void close() {\n-        watcher.shutdownNow();\n-        executor.shutdownNow();\n+        executors.values().forEach(r -> {\n+            r.executor.shutdownNow();\n+            r.watcher.shutdownNow();\n+        });\n     }\n \n     public void handleEvent(org.osgi.service.event.Event osgiEvent) {\n@@ -140,8 +151,16 @@ private synchronized void dispatchEvent(final Set<EventSubscriber> eventSubscrib\n             EventFilter filter = eventSubscriber.getEventFilter();\n             if (filter == null || filter.apply(event)) {\n                 logger.trace(\"Delegate event to subscriber ({}).\", eventSubscriber.getClass());\n-                executor.submit(() -> {\n-                    ScheduledFuture<?> logTimeout = watcher.schedule(\n+                ExecutorRecord executorRecord = Objects.requireNonNull(\n+                        executors.computeIfAbsent(eventSubscriber.getClass(), this::createExecutorRecord));\n+                int queueSize = executorRecord.count().incrementAndGet();\n+                if (queueSize > 1000) {\n+                    logger.warn(\n+                            \"The queue for a subscriber of type '{}' exceeds 1000 elements. System may be unstable.\",\n+                            eventSubscriber.getClass());\n+                }\n+                CompletableFuture.runAsync(() -> {\n+                    ScheduledFuture<?> logTimeout = executorRecord.watcher().schedule(\n                             () -> logger.warn(\"Dispatching event to subscriber '{}' takes more than {}ms.\",\n                                     eventSubscriber, EVENTSUBSCRIBER_EVENTHANDLING_MAX_MS),\n                             EVENTSUBSCRIBER_EVENTHANDLING_MAX_MS, TimeUnit.MILLISECONDS);\n@@ -152,10 +171,13 @@ private synchronized void dispatchEvent(final Set<EventSubscriber> eventSubscrib\n                                 EventSubscriber.class.getName(), ex.getMessage(), ex);\n                     }\n                     logTimeout.cancel(false);\n-                });\n+                }, executorRecord.executor()).thenRun(executorRecord.count::decrementAndGet);\n             } else {\n                 logger.trace(\"Skip event subscriber ({}) because of its filter.\", eventSubscriber.getClass());\n             }\n         }\n     }\n+\n+    private record ExecutorRecord(ExecutorService executor, ScheduledExecutorService watcher, AtomicInteger count) {\n+    }\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java b/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java\nindex fe384aeabb0..b8a0b0da6ab 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/test/java/org/openhab/core/io/rest/sitemap/internal/SitemapResourceTest.java\n@@ -18,7 +18,6 @@\n import static org.hamcrest.collection.IsEmptyCollection.empty;\n import static org.mockito.Mockito.*;\n \n-import java.math.BigDecimal;\n import java.util.Collection;\n import java.util.List;\n import java.util.Locale;\n@@ -45,7 +44,7 @@\n import org.openhab.core.io.rest.sitemap.SitemapSubscriptionService;\n import org.openhab.core.items.GenericItem;\n import org.openhab.core.items.ItemNotFoundException;\n-import org.openhab.core.library.types.DecimalType;\n+import org.openhab.core.items.events.ItemEvent;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.library.types.PercentType;\n import org.openhab.core.model.sitemap.SitemapProvider;\n@@ -158,11 +157,13 @@ public void whenSitemapsAreProvidedShouldReturnSitemapBeans() {\n \n     @Test\n     public void whenLongPollingShouldObserveItems() {\n+        ItemEvent itemEvent = mock(ItemEvent.class);\n+        when(itemEvent.getItemName()).thenReturn(item.getName());\n         new Thread(() -> {\n             try {\n                 Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n                                                       // item\n-                item.setState(PercentType.ZERO);\n+                sitemapResource.receive(itemEvent);\n             } catch (InterruptedException e) {\n             }\n         }).start();\n@@ -180,11 +181,13 @@ public void whenLongPollingShouldObserveItems() {\n \n     @Test\n     public void whenLongPollingShouldObserveItemsFromVisibilityRules() {\n+        ItemEvent itemEvent = mock(ItemEvent.class);\n+        when(itemEvent.getItemName()).thenReturn(visibilityRuleItem.getName());\n         new Thread(() -> {\n             try {\n                 Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n                                                       // item\n-                visibilityRuleItem.setState(new DecimalType(BigDecimal.ONE));\n+                sitemapResource.receive(itemEvent);\n             } catch (InterruptedException e) {\n             }\n         }).start();\n@@ -202,11 +205,13 @@ public void whenLongPollingShouldObserveItemsFromVisibilityRules() {\n \n     @Test\n     public void whenLongPollingShouldObserveItemsFromLabelColorConditions() {\n+        ItemEvent itemEvent = mock(ItemEvent.class);\n+        when(itemEvent.getItemName()).thenReturn(labelColorItem.getName());\n         new Thread(() -> {\n             try {\n                 Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n                                                       // item\n-                labelColorItem.setState(new DecimalType(BigDecimal.ONE));\n+                sitemapResource.receive(itemEvent);\n             } catch (InterruptedException e) {\n             }\n         }).start();\n@@ -224,11 +229,13 @@ public void whenLongPollingShouldObserveItemsFromLabelColorConditions() {\n \n     @Test\n     public void whenLongPollingShouldObserveItemsFromValueColorConditions() {\n+        ItemEvent itemEvent = mock(ItemEvent.class);\n+        when(itemEvent.getItemName()).thenReturn(valueColorItem.getName());\n         new Thread(() -> {\n             try {\n                 Thread.sleep(STATE_UPDATE_WAIT_TIME); // wait for the #getPageData call and listeners to attach to the\n                                                       // item\n-                valueColorItem.setState(new DecimalType(BigDecimal.ONE));\n+                sitemapResource.receive(itemEvent);\n             } catch (InterruptedException e) {\n             }\n         }).start();\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3596",
    "pr_id": 3596,
    "issue_id": 3594,
    "repo": "openhab/openhab-core",
    "problem_statement": "Build is failing in AbstractStorageBasedTypeProviderTest\nBuild failed this morning. Apparently, spotless needs to be applied to class `AbstractStorageBasedTypeProviderTest`.\r\nhttps://ci.openhab.org/job/openHAB-Core/1198/console\r\n```\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  05:07 min (Wall Clock)\r\n[INFO] Finished at: 2023-05-08T03:05:36Z\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Static code analysis summary report is available in:\r\n[INFO] file:/home/jenkins/jenkins-agent1/workspace/openHAB-Core/target/summary_report.html\r\n[ERROR] Failed to execute goal com.diffplug.spotless:spotless-maven-plugin:2.35.0:check (codestyle_check) on project org.openhab.core.thing: The following files had format violations:\r\n[ERROR] src/test/java/org/openhab/core/thing/binding/AbstractStorageBasedTypeProviderTest.java\r\n[ERROR] @@ -84,7 +84,7 @@\r\n[ERROR] \r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·ChannelDefinitionÂ·channelDefinitionÂ·=Â·newÂ·ChannelDefinitionBuilder(\"channelName\",\r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·newÂ·ChannelTypeUID(\"system:color\")).withLabel(\"label\").withDescription(\"description\")\r\n[ERROR] -Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·.withProperties(Map.of(\"key\",Â·\"value\")).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\r\n[ERROR] +Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·.withProperties(Map.of(\"key\",Â·\"value\")).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·ChannelGroupTypeÂ·expectedÂ·=Â·ChannelGroupTypeBuilder.instance(groupTypeUID,Â·\"testLabel\")\r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·.withDescription(\"testDescription\").withCategory(\"testCategory\")\r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·.withChannelDefinitions(List.of(channelDefinition)).build();\r\n[ERROR] @@ -114,7 +114,7 @@\r\n[ERROR] \r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·ChannelDefinitionÂ·channelDefinitionÂ·=Â·newÂ·ChannelDefinitionBuilder(\"channelName\",\r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·newÂ·ChannelTypeUID(\"system:color\")).withLabel(\"label\").withDescription(\"description\")\r\n[ERROR] -Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·.withProperties(Map.of(\"key\",Â·\"value\")).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\r\n[ERROR] +Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·.withProperties(Map.of(\"key\",Â·\"value\")).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·ChannelGroupDefinitionÂ·channelGroupDefinitionÂ·=Â·newÂ·ChannelGroupDefinition(\"groupName\",\r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·newÂ·ChannelGroupTypeUID(\"testBinding:channelGroupType\"),Â·\"label\",Â·\"description\");\r\n[ERROR] Â·Â·Â·Â·Â·Â·Â·Â·ThingTypeÂ·expectedÂ·=Â·ThingTypeBuilder.instance(thingTypeUID,Â·\"testLabel\").withDescription(\"description\")\r\n[ERROR] Run 'mvn spotless:apply' to fix these violations.\r\n```",
    "issue_word_count": 240,
    "test_files_count": 1,
    "non_test_files_count": 0,
    "pr_changed_files": [
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/AbstractStorageBasedTypeProviderTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/AbstractStorageBasedTypeProviderTest.java"
    ],
    "base_commit": "8e1a2cfd0a848ff1e4e9da7d8b9d554dcf0774d0",
    "head_commit": "6df2a8b8c2e9b80b8b2166b528ee97cc99ba3d8b",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3596",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3596",
    "dockerfile": "",
    "pr_merged_at": "2023-05-08T09:02:37.000Z",
    "patch": "",
    "test_patch": "diff --git a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/AbstractStorageBasedTypeProviderTest.java b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/AbstractStorageBasedTypeProviderTest.java\nindex 3030111e732..22ac0a2e56a 100644\n--- a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/AbstractStorageBasedTypeProviderTest.java\n+++ b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/binding/AbstractStorageBasedTypeProviderTest.java\n@@ -84,7 +84,7 @@ public void testChannelGroupTypeProperlyMappedToEntityAndBack() {\n \n         ChannelDefinition channelDefinition = new ChannelDefinitionBuilder(\"channelName\",\n                 new ChannelTypeUID(\"system:color\")).withLabel(\"label\").withDescription(\"description\")\n-                        .withProperties(Map.of(\"key\", \"value\")).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\n+                .withProperties(Map.of(\"key\", \"value\")).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\n         ChannelGroupType expected = ChannelGroupTypeBuilder.instance(groupTypeUID, \"testLabel\")\n                 .withDescription(\"testDescription\").withCategory(\"testCategory\")\n                 .withChannelDefinitions(List.of(channelDefinition)).build();\n@@ -114,7 +114,7 @@ public void testThingTypeProperlyMappedToEntityAndBack() {\n \n         ChannelDefinition channelDefinition = new ChannelDefinitionBuilder(\"channelName\",\n                 new ChannelTypeUID(\"system:color\")).withLabel(\"label\").withDescription(\"description\")\n-                        .withProperties(Map.of(\"key\", \"value\")).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\n+                .withProperties(Map.of(\"key\", \"value\")).withAutoUpdatePolicy(AutoUpdatePolicy.VETO).build();\n         ChannelGroupDefinition channelGroupDefinition = new ChannelGroupDefinition(\"groupName\",\n                 new ChannelGroupTypeUID(\"testBinding:channelGroupType\"), \"label\", \"description\");\n         ThingType expected = ThingTypeBuilder.instance(thingTypeUID, \"testLabel\").withDescription(\"description\")\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3576",
    "pr_id": 3576,
    "issue_id": 3574,
    "repo": "openhab/openhab-core",
    "problem_statement": "Thing migration: missing fields in DB after updating a channel (changing its channel type)\nAs already explained in PR openhab/openhab-addons#14811, it looks like the migration of a channel consisting in updating its channel type leads to the removing of several fields in the JSON DB.\r\nThe missing fields after migration are: itemType, label and description.\r\nThe miss of \"itemType\" is really critical; MainUI seems to assume switch by default when there is not this field.\r\n\r\nMigrated channel:\r\n```\r\n        {\r\n          \"uid\": \"meteoalerte:department:b1daefd4dc:avalanches\",\r\n          \"id\": \"avalanches\",\r\n          \"channelTypeUID\": \"meteoalerte:avalanches\",\r\n          \"kind\": \"STATE\",\r\n          \"defaultTags\": [],\r\n          \"properties\": {},\r\n          \"configuration\": {}\r\n        }\r\n```\r\n\r\nAnd the same channel for a newly created thing using MainUI:\r\n```\r\n        {\r\n          \"uid\": \"meteoalerte:department:test:avalanches\",\r\n          \"id\": \"avalanches\",\r\n          \"channelTypeUID\": \"meteoalerte:avalanches\",\r\n          \"itemType\": \"Number\",\r\n          \"kind\": \"STATE\",\r\n          \"label\": \"Avalanches\",\r\n          \"description\": \"Niveau d\\u0027alerte aux avalanches\",\r\n          \"defaultTags\": [],\r\n          \"properties\": {},\r\n          \"configuration\": {}\r\n        },\r\n```\r\n\r\nHere is the file used for migration:\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?>\r\n<update:update-descriptions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txmlns:update=\"https://openhab.org/schemas/update-description/v1.0.0\"\r\n\txsi:schemaLocation=\"https://openhab.org/schemas/update-description/v1.0.0 https://openhab.org/schemas/update-description-1.0.0.xsd\">\r\n\r\n\t<thing-type uid=\"meteoalerte:department\">\r\n\r\n\t\t<instruction-set targetVersion=\"1\">\r\n\t\t\t<update-channel id=\"vague-submersion\">\r\n\t\t\t\t<type>meteoalerte:vague-submersion</type>\r\n\t\t\t</update-channel>\r\n\t\t\t<update-channel id=\"vent\">\r\n\t\t\t\t<type>meteoalerte:vent</type>\r\n\t\t\t</update-channel>\r\n\t\t\t<update-channel id=\"pluie-inondation\">\r\n\t\t\t\t<type>meteoalerte:pluie-inondation</type>\r\n\t\t\t</update-channel>\r\n\t\t\t<update-channel id=\"orage\">\r\n\t\t\t\t<type>meteoalerte:orage</type>\r\n\t\t\t</update-channel>\r\n\t\t\t<update-channel id=\"inondation\">\r\n\t\t\t\t<type>meteoalerte:inondation</type>\r\n\t\t\t</update-channel>\r\n\t\t\t<update-channel id=\"neige\">\r\n\t\t\t\t<type>meteoalerte:neige</type>\r\n\t\t\t</update-channel>\r\n\t\t\t<update-channel id=\"canicule\">\r\n\t\t\t\t<type>meteoalerte:canicule</type>\r\n\t\t\t</update-channel>\r\n\t\t\t<update-channel id=\"grand-froid\">\r\n\t\t\t\t<type>meteoalerte:grand-froid</type>\r\n\t\t\t</update-channel>\r\n\t\t\t<update-channel id=\"avalanches\">\r\n\t\t\t\t<type>meteoalerte:avalanches</type>\r\n\t\t\t</update-channel>\r\n\t\t</instruction-set>\r\n\r\n\t</thing-type>\r\n\r\n</update:update-descriptions>\r\n```",
    "issue_word_count": 303,
    "test_files_count": 2,
    "non_test_files_count": 14,
    "pr_changed_files": [
      "bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation.properties",
      "bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_cs.properties",
      "bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_de.properties",
      "bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_he.properties",
      "bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_hu.properties",
      "bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_it.properties",
      "bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_no.properties",
      "bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_pl.properties",
      "bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_sl.properties",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingManagerImpl.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateInstructionReader.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateInstructionReaderImpl.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/UpdateChannelInstructionImpl.java",
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/internal/ThingManagerImplTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/internal/ThingManagerImplTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateOSGiTest.java"
    ],
    "base_commit": "ac0f512178e5a5949032f16aaec7fd3896678574",
    "head_commit": "877c46e8d703b59521836124686a32ff44bebe68",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3576",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3576",
    "dockerfile": "",
    "pr_merged_at": "2023-05-07T18:46:43.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation.properties b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation.properties\nindex aff65cbe021..07d06aa9e2f 100644\n--- a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation.properties\n+++ b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation.properties\n@@ -13,6 +13,5 @@ options_violated=The value {0} does not match allowed parameter options. Allowed\n multiple_limit_violated=Only {0} elements are allowed but {1} are provided.\n \n bridge_not_configured=Configuring a bridge is mandatory.\n-type_description_missing=Type description for '{0}' not found also we checked the presence before.\n-config_description_missing=Config description for '{0}' not found also we checked the presence before.\n-\n+type_description_missing=Type description {0} for {1} not found, although we checked the presence before.\n+config_description_missing=Config description {0} for {1} not found, although we checked the presence before.\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_cs.properties b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_cs.properties\nindex 7b9fb8c12fc..7306d12294b 100644\n--- a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_cs.properties\n+++ b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_cs.properties\n@@ -13,6 +13,3 @@ options_violated=Hodnota {0} neodpovÃ­dÃ¡ parametru povolenÃ½ch moÅ¾nostÃ­. Povo\n multiple_limit_violated=Pouze {0} prvkÅ¯ je povoleno, ale {1} je k dispozici.\n \n bridge_not_configured=Konfigurace mostu (bridge) je povinnÃ¡.\n-type_description_missing=Popis typu pro ''{0}'' nebyl nalezen, takÃ© jsme zkontrolovali pÅedchozÃ­.\n-config_description_missing=Popis konfigurace pro ''{0}'' nebyl nalezen, takÃ© jsme zkontrolovali pÅedchozÃ­.\n-\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_de.properties b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_de.properties\nindex 093bbb739b0..0321c872143 100644\n--- a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_de.properties\n+++ b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_de.properties\n@@ -13,6 +13,3 @@ options_violated=Der Wert {0} ist nicht in den erlaubten Optionen enthalten. Erl\n multiple_limit_violated=Nur {0} Optionen sind zulÃ¤ssig, aber {1} wurden Ã¼bergeben.\n \n bridge_not_configured=Es wird eine Bridge benÃ¶tigt.\n-type_description_missing=Typbeschreibung fÃ¼r ''{0}'' nicht gefunden, auch das Vorhandensein wurde vorher Ã¼berprÃ¼ft.\n-config_description_missing=Konfigurationsbeschreibung fÃ¼r ''{0}'' nicht gefunden, auch das Vorhandensein wurde vorher Ã¼berprÃ¼ft.\n-\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_he.properties b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_he.properties\nindex 0047c2555db..41f4b6ef97d 100644\n--- a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_he.properties\n+++ b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_he.properties\n@@ -13,6 +13,3 @@ options_violated=××¢×¨× {0} ××× × ×ª××× ×××¤×©×¨××××ª ××¤×¨×××¨\n multiple_limit_violated=×¨×§ {0} ×××× ××× ×××ª×¨×× ×× ×××× × {1}.\n \n bridge_not_configured=××××¨×ª ×××©×¨ ××× ××××.\n-type_description_missing=×¡×× ×ª××××¨ ×¢×××¨ ''{0}'' ×× × ××¦× ×× ×××§× × ××ª ×× ×××××ª ××¢××¨.\n-config_description_missing=×ª××××¨ ××ª×¦××¨× ×©× ''{0}'' ×× × ××¦× ×× ×××§× × ××ª ×× ×××××ª ××¢××¨.\n-\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_hu.properties b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_hu.properties\nindex 13308502ae6..3d2bdf1cc5c 100644\n--- a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_hu.properties\n+++ b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_hu.properties\n@@ -13,6 +13,3 @@ options_violated=A(z) {0} Ã©rtÃ©k nem egyezik a megengedett paramÃ©ter-beÃ¡llÃ­t\n multiple_limit_violated=Csak {0} elem engedÃ©lyezett, de {1} szerepel.\n \n bridge_not_configured=A hÃ­d beÃ¡llÃ­tÃ¡sa kÃ¶telezÅ.\n-type_description_missing=A {0} tÃ­pus leÃ­rÃ¡sa nem talÃ¡lhatÃ³ mÃ©g az elÅzmÃ©nyekben sem.\n-config_description_missing=A {0} beÃ¡llÃ­tÃ¡s leÃ­rÃ¡sa nem talÃ¡lhatÃ³ mÃ©g az elÅzmÃ©nyekben sem.\n-\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_it.properties b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_it.properties\nindex cbd65218bd9..c3e941a1a42 100644\n--- a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_it.properties\n+++ b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_it.properties\n@@ -13,6 +13,3 @@ options_violated=Il valore {0} non Ã¨ tra le opzioni consentite per il parametro\n multiple_limit_violated=Sono consentiti {0} elementi, ma ne sono stati forniti {1}.\n \n bridge_not_configured=Configurare un bridge Ã¨ obbligatorio.\n-type_description_missing=Descrizione del tipo per ''{0}'' non trovato anche se abbiamo prima controllato la presenza.\n-config_description_missing=Descrizione della configurazione per ''{0}'' non trovato anche se abbiamo prima controllato la presenza.\n-\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_no.properties b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_no.properties\nindex 03cb5ef14d0..0d20d68d8b7 100644\n--- a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_no.properties\n+++ b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_no.properties\n@@ -13,6 +13,3 @@ options_violated=Verdien {0} samsvarer ikke med tillatte parameteralternativer.\n multiple_limit_violated=Kun {0} elementer er tillatt mens {1} er angitt.\n \n bridge_not_configured=Konfigurasjon av en bro er obligatorisk.\n-type_description_missing=Typebeskivelsen for ''{0}'' ble ikke funnet, vi sjekket ogsÃ¥ tilstedevÃ¦relsen tidligere.\n-config_description_missing=Konfigurasjonsbeskrivelsen for ''{0}'' ble ikke funnet, vi sjekket ogsÃ¥ tilstedevÃ¦relsen tidligere.\n-\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_pl.properties b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_pl.properties\nindex 077b74545bd..5bc41d2c0de 100644\n--- a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_pl.properties\n+++ b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_pl.properties\n@@ -13,6 +13,3 @@ options_violated=WartoÅÄ {0} nie pasuje do dozwolonych opcji parametrÃ³w. Dozw\n multiple_limit_violated=Tylko {0} elementy sÄ dozwolone, ale {1} jest zapewniony.\n \n bridge_not_configured=Konfiguracja mostka jest obowiÄzkowa.\n-type_description_missing=Nie znaleziono opisu dla ''{0}'' rÃ³wnieÅ¼ sprawdzono wczeÅniejsze opisy.\n-config_description_missing=Nie znaleziono opisu konfiguracji dla ''{0}'' rÃ³wnieÅ¼ sprawdzono wczeÅniejsze opisy.\n-\n\ndiff --git a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_sl.properties b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_sl.properties\nindex 6e81dbf2794..c7d6d05b96f 100644\n--- a/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_sl.properties\n+++ b/bundles/org.openhab.core.config.core/src/main/resources/OH-INF/i18n/validation_sl.properties\n@@ -13,6 +13,3 @@ options_violated=Vrednost {0} se ne ujema z dovoljenimim izborom parametrov. Dov\n multiple_limit_violated=Dovoljenih je le {0} elementov, podanih pa je {1}.\n \n bridge_not_configured=Konfiguriranje mostu je obvezno.\n-type_description_missing=Opis vrste za ''{0}'' ni bil najden. Obstoj smo preverili tudi Å¾e prej.\n-config_description_missing=Opis konfiguracije za ''{0}'' ni bil najden. Obstoj smo preverili tudi Å¾e prej.\n-\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java\nindex eb3194fcd55..3322f845f0b 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingFactoryHelper.java\n@@ -144,7 +144,7 @@ private static Channel createChannel(ChannelDefinition channelDefinition, ThingU\n         return channelBuilder.withProperties(channelDefinition.getProperties()).build();\n     }\n \n-    static ChannelBuilder createChannelBuilder(ChannelUID channelUID, ChannelType channelType,\n+    public static ChannelBuilder createChannelBuilder(ChannelUID channelUID, ChannelType channelType,\n             ConfigDescriptionRegistry configDescriptionRegistry) {\n         final ChannelBuilder channelBuilder = ChannelBuilder.create(channelUID, channelType.getItemType()) //\n                 .withType(channelType.getUID()) //\n@@ -168,7 +168,7 @@ static ChannelBuilder createChannelBuilder(ChannelUID channelUID, ChannelType ch\n         return channelBuilder;\n     }\n \n-    static ChannelBuilder createChannelBuilder(ChannelUID channelUID, ChannelDefinition channelDefinition,\n+    public static ChannelBuilder createChannelBuilder(ChannelUID channelUID, ChannelDefinition channelDefinition,\n             ConfigDescriptionRegistry configDescriptionRegistry) {\n         ChannelType channelType = withChannelTypeRegistry(channelTypeRegistry -> (channelTypeRegistry != null)\n                 ? channelTypeRegistry.getChannelType(channelDefinition.getChannelTypeUID())\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingManagerImpl.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingManagerImpl.java\nindex 32a6b2a93b0..380e3cd998c 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingManagerImpl.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingManagerImpl.java\n@@ -186,8 +186,10 @@ public ThingManagerImpl( //\n             final @Reference StorageService storageService, //\n             final @Reference ThingRegistry thingRegistry,\n             final @Reference ThingStatusInfoI18nLocalizationService thingStatusInfoI18nLocalizationService,\n-            final @Reference ThingTypeRegistry thingTypeRegistry, final @Reference BundleResolver bundleResolver,\n-            final @Reference TranslationProvider translationProvider, final BundleContext bundleContext) {\n+            final @Reference ThingTypeRegistry thingTypeRegistry,\n+            final @Reference ThingUpdateInstructionReader thingUpdateInstructionReader,\n+            final @Reference BundleResolver bundleResolver, final @Reference TranslationProvider translationProvider,\n+            final BundleContext bundleContext) {\n         this.channelGroupTypeRegistry = channelGroupTypeRegistry;\n         this.channelTypeRegistry = channelTypeRegistry;\n         this.communicationManager = communicationManager;\n@@ -198,7 +200,7 @@ public ThingManagerImpl( //\n         this.readyService = readyService;\n         this.safeCaller = safeCaller;\n         this.thingRegistry = (ThingRegistryImpl) thingRegistry;\n-        this.thingUpdateInstructionReader = new ThingUpdateInstructionReader(bundleResolver);\n+        this.thingUpdateInstructionReader = thingUpdateInstructionReader;\n         this.thingStatusInfoI18nLocalizationService = thingStatusInfoI18nLocalizationService;\n         this.thingTypeRegistry = thingTypeRegistry;\n         this.translationProvider = translationProvider;\n@@ -404,13 +406,13 @@ public void thingUpdated(Thing oldThing, Thing newThing, ThingTrackerEvent thing\n         try {\n             normalizeThingConfiguration(oldThing);\n         } catch (ConfigValidationException e) {\n-            logger.warn(\"Failed to normalize configuration for thing '{}': {}\", oldThing.getUID(),\n+            logger.debug(\"Failed to normalize configuration for old thing during update '{}': {}\", oldThing.getUID(),\n                     e.getValidationMessages(null));\n         }\n         try {\n             normalizeThingConfiguration(newThing);\n         } catch (ConfigValidationException e) {\n-            logger.warn(\"Failed to normalize configurationÂ´for thing '{}': {}\", newThing.getUID(),\n+            logger.warn(\"Failed to normalize configuration for new thing during update '{}': {}\", newThing.getUID(),\n                     e.getValidationMessages(null));\n         }\n         if (thingUpdatedLock.contains(thingUID)) {\n@@ -661,23 +663,23 @@ private void normalizeThingConfiguration(Thing thing) throws ConfigValidationExc\n                     thing.getUID());\n             return;\n         }\n-        normalizeConfiguration(thingType, thing.getUID(), thing.getConfiguration());\n+        normalizeConfiguration(thingType, thing.getThingTypeUID(), thing.getUID(), thing.getConfiguration());\n \n         for (Channel channel : thing.getChannels()) {\n             ChannelTypeUID channelTypeUID = channel.getChannelTypeUID();\n             if (channelTypeUID != null) {\n                 ChannelType channelType = channelTypeRegistry.getChannelType(channelTypeUID);\n-                normalizeConfiguration(channelType, channel.getUID(), channel.getConfiguration());\n+                normalizeConfiguration(channelType, channelTypeUID, channel.getUID(), channel.getConfiguration());\n             }\n         }\n     }\n \n-    private void normalizeConfiguration(@Nullable AbstractDescriptionType prototype, UID targetUID,\n+    private void normalizeConfiguration(@Nullable AbstractDescriptionType prototype, UID prototypeUID, UID targetUID,\n             Configuration configuration) throws ConfigValidationException {\n         if (prototype == null) {\n             ConfigValidationMessage message = new ConfigValidationMessage(\"thing/channel\",\n-                    \"Type description for '{0}' not found although we checked the presence before.\",\n-                    \"type_description_missing\", targetUID.toString());\n+                    \"Type description {0} for {1} not found, although we checked the presence before.\",\n+                    \"type_description_missing\", prototypeUID.toString(), targetUID.toString());\n             throw new ConfigValidationException(bundleContext.getBundle(), translationProvider, List.of(message));\n         }\n \n@@ -691,8 +693,8 @@ private void normalizeConfiguration(@Nullable AbstractDescriptionType prototype,\n         ConfigDescription configDescription = configDescriptionRegistry.getConfigDescription(configDescriptionURI);\n         if (configDescription == null) {\n             ConfigValidationMessage message = new ConfigValidationMessage(\"thing/channel\",\n-                    \"Config description for '{0}' not found also we checked the presence before.\",\n-                    \"config_description_missing\", targetUID);\n+                    \"Config description {0} for {1} not found, although we checked the presence before.\",\n+                    \"config_description_missing\", configDescriptionURI.toString(), targetUID.toString());\n             throw new ConfigValidationException(bundleContext.getBundle(), translationProvider, List.of(message));\n         }\n \n@@ -1262,7 +1264,7 @@ public synchronized boolean isReady() {\n                 timesChecked++;\n                 if (timesChecked > MAX_CHECK_PREREQUISITE_TIME / CHECK_INTERVAL) {\n                     logger.warn(\n-                            \"Channel types or config descriptions for thing '{}' are missing in the respective registry for more than {}s. This should be fixed in the binding.\",\n+                            \"Channel types or config descriptions for thing '{}' are missing in the respective registry for more than {}s. In case it does not happen immediately after an upgrade, it should be fixed in the binding.\",\n                             thingUID, MAX_CHECK_PREREQUISITE_TIME);\n                     channelTypeUIDs.clear();\n                     configDescriptionUris.clear();\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateInstructionReader.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateInstructionReader.java\nindex 0ebe8949e6b..a56f104399b 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateInstructionReader.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateInstructionReader.java\n@@ -12,100 +12,23 @@\n  */\n package org.openhab.core.thing.internal.update;\n \n-import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.Comparator;\n-import java.util.Enumeration;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-import javax.xml.bind.JAXBContext;\n-import javax.xml.bind.JAXBException;\n-import javax.xml.bind.Unmarshaller;\n-\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.openhab.core.thing.ThingTypeUID;\n import org.openhab.core.thing.binding.ThingHandlerFactory;\n-import org.openhab.core.thing.internal.update.dto.XmlAddChannel;\n-import org.openhab.core.thing.internal.update.dto.XmlInstructionSet;\n-import org.openhab.core.thing.internal.update.dto.XmlRemoveChannel;\n-import org.openhab.core.thing.internal.update.dto.XmlThingType;\n-import org.openhab.core.thing.internal.update.dto.XmlUpdateChannel;\n-import org.openhab.core.thing.internal.update.dto.XmlUpdateDescriptions;\n-import org.openhab.core.util.BundleResolver;\n-import org.osgi.framework.Bundle;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n /**\n  * The {@link ThingUpdateInstructionReader} is used to read instructions for a given {@link ThingHandlerFactory} and\n- * * create a list of {@link ThingUpdateInstruction}s\n+ * create a list of {@link ThingUpdateInstruction}s\n  *\n  * @author Jan N. Klug - Initial contribution\n  */\n @NonNullByDefault\n-public class ThingUpdateInstructionReader {\n-    private final Logger logger = LoggerFactory.getLogger(ThingUpdateInstructionReader.class);\n-    private final BundleResolver bundleResolver;\n-\n-    public ThingUpdateInstructionReader(BundleResolver bundleResolver) {\n-        this.bundleResolver = bundleResolver;\n-    }\n-\n-    public Map<UpdateInstructionKey, List<ThingUpdateInstruction>> readForFactory(ThingHandlerFactory factory) {\n-        Bundle bundle = bundleResolver.resolveBundle(factory.getClass());\n-        if (bundle == null) {\n-            logger.error(\n-                    \"Could not get bundle for '{}', thing type updates will fail. If this occurs outside of tests, it is a bug.\",\n-                    factory.getClass());\n-            return Map.of();\n-        }\n-\n-        Map<UpdateInstructionKey, List<ThingUpdateInstruction>> updateInstructions = new HashMap<>();\n-        Enumeration<URL> entries = bundle.findEntries(\"OH-INF/update\", \"*.xml\", true);\n-        if (entries != null) {\n-            while (entries.hasMoreElements()) {\n-                URL url = entries.nextElement();\n-                try {\n-                    JAXBContext context = JAXBContext.newInstance(XmlUpdateDescriptions.class);\n-                    Unmarshaller u = context.createUnmarshaller();\n-                    XmlUpdateDescriptions updateDescriptions = (XmlUpdateDescriptions) u.unmarshal(url);\n-\n-                    for (XmlThingType thingType : updateDescriptions.getThingType()) {\n-                        ThingTypeUID thingTypeUID = new ThingTypeUID(thingType.getUid());\n-                        UpdateInstructionKey key = new UpdateInstructionKey(factory, thingTypeUID);\n-                        List<ThingUpdateInstruction> instructions = new ArrayList<>();\n-                        List<XmlInstructionSet> instructionSets = thingType.getInstructionSet().stream()\n-                                .sorted(Comparator.comparing(XmlInstructionSet::getTargetVersion)).toList();\n-                        for (XmlInstructionSet instructionSet : instructionSets) {\n-                            int targetVersion = instructionSet.getTargetVersion();\n-                            for (Object instruction : instructionSet.getInstructions()) {\n-                                if (instruction instanceof XmlAddChannel addChannelType) {\n-                                    instructions.add(new UpdateChannelInstructionImpl(targetVersion, addChannelType));\n-                                } else if (instruction instanceof XmlUpdateChannel updateChannelType) {\n-                                    instructions\n-                                            .add(new UpdateChannelInstructionImpl(targetVersion, updateChannelType));\n-                                } else if (instruction instanceof XmlRemoveChannel removeChannelType) {\n-                                    instructions\n-                                            .add(new RemoveChannelInstructionImpl(targetVersion, removeChannelType));\n-                                } else {\n-                                    logger.warn(\"Instruction type '{}' is unknown.\", instruction.getClass());\n-                                }\n-                            }\n-                        }\n-                        updateInstructions.put(key, instructions);\n-                    }\n-                    logger.trace(\"Reading update instructions from '{}'\", url.getPath());\n-                } catch (IllegalArgumentException | JAXBException e) {\n-                    logger.warn(\"Failed to parse update instructions from '{}':\", url, e);\n-                }\n-            }\n-        }\n-\n-        return updateInstructions;\n-    }\n+public interface ThingUpdateInstructionReader {\n+    Map<UpdateInstructionKey, List<ThingUpdateInstruction>> readForFactory(ThingHandlerFactory factory);\n \n-    public record UpdateInstructionKey(ThingHandlerFactory factory, ThingTypeUID thingTypeId) {\n+    record UpdateInstructionKey(ThingHandlerFactory factory, ThingTypeUID thingTypeId) {\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateInstructionReaderImpl.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateInstructionReaderImpl.java\nnew file mode 100644\nindex 00000000000..8cb809bd527\n--- /dev/null\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateInstructionReaderImpl.java\n@@ -0,0 +1,122 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.thing.internal.update;\n+\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.xml.bind.JAXBContext;\n+import javax.xml.bind.JAXBException;\n+import javax.xml.bind.Unmarshaller;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.openhab.core.config.core.ConfigDescriptionRegistry;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.binding.ThingHandlerFactory;\n+import org.openhab.core.thing.internal.update.dto.XmlAddChannel;\n+import org.openhab.core.thing.internal.update.dto.XmlInstructionSet;\n+import org.openhab.core.thing.internal.update.dto.XmlRemoveChannel;\n+import org.openhab.core.thing.internal.update.dto.XmlThingType;\n+import org.openhab.core.thing.internal.update.dto.XmlUpdateChannel;\n+import org.openhab.core.thing.internal.update.dto.XmlUpdateDescriptions;\n+import org.openhab.core.thing.type.ChannelTypeRegistry;\n+import org.openhab.core.util.BundleResolver;\n+import org.osgi.framework.Bundle;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link ThingUpdateInstructionReaderImpl} is an implementation of {@link ThingUpdateInstructionReader}\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@Component(service = ThingUpdateInstructionReader.class)\n+@NonNullByDefault\n+public class ThingUpdateInstructionReaderImpl implements ThingUpdateInstructionReader {\n+    private final Logger logger = LoggerFactory.getLogger(ThingUpdateInstructionReaderImpl.class);\n+    private final BundleResolver bundleResolver;\n+    private final ChannelTypeRegistry channelTypeRegistry;\n+    private final ConfigDescriptionRegistry configDescriptionRegistry;\n+\n+    @Activate\n+    public ThingUpdateInstructionReaderImpl(@Reference BundleResolver bundleResolver,\n+            @Reference ChannelTypeRegistry channelTypeRegistry,\n+            @Reference ConfigDescriptionRegistry configDescriptionRegistry) {\n+        this.bundleResolver = bundleResolver;\n+        this.channelTypeRegistry = channelTypeRegistry;\n+        this.configDescriptionRegistry = configDescriptionRegistry;\n+    }\n+\n+    @Override\n+    public Map<UpdateInstructionKey, List<ThingUpdateInstruction>> readForFactory(ThingHandlerFactory factory) {\n+        Bundle bundle = bundleResolver.resolveBundle(factory.getClass());\n+        if (bundle == null) {\n+            logger.error(\n+                    \"Could not get bundle for '{}', thing type updates will fail. If this occurs outside of tests, it is a bug.\",\n+                    factory.getClass());\n+            return Map.of();\n+        }\n+\n+        Map<UpdateInstructionKey, List<ThingUpdateInstruction>> updateInstructions = new HashMap<>();\n+        Enumeration<URL> entries = bundle.findEntries(\"OH-INF/update\", \"*.xml\", true);\n+        if (entries != null) {\n+            while (entries.hasMoreElements()) {\n+                URL url = entries.nextElement();\n+                try {\n+                    JAXBContext context = JAXBContext.newInstance(XmlUpdateDescriptions.class);\n+                    Unmarshaller u = context.createUnmarshaller();\n+                    XmlUpdateDescriptions updateDescriptions = (XmlUpdateDescriptions) u.unmarshal(url);\n+\n+                    for (XmlThingType thingType : updateDescriptions.getThingType()) {\n+                        ThingTypeUID thingTypeUID = new ThingTypeUID(thingType.getUid());\n+                        UpdateInstructionKey key = new UpdateInstructionKey(factory, thingTypeUID);\n+                        List<ThingUpdateInstruction> instructions = new ArrayList<>();\n+                        List<XmlInstructionSet> instructionSets = thingType.getInstructionSet().stream()\n+                                .sorted(Comparator.comparing(XmlInstructionSet::getTargetVersion)).toList();\n+                        for (XmlInstructionSet instructionSet : instructionSets) {\n+                            int targetVersion = instructionSet.getTargetVersion();\n+                            for (Object instruction : instructionSet.getInstructions()) {\n+                                if (instruction instanceof XmlAddChannel addChannelType) {\n+                                    instructions.add(new UpdateChannelInstructionImpl(targetVersion, addChannelType,\n+                                            channelTypeRegistry, configDescriptionRegistry));\n+                                } else if (instruction instanceof XmlUpdateChannel updateChannelType) {\n+                                    instructions.add(new UpdateChannelInstructionImpl(targetVersion, updateChannelType,\n+                                            channelTypeRegistry, configDescriptionRegistry));\n+                                } else if (instruction instanceof XmlRemoveChannel removeChannelType) {\n+                                    instructions\n+                                            .add(new RemoveChannelInstructionImpl(targetVersion, removeChannelType));\n+                                } else {\n+                                    logger.warn(\"Instruction type '{}' is unknown.\", instruction.getClass());\n+                                }\n+                            }\n+                        }\n+                        updateInstructions.put(key, instructions);\n+                    }\n+                    logger.trace(\"Reading update instructions from '{}'\", url.getPath());\n+                } catch (IllegalArgumentException | JAXBException e) {\n+                    logger.warn(\"Failed to parse update instructions from '{}':\", url, e);\n+                }\n+            }\n+        }\n+\n+        return updateInstructions;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/UpdateChannelInstructionImpl.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/UpdateChannelInstructionImpl.java\nindex 7433ad9f0f3..88c26aae26a 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/UpdateChannelInstructionImpl.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/update/UpdateChannelInstructionImpl.java\n@@ -19,14 +19,20 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.config.core.ConfigDescriptionRegistry;\n import org.openhab.core.thing.Channel;\n import org.openhab.core.thing.ChannelUID;\n import org.openhab.core.thing.Thing;\n import org.openhab.core.thing.binding.builder.ChannelBuilder;\n import org.openhab.core.thing.binding.builder.ThingBuilder;\n+import org.openhab.core.thing.internal.ThingFactoryHelper;\n import org.openhab.core.thing.internal.update.dto.XmlAddChannel;\n import org.openhab.core.thing.internal.update.dto.XmlUpdateChannel;\n+import org.openhab.core.thing.type.ChannelType;\n+import org.openhab.core.thing.type.ChannelTypeRegistry;\n import org.openhab.core.thing.type.ChannelTypeUID;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * The {@link UpdateChannelInstructionImpl} implements a {@link ThingUpdateInstruction} that updates a channel of a\n@@ -36,40 +42,49 @@\n  */\n @NonNullByDefault\n public class UpdateChannelInstructionImpl implements ThingUpdateInstruction {\n+    private final Logger logger = LoggerFactory.getLogger(UpdateChannelInstructionImpl.class);\n     private final boolean removeOldChannel;\n     private final int thingTypeVersion;\n     private final boolean preserveConfig;\n     private final List<String> groupIds;\n     private final String channelId;\n-    private final String channelTypeUid;\n+    private final ChannelTypeUID channelTypeUid;\n     private final @Nullable String label;\n     private final @Nullable String description;\n     private final @Nullable List<String> tags;\n+    private final ChannelTypeRegistry channelTypeRegistry;\n+    private final ConfigDescriptionRegistry configDescriptionRegistry;\n \n-    UpdateChannelInstructionImpl(int thingTypeVersion, XmlUpdateChannel updateChannel) {\n+    UpdateChannelInstructionImpl(int thingTypeVersion, XmlUpdateChannel updateChannel,\n+            ChannelTypeRegistry channelTypeRegistry, ConfigDescriptionRegistry configDescriptionRegistry) {\n         this.removeOldChannel = true;\n         this.thingTypeVersion = thingTypeVersion;\n         this.channelId = updateChannel.getId();\n-        this.channelTypeUid = updateChannel.getType();\n+        this.channelTypeUid = new ChannelTypeUID(updateChannel.getType());\n         String rawGroupIds = updateChannel.getGroupIds();\n         this.groupIds = rawGroupIds != null ? Arrays.asList(rawGroupIds.split(\",\")) : List.of();\n         this.label = updateChannel.getLabel();\n         this.description = updateChannel.getDescription();\n         this.tags = updateChannel.getTags();\n         this.preserveConfig = updateChannel.isPreserveConfiguration();\n+        this.channelTypeRegistry = channelTypeRegistry;\n+        this.configDescriptionRegistry = configDescriptionRegistry;\n     }\n \n-    UpdateChannelInstructionImpl(int thingTypeVersion, XmlAddChannel addChannel) {\n+    UpdateChannelInstructionImpl(int thingTypeVersion, XmlAddChannel addChannel,\n+            ChannelTypeRegistry channelTypeRegistry, ConfigDescriptionRegistry configDescriptionRegistry) {\n         this.removeOldChannel = false;\n         this.thingTypeVersion = thingTypeVersion;\n         this.channelId = addChannel.getId();\n-        this.channelTypeUid = addChannel.getType();\n+        this.channelTypeUid = new ChannelTypeUID(addChannel.getType());\n         String rawGroupIds = addChannel.getGroupIds();\n         this.groupIds = rawGroupIds != null ? Arrays.asList(rawGroupIds.split(\",\")) : List.of();\n         this.label = addChannel.getLabel();\n         this.description = addChannel.getDescription();\n         this.tags = addChannel.getTags();\n         this.preserveConfig = false;\n+        this.channelTypeRegistry = channelTypeRegistry;\n+        this.configDescriptionRegistry = configDescriptionRegistry;\n     }\n \n     @Override\n@@ -79,6 +94,7 @@ public int getThingTypeVersion() {\n \n     @Override\n     public void perform(Thing thing, ThingBuilder thingBuilder) {\n+        logger.debug(\"Applying {} to thing '{}'\", this, thing.getUID());\n         if (groupIds.isEmpty()) {\n             doChannel(thing, thingBuilder, new ChannelUID(thing.getUID(), channelId));\n         } else {\n@@ -92,8 +108,15 @@ private void doChannel(Thing thing, ThingBuilder thingBuilder, ChannelUID affect\n             thingBuilder.withoutChannel(affectedChannelUid);\n         }\n \n-        ChannelBuilder channelBuilder = ChannelBuilder.create(affectedChannelUid)\n-                .withType(new ChannelTypeUID(channelTypeUid));\n+        ChannelType channelType = channelTypeRegistry.getChannelType(channelTypeUid);\n+        if (channelType == null) {\n+            logger.error(\"Failed to create channel '{}' because channel type '{}' could not be found.\",\n+                    affectedChannelUid, channelTypeUid);\n+            return;\n+        }\n+\n+        ChannelBuilder channelBuilder = ThingFactoryHelper.createChannelBuilder(affectedChannelUid, channelType,\n+                configDescriptionRegistry);\n \n         if (preserveConfig) {\n             Channel oldChannel = thing.getChannel(affectedChannelUid);\n@@ -115,4 +138,12 @@ private void doChannel(Thing thing, ThingBuilder thingBuilder, ChannelUID affect\n \n         thingBuilder.withChannel(channelBuilder.build());\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"UpdateChannelInstructionImpl{\" + \"removeOldChannel=\" + removeOldChannel + \", thingTypeVersion=\"\n+                + thingTypeVersion + \", preserveConfig=\" + preserveConfig + \", groupIds=\" + groupIds + \", channelId='\"\n+                + channelId + \"'\" + \", channelTypeUid=\" + channelTypeUid + \", label='\" + label + \"'\" + \", description='\"\n+                + description + \"'\" + \", tags=\" + tags + \"}\";\n+    }\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/internal/ThingManagerImplTest.java b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/internal/ThingManagerImplTest.java\nindex 861cd7728d1..bf635ce2c29 100644\n--- a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/internal/ThingManagerImplTest.java\n+++ b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/internal/ThingManagerImplTest.java\n@@ -41,6 +41,7 @@\n import org.openhab.core.thing.binding.ThingHandlerFactory;\n import org.openhab.core.thing.i18n.ThingStatusInfoI18nLocalizationService;\n import org.openhab.core.thing.internal.ThingTracker.ThingTrackerEvent;\n+import org.openhab.core.thing.internal.update.ThingUpdateInstructionReader;\n import org.openhab.core.thing.link.ItemChannelLinkRegistry;\n import org.openhab.core.thing.type.ChannelGroupTypeRegistry;\n import org.openhab.core.thing.type.ChannelTypeRegistry;\n@@ -72,6 +73,7 @@ public class ThingManagerImplTest extends JavaTest {\n     private @Mock @NonNullByDefault({}) Thing thingMock;\n     private @Mock @NonNullByDefault({}) ThingRegistryImpl thingRegistryMock;\n     private @Mock @NonNullByDefault({}) BundleResolver bundleResolverMock;\n+    private @Mock @NonNullByDefault({}) ThingUpdateInstructionReader thingUpdateInstructionReaderMock;\n     private @Mock @NonNullByDefault({}) TranslationProvider translationProviderMock;\n     private @Mock @NonNullByDefault({}) BundleContext bundleContextMock;\n     private @Mock @NonNullByDefault({}) ThingType thingTypeMock;\n@@ -92,8 +94,8 @@ private ThingManagerImpl createThingManager() {\n         return new ThingManagerImpl(channelGroupTypeRegistryMock, channelTypeRegistryMock, communicationManagerMock,\n                 configDescriptionRegistryMock, configDescriptionValidatorMock, eventPublisherMock,\n                 itemChannelLinkRegistryMock, readyServiceMock, safeCallerMock, storageServiceMock, thingRegistryMock,\n-                thingStatusInfoI18nLocalizationService, thingTypeRegistryMock, bundleResolverMock,\n-                translationProviderMock, bundleContextMock);\n+                thingStatusInfoI18nLocalizationService, thingTypeRegistryMock, thingUpdateInstructionReaderMock,\n+                bundleResolverMock, translationProviderMock, bundleContextMock);\n     }\n \n     @Test\n\ndiff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateOSGiTest.java\nindex 18a3f616d4b..b0c698c7812 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/update/ThingUpdateOSGiTest.java\n@@ -69,7 +69,7 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * Tests for {@link ThingUpdateInstructionReader} and {@link ThingUpdateInstruction} implementations.\n+ * Tests for {@link ThingUpdateInstructionReaderImpl} and {@link ThingUpdateInstruction} implementations.\n  *\n  * @author Jan N. Klug - Initial contribution\n  */\n@@ -149,14 +149,14 @@ public void testSingleChannelAddition() {\n         assertThat(updatedThing.getChannels(), hasSize(3));\n \n         Channel channel1 = updatedThing.getChannel(\"testChannel1\");\n-        assertChannel(channel1, channelTypeUID, null, null);\n+        assertChannel(channel1, channelTypeUID, \"Switch\", \"typeLabel\", null);\n \n         Channel channel2 = updatedThing.getChannel(\"testChannel2\");\n-        assertChannel(channel2, channelTypeUID, \"Test Label\", null);\n+        assertChannel(channel2, channelTypeUID, \"Switch\", \"Test Label\", null);\n         assertThat(channel2.getDefaultTags(), containsInAnyOrder(ADDED_TAGS));\n \n         Channel channel3 = updatedThing.getChannel(\"testChannel3\");\n-        assertChannel(channel3, channelTypeUID, \"Test Label\", \"Test Description\");\n+        assertChannel(channel3, channelTypeUID, \"Switch\", \"Test Label\", \"Test Description\");\n     }\n \n     @Test\n@@ -186,11 +186,11 @@ public void testSingleChannelUpdate() {\n         assertThat(updatedThing.getChannels(), hasSize(2));\n \n         Channel channel1 = updatedThing.getChannel(channelUID1);\n-        assertChannel(channel1, channelTypeNewUID, \"New Test Label\", null);\n+        assertChannel(channel1, channelTypeNewUID, \"Number\", \"New Test Label\", null);\n         assertThat(channel1.getConfiguration(), is(channelConfig));\n \n         Channel channel2 = updatedThing.getChannel(channelUID2);\n-        assertChannel(channel2, channelTypeNewUID, null, null);\n+        assertChannel(channel2, channelTypeNewUID, \"Number\", \"typeLabel\", null);\n         assertThat(channel2.getConfiguration().getProperties(), is(anEmptyMap()));\n     }\n \n@@ -235,10 +235,10 @@ public void testMultipleChannelUpdates() {\n         assertThat(updatedThing.getChannels(), hasSize(2));\n \n         Channel channel1 = updatedThing.getChannel(\"testChannel1\");\n-        assertChannel(channel1, channelTypeNewUID, \"Test Label\", null);\n+        assertChannel(channel1, channelTypeNewUID, \"Number\", \"Test Label\", null);\n \n         Channel channel2 = updatedThing.getChannel(\"testChannel2\");\n-        assertChannel(channel2, channelTypeOldUID, \"TestLabel\", null);\n+        assertChannel(channel2, channelTypeOldUID, \"Switch\", \"TestLabel\", null);\n     }\n \n     @Test\n@@ -253,8 +253,10 @@ public void testOnlyMatchingInstructionsUpdate() {\n         ChannelUID channelUID1 = new ChannelUID(thingUID, \"testChannel1\");\n \n         Thing thing = ThingBuilder.create(MULTIPLE_CHANNEL_THING_TYPE_UID, thingUID)\n-                .withChannel(ChannelBuilder.create(channelUID0).withType(channelTypeOldUID).build())\n-                .withChannel(ChannelBuilder.create(channelUID1).withType(channelTypeOldUID).build())\n+                .withChannel(ChannelBuilder.create(channelUID0).withType(channelTypeOldUID)\n+                        .withAcceptedItemType(\"Switch\").build())\n+                .withChannel(ChannelBuilder.create(channelUID1).withType(channelTypeOldUID)\n+                        .withAcceptedItemType(\"Switch\").build())\n                 .withProperty(PROPERTY_THING_TYPE_VERSION, \"2\").build();\n \n         managedThingProvider.add(thing);\n@@ -263,7 +265,7 @@ public void testOnlyMatchingInstructionsUpdate() {\n         assertThat(updatedThing.getChannels(), hasSize(1));\n \n         Channel channel1 = updatedThing.getChannel(\"testChannel1\");\n-        assertChannel(channel1, channelTypeOldUID, null, null);\n+        assertChannel(channel1, channelTypeOldUID, \"Switch\", null, null);\n     }\n \n     @Test\n@@ -283,11 +285,11 @@ public void testSingleChannelAdditionGroup() {\n \n         List<Channel> channels1 = updatedThing.getChannelsOfGroup(\"group1\");\n         assertThat(channels1, hasSize(1));\n-        assertChannel(channels1.get(0), channelTypeUID, null, null);\n+        assertChannel(channels1.get(0), channelTypeUID, \"Switch\", \"typeLabel\", null);\n \n         List<Channel> channels2 = updatedThing.getChannelsOfGroup(\"group2\");\n         assertThat(channels2, hasSize(1));\n-        assertChannel(channels2.get(0), channelTypeUID, null, null);\n+        assertChannel(channels2.get(0), channelTypeUID, \"Switch\", \"typeLabel\", null);\n     }\n \n     @Test\n@@ -328,10 +330,11 @@ private Thing assertThing(Thing oldThing, int expectedNewThingTypeVersion) {\n         return updatedThing;\n     }\n \n-    private void assertChannel(@Nullable Channel channel, ChannelTypeUID channelTypeUID, @Nullable String label,\n-            @Nullable String description) {\n+    private void assertChannel(@Nullable Channel channel, ChannelTypeUID channelTypeUID, String expectedItemType,\n+            @Nullable String label, @Nullable String description) {\n         assertThat(channel, is(notNullValue()));\n         assertThat(channel.getChannelTypeUID(), is(channelTypeUID));\n+        assertThat(channel.getAcceptedItemType(), is(expectedItemType));\n         if (label != null) {\n             assertThat(channel.getLabel(), is(label));\n         } else {\n@@ -361,7 +364,8 @@ private void registerChannelTypes(ChannelTypeUID... channelTypeUIDs) {\n         ChannelTypeRegistry channelTypeRegistry = mock(ChannelTypeRegistry.class);\n \n         for (ChannelTypeUID channelTypeUID : channelTypeUIDs) {\n-            ChannelType channelType = ChannelTypeBuilder.state(channelTypeUID, \"label\", \"Number\").build();\n+            String itemType = channelTypeUID.getId().contains(\"New\") ? \"Number\" : \"Switch\";\n+            ChannelType channelType = ChannelTypeBuilder.state(channelTypeUID, \"typeLabel\", itemType).build();\n             when(channelTypeProvider.getChannelType(eq(channelTypeUID), nullable(Locale.class)))\n                     .thenReturn(channelType);\n             when(channelTypeRegistry.getChannelType(eq(channelTypeUID))).thenReturn(channelType);\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3573",
    "pr_id": 3573,
    "issue_id": 3544,
    "repo": "openhab/openhab-core",
    "problem_statement": "[ephemeris] Upgrade/replace Jollyday\nJollyday used by Ephemeris seems abandoned years ago:\r\nhttps://github.com/svendiedrichsen/jollyday\r\n\r\nFortunately the project was picked up and continued here:\r\nhttps://github.com/focus-shift/jollyday\r\n\r\nSee svendiedrichsen/jollyday#72\r\n\r\nThis seems almost like a drop-in replacement.\r\n\r\nReplacing the library would give several benefits, for example updated holidays for 70 countries that would be bundled with the distribution. The current situation is that users need to maintain national holidays by themselves. As an example, one of the Danish holidays has been eliminated, starting next year (**GENERAL_PRAYER_DAY** in the XML below). So if I understand this correctly, I must now create my own file:\r\n\r\n/etc/openhab/services/Holidays_dk.xml:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<tns:Configuration hierarchy=\"dk\" description=\"Denmark\"\r\n        xmlns:tns=\"http://www.example.org/Holiday\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xsi:schemaLocation=\"http://www.example.org/Holiday /Holiday.xsd\">\r\n        <tns:Holidays>\r\n                <tns:Fixed month=\"JANUARY\" day=\"1\" descriptionPropertiesKey=\"NEW_YEAR\" />\r\n                <tns:Fixed month=\"DECEMBER\" day=\"25\"\r\n                        descriptionPropertiesKey=\"CHRISTMAS\" />\r\n                <tns:Fixed month=\"DECEMBER\" day=\"26\"\r\n                        descriptionPropertiesKey=\"STEPHENS\" />\r\n                <tns:ChristianHoliday type=\"EASTER\" />\r\n                <tns:ChristianHoliday type=\"MAUNDY_THURSDAY\" />\r\n                <tns:ChristianHoliday type=\"GOOD_FRIDAY\" />\r\n                <tns:ChristianHoliday type=\"EASTER_MONDAY\" />\r\n                <tns:ChristianHoliday type=\"GENERAL_PRAYER_DAY\" validTo=\"2023\" />\r\n                <tns:ChristianHoliday type=\"ASCENSION_DAY\" />\r\n                <tns:ChristianHoliday type=\"WHIT_MONDAY\" />\r\n                <tns:ChristianHoliday type=\"PENTECOST\" />\r\n        </tns:Holidays>\r\n</tns:Configuration>\r\n```\r\n\r\nand directly reference this file in all rules:\r\n\r\n```java\r\nvar dt1 = ZonedDateTime.of(2023, 5, 5, 0, 0, 0, 0, ZoneId.systemDefault())\r\nvar dt2 = ZonedDateTime.of(2024, 4, 26, 0, 0, 0, 0, ZoneId.systemDefault())\r\nlogInfo(\"Ephemeris\", \"Store Bededag 2023: \" + Ephemeris.isBankHoliday(dt1, \"/etc/openhab/services/Holidays_dk.xml\").toString)\r\nlogInfo(\"Ephemeris\", \"Store Bededag 2024: \" + Ephemeris.isBankHoliday(dt2, \"/etc/openhab/services/Holidays_dk.xml\").toString)\r\n```\r\n",
    "issue_word_count": 281,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.ephemeris/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImpl.java",
      "bundles/org.openhab.core.ephemeris/src/main/resources/jollyday/holidays/Holidays_dk.xml",
      "itests/org.openhab.core.ephemeris.tests/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImplOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.ephemeris.tests/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImplOSGiTest.java"
    ],
    "base_commit": "cdab53b814c08380bba52a3f5f31543117be52cb",
    "head_commit": "d2b82850e19c462c15fa0f1c408ab2b258728838",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3573",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3573",
    "dockerfile": "",
    "pr_merged_at": "2023-05-02T07:11:59.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.ephemeris/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImpl.java b/bundles/org.openhab.core.ephemeris/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImpl.java\nindex ab27188f319..65b9b8bf9d0 100644\n--- a/bundles/org.openhab.core.ephemeris/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImpl.java\n+++ b/bundles/org.openhab.core.ephemeris/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImpl.java\n@@ -46,8 +46,8 @@\n import org.openhab.core.ephemeris.EphemerisManager;\n import org.openhab.core.i18n.LocaleProvider;\n import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n import org.osgi.framework.Constants;\n-import org.osgi.framework.FrameworkUtil;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n import org.osgi.service.component.annotations.Modified;\n@@ -59,6 +59,7 @@\n import de.jollyday.HolidayManager;\n import de.jollyday.ManagerParameter;\n import de.jollyday.ManagerParameters;\n+import de.jollyday.parameter.CalendarPartManagerParameter;\n import de.jollyday.util.ResourceUtil;\n \n /**\n@@ -82,7 +83,9 @@ public class EphemerisManagerImpl implements EphemerisManager, ConfigOptionProvi\n     public static final String CONFIG_REGION = \"region\";\n     public static final String CONFIG_CITY = \"city\";\n \n-    private static final String JOLLYDAY_COUNTRY_DESCRIPTIONS = \"jollyday/descriptions/country_descriptions.properties\";\n+    private static final String RESOURCES_ROOT = \"jollyday/\";\n+    private static final String JOLLYDAY_COUNTRY_DESCRIPTIONS = RESOURCES_ROOT\n+            + \"descriptions/country_descriptions.properties\";\n     private static final String PROPERTY_COUNTRY_DESCRIPTION_PREFIX = \"country.description.\";\n     private static final String PROPERTY_COUNTRY_DESCRIPTION_DELIMITER = \"\\\\.\";\n \n@@ -99,15 +102,16 @@ public class EphemerisManagerImpl implements EphemerisManager, ConfigOptionProvi\n     private final ResourceUtil resourceUtil = new ResourceUtil();\n \n     private final LocaleProvider localeProvider;\n+    private final Bundle bundle;\n \n     private @NonNullByDefault({}) String country;\n     private @Nullable String region;\n \n     @Activate\n-    public EphemerisManagerImpl(final @Reference LocaleProvider localeProvider) {\n+    public EphemerisManagerImpl(final @Reference LocaleProvider localeProvider, final BundleContext bundleContext) {\n         this.localeProvider = localeProvider;\n+        bundle = bundleContext.getBundle();\n \n-        final Bundle bundle = FrameworkUtil.getBundle(getClass());\n         try (InputStream stream = bundle.getResource(JOLLYDAY_COUNTRY_DESCRIPTIONS).openStream()) {\n             final Properties properties = new Properties();\n             properties.load(stream);\n@@ -164,23 +168,26 @@ protected void modified(Map<String, Object> config) {\n             }\n         });\n \n-        if (config.containsKey(CONFIG_COUNTRY)) {\n-            country = config.get(CONFIG_COUNTRY).toString().toLowerCase();\n+        Object configValue = config.get(CONFIG_COUNTRY);\n+        if (configValue != null) {\n+            country = configValue.toString().toLowerCase();\n         } else {\n             country = localeProvider.getLocale().getCountry().toLowerCase();\n             logger.debug(\"Using system default country '{}' \", country);\n         }\n \n-        if (config.containsKey(CONFIG_REGION)) {\n-            String region = config.get(CONFIG_REGION).toString().toLowerCase();\n+        configValue = config.get(CONFIG_REGION);\n+        if (configValue != null) {\n+            String region = configValue.toString().toLowerCase();\n             countryParameters.add(region);\n             this.region = region;\n         } else {\n             this.region = null;\n         }\n \n-        if (config.containsKey(CONFIG_CITY)) {\n-            countryParameters.add(config.get(CONFIG_CITY).toString());\n+        configValue = config.get(CONFIG_CITY);\n+        if (configValue != null) {\n+            countryParameters.add(configValue.toString());\n         }\n     }\n \n@@ -231,9 +238,16 @@ private URL getUrl(String filename) throws FileNotFoundException {\n     private HolidayManager getHolidayManager(Object managerKey) {\n         HolidayManager holidayManager = holidayManagers.get(managerKey);\n         if (holidayManager == null) {\n-            final ManagerParameter parameters = managerKey.getClass() == String.class\n-                    ? ManagerParameters.create((String) managerKey)\n-                    : ManagerParameters.create((URL) managerKey);\n+            final ManagerParameter parameters;\n+            if (managerKey instanceof String stringKey) {\n+                URL urlOverride = bundle\n+                        .getResource(RESOURCES_ROOT + CalendarPartManagerParameter.getConfigurationFileName(stringKey));\n+                parameters = urlOverride != null //\n+                        ? ManagerParameters.create(urlOverride)\n+                        : ManagerParameters.create(stringKey);\n+            } else {\n+                parameters = ManagerParameters.create((URL) managerKey);\n+            }\n             holidayManager = HolidayManager.getInstance(parameters);\n             holidayManagers.put(managerKey, holidayManager);\n         }\n@@ -297,9 +311,10 @@ public boolean isWeekend(ZonedDateTime date) {\n \n     @Override\n     public boolean isInDayset(String daysetName, ZonedDateTime date) {\n-        if (daysets.containsKey(daysetName)) {\n+        Set<DayOfWeek> dayset = daysets.get(daysetName);\n+        if (dayset != null) {\n             DayOfWeek dow = date.getDayOfWeek();\n-            return daysets.get(daysetName).contains(dow);\n+            return dayset.contains(dow);\n         } else {\n             logger.warn(\"This dayset is not configured : {}\", daysetName);\n             return false;\n@@ -381,8 +396,9 @@ void parseProperty(Object key, Object value) throws IllegalArgumentException {\n             case 2:\n                 part = getValidPart(parts[0]);\n                 option = new ParameterOption(getValidPart(parts[1]), name);\n-                if (regions.containsKey(part)) {\n-                    regions.get(part).add(option);\n+                List<ParameterOption> regionsPart = regions.get(part);\n+                if (regionsPart != null) {\n+                    regionsPart.add(option);\n                 } else {\n                     final List<ParameterOption> options = new ArrayList<>();\n                     options.add(option);\n@@ -392,8 +408,9 @@ void parseProperty(Object key, Object value) throws IllegalArgumentException {\n             case 3:\n                 part = getValidPart(parts[1]);\n                 option = new ParameterOption(getValidPart(parts[2]), name);\n-                if (cities.containsKey(part)) {\n-                    cities.get(part).add(option);\n+                List<ParameterOption> citiesPart = cities.get(part);\n+                if (citiesPart != null) {\n+                    citiesPart.add(option);\n                 } else {\n                     final List<ParameterOption> options = new ArrayList<>();\n                     options.add(option);\n\ndiff --git a/bundles/org.openhab.core.ephemeris/src/main/resources/jollyday/holidays/Holidays_dk.xml b/bundles/org.openhab.core.ephemeris/src/main/resources/jollyday/holidays/Holidays_dk.xml\nnew file mode 100644\nindex 00000000000..e7510def3c3\n--- /dev/null\n+++ b/bundles/org.openhab.core.ephemeris/src/main/resources/jollyday/holidays/Holidays_dk.xml\n@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<tns:Configuration hierarchy=\"dk\" description=\"Denmark\" xmlns:tns=\"http://www.example.org/Holiday\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.example.org/Holiday /Holiday.xsd\">\n+\t<tns:Holidays>\n+\t\t<tns:Fixed month=\"JANUARY\" day=\"1\" descriptionPropertiesKey=\"NEW_YEAR\"/>\n+\t\t<tns:Fixed month=\"DECEMBER\" day=\"25\" descriptionPropertiesKey=\"CHRISTMAS\"/>\n+\t\t<tns:Fixed month=\"DECEMBER\" day=\"26\" descriptionPropertiesKey=\"STEPHENS\"/>\n+\t\t<tns:ChristianHoliday type=\"EASTER\"/>\n+\t\t<tns:ChristianHoliday type=\"MAUNDY_THURSDAY\"/>\n+\t\t<tns:ChristianHoliday type=\"GOOD_FRIDAY\"/>\n+\t\t<tns:ChristianHoliday type=\"EASTER_MONDAY\"/>\n+\t\t<tns:ChristianHoliday type=\"GENERAL_PRAYER_DAY\" validTo=\"2023\"/>\n+\t\t<tns:ChristianHoliday type=\"ASCENSION_DAY\"/>\n+\t\t<tns:ChristianHoliday type=\"WHIT_MONDAY\"/>\n+\t\t<tns:ChristianHoliday type=\"PENTECOST\"/>\n+\t</tns:Holidays>\n+</tns:Configuration>\n",
    "test_patch": "diff --git a/itests/org.openhab.core.ephemeris.tests/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImplOSGiTest.java b/itests/org.openhab.core.ephemeris.tests/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImplOSGiTest.java\nindex 5f086250f77..5a95b81b8d0 100644\n--- a/itests/org.openhab.core.ephemeris.tests/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImplOSGiTest.java\n+++ b/itests/org.openhab.core.ephemeris.tests/src/main/java/org/openhab/core/ephemeris/internal/EphemerisManagerImplOSGiTest.java\n@@ -47,6 +47,7 @@\n public class EphemerisManagerImplOSGiTest extends JavaOSGiTest {\n     private static final String INTERNAL_DAYSET = \"internal\";\n     private static final URI CONFIG_URI = URI.create(\"system:ephemeris\");\n+    private static final String COUNTRY_DENMARK_KEY = \"dk\";\n     private static final String COUNTRY_AUSTRALIA_KEY = \"au\";\n     private static final String COUNTRY_AUSTRALIA_NAME = \"Australia\";\n     private static final String REGION_BAVARIA_KEY = \"by\";\n@@ -263,6 +264,20 @@ public void testIsBankHoliday() {\n         assertFalse(vacation);\n     }\n \n+    @Test\n+    public void testIsBankHolidayWhenGeneralPrayerDay2023() {\n+        ZonedDateTime generalPrayerDay = ZonedDateTime.of(2023, 05, 05, 0, 0, 0, 0, ZoneId.of(\"Europe/Paris\"));\n+        ephemerisManager.modified(Map.of(CONFIG_COUNTRY, COUNTRY_DENMARK_KEY));\n+        assertTrue(ephemerisManager.isBankHoliday(generalPrayerDay));\n+    }\n+\n+    @Test\n+    public void testIsBankHolidayWhenGeneralPrayerDay2024() {\n+        ZonedDateTime generalPrayerDay = ZonedDateTime.of(2024, 04, 26, 0, 0, 0, 0, ZoneId.of(\"Europe/Paris\"));\n+        ephemerisManager.modified(Map.of(CONFIG_COUNTRY, COUNTRY_DENMARK_KEY));\n+        assertFalse(ephemerisManager.isBankHoliday(generalPrayerDay));\n+    }\n+\n     @Test\n     public void testGetBankHoliday() {\n         ZonedDateTime theDay = ZonedDateTime.of(2019, 01, 01, 0, 0, 0, 0, ZoneId.of(\"Europe/Paris\"));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3567",
    "pr_id": 3567,
    "issue_id": 3262,
    "repo": "openhab/openhab-core",
    "problem_statement": "Remove deprecated `VoiceManager` methods\nIn #3142 several [VoiceManager](https://github.com/openhab/openhab-core/blob/main/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java) methods were deprecated in favor of using a context.\r\nSee also the [Deprecated API JavaDoc page](https://www.openhab.org/javadoc/latest/deprecated-list.html).\r\n\r\nIt would be nice when these deprecated methods are removed in OH4. \r\nMaybe @GiviMad can help with this?\r\n\r\n",
    "issue_word_count": 73,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java",
      "bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java"
    ],
    "base_commit": "da5ac36a68903b9fb98163f7cf746fb2ab94c759",
    "head_commit": "47e08c3a04f10a9c4aab08531d389ab432620114",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3567",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3567",
    "dockerfile": "",
    "pr_merged_at": "2023-04-21T21:05:10.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java\nindex 9abb3fc48e8..86ba0b8c04e 100644\n--- a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java\n+++ b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java\n@@ -14,12 +14,10 @@\n \n import java.util.Collection;\n import java.util.List;\n-import java.util.Locale;\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n-import org.openhab.core.audio.AudioSink;\n import org.openhab.core.audio.AudioSource;\n import org.openhab.core.library.types.PercentType;\n import org.openhab.core.voice.text.HumanLanguageInterpreter;\n@@ -137,73 +135,6 @@ public interface VoiceManager {\n     @Nullable\n     DialogContext getLastDialogContext();\n \n-    /**\n-     * Starts an infinite dialog sequence using all default services: keyword spotting on the default audio source,\n-     * audio source listening to retrieve a question or a command (default Speech to Text service), interpretation and\n-     * handling of the command, and finally playback of the answer on the default audio sink (default Text to Speech\n-     * service).\n-     *\n-     * Only one dialog can be started for the default audio source.\n-     *\n-     * @throws IllegalStateException if required services are not all available or the default locale is not supported\n-     *             by all these services or a dialog is already started for the default audio source\n-     */\n-    @Deprecated\n-    void startDialog() throws IllegalStateException;\n-\n-    /**\n-     * Starts an infinite dialog sequence: keyword spotting on the audio source, audio source listening to retrieve\n-     * a question or a command (Speech to Text service), interpretation and handling of the command, and finally\n-     * playback of the answer on the audio sink (Text to Speech service).\n-     *\n-     * Only one dialog can be started for an audio source.\n-     *\n-     * @param ks the keyword spotting service to use or null to use the default service\n-     * @param stt the speech-to-text service to use or null to use the default service\n-     * @param tts the text-to-speech service to use or null to use the default service\n-     * @param hli the human language text interpreter to use or null to use the default service\n-     * @param source the audio source to use or null to use the default source\n-     * @param sink the audio sink to use or null to use the default sink\n-     * @param locale the locale to use or null to use the default locale\n-     * @param keyword the keyword to use during keyword spotting or null to use the default keyword\n-     * @param listeningItem the item to switch ON while listening to a question\n-     * @throws IllegalStateException if required services are not all available or the provided locale is not supported\n-     *             by all these services or a dialog is already started for this audio source\n-     */\n-    @Deprecated\n-    void startDialog(@Nullable KSService ks, @Nullable STTService stt, @Nullable TTSService tts,\n-            @Nullable HumanLanguageInterpreter hli, @Nullable AudioSource source, @Nullable AudioSink sink,\n-            @Nullable Locale locale, @Nullable String keyword, @Nullable String listeningItem)\n-            throws IllegalStateException;\n-\n-    /**\n-     * Starts an infinite dialog sequence: keyword spotting on the audio source, audio source listening to retrieve\n-     * a question or a command (Speech to Text service), interpretation and handling of the command, and finally\n-     * playback of the answer on the audio sink (Text to Speech service).\n-     *\n-     * Only one dialog can be started for an audio source.\n-     *\n-     * @param ks the keyword spotting service to use or null to use the default service\n-     * @param stt the speech-to-text service to use or null to use the default service\n-     * @param tts the text-to-speech service to use or null to use the default service\n-     * @param voice the voice to use or null to use the default voice or any voice provided by the text-to-speech\n-     *            service matching the locale\n-     * @param hlis list of human language text interpreters to use, they are executed in order until the first\n-     *            successful response, or empty to use the default service\n-     * @param source the audio source to use or null to use the default source\n-     * @param sink the audio sink to use or null to use the default sink\n-     * @param locale the locale to use or null to use the default locale\n-     * @param keyword the keyword to use during keyword spotting or null to use the default keyword\n-     * @param listeningItem the item to switch ON while listening to a question\n-     * @throws IllegalStateException if required services are not all available or the provided locale is not supported\n-     *             by all these services or a dialog is already started for this audio source\n-     */\n-    @Deprecated\n-    void startDialog(@Nullable KSService ks, @Nullable STTService stt, @Nullable TTSService tts, @Nullable Voice voice,\n-            List<HumanLanguageInterpreter> hlis, @Nullable AudioSource source, @Nullable AudioSink sink,\n-            @Nullable Locale locale, @Nullable String keyword, @Nullable String listeningItem)\n-            throws IllegalStateException;\n-\n     /**\n      * Starts an infinite dialog sequence: keyword spotting on the audio source, audio source listening to retrieve\n      * a question or a command (Speech to Text service), interpretation and handling of the command, and finally\n@@ -233,44 +164,6 @@ void startDialog(@Nullable KSService ks, @Nullable STTService stt, @Nullable TTS\n      */\n     void stopDialog(DialogContext context) throws IllegalStateException;\n \n-    /**\n-     * Executes a simple dialog sequence without keyword spotting using all default services: default audio source\n-     * listening to retrieve a question or a command (default Speech to Text service), interpretation and handling of\n-     * the command, and finally playback of the answer on the default audio sink (default Text to Speech service).\n-     *\n-     * Only possible if no dialog processor is already started for the default audio source.\n-     *\n-     * @throws IllegalStateException if required services are not all available or the provided default locale is not\n-     *             supported by all these services or a dialog is already started for the default audio source\n-     */\n-    @Deprecated\n-    void listenAndAnswer() throws IllegalStateException;\n-\n-    /**\n-     * Executes a simple dialog sequence without keyword spotting: audio source listening to retrieve a question or a\n-     * command (Speech to Text service), interpretation and handling of the command, and finally playback of the\n-     * answer on the audio sink (Text to Speech service).\n-     *\n-     * Only possible if no dialog processor is already started for the audio source.\n-     *\n-     * @param stt the speech-to-text service to use or null to use the default service\n-     * @param tts the text-to-speech service to use or null to use the default service\n-     * @param voice the voice to use or null to use the default voice or any voice provided by the text-to-speech\n-     *            service matching the locale\n-     * @param hlis list of human language text interpreters to use, they are executed in order until the first\n-     *            successful response, or empty to use the default service\n-     * @param source the audio source to use or null to use the default source\n-     * @param sink the audio sink to use or null to use the default sink\n-     * @param locale the locale to use or null to use the default locale\n-     * @param listeningItem the item to switch ON while listening to a question\n-     * @throws IllegalStateException if required services are not all available or the provided locale is not supported\n-     *             by all these services or a dialog is already started for this audio source\n-     */\n-    @Deprecated\n-    void listenAndAnswer(@Nullable STTService stt, @Nullable TTSService tts, @Nullable Voice voice,\n-            List<HumanLanguageInterpreter> hlis, @Nullable AudioSource source, @Nullable AudioSink sink,\n-            @Nullable Locale locale, @Nullable String listeningItem) throws IllegalStateException;\n-\n     /**\n      * Executes a simple dialog sequence without keyword spotting: audio source listening to retrieve a question or a\n      * command (Speech to Text service), interpretation and handling of the command, and finally playback of the\n\ndiff --git a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java\nindex 105eb6e7d75..f08df2250ab 100644\n--- a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java\n+++ b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java\n@@ -530,62 +530,6 @@ public DialogContext.Builder getDialogContextBuilder() {\n         return lastDialogContext;\n     }\n \n-    @Override\n-    @Deprecated\n-    public void startDialog() throws IllegalStateException {\n-        startDialog(null, null, null, null, List.of(), null, null, null, this.keyword, this.listeningItem);\n-    }\n-\n-    @Override\n-    @Deprecated\n-    public void startDialog(@Nullable KSService ks, @Nullable STTService stt, @Nullable TTSService tts,\n-            @Nullable HumanLanguageInterpreter hli, @Nullable AudioSource source, @Nullable AudioSink sink,\n-            @Nullable Locale locale, @Nullable String keyword, @Nullable String listeningItem)\n-            throws IllegalStateException {\n-        startDialog(ks, stt, tts, null, hli == null ? List.of() : List.of(hli), source, sink, locale, keyword,\n-                listeningItem);\n-    }\n-\n-    @Override\n-    @Deprecated\n-    public void startDialog(@Nullable KSService ks, @Nullable STTService stt, @Nullable TTSService tts,\n-            @Nullable Voice voice, List<HumanLanguageInterpreter> hlis, @Nullable AudioSource source,\n-            @Nullable AudioSink sink, @Nullable Locale locale, @Nullable String keyword, @Nullable String listeningItem)\n-            throws IllegalStateException {\n-        var builder = getDialogContextBuilder();\n-        if (ks != null) {\n-            builder.withKS(ks);\n-        }\n-        if (keyword != null) {\n-            builder.withKeyword(keyword);\n-        }\n-        if (stt != null) {\n-            builder.withSTT(stt);\n-        }\n-        if (tts != null) {\n-            builder.withTTS(tts);\n-        }\n-        if (voice != null) {\n-            builder.withVoice(voice);\n-        }\n-        if (!hlis.isEmpty()) {\n-            builder.withHLIs(hlis);\n-        }\n-        if (source != null) {\n-            builder.withSource(source);\n-        }\n-        if (sink != null) {\n-            builder.withSink(sink);\n-        }\n-        if (locale != null) {\n-            builder.withLocale(locale);\n-        }\n-        if (listeningItem != null) {\n-            builder.withListeningItem(listeningItem);\n-        }\n-        startDialog(builder.build());\n-    }\n-\n     @Override\n     public void startDialog(DialogContext context) throws IllegalStateException {\n         var ksService = context.ks();\n@@ -645,42 +589,6 @@ public void stopDialog(DialogContext context) throws IllegalStateException {\n         stopDialog(context.source());\n     }\n \n-    @Override\n-    @Deprecated\n-    public void listenAndAnswer() throws IllegalStateException {\n-        listenAndAnswer(null, null, null, List.of(), null, null, null, null);\n-    }\n-\n-    @Override\n-    @Deprecated\n-    public void listenAndAnswer(@Nullable STTService stt, @Nullable TTSService tts, @Nullable Voice voice,\n-            List<HumanLanguageInterpreter> hlis, @Nullable AudioSource source, @Nullable AudioSink sink,\n-            @Nullable Locale locale, @Nullable String listeningItem) throws IllegalStateException {\n-        var builder = getDialogContextBuilder();\n-        if (stt != null) {\n-            builder.withSTT(stt);\n-        }\n-        if (tts != null) {\n-            builder.withTTS(tts);\n-        }\n-        if (!hlis.isEmpty()) {\n-            builder.withHLIs(hlis);\n-        }\n-        if (source != null) {\n-            builder.withSource(source);\n-        }\n-        if (sink != null) {\n-            builder.withSink(sink);\n-        }\n-        if (locale != null) {\n-            builder.withLocale(locale);\n-        }\n-        if (listeningItem != null) {\n-            builder.withListeningItem(listeningItem);\n-        }\n-        listenAndAnswer(builder.build());\n-    }\n-\n     @Override\n     public void listenAndAnswer(DialogContext context) throws IllegalStateException {\n         Bundle b = bundle;\n",
    "test_patch": "diff --git a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java\nindex 89ce42a9786..dcf6b21aee2 100644\n--- a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java\n+++ b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java\n@@ -38,6 +38,7 @@\n import org.openhab.core.i18n.LocaleProvider;\n import org.openhab.core.i18n.TranslationProvider;\n import org.openhab.core.test.java.JavaOSGiTest;\n+import org.openhab.core.voice.DialogContext;\n import org.openhab.core.voice.DialogRegistration;\n import org.openhab.core.voice.Voice;\n import org.openhab.core.voice.VoiceManager;\n@@ -200,8 +201,10 @@ public void verifyThatADialogIsNotStartedWhenAnyOfTheRequiredServiceIsNull() {\n         ksService = new KSServiceStub();\n         hliStub = new HumanLanguageInterpreterStub();\n \n-        assertThrows(IllegalStateException.class, () -> voiceManager.startDialog(ksService, sttService, null, null,\n-                List.of(hliStub), source, sink, Locale.ENGLISH, \"word\", null));\n+        assertThrows(IllegalStateException.class,\n+                () -> voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                        .withKS(ksService).withSTT(sttService).withTTS(null).withHLI(hliStub).withLocale(Locale.ENGLISH)\n+                        .withKeyword(\"word\").build()));\n \n         assertFalse(ksService.isWordSpotted());\n         assertFalse(sink.getIsStreamProcessed());\n@@ -218,8 +221,10 @@ public void verifyThatADialogIsNotStartedWhenLocaleIsNotSupported() {\n         registerService(ttsService);\n         registerService(hliStub);\n \n-        assertThrows(IllegalStateException.class, () -> voiceManager.startDialog(ksService, sttService, ttsService,\n-                null, List.of(hliStub), source, sink, Locale.FRENCH, \"mot\", null));\n+        assertThrows(IllegalStateException.class,\n+                () -> voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                        .withKS(ksService).withSTT(sttService).withTTS(ttsService).withHLI(hliStub)\n+                        .withLocale(Locale.FRENCH).withKeyword(\"mot\").build()));\n \n         assertFalse(ksService.isWordSpotted());\n         assertFalse(sink.getIsStreamProcessed());\n@@ -236,8 +241,9 @@ public void startDialogWhenAllOfTheRequiredServicesAreAvailable() {\n         registerService(ttsService);\n         registerService(hliStub);\n \n-        voiceManager.startDialog(ksService, sttService, ttsService, null, List.of(hliStub), source, sink,\n-                Locale.ENGLISH, \"word\", null);\n+        voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                .withKS(ksService).withSTT(sttService).withTTS(ttsService).withHLI(hliStub).withLocale(Locale.ENGLISH)\n+                .withKeyword(\"word\").build());\n \n         assertTrue(ksService.isWordSpotted());\n         assertTrue(sttService.isRecognized());\n@@ -264,8 +270,9 @@ public void startDialogAndVerifyThatAKSExceptionIsProperlyHandled() {\n \n         ksService.setExceptionExpected(true);\n \n-        voiceManager.startDialog(ksService, sttService, ttsService, null, List.of(hliStub), source, sink,\n-                Locale.ENGLISH, \"\", null);\n+        voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                .withKS(ksService).withSTT(sttService).withTTS(ttsService).withHLI(hliStub).withLocale(Locale.ENGLISH)\n+                .withKeyword(\"word\").build());\n \n         assertFalse(ksService.isWordSpotted());\n         assertFalse(sttService.isRecognized());\n@@ -290,8 +297,9 @@ public void startDialogAndVerifyThatAKSErrorIsProperlyHandled() {\n \n         ksService.setErrorExpected(true);\n \n-        voiceManager.startDialog(ksService, sttService, ttsService, null, List.of(hliStub), source, sink,\n-                Locale.ENGLISH, \"word\", null);\n+        voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                .withKS(ksService).withSTT(sttService).withTTS(ttsService).withHLI(hliStub).withLocale(Locale.ENGLISH)\n+                .withKeyword(\"word\").build());\n \n         assertFalse(ksService.isWordSpotted());\n         assertFalse(sttService.isRecognized());\n@@ -317,8 +325,9 @@ public void startDialogAndVerifyThatASTTExceptionIsProperlyHandled() {\n \n         sttService.setExceptionExpected(true);\n \n-        voiceManager.startDialog(ksService, sttService, ttsService, null, List.of(hliStub), source, sink,\n-                Locale.ENGLISH, \"word\", null);\n+        voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                .withKS(ksService).withSTT(sttService).withTTS(ttsService).withHLI(hliStub).withLocale(Locale.ENGLISH)\n+                .withKeyword(\"word\").build());\n \n         assertTrue(ksService.isWordSpotted());\n         assertFalse(sttService.isRecognized());\n@@ -343,8 +352,9 @@ public void startDialogAndVerifyThatASpeechRecognitionErrorIsProperlyHandled() {\n \n         sttService.setErrorExpected(true);\n \n-        voiceManager.startDialog(ksService, sttService, ttsService, null, List.of(hliStub), source, sink,\n-                Locale.ENGLISH, \"word\", null);\n+        voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                .withKS(ksService).withSTT(sttService).withTTS(ttsService).withHLI(hliStub).withLocale(Locale.ENGLISH)\n+                .withKeyword(\"word\").build());\n \n         assertTrue(ksService.isWordSpotted());\n         assertFalse(sttService.isRecognized());\n@@ -369,8 +379,9 @@ public void startDialogAndVerifyThatAnInterpretationExceptionIsProperlyHandled()\n \n         hliStub.setExceptionExpected(true);\n \n-        voiceManager.startDialog(ksService, sttService, ttsService, null, List.of(hliStub), source, sink,\n-                Locale.ENGLISH, \"word\", null);\n+        voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                .withKS(ksService).withSTT(sttService).withTTS(ttsService).withHLI(hliStub).withLocale(Locale.ENGLISH)\n+                .withKeyword(\"word\").build());\n \n         assertTrue(ksService.isWordSpotted());\n         assertTrue(sttService.isRecognized());\n@@ -407,8 +418,10 @@ public void startDialogWithoutPassingAnyParameters() throws Exception {\n         // Wait some time to be sure that the configuration will be updated\n         Thread.sleep(2000);\n \n-        voiceManager.startDialog();\n+        DialogContext context = voiceManager.getDialogContextBuilder().build();\n+        voiceManager.startDialog(context);\n \n+        assertThat(voiceManager.getLastDialogContext(), is(context));\n         assertTrue(ksService.isWordSpotted());\n         assertTrue(sttService.isRecognized());\n         assertThat(hliStub.getQuestion(), is(\"Recognized text\"));\n@@ -432,13 +445,16 @@ public void verifyThatOnlyOneDialogPerSourceIsPossible() {\n         registerService(ttsService);\n         registerService(hliStub);\n \n-        voiceManager.startDialog(ksService, sttService, ttsService, null, List.of(hliStub), source, sink,\n-                Locale.ENGLISH, \"word\", null);\n+        voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                .withKS(ksService).withSTT(sttService).withTTS(ttsService).withHLI(hliStub).withLocale(Locale.ENGLISH)\n+                .withKeyword(\"word\").build());\n \n         assertTrue(ksService.isWordSpotted());\n \n-        assertThrows(IllegalStateException.class, () -> voiceManager.startDialog(ksService, sttService, ttsService,\n-                null, List.of(hliStub), source, sink, Locale.ENGLISH, \"word\", null));\n+        assertThrows(IllegalStateException.class,\n+                () -> voiceManager.startDialog(voiceManager.getDialogContextBuilder().withSource(source).withSink(sink)\n+                        .withKS(ksService).withSTT(sttService).withTTS(ttsService).withHLI(hliStub)\n+                        .withLocale(Locale.ENGLISH).withKeyword(\"word\").build()));\n \n         voiceManager.stopDialog(source);\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3553",
    "pr_id": 3553,
    "issue_id": 1822,
    "repo": "openhab/openhab-core",
    "problem_statement": "[OH3] org.jupnp.transport.spi.StreamClient java.lang.NullPointerException: Missing SslContextFactory\nI get the same error every 10 minutes since moving to OH3.  All of my uPnP based devices seem ok so not sure if this is just cosmetic or something is breaking.\r\n\r\n```\r\n2020-11-14 18:06:48.043 [ERROR] [org.jupnp.transport.spi.StreamClient] - Request: HttpRequest[GET /capability HTTP/1.1]@55b5a9d failed\r\n2020-11-14 18:16:48.127 [ERROR] [org.jupnp.transport.spi.StreamClient] - Request: HttpRequest[GET /capability HTTP/1.1]@7de761f0 failed\r\n2020-11-14 18:26:48.223 [ERROR] [org.jupnp.transport.spi.StreamClient] - Request: HttpRequest[GET /capability HTTP/1.1]@1cbadce1 failed\r\n2020-11-14 18:36:48.327 [ERROR] [org.jupnp.transport.spi.StreamClient] - Request: HttpRequest[GET /capability HTTP/1.1]@7aed1f6 failed\r\n2020-11-14 18:46:48.408 [ERROR] [org.jupnp.transport.spi.StreamClient] - Request: HttpRequest[GET /capability HTTP/1.1]@548eca95 failed\r\n2020-11-14 18:58:18.794 [ERROR] [org.jupnp.transport.spi.StreamClient] - Request: HttpRequest[GET /capability HTTP/1.1]@23f7d882 failed\r\n\r\n\r\n2020-11-14 19:08:48.651 [ERROR] [org.jupnp.transport.spi.StreamClient] - Request: HttpRequest[GET /capability HTTP/1.1]@42724e05 failed\r\njava.lang.NullPointerException: Missing SslContextFactory\r\n        at java.util.Objects.requireNonNull(Objects.java:246) ~[?:?]\r\n        at org.eclipse.jetty.io.ssl.SslClientConnectionFactory.<init>(SslClientConnectionFactory.java:54) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.HttpClient.newSslClientConnectionFactory(HttpClient.java:1175) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.HttpDestination.newSslClientConnectionFactory(HttpDestination.java:137) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.HttpDestination.<init>(HttpDestination.java:94) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.PoolingHttpDestination.<init>(PoolingHttpDestination.java:25) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.http.HttpDestinationOverHTTP.<init>(HttpDestinationOverHTTP.java:32) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.http.HttpClientTransportOverHTTP.newHttpDestination(HttpClientTransportOverHTTP.java:51) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.HttpClient.destinationFor(HttpClient.java:546) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.HttpClient.send(HttpClient.java:579) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.HttpRequest.send(HttpRequest.java:728) ~[bundleFile:9.4.20.v20190813]\r\n        at org.eclipse.jetty.client.HttpRequest.send(HttpRequest.java:681) ~[bundleFile:9.4.20.v20190813]\r\n        at org.jupnp.transport.impl.jetty.JettyStreamClientImpl$1.call(JettyStreamClientImpl.java:155) [bundleFile:?]\r\n        at org.jupnp.transport.impl.jetty.JettyStreamClientImpl$1.call(JettyStreamClientImpl.java:1) [bundleFile:?]\r\n        at org.jupnp.transport.spi.AbstractStreamClient$RequestWrapper.call(AbstractStreamClient.java:204) [bundleFile:?]\r\n        at org.jupnp.transport.spi.AbstractStreamClient$RequestWrapper.call(AbstractStreamClient.java:1) [bundleFile:?]\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]\r\n        at java.lang.Thread.run(Thread.java:834) [?:?]\r\n```",
    "issue_word_count": 464,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java",
      "bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/SemanticTagsTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/SemanticTagsTest.java"
    ],
    "base_commit": "eb6b6b9677c628cf5ae85459759f742dd5a46bd8",
    "head_commit": "aca5e6fda15b3adf1551583a96a101f63c962ba3",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3553",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3553",
    "dockerfile": "",
    "pr_merged_at": "2023-04-15T09:24:12.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java\nindex a6087ad1e0b..58982dab6ce 100644\n--- a/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java\n+++ b/bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java\n@@ -90,13 +90,13 @@ public static List<Class<? extends Tag>> getByLabelOrSynonym(String tagLabelOrSy\n     public static List<String> getLabelAndSynonyms(Class<? extends Tag> tag, Locale locale) {\n         ResourceBundle rb = ResourceBundle.getBundle(TAGS_BUNDLE_NAME, locale,\n                 Control.getNoFallbackControl(Control.FORMAT_PROPERTIES));\n+        TagInfo tagInfo = tag.getAnnotation(TagInfo.class);\n         try {\n-            String entry = rb.getString(tag.getAnnotation(TagInfo.class).id());\n+            String entry = rb.getString(tagInfo.id());\n             return List.of(entry.toLowerCase(locale).split(\",\"));\n         } catch (MissingResourceException e) {\n-            TagInfo tagInfo = tag.getAnnotation(TagInfo.class);\n             Stream<String> label = Stream.of(tagInfo.label());\n-            Stream<String> synonyms = Stream.of(tagInfo.synonyms().split(\",\"));\n+            Stream<String> synonyms = Stream.of(tagInfo.synonyms().split(\",\")).map(String::trim);\n             return Stream.concat(label, synonyms).map(s -> s.toLowerCase(locale)).distinct().toList();\n         }\n     }\n@@ -104,18 +104,40 @@ public static List<String> getLabelAndSynonyms(Class<? extends Tag> tag, Locale\n     public static String getLabel(Class<? extends Tag> tag, Locale locale) {\n         ResourceBundle rb = ResourceBundle.getBundle(TAGS_BUNDLE_NAME, locale,\n                 Control.getNoFallbackControl(Control.FORMAT_PROPERTIES));\n+        TagInfo tagInfo = tag.getAnnotation(TagInfo.class);\n         try {\n-            String entry = rb.getString(tag.getAnnotation(TagInfo.class).id());\n+            String entry = rb.getString(tagInfo.id());\n             if (entry.contains(\",\")) {\n                 return entry.substring(0, entry.indexOf(\",\"));\n             } else {\n                 return entry;\n             }\n         } catch (MissingResourceException e) {\n-            return tag.getAnnotation(TagInfo.class).label();\n+            return tagInfo.label();\n         }\n     }\n \n+    public static List<String> getSynonyms(Class<? extends Tag> tag, Locale locale) {\n+        ResourceBundle rb = ResourceBundle.getBundle(TAGS_BUNDLE_NAME, locale,\n+                Control.getNoFallbackControl(Control.FORMAT_PROPERTIES));\n+        String synonyms = \"\";\n+        TagInfo tagInfo = tag.getAnnotation(TagInfo.class);\n+        try {\n+            String entry = rb.getString(tagInfo.id());\n+            int start = entry.indexOf(\",\") + 1;\n+            if (start > 0 && entry.length() > start) {\n+                synonyms = entry.substring(start);\n+            }\n+        } catch (MissingResourceException e) {\n+            synonyms = tagInfo.synonyms();\n+        }\n+        return Stream.of(synonyms.split(\",\")).map(String::trim).toList();\n+    }\n+\n+    public static String getDescription(Class<? extends Tag> tag, Locale locale) {\n+        return tag.getAnnotation(TagInfo.class).description();\n+    }\n+\n     /**\n      * Determines the semantic type of an {@link Item} i.e. a sub-type of {@link Location}, {@link Equipment} or\n      * {@link Point}.\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/SemanticTagsTest.java b/bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/SemanticTagsTest.java\nindex c6c37d81834..67c44ce5b6f 100644\n--- a/bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/SemanticTagsTest.java\n+++ b/bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/SemanticTagsTest.java\n@@ -12,6 +12,8 @@\n  */\n package org.openhab.core.semantics;\n \n+import static org.hamcrest.CoreMatchers.*;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.*;\n \n import java.util.Locale;\n@@ -30,7 +32,9 @@\n import org.openhab.core.semantics.model.location.Room;\n import org.openhab.core.semantics.model.point.Measurement;\n import org.openhab.core.semantics.model.point.Points;\n+import org.openhab.core.semantics.model.property.Light;\n import org.openhab.core.semantics.model.property.Properties;\n+import org.openhab.core.semantics.model.property.SoundVolume;\n import org.openhab.core.semantics.model.property.Temperature;\n \n /**\n@@ -83,6 +87,23 @@ public void testByLabelOrSynonym() {\n         assertEquals(Bathroom.class, SemanticTags.getByLabelOrSynonym(\"Badezimmer\", Locale.GERMAN).iterator().next());\n     }\n \n+    @Test\n+    public void testGetLabel() {\n+        assertEquals(\"Kitchen\", SemanticTags.getLabel(Kitchen.class, Locale.ENGLISH));\n+        assertEquals(\"Sound Volume\", SemanticTags.getLabel(SoundVolume.class, Locale.ENGLISH));\n+    }\n+\n+    @Test\n+    public void testGetSynonyms() {\n+        assertThat(SemanticTags.getSynonyms(Light.class, Locale.ENGLISH), hasItems(\"Lights\", \"Lighting\"));\n+    }\n+\n+    @Test\n+    public void testGetDescription() {\n+        Class<? extends Tag> tag = SemanticTags.add(\"TestDesc\", Light.class, null, null, \"Test Description\");\n+        assertEquals(\"Test Description\", SemanticTags.getDescription(tag, Locale.ENGLISH));\n+    }\n+\n     @Test\n     public void testGetSemanticType() {\n         assertEquals(Bathroom.class, SemanticTags.getSemanticType(locationItem));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3548",
    "pr_id": 3548,
    "issue_id": 3543,
    "repo": "openhab/openhab-core",
    "problem_statement": "Icon server: proposal to accept hyphen in icon names\nIn the updated item icon syntax, I released the restriction to not have a hyphen in the icon name. This is because most of iconify icons have one or several hyphens in their names.\r\nIn case a new openHAB iconset is created or even if a custom icon is added by the user in the classic iconset (just by downloading it from iconify for example), we should probably accept icon name containing hyphen in openHAB iconsets.\r\n\r\nThe OH icon server supports two different syntax for requesting an icon:\r\n\r\n1. The state and the icon format can be passed in the path of the request URL like for example `../icon/humidioty-24.svg?iconset=classic`\r\n2. The state and the icon format can be passed through the parameters \"state\" and \"format\" in the request URL like for example `../icon/humidity?state=24&iconset=classic&format=svg`.\r\n\r\nIn the first way, \"-\" is a separator to extract the icon name and the state. So there might be a possible mismatch in case the icon name now contains \"-\".\r\n\r\nOne option would be to simply remove the first way to request the icon, that is passing the item state only through the \"state\" parameter and no more in the path.\r\n\r\nBasic UI is using only the way 2 so it will not be impacted by this change.\r\n@maniac103 already confirmed for @openhab/android-maintainers that the Android app also use only the way 2.\r\n\r\n@openhab/webui-maintainers and @openhab/ios-maintainers : could you please tell us how it is used in MainUI and iOS app ?",
    "issue_word_count": 269,
    "test_files_count": 2,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.ui.icon/src/main/java/org/openhab/core/ui/icon/internal/IconServlet.java",
      "bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/AbstractResourceIconProviderTest.java",
      "bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/internal/IconServletTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/AbstractResourceIconProviderTest.java",
      "bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/internal/IconServletTest.java"
    ],
    "base_commit": "e53551048327e7d3d78c097096e2d23aec4902fd",
    "head_commit": "f3103152a61203407b88c5a3a458608ef1a0adc7",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3548",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3548",
    "dockerfile": "",
    "pr_merged_at": "2023-04-18T08:48:39.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.ui.icon/src/main/java/org/openhab/core/ui/icon/internal/IconServlet.java b/bundles/org.openhab.core.ui.icon/src/main/java/org/openhab/core/ui/icon/internal/IconServlet.java\nindex 058296c0dbe..1aa61c60a78 100644\n--- a/bundles/org.openhab.core.ui.icon/src/main/java/org/openhab/core/ui/icon/internal/IconServlet.java\n+++ b/bundles/org.openhab.core.ui.icon/src/main/java/org/openhab/core/ui/icon/internal/IconServlet.java\n@@ -106,7 +106,7 @@ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws Se\n             return;\n         }\n \n-        String state = getState(req);\n+        String state = req.getParameter(PARAM_STATE);\n         String iconSetId = getIconSetId(req);\n \n         Format format = getFormat(req);\n@@ -173,8 +173,7 @@ private String substringBeforeLast(String str, String separator) {\n \n     private String getCategory(HttpServletRequest req) {\n         String category = substringAfterLast(req.getRequestURI(), \"/\");\n-        category = substringBeforeLast(category, \".\");\n-        return substringBeforeLast(category, \"-\");\n+        return substringBeforeLast(category, \".\");\n     }\n \n     private Format getFormat(HttpServletRequest req) {\n@@ -206,22 +205,6 @@ private String getIconSetId(HttpServletRequest req) {\n         }\n     }\n \n-    private @Nullable String getState(HttpServletRequest req) {\n-        String state = req.getParameter(PARAM_STATE);\n-        if (state != null) {\n-            return state;\n-        } else {\n-            String filename = substringAfterLast(req.getRequestURI(), \"/\");\n-            state = substringAfterLast(filename, \"-\");\n-            state = substringBeforeLast(state, \".\");\n-            if (!state.isEmpty()) {\n-                return state;\n-            } else {\n-                return null;\n-            }\n-        }\n-    }\n-\n     private @Nullable IconProvider getIconProvider(String category, String iconSetId, Format format) {\n         IconProvider topProvider = null;\n         int maxPrio = Integer.MIN_VALUE;\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/AbstractResourceIconProviderTest.java b/bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/AbstractResourceIconProviderTest.java\nindex 132c286f23e..c86ec9284cc 100644\n--- a/bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/AbstractResourceIconProviderTest.java\n+++ b/bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/AbstractResourceIconProviderTest.java\n@@ -57,6 +57,10 @@ public void setUp() {\n                         return new ByteArrayInputStream(\"x-30.png\".getBytes());\n                     case \"x-y z.png\":\n                         return new ByteArrayInputStream(\"x-y z.png\".getBytes());\n+                    case \"a-bb-ccc-30.png\":\n+                        return new ByteArrayInputStream(\"a-bb-ccc-30.png\".getBytes());\n+                    case \"a-bb-ccc-y z.png\":\n+                        return new ByteArrayInputStream(\"a-bb-ccc-y z.png\".getBytes());\n                     default:\n                         return null;\n                 }\n@@ -96,6 +100,7 @@ public Integer getPriority() {\n     public void testScanningForState() throws IOException {\n         try (InputStream is = provider.getIcon(\"x\", \"classic\", \"34\", Format.PNG)) {\n             assertNotNull(is);\n+            assertThat(new String(is.readAllBytes(), StandardCharsets.UTF_8), is(\"x-30.png\"));\n         }\n \n         try (InputStream is = provider.getIcon(\"x\", \"classic\", \"25\", Format.PNG)) {\n@@ -103,6 +108,18 @@ public void testScanningForState() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void testScanningIconWithHyphensForState() throws IOException {\n+        try (InputStream is = provider.getIcon(\"a-bb-ccc\", \"classic\", \"34\", Format.PNG)) {\n+            assertNotNull(is);\n+            assertThat(new String(is.readAllBytes(), StandardCharsets.UTF_8), is(\"a-bb-ccc-30.png\"));\n+        }\n+\n+        try (InputStream is = provider.getIcon(\"a-bb-ccc\", \"classic\", \"25\", Format.PNG)) {\n+            assertNull(is);\n+        }\n+    }\n+\n     @Test\n     public void testWithQuantityTypeState() throws IOException {\n         try (InputStream is = provider.getIcon(\"x\", \"classic\", \"34 Â°C\", Format.PNG)) {\n@@ -110,10 +127,24 @@ public void testWithQuantityTypeState() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void testIconWithHyphensWithQuantityTypeState() throws IOException {\n+        try (InputStream is = provider.getIcon(\"a-bb-ccc\", \"classic\", \"34 Â°C\", Format.PNG)) {\n+            assertThat(new String(is.readAllBytes(), StandardCharsets.UTF_8), is(\"a-bb-ccc-30.png\"));\n+        }\n+    }\n+\n     @Test\n     public void testWithStringTypeState() throws IOException {\n         try (InputStream is = provider.getIcon(\"x\", \"classic\", \"y z\", Format.PNG)) {\n             assertThat(new String(is.readAllBytes(), StandardCharsets.UTF_8), is(\"x-y z.png\"));\n         }\n     }\n+\n+    @Test\n+    public void testIconWithHyphensWithStringTypeState() throws IOException {\n+        try (InputStream is = provider.getIcon(\"a-bb-ccc\", \"classic\", \"y z\", Format.PNG)) {\n+            assertThat(new String(is.readAllBytes(), StandardCharsets.UTF_8), is(\"a-bb-ccc-y z.png\"));\n+        }\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/internal/IconServletTest.java b/bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/internal/IconServletTest.java\nindex 6c80b7a94ea..84a6f711f6c 100644\n--- a/bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/internal/IconServletTest.java\n+++ b/bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/internal/IconServletTest.java\n@@ -89,23 +89,6 @@ public void before() throws IOException {\n         responseOutputStream.reset();\n     }\n \n-    @Test\n-    public void testOldUrlStyle() throws ServletException, IOException {\n-        when(requestMock.getRequestURI()).thenReturn(\"/icon/y-34.png\");\n-\n-        when(responseMock.getOutputStream()).thenReturn(responseOutputStream);\n-\n-        when(provider1Mock.hasIcon(\"y\", \"classic\", Format.PNG)).thenReturn(0);\n-        when(provider1Mock.getIcon(\"y\", \"classic\", \"34\", Format.PNG))\n-                .thenReturn(new ByteArrayInputStream(\"provider 1 icon: y classic 34 png\".getBytes()));\n-\n-        servlet.addIconProvider(provider1Mock);\n-        servlet.doGet(requestMock, responseMock);\n-\n-        assertEquals(\"provider 1 icon: y classic 34 png\", responseOutputStream.getOutput());\n-        verify(responseMock, never()).sendError(anyInt());\n-    }\n-\n     @Test\n     public void testPriority() throws ServletException, IOException {\n         when(requestMock.getRequestURI()).thenReturn(\"/icon/x\");\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3542",
    "pr_id": 3542,
    "issue_id": 3540,
    "repo": "openhab/openhab-core",
    "problem_statement": "ColorUtil proposed extensions\nFollowing are proposed extensions to ColorUtil to enable higher precision conversion XY <=> HSB without intermediate transition via integer RGB values. \r\n\r\nNOTE: this proposal is DRAFT for discussion purposes. It uses blunt clones of some methods to use `double` rather than `int` internally. So it is not code efficient. Efficiency could be improved either by using inner/outer methods, or perhaps generics.\r\n\r\n```\r\n    // convert double precision HSB to double precision XY\r\n    public static double[] hsbToXY(HSBType hsbType, Gamut gamut) {\r\n        PercentType[] rgb = hsbToRgbPercent(hsbType);\r\n        double r = inverseCompand(rgb[0].doubleValue() / PercentType.HUNDRED.doubleValue());\r\n        double g = inverseCompand(rgb[1].doubleValue() / PercentType.HUNDRED.doubleValue());\r\n        double b = inverseCompand(rgb[2].doubleValue() / PercentType.HUNDRED.doubleValue());\r\n\r\n        double X = r * 0.664511 + g * 0.154324 + b * 0.162028;\r\n        double Y = r * 0.283881 + g * 0.668433 + b * 0.047685;\r\n        double Z = r * 0.000088 + g * 0.072310 + b * 0.986039;\r\n\r\n        double sum = X + Y + Z;\r\n        Point p = sum == 0.0 ? new Point() : new Point(X / sum, Y / sum);\r\n        Point q = gamut.closest(p);\r\n\r\n        double[] xyY = new double[] { q.x, q.y, Y };\r\n\r\n        LOGGER.trace(\"HSB: {} - XYZ: {} {} {} - xyY: {}\", hsbType, X, Y, Z, xyY);\r\n\r\n        return xyY;\r\n    }\r\n\r\n    // convert double precision XY to double precision HSB\r\n    public static HSBType xyToHsb(double[] xy, Gamut gamut) throws IllegalArgumentException {\r\n        if (xy.length < 2 || xy.length > 3 || !inRange(xy[0]) || !inRange(xy[1])\r\n                || (xy.length == 3 && !inRange(xy[2]))) {\r\n            throw new IllegalArgumentException(\"xy array only allowes two or three values between 0.0 and 1.0.\");\r\n        }\r\n        Point p = gamut.closest(new Point(xy[0], xy[1]));\r\n        double x = p.x;\r\n        double y = p.y == 0.0 ? 0.000001 : p.y;\r\n        double z = 1.0 - x - y;\r\n        double Y = (xy.length == 3) ? xy[2] : 1.0;\r\n        double X = (Y / y) * x;\r\n        double Z = (Y / y) * z;\r\n        double r = X * 1.656492 + Y * -0.354851 + Z * -0.255038;\r\n        double g = X * -0.707196 + Y * 1.655397 + Z * 0.036152;\r\n        double b = X * 0.051713 + Y * -0.121364 + Z * 1.011530;\r\n\r\n        // Correction for negative values is missing from Philips' documentation.\r\n        double min = Math.min(r, Math.min(g, b));\r\n        if (min < 0.0) {\r\n            r -= min;\r\n            g -= min;\r\n            b -= min;\r\n        }\r\n\r\n        // rescale\r\n        double max = Math.max(r, Math.max(g, b));\r\n        if (max > 1.0) {\r\n            r /= max;\r\n            g /= max;\r\n            b /= max;\r\n        }\r\n\r\n        r = compand(r);\r\n        g = compand(g);\r\n        b = compand(b);\r\n\r\n        // rescale\r\n        max = Math.max(r, Math.max(g, b));\r\n        if (max > 1.0) {\r\n            r /= max;\r\n            g /= max;\r\n            b /= max;\r\n        }\r\n\r\n        HSBType hsb = rgbToHsb(new double[] { 255.0 * r, 255.0 * g, 255.0 * b });\r\n        LOGGER.trace(\"xy: {} - XYZ: {} {} {} - RGB: {} {} {} - HSB: {} \", xy, X, Y, Z, r, g, b, hsb);\r\n\r\n        return hsb;\r\n    }\r\n\r\n    // convert double precision RGB to double precision HSB\r\n    public static HSBType rgbToHsb(double[] rgb) throws IllegalArgumentException {\r\n        if (rgb.length != 3 || !inByteRange(rgb[0]) || !inByteRange(rgb[1]) || !inByteRange(rgb[2])) {\r\n            throw new IllegalArgumentException(\"RGB array only allows values between 0 and 255\");\r\n        }\r\n        final double r = rgb[0];\r\n        final double g = rgb[1];\r\n        final double b = rgb[2];\r\n\r\n        double max = (r > g) ? r : g;\r\n        if (b > max) {\r\n            max = b;\r\n        }\r\n        double min = (r < g) ? r : g;\r\n        if (b < min) {\r\n            min = b;\r\n        }\r\n        double tmpHue;\r\n        final double tmpBrightness = max / 2.55f;\r\n        final double tmpSaturation = (max != 0 ? (max - min) / max : 0) * 100.0;\r\n        // smallest possible saturation: 0 (max=0 or max-min=0), other value closest to 0 is 100/255 (max=255, min=254)\r\n        // -> avoid float comparision to 0\r\n        // if (tmpSaturation == 0) {\r\n        if (max == 0 || (max - min) == 0) {\r\n            tmpHue = 0;\r\n        } else {\r\n            double red = (max - r) / (max - min);\r\n            double green = (max - g) / (max - min);\r\n            double blue = (max - b) / (max - min);\r\n            if (r == max) {\r\n                tmpHue = blue - green;\r\n            } else if (g == max) {\r\n                tmpHue = 2.0f + red - blue;\r\n            } else {\r\n                tmpHue = 4.0f + green - red;\r\n            }\r\n            tmpHue = tmpHue / 6.0f * 360;\r\n            if (tmpHue < 0) {\r\n                tmpHue = tmpHue + 360.0f;\r\n            }\r\n        }\r\n\r\n        return new HSBType(new DecimalType(tmpHue), new PercentType(BigDecimal.valueOf(tmpSaturation)),\r\n                new PercentType(BigDecimal.valueOf(tmpBrightness)));\r\n    }\r\n\r\n    // helper method\r\n    private static boolean inByteRange(double val) {\r\n        return val >= 0.0 && val <= 255.0;\r\n    }\r\n```",
    "issue_word_count": 648,
    "test_files_count": 2,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/HSBTypeTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/HSBTypeTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java"
    ],
    "base_commit": "bc922022c30b40659ae6408ad7f6a83cbc2ebe21",
    "head_commit": "c6815e365431230653a53e2c52121f92f7f03315",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3542",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3542",
    "dockerfile": "",
    "pr_merged_at": "2023-04-21T19:31:17.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java\nindex 229e6ddf113..6fe22d063a7 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/util/ColorUtil.java\n@@ -13,6 +13,7 @@\n package org.openhab.core.util;\n \n import java.math.BigDecimal;\n+import java.math.MathContext;\n import java.math.RoundingMode;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -36,6 +37,7 @@\n @NonNullByDefault\n public class ColorUtil {\n     private static final Logger LOGGER = LoggerFactory.getLogger(ColorUtil.class);\n+    private static final MathContext COLOR_MATH_CONTEXT = new MathContext(5, RoundingMode.HALF_UP);\n     protected static final BigDecimal BIG_DECIMAL_HUNDRED = BigDecimal.valueOf(100);\n     public static final Gamut DEFAULT_GAMUT = new Gamut(new double[] { 0.9961, 0.0001 }, new double[] { 0, 0.9961 },\n             new double[] { 0, 0.0001 });\n@@ -50,7 +52,10 @@ private ColorUtil() {\n      *\n      * This function does rounding to integer valued components. It is the preferred way of doing HSB to RGB conversion.\n      *\n-     * See also: {@link hsbToRgbPercent(HSBType)}, {@link hsbTosRGB(HSBType)}\n+     * See also: {@link #hsbToRgbPercent(HSBType)}, {@link #hsbTosRgb(HSBType)}\n+     *\n+     * @param hsb an {@link HSBType} value.\n+     * @return array of three int with the RGB values in the range 0 to 255.\n      */\n     public static int[] hsbToRgb(HSBType hsb) {\n         final PercentType[] rgbPercent = hsbToRgbPercent(hsb);\n@@ -62,10 +67,13 @@ public static int[] hsbToRgb(HSBType hsb) {\n      * Transform <a href=\"https://en.wikipedia.org/wiki/HSL_and_HSV\">HSV</a> based {@link HSBType} to\n      * <a href=\"https://en.wikipedia.org/wiki/SRGB\">sRGB</a>.\n      *\n-     * This function not round the components to integer values. Please consider consider\n-     * using {@link hsbToRgb(HSBType)} whenever integer values are required.\n+     * This function does not round the components. For conversion to integer values in the range 0 to 255 use\n+     * {@link #hsbToRgb(HSBType)}.\n+     *\n+     * See also: {@link #hsbToRgb(HSBType)}, {@link #hsbTosRgb(HSBType)}\n      *\n-     * See also: {@link hsbToRgb(HSBType)}, {@link hsbTosRgb(HSBType)}\n+     * @param hsb an {@link HSBType} value.\n+     * @return array of three {@link PercentType} with the RGB values in the range 0 to 100 percent.\n      */\n     public static PercentType[] hsbToRgbPercent(HSBType hsb) {\n         PercentType red = null;\n@@ -79,6 +87,7 @@ public static PercentType[] hsbToRgbPercent(HSBType hsb) {\n         final BigDecimal f = h.multiply(BigDecimal.valueOf(5)).divide(BigDecimal.valueOf(3), 10, RoundingMode.HALF_UP)\n                 .remainder(BigDecimal.ONE);\n         final BigDecimal value = hsb.getBrightness().toBigDecimal();\n+\n         PercentType a = new PercentType(value.multiply(BigDecimal.ONE.subtract(s)));\n         PercentType b = new PercentType(value.multiply(BigDecimal.ONE.subtract(s.multiply(f))));\n         PercentType c = new PercentType(\n@@ -128,9 +137,10 @@ public static PercentType[] hsbToRgbPercent(HSBType hsb) {\n      * <a href=\"https://en.wikipedia.org/wiki/SRGB\">sRGB</a> color model.\n      * (Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are blue).\n      *\n-     * See also: {@link hsbToRgb(HSBType)}, {@link hsbToRgbPercent(HSBType)}\n+     * See also: {@link #hsbToRgb(HSBType)}, {@link #hsbToRgbPercent(HSBType)}\n      *\n-     * @return the RGB value of the color in the default sRGB color model\n+     * @param hsb an {@link HSBType} value.\n+     * @return the RGB value of the color in the default sRGB color model.\n      */\n     public static int hsbTosRgb(HSBType hsb) {\n         final int[] rgb = hsbToRgb(hsb);\n@@ -145,11 +155,11 @@ public static int hsbTosRgb(HSBType hsb) {\n      * \"https://developers.meethue.com/develop/application-design-guidance/color-conversion-formulas-rgb-to-xy-and-back/\">Hue\n      * developerportal</a>.\n      *\n-     * @param hsbType a {@link HSBType} value\n-     * @return double array with the closest matching CIE 1931 color, x, y between 0.0000 and 1.0000.\n+     * @param hsb an {@link HSBType} value.\n+     * @return array of three double with the closest matching CIE 1931 x,y,Y in the range 0.0000 to 1.0000\n      */\n-    public static double[] hsbToXY(HSBType hsbType) {\n-        return hsbToXY(hsbType, DEFAULT_GAMUT);\n+    public static double[] hsbToXY(HSBType hsb) {\n+        return hsbToXY(hsb, DEFAULT_GAMUT);\n     }\n \n     /**\n@@ -160,12 +170,12 @@ public static double[] hsbToXY(HSBType hsbType) {\n      * \"https://developers.meethue.com/develop/application-design-guidance/color-conversion-formulas-rgb-to-xy-and-back/\">Hue\n      * developer portal</a>.\n      *\n-     * @param hsbType a {@link HSBType} value\n-     * @param gamut the gamut supported by the light.\n-     * @return double array with the closest matching CIE 1931 color, x, y, Y between 0.0000 and 1.0000.\n+     * @param hsb an {@link HSBType} value.\n+     * @param gamut the color Gamut supported by the light.\n+     * @return array of three double with the closest matching CIE 1931 x,y,Y in the range 0.0000 to 1.0000\n      */\n-    public static double[] hsbToXY(HSBType hsbType, Gamut gamut) {\n-        PercentType[] rgb = hsbToRgbPercent(hsbType);\n+    public static double[] hsbToXY(HSBType hsb, Gamut gamut) {\n+        PercentType[] rgb = hsbToRgbPercent(hsb);\n         double r = inverseCompand(rgb[0].doubleValue() / PercentType.HUNDRED.doubleValue());\n         double g = inverseCompand(rgb[1].doubleValue() / PercentType.HUNDRED.doubleValue());\n         double b = inverseCompand(rgb[2].doubleValue() / PercentType.HUNDRED.doubleValue());\n@@ -181,8 +191,10 @@ public static double[] hsbToXY(HSBType hsbType, Gamut gamut) {\n         double[] xyY = new double[] { ((int) (q.x * 10000.0)) / 10000.0, ((int) (q.y * 10000.0)) / 10000.0,\n                 ((int) (Y * 10000.0)) / 10000.0 };\n \n-        LOGGER.trace(\"HSB: {} - RGB: {} - XYZ: {} {} {} - xyY: {}\", hsbType, hsbType.toRGB(), X, Y, Z, xyY);\n-\n+        if (LOGGER.isTraceEnabled()) {\n+            LOGGER.trace(\"HSB: {} - RGB: {} - XYZ: {} {} {} - xyY: {}\", hsb, ColorUtil.hsbToRgbPercent(hsb), X, Y, Z,\n+                    xyY);\n+        }\n         return xyY;\n     }\n \n@@ -190,56 +202,67 @@ public static double[] hsbToXY(HSBType hsbType, Gamut gamut) {\n      * Transform <a href=\"https://en.wikipedia.org/wiki/SRGB\">sRGB</a> color format to\n      * <a href=\"https://en.wikipedia.org/wiki/HSL_and_HSV\">HSV</a> based {@link HSBType}.\n      *\n-     * Note: Conversion result is rounded and HSBType is created with integer valued components.\n-     *\n-     * @param rgb int array of length 3, all values are constrained to 0-255\n+     * @param rgb array of three int with the RGB values in the range 0 to 255.\n      * @return the corresponding {@link HSBType}.\n-     * @throws IllegalArgumentException when input array has wrong size or exceeds allowed value range\n+     * @throws IllegalArgumentException when input array has wrong size or exceeds allowed value range.\n      */\n     public static HSBType rgbToHsb(int[] rgb) throws IllegalArgumentException {\n         if (rgb.length != 3 || !inByteRange(rgb[0]) || !inByteRange(rgb[1]) || !inByteRange(rgb[2])) {\n             throw new IllegalArgumentException(\"RGB array only allows values between 0 and 255\");\n         }\n-        final int r = rgb[0];\n-        final int g = rgb[1];\n-        final int b = rgb[2];\n+        return rgbToHsb(new PercentType[] { convertByteToColorPercent(rgb[0]), convertByteToColorPercent(rgb[1]),\n+                convertByteToColorPercent(rgb[2]) });\n+    }\n \n-        int max = (r > g) ? r : g;\n-        if (b > max) {\n-            max = b;\n+    /**\n+     * Transform <a href=\"https://en.wikipedia.org/wiki/SRGB\">sRGB</a> color format to\n+     * <a href=\"https://en.wikipedia.org/wiki/HSL_and_HSV\">HSV</a> based {@link HSBType}.\n+     *\n+     * @param rgb array of three {@link PercentType] with the RGB values in the range 0 to 100 percent.\n+     * @return the corresponding {@link HSBType}.\n+     * @throws IllegalArgumentException when input array has wrong size or exceeds allowed value range.\n+     */\n+    public static HSBType rgbToHsb(PercentType[] rgb) throws IllegalArgumentException {\n+        if (rgb.length != 3) {\n+            throw new IllegalArgumentException(\"RGB array needs exactly three values!\");\n         }\n-        int min = (r < g) ? r : g;\n-        if (b < min) {\n-            min = b;\n+\n+        BigDecimal r = rgb[0].toBigDecimal();\n+        BigDecimal g = rgb[1].toBigDecimal();\n+        BigDecimal b = rgb[2].toBigDecimal();\n+\n+        BigDecimal max = r.max(g).max(b);\n+        BigDecimal min = r.min(g).min(b);\n+        BigDecimal span = max.subtract(min);\n+\n+        if (max.compareTo(BigDecimal.ZERO) == 0) { // all values are 0, return black\n+            return new HSBType();\n+        } else if (span.compareTo(BigDecimal.ZERO) == 0) { // all values are equal, return dimmed white\n+            return new HSBType(new DecimalType(), new PercentType(), new PercentType(max));\n         }\n-        float tmpHue;\n-        final float tmpBrightness = max / 2.55f;\n-        final float tmpSaturation = (max != 0 ? ((float) (max - min)) / ((float) max) : 0) * 100.0f;\n-        // smallest possible saturation: 0 (max=0 or max-min=0), other value closest to 0 is 100/255 (max=255, min=254)\n-        // -> avoid float comparision to 0\n-        // if (tmpSaturation == 0) {\n-        if (max == 0 || (max - min) == 0) {\n-            tmpHue = 0;\n+\n+        PercentType saturation = new PercentType(span.divide(max, COLOR_MATH_CONTEXT).multiply(BIG_DECIMAL_HUNDRED));\n+        PercentType brightness = new PercentType(max);\n+\n+        BigDecimal scale = span.divide(BigDecimal.valueOf(60), COLOR_MATH_CONTEXT);\n+\n+        BigDecimal redAngle = max.subtract(r).divide(scale, COLOR_MATH_CONTEXT);\n+        BigDecimal greenAngle = max.subtract(g).divide(scale, COLOR_MATH_CONTEXT);\n+        BigDecimal blueAngle = max.subtract(b).divide(scale, COLOR_MATH_CONTEXT);\n+\n+        BigDecimal hue;\n+        if (r.compareTo(max) == 0) {\n+            hue = blueAngle.subtract(greenAngle);\n+        } else if (g.compareTo(max) == 0) {\n+            hue = BigDecimal.valueOf(120).add(redAngle).subtract(blueAngle);\n         } else {\n-            float red = ((float) (max - r)) / ((float) (max - min));\n-            float green = ((float) (max - g)) / ((float) (max - min));\n-            float blue = ((float) (max - b)) / ((float) (max - min));\n-            if (r == max) {\n-                tmpHue = blue - green;\n-            } else if (g == max) {\n-                tmpHue = 2.0f + red - blue;\n-            } else {\n-                tmpHue = 4.0f + green - red;\n-            }\n-            tmpHue = tmpHue / 6.0f * 360;\n-            if (tmpHue < 0) {\n-                tmpHue = tmpHue + 360.0f;\n-            }\n+            hue = BigDecimal.valueOf(240).add(greenAngle).subtract(redAngle);\n+        }\n+        if (hue.compareTo(BigDecimal.ZERO) < 0) {\n+            hue = hue.add(BigDecimal.valueOf(360));\n         }\n \n-        // adding 0.5 and casting to int approximates rounding\n-        return new HSBType(new DecimalType((int) (tmpHue + .5f)), new PercentType((int) (tmpSaturation + .5f)),\n-                new PercentType((int) (tmpBrightness + .5f)));\n+        return new HSBType(new DecimalType(hue), saturation, brightness);\n     }\n \n     /**\n@@ -250,9 +273,9 @@ public static HSBType rgbToHsb(int[] rgb) throws IllegalArgumentException {\n      * \"https://developers.meethue.com/develop/application-design-guidance/color-conversion-formulas-rgb-to-xy-and-back/\">Hue\n      * developer portal</a>.\n      *\n-     * @param xy the CIE 1931 xy color, x,y between 0.0000 and 1.0000.\n+     * @param xy array of double with CIE 1931 x,y[,Y] in the range 0.0000 to 1.0000 <code>Y</code> value is optional.\n      * @return the corresponding {@link HSBType}.\n-     * @throws IllegalArgumentException when input array has wrong size or exceeds allowed value range\n+     * @throws IllegalArgumentException when input array has wrong size or exceeds allowed value range.\n      */\n     public static HSBType xyToHsb(double[] xy) throws IllegalArgumentException {\n         return xyToHsb(xy, DEFAULT_GAMUT);\n@@ -266,15 +289,15 @@ public static HSBType xyToHsb(double[] xy) throws IllegalArgumentException {\n      * \"https://developers.meethue.com/develop/application-design-guidance/color-conversion-formulas-rgb-to-xy-and-back/\">Hue\n      * developer portal</a>.\n      *\n-     * @param xy the CIE 1931 xy color, x,y[,Y] between 0.0000 and 1.0000. <code>Y</code> value is optional.\n-     * @param gamut the gamut supported by the light.\n+     * @param xy array of double with CIE 1931 x,y[,Y] in the range 0.0000 to 1.0000 <code>Y</code> value is optional.\n+     * @param gamut the color Gamut supported by the light.\n      * @return the corresponding {@link HSBType}.\n      * @throws IllegalArgumentException when input array has wrong size or exceeds allowed value range\n      */\n     public static HSBType xyToHsb(double[] xy, Gamut gamut) throws IllegalArgumentException {\n         if (xy.length < 2 || xy.length > 3 || !inRange(xy[0]) || !inRange(xy[1])\n                 || (xy.length == 3 && !inRange(xy[2]))) {\n-            throw new IllegalArgumentException(\"xy array only allowes two or three values between 0.0 and 1.0.\");\n+            throw new IllegalArgumentException(\"xy array only allows two or three values between 0.0 and 1.0.\");\n         }\n         Point p = gamut.closest(new Point(xy[0], xy[1]));\n         double x = p.x;\n@@ -315,11 +338,10 @@ public static HSBType xyToHsb(double[] xy, Gamut gamut) throws IllegalArgumentEx\n             b /= max;\n         }\n \n-        HSBType hsb = rgbToHsb(\n-                new int[] { (int) Math.round(255.0 * r), (int) Math.round(255.0 * g), (int) Math.round(255.0 * b) });\n-        LOGGER.trace(\"xy: {} - XYZ: {} {} {} - RGB: {} {} {} - HSB: {} \", xy, X, Y, Z, r, g, b, hsb);\n+        LOGGER.trace(\"xy: {} - XYZ: {} {} {} - RGB: {} {} {}\", xy, X, Y, Z, r, g, b);\n \n-        return hsb;\n+        return rgbToHsb(new PercentType[] { convertDoubleToColorPercent(r), convertDoubleToColorPercent(g),\n+                convertDoubleToColorPercent(b) });\n     }\n \n     /**\n@@ -466,4 +488,12 @@ private static int convertColorPercentToByte(PercentType percent) {\n         return percent.toBigDecimal().multiply(BigDecimal.valueOf(255))\n                 .divide(BIG_DECIMAL_HUNDRED, 0, RoundingMode.HALF_UP).intValue();\n     }\n+\n+    private static PercentType convertByteToColorPercent(int b) {\n+        return new PercentType(new BigDecimal(b).divide(new BigDecimal(\"2.55\"), COLOR_MATH_CONTEXT));\n+    }\n+\n+    private static PercentType convertDoubleToColorPercent(double d) {\n+        return new PercentType(new BigDecimal(d).multiply(BIG_DECIMAL_HUNDRED, COLOR_MATH_CONTEXT));\n+    }\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/HSBTypeTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/HSBTypeTest.java\nindex fc2df6716fa..43ce328e0ae 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/HSBTypeTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/HSBTypeTest.java\n@@ -70,10 +70,11 @@ private int convertPercentToByte(PercentType percent) {\n \n     private void compareHsbToRgbValues(String hsbValues, int red, int green, int blue) {\n         HSBType hsb = new HSBType(hsbValues);\n+        HSBType hsbRgb = HSBType.fromRGB(red, green, blue);\n \n-        assertEquals(red, convertPercentToByte(hsb.getRed()));\n-        assertEquals(green, convertPercentToByte(hsb.getGreen()));\n-        assertEquals(blue, convertPercentToByte(hsb.getBlue()));\n+        assertEquals(hsb.getHue().doubleValue(), hsbRgb.getHue().doubleValue(), 0.5);\n+        assertEquals(hsb.getSaturation().doubleValue(), hsbRgb.getSaturation().doubleValue(), 0.5);\n+        assertEquals(hsb.getBrightness().doubleValue(), hsbRgb.getBrightness().doubleValue(), 0.5);\n     }\n \n     @Test\n@@ -93,9 +94,9 @@ private void compareRgbToHsbValues(String hsbValues, int red, int green, int blu\n         HSBType hsb = new HSBType(hsbValues);\n         HSBType hsbRgb = HSBType.fromRGB(red, green, blue);\n \n-        assertEquals(hsb.getHue(), hsbRgb.getHue());\n-        assertEquals(hsb.getSaturation(), hsbRgb.getSaturation());\n-        assertEquals(hsb.getBrightness(), hsbRgb.getBrightness());\n+        assertEquals(hsb.getHue().doubleValue(), hsbRgb.getHue().doubleValue(), 0.5);\n+        assertEquals(hsb.getSaturation().doubleValue(), hsbRgb.getSaturation().doubleValue(), 0.5);\n+        assertEquals(hsb.getBrightness().doubleValue(), hsbRgb.getBrightness().doubleValue(), 0.5);\n     }\n \n     @Test\n\ndiff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java\nindex 297f9cd4bab..21acc54d127 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/util/ColorUtilTest.java\n@@ -13,9 +13,7 @@\n package org.openhab.core.util;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.Matchers.is;\n-import static org.hamcrest.Matchers.lessThan;\n-import static org.hamcrest.Matchers.lessThanOrEqualTo;\n+import static org.hamcrest.Matchers.*;\n import static org.junit.jupiter.api.Assertions.*;\n \n import java.util.stream.Stream;\n@@ -32,6 +30,7 @@\n import org.junit.jupiter.params.provider.MethodSource;\n import org.openhab.core.library.types.HSBType;\n import org.openhab.core.library.types.PercentType;\n+import org.openhab.core.util.ColorUtil.Gamut;\n \n /**\n  * The {@link ColorUtilTest} is a test class for the color conversion\n@@ -52,8 +51,10 @@ public void inversionTest(HSBType hsb) {\n         deltaHue = deltaHue > 180.0 ? Math.abs(deltaHue - 360) : deltaHue;\n         double deltaSat = Math.abs(hsb.getSaturation().doubleValue() - hsb2.getSaturation().doubleValue());\n         double deltaBri = Math.abs(hsb.getBrightness().doubleValue() - hsb2.getBrightness().doubleValue());\n-\n-        assertThat(deltaHue, is(lessThan(5.0)));\n+        // hue is meaningless when saturation is zero\n+        if (hsb.getSaturation().doubleValue() > 0) {\n+            assertThat(deltaHue, is(lessThan(5.0)));\n+        }\n         assertThat(deltaSat, is(lessThanOrEqualTo(1.0)));\n         assertThat(deltaBri, is(lessThanOrEqualTo(1.0)));\n     }\n@@ -75,12 +76,12 @@ public void testConversionToXY() {\n     // test RGB -> HSB -> RGB conversion for different values, including the ones known to cause rounding error\n     @ParameterizedTest\n     @ArgumentsSource(RgbValueProvider.class)\n-    public void testConversionRgbToHsbToRgb(int[] rgb, int maxSquaredSum) {\n+    public void testConversionRgbToHsbToRgb(int[] rgb) {\n         HSBType hsb = ColorUtil.rgbToHsb(rgb);\n         Assertions.assertNotNull(hsb);\n \n         final int[] convertedRgb = ColorUtil.hsbToRgb(hsb);\n-        assertRgbEquals(rgb, convertedRgb, maxSquaredSum);\n+        assertRgbEquals(rgb, convertedRgb);\n     }\n \n     @ParameterizedTest\n@@ -90,7 +91,7 @@ public void testConversionHsbToRgb(int[] hsb, int[] rgb) {\n         final HSBType hsbType = new HSBType(hsbString);\n \n         final int[] converted = ColorUtil.hsbToRgb(hsbType);\n-        assertRgbEquals(rgb, converted, 0);\n+        assertRgbEquals(rgb, converted);\n     }\n \n     @ParameterizedTest\n@@ -99,7 +100,7 @@ public void testConversionRgbToRgb(int[] hsb, int[] rgb) {\n         final HSBType hsbType = ColorUtil.rgbToHsb(rgb);\n \n         final int[] rgbConverted = ColorUtil.hsbToRgb(hsbType);\n-        assertRgbEquals(rgb, rgbConverted, 0);\n+        assertRgbEquals(rgb, rgbConverted);\n     }\n \n     @ParameterizedTest\n@@ -113,11 +114,47 @@ public void testConversionRgbToHsb(int[] hsb, int[] rgb) {\n         assertTrue(hsbType.closeTo(new HSBType(expected), 0.01));\n     }\n \n+    private void xyToXY(double[] xy, Gamut gamut) {\n+        assertTrue(xy.length > 1);\n+        HSBType hsb = ColorUtil.xyToHsb(xy, gamut);\n+        double[] xy2 = ColorUtil.hsbToXY(hsb, gamut);\n+        assertTrue(xy2.length > 1);\n+        for (int i = 0; i < xy.length; i++) {\n+            assertEquals(xy[i], xy2[i], 0.02);\n+        }\n+    }\n+\n+    /**\n+     * Test XY -> RGB -> HSB - RGB - XY round trips.\n+     * Use ColorUtil fine precision methods for conversions.\n+     * Test on Hue standard Gamuts 'A', 'B', and 'C'.\n+     */\n+    @Test\n+    public void testXyHsbRoundTrips() {\n+        Gamut[] gamuts = new Gamut[] {\n+                new Gamut(new double[] { 0.704, 0.296 }, new double[] { 0.2151, 0.7106 }, new double[] { 0.138, 0.08 }),\n+                new Gamut(new double[] { 0.675, 0.322 }, new double[] { 0.409, 0.518 }, new double[] { 0.167, 0.04 }),\n+                new Gamut(new double[] { 0.6915, 0.3038 }, new double[] { 0.17, 0.7 }, new double[] { 0.1532, 0.0475 }) //\n+        };\n+        for (Gamut g : gamuts) {\n+            xyToXY(g.r(), g);\n+            xyToXY(g.g(), g);\n+            xyToXY(g.b(), g);\n+            xyToXY(new double[] { (g.r()[0] + g.g()[0]) / 2f, (g.r()[1] + g.g()[1]) / 2f }, g);\n+            xyToXY(new double[] { (g.g()[0] + g.b()[0]) / 2f, (g.g()[1] + g.b()[1]) / 2f }, g);\n+            xyToXY(new double[] { (g.b()[0] + g.r()[0]) / 2f, (g.b()[1] + g.r()[1]) / 2f }, g);\n+            xyToXY(new double[] { (g.r()[0] + g.g()[0] + g.b()[0]) / 3f, (g.r()[1] + g.g()[1] + g.b()[1]) / 3f }, g);\n+            xyToXY(ColorUtil.hsbToXY(HSBType.WHITE), g);\n+        }\n+    }\n+\n     /* Providers for parameterized tests */\n \n     private static Stream<Arguments> colors() {\n-        return Stream.of(HSBType.BLACK, HSBType.BLUE, HSBType.GREEN, HSBType.RED, HSBType.WHITE,\n-                ColorUtil.rgbToHsb(new int[] { 127, 94, 19 })).map(Arguments::of);\n+        return Stream\n+                .of(HSBType.BLACK, HSBType.BLUE, HSBType.GREEN, HSBType.RED, HSBType.WHITE,\n+                        ColorUtil.rgbToHsb(new int[] { 127, 94, 19 }), new HSBType(\"0,0.1,0\"), new HSBType(\"0,0.1,100\"))\n+                .map(Arguments::of);\n     }\n \n     private static Stream<Arguments> invalids() {\n@@ -152,55 +189,42 @@ public Stream<? extends Arguments> provideArguments(@Nullable ExtensionContext c\n     }\n \n     /*\n-     * Return a stream RGB values together with allowed deviation (sum of squared differences).\n-     * Differences in conversion are due to rounding errors as HSBType is created with integer numbers.\n+     * Return a stream RGB values.\n      */\n-\n     static class RgbValueProvider implements ArgumentsProvider {\n         @Override\n         public Stream<? extends Arguments> provideArguments(@Nullable ExtensionContext context) throws Exception {\n-            return Stream.of(Arguments.of(new int[] { 0, 0, 0 }, 0), Arguments.of(new int[] { 255, 255, 255 }, 0),\n-                    Arguments.of(new int[] { 255, 0, 0 }, 0), Arguments.of(new int[] { 0, 255, 0 }, 0),\n-                    Arguments.of(new int[] { 0, 0, 255 }, 0), Arguments.of(new int[] { 255, 255, 0 }, 0),\n-                    Arguments.of(new int[] { 255, 0, 255 }, 0), Arguments.of(new int[] { 0, 255, 255 }, 0),\n-                    Arguments.of(new int[] { 191, 191, 191 }, 0), Arguments.of(new int[] { 128, 128, 128 }, 0),\n-                    Arguments.of(new int[] { 128, 0, 0 }, 0), Arguments.of(new int[] { 128, 128, 0 }, 0),\n-                    Arguments.of(new int[] { 0, 128, 0 }, 0), Arguments.of(new int[] { 128, 0, 128 }, 0),\n-                    Arguments.of(new int[] { 0, 128, 128 }, 0), Arguments.of(new int[] { 0, 0, 128 }, 0),\n-                    Arguments.of(new int[] { 0, 132, 255 }, 0), Arguments.of(new int[] { 1, 131, 254 }, 3),\n-                    Arguments.of(new int[] { 2, 130, 253 }, 6), Arguments.of(new int[] { 3, 129, 252 }, 4),\n-                    Arguments.of(new int[] { 4, 128, 251 }, 3), Arguments.of(new int[] { 5, 127, 250 }, 0));\n+            return Stream.of(Arguments.of(new int[] { 0, 0, 0 }), Arguments.of(new int[] { 255, 255, 255 }),\n+                    Arguments.of(new int[] { 255, 0, 0 }), Arguments.of(new int[] { 0, 255, 0 }),\n+                    Arguments.of(new int[] { 0, 0, 255 }), Arguments.of(new int[] { 255, 255, 0 }),\n+                    Arguments.of(new int[] { 255, 0, 255 }), Arguments.of(new int[] { 0, 255, 255 }),\n+                    Arguments.of(new int[] { 191, 191, 191 }), Arguments.of(new int[] { 128, 128, 128 }),\n+                    Arguments.of(new int[] { 128, 0, 0 }), Arguments.of(new int[] { 128, 128, 0 }),\n+                    Arguments.of(new int[] { 0, 128, 0 }), Arguments.of(new int[] { 128, 0, 128 }),\n+                    Arguments.of(new int[] { 0, 128, 128 }), Arguments.of(new int[] { 0, 0, 128 }),\n+                    Arguments.of(new int[] { 0, 132, 255 }), Arguments.of(new int[] { 1, 131, 254 }),\n+                    Arguments.of(new int[] { 2, 130, 253 }), Arguments.of(new int[] { 3, 129, 252 }),\n+                    Arguments.of(new int[] { 4, 128, 251 }), Arguments.of(new int[] { 5, 127, 250 }));\n         }\n     }\n \n     /* Helper functions */\n \n     /**\n-     * Helper method for checking if expected and actual RGB color parameters (int[3], 0..255) lie within a given\n-     * percentage of each other. This method is required in order to eliminate integer rounding artifacts in JUnit tests\n-     * when comparing RGB values. Asserts that the color parameters of expected and actual do not have a squared sum\n-     * of differences which exceeds maxSquaredSum.\n+     * Helper method for checking if expected and actual RGB color parameters (int[3], 0..255) match.\n      *\n      * When the test fails, both colors are printed.\n      *\n      * @param expected an HSBType containing the expected color.\n      * @param actual an HSBType containing the actual color.\n-     * @param maxSquaredSum the maximum allowed squared sum of differences.\n      */\n-    private void assertRgbEquals(final int[] expected, final int[] actual, int maxSquaredSum) {\n-        int squaredSum = 0;\n+    private void assertRgbEquals(final int[] expected, final int[] actual) {\n         if (expected[0] != actual[0] || expected[1] != actual[1] || expected[2] != actual[2]) {\n-            // only proceed if both RGB colors are not idential\n-            for (int i = 0; i < 3; i++) {\n-                int diff = expected[i] - actual[i];\n-                squaredSum = squaredSum + diff * diff;\n-            }\n-            if (squaredSum > maxSquaredSum) {\n-                // deviation too high, just prepare readable string compare and let it fail\n-                final String expectedS = expected[0] + \", \" + expected[1] + \", \" + expected[2];\n-                final String actualS = actual[0] + \", \" + actual[1] + \", \" + actual[2];\n-                assertEquals(expectedS, actualS);\n-            }\n+            // only proceed if both RGB colors are not idential,\n+            // just prepare readable string compare and let it fail\n+            final String expectedS = expected[0] + \", \" + expected[1] + \", \" + expected[2];\n+            final String actualS = actual[0] + \", \" + actual[1] + \", \" + actual[2];\n+            assertEquals(expectedS, actualS);\n         }\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3526",
    "pr_id": 3526,
    "issue_id": 3527,
    "repo": "openhab/openhab-core",
    "problem_statement": "Things from textual configuration are not properly reloaded\nUnfortunately, this issue persists. The file change was noticed all the time and is still noticed (`[el.core.internal.ModelRepositoryImpl] - Loading model 'knx.things'`), but the KNX devices/Things don't update.\r\n\r\nI am not also encountering another weird behaviour: my `-control` channels have stopped working, the `handleCommand` method of `DeviceThingHandler` is not called for control channels. I have just checked, with SNAPSHOT 3390 from 31th of March, they work.\r\n\r\n_Originally posted by @florian-h05 in https://github.com/openhab/openhab-addons/issues/14534#issuecomment-1497943762_\r\n            ",
    "issue_word_count": 94,
    "test_files_count": 1,
    "non_test_files_count": 3,
    "pr_changed_files": [
      "bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/Channel.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/util/ThingHelper.java",
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/util/ThingHelperTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/util/ThingHelperTest.java"
    ],
    "base_commit": "ee392e861fe7e6684b28e19a65e808beca2a83d2",
    "head_commit": "ef635db5782d1d895ae331e0257d726530561339",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3526",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3526",
    "dockerfile": "",
    "pr_merged_at": "2023-04-15T07:16:32.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend b/bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend\nindex b8559cc88da..e07b8fd5dc4 100644\n--- a/bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend\n+++ b/bundles/org.openhab.core.model.thing/src/org/openhab/core/model/thing/internal/GenericThingProvider.xtend\n@@ -602,19 +602,20 @@ class GenericThingProvider extends AbstractProviderLazyNullness<Thing> implement\n     }\n \n     def private createThingsFromModelForThingHandlerFactory(String modelName, ThingHandlerFactory factory) {\n-        if (!loadedXmlThingTypes.contains(factory.bundleName)) {\n+        if (!loadedXmlThingTypes.contains(factory.bundleName) || modelRepository == null) {\n             return\n         }\n         val oldThings = thingsMap.get(modelName).clone\n         val newThings = newArrayList()\n-        if (modelRepository !== null) {\n-            val model = modelRepository.getModel(modelName) as ThingModel\n-            if (model !== null) {\n-                flattenModelThings(model.things).forEach [\n-                    createThing(newThings, factory)\n-                ]\n-            }\n+\n+        val model = modelRepository.getModel(modelName) as ThingModel\n+        if (model !== null) {\n+            flattenModelThings(model.things).forEach [\n+                createThing(newThings, factory)\n+            ]\n         }\n+        thingsMap.put(modelName, newThings)\n+\n         newThings.forEach [ newThing |\n             val oldThing = oldThings.findFirst[it.UID == newThing.UID]\n             if (oldThing !== null) {\n@@ -624,7 +625,6 @@ class GenericThingProvider extends AbstractProviderLazyNullness<Thing> implement\n                 }\n             } else {\n                 logger.debug(\"Adding thing '{}' from model '{}'.\", newThing.UID, modelName);\n-                thingsMap.get(modelName).add(newThing)\n                 newThing.notifyListenersAboutAddedElement\n             }\n         ]\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/Channel.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/Channel.java\nindex 9a3ec7df81e..ee1e8c9a001 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/Channel.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/Channel.java\n@@ -14,6 +14,7 @@\n \n import java.util.LinkedHashSet;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -178,4 +179,27 @@ public Set<String> getDefaultTags() {\n     public @Nullable AutoUpdatePolicy getAutoUpdatePolicy() {\n         return autoUpdatePolicy;\n     }\n+\n+    @Override\n+    public boolean equals(@Nullable Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+        Channel channel = (Channel) o;\n+        return Objects.equals(acceptedItemType, channel.acceptedItemType) && kind == channel.kind\n+                && Objects.equals(uid, channel.uid) && Objects.equals(channelTypeUID, channel.channelTypeUID)\n+                && Objects.equals(label, channel.label) && Objects.equals(description, channel.description)\n+                && Objects.equals(configuration, channel.configuration)\n+                && Objects.equals(properties, channel.properties) && Objects.equals(defaultTags, channel.defaultTags)\n+                && autoUpdatePolicy == channel.autoUpdatePolicy;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(acceptedItemType, kind, uid, channelTypeUID, label, description, configuration, properties,\n+                defaultTags, autoUpdatePolicy);\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/util/ThingHelper.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/util/ThingHelper.java\nindex 0fdfd8e122b..c43b7d4de7f 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/util/ThingHelper.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/util/ThingHelper.java\n@@ -12,10 +12,8 @@\n  */\n package org.openhab.core.thing.util;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n@@ -79,24 +77,10 @@ public static boolean equals(Thing a, Thing b) {\n             return false;\n         }\n         // channels\n-        List<Channel> channelsOfA = a.getChannels();\n-        List<Channel> channelsOfB = b.getChannels();\n-        if (channelsOfA.size() != channelsOfB.size()) {\n-            return false;\n-        }\n-        if (!toString(channelsOfA).equals(toString(channelsOfB))) {\n-            return false;\n-        }\n-        return true;\n-    }\n+        Set<Channel> channelsOfA = new HashSet<>(a.getChannels());\n+        Set<Channel> channelsOfB = new HashSet<>(b.getChannels());\n \n-    private static String toString(List<Channel> channels) {\n-        List<String> strings = new ArrayList<>(channels.size());\n-        for (Channel channel : channels) {\n-            strings.add(channel.getUID().toString() + '#' + channel.getAcceptedItemType() + '#' + channel.getKind());\n-        }\n-        Collections.sort(strings);\n-        return String.join(\",\", strings);\n+        return channelsOfA.equals(channelsOfB);\n     }\n \n     public static void addChannelsToThing(Thing thing, Collection<Channel> channels) {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/util/ThingHelperTest.java b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/util/ThingHelperTest.java\nindex 71934b6635a..3a5f96e0e85 100644\n--- a/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/util/ThingHelperTest.java\n+++ b/bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/util/ThingHelperTest.java\n@@ -16,6 +16,7 @@\n import static org.junit.jupiter.api.Assertions.*;\n \n import java.util.List;\n+import java.util.Map;\n import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -142,4 +143,21 @@ public void assertThatNoDuplicateChannelsCanBeAdded() {\n                                 ChannelBuilder.create(new ChannelUID(thingUID, \"channel3\"), \"\").build())\n                                 .collect(toList())));\n     }\n+\n+    @Test\n+    public void asserThatChannelsWithDifferentConfigurationAreDetectedAsDifferent() {\n+        Thing thingA = ThingBuilder.create(THING_TYPE_UID, THING_UID)\n+                .withChannels(ChannelBuilder.create(new ChannelUID(\"binding:type:thingId:channel1\"), \"itemType\")\n+                        .withConfiguration(new Configuration(Map.of(\"key\", \"v1\"))).build())\n+                .withConfiguration(new Configuration()).build();\n+\n+        assertTrue(ThingHelper.equals(thingA, thingA));\n+\n+        Thing thingB = ThingBuilder.create(THING_TYPE_UID, THING_UID)\n+                .withChannels(ChannelBuilder.create(new ChannelUID(\"binding:type:thingId:channel1\"), \"itemType\")\n+                        .withConfiguration(new Configuration(Map.of(\"key\", \"v2\"))).build())\n+                .withConfiguration(new Configuration()).build();\n+\n+        assertFalse(ThingHelper.equals(thingA, thingB));\n+    }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3457",
    "pr_id": 3457,
    "issue_id": 3456,
    "repo": "openhab/openhab-core",
    "problem_statement": "[SCRIPT] Attempting to use transform on Channel requires restart to see .script file\nForum thread: https://community.openhab.org/t/executing-the-script-transformation-failed-could-not-get-script-for-uid-filename-script/145251\r\n\r\nI've seen this reported on 3.2.4 (https://community.openhab.org/t/scaling-of-voltage-reading-in-mqtt-reading/145242/) and experienced this on OH 4.0 #3368.\r\n\r\nI only tried this with `graaljs` but it seems to be a problem with `dsl` too and likely all languages.\r\n\r\nI only tried this with the MQTT binding but given where the error is coming from I suspect it affects all bindings (if I'm wrong this needs to move to the addons repo).\r\n\r\nWhen adding a new transformation `.script` file, the SCRIPT transform will not see the file until OH is restarted. It reports the following error.\r\n\r\n    2023-03-14 11:35:51.142 [WARN ] [t.generic.ChannelStateTransformation] - Executing the SCRIPT-transformation failed: Could not get script for UID 'logtrans.script'.",
    "issue_word_count": 166,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.transform/src/main/java/org/openhab/core/transform/FileTransformationProvider.java",
      "bundles/org.openhab.core.transform/src/test/java/org/openhab/core/transform/FileTransformationProviderTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.transform/src/test/java/org/openhab/core/transform/FileTransformationProviderTest.java"
    ],
    "base_commit": "c05fe8ad4d5329d76fa0e0e8d137dce3be88fffe",
    "head_commit": "ed5586ee846162f23dcec02854ce508f86741c28",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3457",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3457",
    "dockerfile": "",
    "pr_merged_at": "2023-03-16T07:52:31.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.transform/src/main/java/org/openhab/core/transform/FileTransformationProvider.java b/bundles/org.openhab.core.transform/src/main/java/org/openhab/core/transform/FileTransformationProvider.java\nindex a494039f5d1..a5df5441d90 100644\n--- a/bundles/org.openhab.core.transform/src/main/java/org/openhab/core/transform/FileTransformationProvider.java\n+++ b/bundles/org.openhab.core.transform/src/main/java/org/openhab/core/transform/FileTransformationProvider.java\n@@ -12,22 +12,23 @@\n  */\n package org.openhab.core.transform;\n \n+import static org.openhab.core.service.WatchService.Kind.CREATE;\n+import static org.openhab.core.service.WatchService.Kind.DELETE;\n+import static org.openhab.core.service.WatchService.Kind.MODIFY;\n import static org.openhab.core.transform.Transformation.FUNCTION;\n \n import java.io.IOException;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-import java.nio.file.StandardWatchEventKinds;\n-import java.nio.file.WatchEvent;\n import java.util.Collection;\n import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n+import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.openhab.core.OpenHAB;\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.service.WatchService;\n import org.osgi.service.component.annotations.Activate;\n@@ -46,13 +47,9 @@\n @NonNullByDefault\n @Component(service = TransformationProvider.class, immediate = true)\n public class FileTransformationProvider implements WatchService.WatchEventListener, TransformationProvider {\n-    private static final WatchEvent.Kind<?>[] WATCH_EVENTS = { StandardWatchEventKinds.ENTRY_CREATE,\n-            StandardWatchEventKinds.ENTRY_DELETE, StandardWatchEventKinds.ENTRY_MODIFY };\n     private static final Set<String> IGNORED_EXTENSIONS = Set.of(\"txt\", \"swp\");\n     private static final Pattern FILENAME_PATTERN = Pattern\n             .compile(\"(?<filename>.+?)(_(?<language>[a-z]{2}))?\\\\.(?<extension>[^.]*)$\");\n-    private static final Path TRANSFORMATION_PATH = Path.of(OpenHAB.getConfigFolder(),\n-            TransformationService.TRANSFORM_FOLDER_NAME);\n \n     private final Logger logger = LoggerFactory.getLogger(FileTransformationProvider.class);\n \n@@ -64,19 +61,13 @@ public class FileTransformationProvider implements WatchService.WatchEventListen\n     @Activate\n     public FileTransformationProvider(\n             @Reference(target = WatchService.CONFIG_WATCHER_FILTER) WatchService watchService) {\n-        this(watchService, TRANSFORMATION_PATH);\n-    }\n-\n-    // constructor package private used for testing\n-    FileTransformationProvider(WatchService watchService, Path transformationPath) {\n-        this.transformationPath = transformationPath;\n         this.watchService = watchService;\n+        this.transformationPath = watchService.getWatchPath().resolve(TransformationService.TRANSFORM_FOLDER_NAME);\n \n         watchService.registerListener(this, transformationPath);\n         // read initial contents\n-        try {\n-            Files.walk(transformationPath).filter(Files::isRegularFile)\n-                    .forEach(f -> processPath(WatchService.Kind.CREATE, f));\n+        try (Stream<Path> files = Files.walk(transformationPath)) {\n+            files.filter(Files::isRegularFile).map(transformationPath::relativize).forEach(f -> processPath(CREATE, f));\n         } catch (IOException e) {\n             logger.warn(\"Could not list files in '{}', transformation configurations might be missing: {}\",\n                     transformationPath, e.getMessage());\n@@ -104,14 +95,14 @@ public Collection<Transformation> getAll() {\n     }\n \n     private void processPath(WatchService.Kind kind, Path path) {\n-        if (kind == WatchService.Kind.DELETE) {\n+        Path finalPath = transformationPath.resolve(path);\n+        if (kind == DELETE) {\n             Transformation oldElement = transformationConfigurations.remove(path);\n             if (oldElement != null) {\n                 logger.trace(\"Removed configuration from file '{}\", path);\n                 listeners.forEach(listener -> listener.removed(this, oldElement));\n             }\n-        } else if (Files.isRegularFile(path)\n-                && (kind == WatchService.Kind.CREATE || kind == WatchService.Kind.MODIFY)) {\n+        } else if (Files.isRegularFile(finalPath) && ((kind == CREATE) || (kind == MODIFY))) {\n             try {\n                 String fileName = path.getFileName().toString();\n                 Matcher m = FILENAME_PATTERN.matcher(fileName);\n@@ -128,8 +119,8 @@ private void processPath(WatchService.Kind kind, Path path) {\n                     return;\n                 }\n \n-                String content = new String(Files.readAllBytes(path));\n-                String uid = transformationPath.relativize(path).toString();\n+                String content = new String(Files.readAllBytes(finalPath));\n+                String uid = path.toString();\n \n                 Transformation newElement = new Transformation(uid, uid, fileExtension, Map.of(FUNCTION, content));\n                 Transformation oldElement = transformationConfigurations.put(path, newElement);\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.transform/src/test/java/org/openhab/core/transform/FileTransformationProviderTest.java b/bundles/org.openhab.core.transform/src/test/java/org/openhab/core/transform/FileTransformationProviderTest.java\nindex 257ae3e8240..0deab6bd692 100644\n--- a/bundles/org.openhab.core.transform/src/test/java/org/openhab/core/transform/FileTransformationProviderTest.java\n+++ b/bundles/org.openhab.core.transform/src/test/java/org/openhab/core/transform/FileTransformationProviderTest.java\n@@ -18,22 +18,23 @@\n import static org.hamcrest.Matchers.not;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.when;\n+import static org.openhab.core.service.WatchService.Kind.CREATE;\n+import static org.openhab.core.service.WatchService.Kind.DELETE;\n+import static org.openhab.core.service.WatchService.Kind.MODIFY;\n import static org.openhab.core.transform.Transformation.FUNCTION;\n \n-import java.io.File;\n import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.util.Map;\n-import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNull;\n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.jupiter.api.io.TempDir;\n import org.mockito.Mock;\n import org.mockito.Mockito;\n import org.mockito.junit.jupiter.MockitoExtension;\n@@ -54,38 +55,32 @@\n public class FileTransformationProviderTest {\n     private static final String FOO_TYPE = \"foo\";\n     private static final String INITIAL_CONTENT = \"initial\";\n-    private static final String INITIAL_FILENAME = INITIAL_CONTENT + \".\" + FOO_TYPE;\n-    private static final Transformation INITIAL_CONFIGURATION = new Transformation(INITIAL_FILENAME, INITIAL_FILENAME,\n-            FOO_TYPE, Map.of(FUNCTION, INITIAL_CONTENT));\n+    private static final Path INITIAL_FILENAME = Path.of(INITIAL_CONTENT + \".\" + FOO_TYPE);\n+    private static final Transformation INITIAL_CONFIGURATION = new Transformation(INITIAL_FILENAME.toString(),\n+            INITIAL_FILENAME.toString(), FOO_TYPE, Map.of(FUNCTION, INITIAL_CONTENT));\n     private static final String ADDED_CONTENT = \"added\";\n-    private static final String ADDED_FILENAME = ADDED_CONTENT + \".\" + FOO_TYPE;\n+    private static final Path ADDED_FILENAME = Path.of(ADDED_CONTENT + \".\" + FOO_TYPE);\n \n-    private @Mock @NonNullByDefault({}) WatchService watchService;\n+    private @Mock @NonNullByDefault({}) WatchService watchServiceMock;\n     private @Mock @NonNullByDefault({}) ProviderChangeListener<@NonNull Transformation> listenerMock;\n \n     private @NonNullByDefault({}) FileTransformationProvider provider;\n-    private @NonNullByDefault({}) Path targetPath;\n+    private @NonNullByDefault({}) @TempDir Path configPath;\n+    private @NonNullByDefault({}) Path transformationPath;\n \n     @BeforeEach\n     public void setup() throws IOException {\n-        // create directory\n-        targetPath = Files.createTempDirectory(\"fileTest\");\n+        when(watchServiceMock.getWatchPath()).thenReturn(configPath);\n+        transformationPath = configPath.resolve(TransformationService.TRANSFORM_FOLDER_NAME);\n \n-        // set initial content\n-        Files.write(targetPath.resolve(INITIAL_FILENAME), INITIAL_CONTENT.getBytes(StandardCharsets.UTF_8));\n+        // create transformation directory and set initial content\n+        Files.createDirectories(transformationPath);\n+        Files.writeString(transformationPath.resolve(INITIAL_FILENAME), INITIAL_CONTENT);\n \n-        provider = new FileTransformationProvider(watchService, targetPath);\n+        provider = new FileTransformationProvider(watchServiceMock);\n         provider.addProviderChangeListener(listenerMock);\n     }\n \n-    @AfterEach\n-    public void tearDown() throws IOException {\n-        try (Stream<Path> walk = Files.walk(targetPath)) {\n-            walk.map(Path::toFile).forEach(File::delete);\n-        }\n-        Files.deleteIfExists(targetPath);\n-    }\n-\n     @Test\n     public void testInitialConfigurationIsPresent() {\n         // assert that initial configuration is present\n@@ -94,13 +89,10 @@ public void testInitialConfigurationIsPresent() {\n \n     @Test\n     public void testAddingConfigurationIsPropagated() throws IOException {\n-        Path path = targetPath.resolve(ADDED_FILENAME);\n-\n-        Files.write(path, ADDED_CONTENT.getBytes(StandardCharsets.UTF_8));\n-        Transformation addedConfiguration = new Transformation(ADDED_FILENAME, ADDED_FILENAME, FOO_TYPE,\n-                Map.of(FUNCTION, ADDED_CONTENT));\n-\n-        provider.processWatchEvent(WatchService.Kind.CREATE, path);\n+        Files.writeString(transformationPath.resolve(ADDED_FILENAME), ADDED_CONTENT);\n+        Transformation addedConfiguration = new Transformation(ADDED_FILENAME.toString(), ADDED_FILENAME.toString(),\n+                FOO_TYPE, Map.of(FUNCTION, ADDED_CONTENT));\n+        provider.processWatchEvent(CREATE, ADDED_FILENAME);\n \n         // assert registry is notified and internal cache updated\n         Mockito.verify(listenerMock).added(provider, addedConfiguration);\n@@ -109,12 +101,10 @@ public void testAddingConfigurationIsPropagated() throws IOException {\n \n     @Test\n     public void testUpdatingConfigurationIsPropagated() throws IOException {\n-        Path path = targetPath.resolve(INITIAL_FILENAME);\n-        Files.write(path, \"updated\".getBytes(StandardCharsets.UTF_8));\n-        Transformation updatedConfiguration = new Transformation(INITIAL_FILENAME, INITIAL_FILENAME, FOO_TYPE,\n-                Map.of(FUNCTION, \"updated\"));\n-\n-        provider.processWatchEvent(WatchService.Kind.MODIFY, path);\n+        Files.writeString(transformationPath.resolve(INITIAL_FILENAME), \"updated\");\n+        Transformation updatedConfiguration = new Transformation(INITIAL_FILENAME.toString(),\n+                INITIAL_FILENAME.toString(), FOO_TYPE, Map.of(FUNCTION, \"updated\"));\n+        provider.processWatchEvent(MODIFY, INITIAL_FILENAME);\n \n         Mockito.verify(listenerMock).updated(provider, INITIAL_CONFIGURATION, updatedConfiguration);\n         assertThat(provider.getAll(), contains(updatedConfiguration));\n@@ -123,9 +113,7 @@ public void testUpdatingConfigurationIsPropagated() throws IOException {\n \n     @Test\n     public void testDeletingConfigurationIsPropagated() {\n-        Path path = targetPath.resolve(INITIAL_FILENAME);\n-\n-        provider.processWatchEvent(WatchService.Kind.DELETE, path);\n+        provider.processWatchEvent(DELETE, INITIAL_FILENAME);\n \n         Mockito.verify(listenerMock).removed(provider, INITIAL_CONFIGURATION);\n         assertThat(provider.getAll(), not(contains(INITIAL_CONFIGURATION)));\n@@ -134,22 +122,23 @@ public void testDeletingConfigurationIsPropagated() {\n     @Test\n     public void testLanguageIsProperlyParsed() throws IOException {\n         String fileName = \"test_de.\" + FOO_TYPE;\n-        Path path = targetPath.resolve(fileName);\n+        Path path = transformationPath.resolve(fileName);\n \n-        Files.write(path, INITIAL_CONTENT.getBytes(StandardCharsets.UTF_8));\n+        Files.writeString(path, INITIAL_CONTENT);\n \n         Transformation expected = new Transformation(fileName, fileName, FOO_TYPE, Map.of(FUNCTION, INITIAL_CONTENT));\n \n-        provider.processWatchEvent(WatchService.Kind.CREATE, path);\n+        provider.processWatchEvent(CREATE, Path.of(fileName));\n         assertThat(provider.getAll(), hasItem(expected));\n     }\n \n     @Test\n     public void testMissingExtensionIsIgnored() throws IOException {\n-        Path path = targetPath.resolve(\"extensionMissing\");\n-        Files.write(path, INITIAL_CONTENT.getBytes(StandardCharsets.UTF_8));\n-        provider.processWatchEvent(WatchService.Kind.CREATE, path);\n-        provider.processWatchEvent(WatchService.Kind.MODIFY, path);\n+        Path extensionMissing = Path.of(\"extensionMissing\");\n+        Path path = transformationPath.resolve(extensionMissing);\n+        Files.writeString(path, INITIAL_CONTENT);\n+        provider.processWatchEvent(CREATE, extensionMissing);\n+        provider.processWatchEvent(MODIFY, extensionMissing);\n \n         Mockito.verify(listenerMock, never()).added(any(), any());\n         Mockito.verify(listenerMock, never()).updated(any(), any(), any());\n@@ -157,10 +146,11 @@ public void testMissingExtensionIsIgnored() throws IOException {\n \n     @Test\n     public void testIgnoredExtensionIsIgnored() throws IOException {\n-        Path path = targetPath.resolve(\"extensionIgnore.txt\");\n-        Files.write(path, INITIAL_CONTENT.getBytes(StandardCharsets.UTF_8));\n-        provider.processWatchEvent(WatchService.Kind.CREATE, path);\n-        provider.processWatchEvent(WatchService.Kind.MODIFY, path);\n+        Path extensionIgnored = Path.of(\"extensionIgnore.txt\");\n+        Path path = transformationPath.resolve(extensionIgnored);\n+        Files.writeString(path, INITIAL_CONTENT);\n+        provider.processWatchEvent(CREATE, extensionIgnored);\n+        provider.processWatchEvent(MODIFY, extensionIgnored);\n \n         Mockito.verify(listenerMock, never()).added(any(), any());\n         Mockito.verify(listenerMock, never()).updated(any(), any(), any());\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3448",
    "pr_id": 3448,
    "issue_id": 3442,
    "repo": "openhab/openhab-core",
    "problem_statement": "OH 4.0 UI changes the sort order of channels\nIs it just me, or does OH v4.0 now change the sort order of channels in the UI? Previously they would sort according to the order in the thing.xml but now they seem to display in a random order..\r\n\r\n```\r\n<channels>\r\n    <channel id=\"position\" typeId=\"shade-position\"/>\r\n    <channel id=\"secondary\" typeId=\"shade-position\"/>\r\n    <channel id=\"vane\" typeId=\"shade-vane\"/>\r\n    <channel id=\"lowBattery\" typeId=\"system.low-battery\"/>\r\n    <channel id=\"batteryLevel\" typeId=\"system.battery-level\"/>\r\n    <channel id=\"signalStrength\" typeId=\"system.signal-strength\"/>\r\n</channels>\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/893994/224405509-e6363e66-bb98-4640-a2a3-cc8606be763a.png)\r\n",
    "issue_word_count": 106,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingImpl.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/ThingChannelsTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/ThingChannelsTest.java"
    ],
    "base_commit": "0c792ec89a87be7b5ae31fc43972971ce3836d73",
    "head_commit": "3d16487319dd4f6a7175e3948993a08deb823d73",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3448",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3448",
    "dockerfile": "",
    "pr_merged_at": "2023-03-13T16:26:35.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingImpl.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingImpl.java\nindex e51f210bce0..20e7d9487b6 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingImpl.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/ThingImpl.java\n@@ -13,6 +13,7 @@\n package org.openhab.core.thing.internal;\n \n import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n \n@@ -51,7 +52,7 @@ public class ThingImpl implements Thing {\n \n     private @Nullable ThingUID bridgeUID;\n \n-    private final Map<ChannelUID, Channel> channels = new HashMap<>();\n+    private final Map<ChannelUID, Channel> channels = new LinkedHashMap<>();\n \n     private Configuration configuration = new Configuration();\n \n",
    "test_patch": "diff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/ThingChannelsTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/ThingChannelsTest.java\nnew file mode 100644\nindex 00000000000..8f09da9de0d\n--- /dev/null\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/ThingChannelsTest.java\n@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.thing;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.core.test.java.JavaOSGiTest;\n+import org.openhab.core.thing.binding.builder.ChannelBuilder;\n+import org.openhab.core.thing.binding.builder.ThingBuilder;\n+import org.openhab.core.thing.dto.ThingDTOMapper;\n+\n+/**\n+ * Test for thing channel creation and display order.\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ThingChannelsTest extends JavaOSGiTest {\n+\n+    private static final List<String> CHANNEL_IDS = List.of(\"polarBear\", \"alligator\", \"hippopotamus\", \"aardvark\",\n+            \"whiteRabbit\", \"redHerring\", \"orangutan\", \"kangaroo\", \"rubberDuck\", \"timorousBeastie\");\n+\n+    @Test\n+    public void testThingChannelOrder() {\n+        ThingTypeUID thingTypeUID = new ThingTypeUID(\"bindingId\", \"thingTypeId\");\n+        ThingUID thingUID = new ThingUID(thingTypeUID, \"thingLabel\");\n+\n+        // create and fill the list of origin channels\n+        List<Channel> originChannels = new ArrayList<>();\n+        CHANNEL_IDS.forEach(channelId -> originChannels\n+                .add(ChannelBuilder.create(new ChannelUID(thingUID, channelId), null).build()));\n+        assertEquals(CHANNEL_IDS.size(), originChannels.size());\n+\n+        // build a thing with the origin channels\n+        Thing thing = ThingBuilder.create(thingTypeUID, thingUID).withChannels(originChannels).build();\n+\n+        List<Channel> resultChannels;\n+\n+        // test #1: read the channels from the thing, and compare the resulting channel order\n+        resultChannels = thing.getChannels();\n+        assertEquals(CHANNEL_IDS.size(), resultChannels.size());\n+        for (int i = 0; i < CHANNEL_IDS.size(); i++) {\n+            assertTrue(CHANNEL_IDS.get(i).equals(resultChannels.get(i).getUID().getId()));\n+        }\n+\n+        // test #2: serialize/deserialize the thing via a DTO, and compare the resulting channel order\n+        resultChannels = ThingDTOMapper.map(ThingDTOMapper.map(thing), false).getChannels();\n+        assertEquals(CHANNEL_IDS.size(), resultChannels.size());\n+        for (int i = 0; i < CHANNEL_IDS.size(); i++) {\n+            assertTrue(CHANNEL_IDS.get(i).equals(resultChannels.get(i).getUID().getId()));\n+        }\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3433",
    "pr_id": 3433,
    "issue_id": 3317,
    "repo": "openhab/openhab-core",
    "problem_statement": "[jetty] OSGI does not load HpackFieldPreEncoder module\nAs reported on this [Jetty Issue](https://github.com/eclipse/jetty.project/issues/9168), during my work on the [Hue Clip 2 Binding](https://github.com/openhab/openhab-addons/pull/13570), when the binding sends a client HTTP/2.0 PUT request, it throws an 'HpackException$SessionException', but the same code succeeds when it sends the exact same client HTTP/2.0 request with GET instead of PUT. It seems from the Jetty issue thread discussion that the problem is due to the OH OSGI service loader is not loading the `Http1FieldPreEncoder` module.\r\n\r\nEDIT: actually the cause is that OH core is not loading the `org.eclipse.jetty.http2.hpack.HpackFieldPreEncoder` module.",
    "issue_word_count": 119,
    "test_files_count": 5,
    "non_test_files_count": 5,
    "pr_changed_files": [
      "bom/compile/pom.xml",
      "bom/runtime/pom.xml",
      "bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/HttpClientFactory.java",
      "bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/internal/WebClientFactoryImpl.java",
      "features/karaf/openhab-tp/src/main/feature/feature.xml",
      "itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun",
      "itests/org.openhab.core.model.item.tests/itest.bndrun",
      "itests/org.openhab.core.model.rule.tests/itest.bndrun",
      "itests/org.openhab.core.model.script.tests/itest.bndrun",
      "itests/org.openhab.core.model.thing.tests/itest.bndrun"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun",
      "itests/org.openhab.core.model.item.tests/itest.bndrun",
      "itests/org.openhab.core.model.rule.tests/itest.bndrun",
      "itests/org.openhab.core.model.script.tests/itest.bndrun",
      "itests/org.openhab.core.model.thing.tests/itest.bndrun"
    ],
    "base_commit": "6d989ea6e21a890cf18e3ae55f0d99fe88931d59",
    "head_commit": "00cae7022565972b9c6e857eee715600ae21de60",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3433",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3433",
    "dockerfile": "",
    "pr_merged_at": "2023-03-12T09:22:51.000Z",
    "patch": "diff --git a/bom/compile/pom.xml b/bom/compile/pom.xml\nindex d9deac5bde8..1503d5ecc9f 100644\n--- a/bom/compile/pom.xml\n+++ b/bom/compile/pom.xml\n@@ -176,6 +176,14 @@\n       <scope>compile</scope>\n     </dependency>\n \n+    <!-- Jetty HTTP2 -->\n+    <dependency>\n+      <groupId>org.eclipse.jetty.http2</groupId>\n+      <artifactId>http2-client</artifactId>\n+      <version>${jetty.version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n+\n     <!-- JmDNS -->\n     <dependency>\n       <groupId>org.jmdns</groupId>\n\ndiff --git a/bom/runtime/pom.xml b/bom/runtime/pom.xml\nindex ecede913777..e47b2aaa34e 100644\n--- a/bom/runtime/pom.xml\n+++ b/bom/runtime/pom.xml\n@@ -750,6 +750,20 @@\n       <scope>compile</scope>\n     </dependency>\n \n+    <!-- Jetty HTTP2 -->\n+    <dependency>\n+      <groupId>org.eclipse.jetty.http2</groupId>\n+      <artifactId>http2-client</artifactId>\n+      <version>${jetty.version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.eclipse.jetty</groupId>\n+      <artifactId>jetty-alpn-java-client</artifactId>\n+      <version>${jetty.version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n+\n     <!-- Xbean -->\n     <dependency>\n       <groupId>org.apache.xbean</groupId>\n\ndiff --git a/bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/HttpClientFactory.java b/bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/HttpClientFactory.java\nindex 689c95865e4..318f2fbf5b2 100644\n--- a/bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/HttpClientFactory.java\n+++ b/bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/HttpClientFactory.java\n@@ -15,6 +15,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.http2.client.HTTP2Client;\n import org.eclipse.jetty.util.ssl.SslContextFactory;\n \n /**\n@@ -22,6 +23,7 @@\n  *\n  * @author Michael Bock - Initial contribution\n  * @author Martin van Wingerden - add createHttpClient without endpoint\n+ * @author Andrew Fiddian-Green - Added support for HTTP2 client creation\n  */\n @NonNullByDefault\n public interface HttpClientFactory {\n@@ -36,7 +38,6 @@ public interface HttpClientFactory {\n      * @param consumerName the for identifying the consumer in the Jetty thread pool.\n      *            Must be between 4 and 20 characters long and must contain only the following characters [a-zA-Z0-9-_]\n      * @return the Jetty client\n-     * @throws NullPointerException if {@code consumerName} is {@code null}\n      * @throws IllegalArgumentException if {@code consumerName} is invalid\n      */\n     HttpClient createHttpClient(String consumerName);\n@@ -52,7 +53,6 @@ public interface HttpClientFactory {\n      *            Must be between 4 and 20 characters long and must contain only the following characters [a-zA-Z0-9-_]\n      * @param sslContextFactory the SSL factory managing TLS encryption\n      * @return the Jetty client\n-     * @throws NullPointerException if {@code consumerName} is {@code null}\n      * @throws IllegalArgumentException if {@code consumerName} is invalid\n      */\n     HttpClient createHttpClient(String consumerName, @Nullable SslContextFactory sslContextFactory);\n@@ -64,4 +64,33 @@ public interface HttpClientFactory {\n      * @return the shared Jetty http client\n      */\n     HttpClient getCommonHttpClient();\n+\n+    /**\n+     * Creates a new Jetty HTTP/2 client.\n+     * The returned client is not started yet. You have to start it yourself before using.\n+     * Don't forget to stop a started client again after its usage.\n+     * The client lifecycle should be the same as for your service.\n+     * DO NOT CREATE NEW CLIENTS FOR EACH REQUEST!\n+     *\n+     * @param consumerName for identifying the consumer in the Jetty thread pool.\n+     *            Must be between 4 and 20 characters long and must contain only the following characters [a-zA-Z0-9-_]\n+     * @return the Jetty HTTP/2 client\n+     * @throws IllegalArgumentException if {@code consumerName} is invalid\n+     */\n+    HTTP2Client createHttp2Client(String consumerName);\n+\n+    /**\n+     * Creates a new Jetty HTTP/2 client.\n+     * The returned client is not started yet. You have to start it yourself before using.\n+     * Don't forget to stop a started client again after its usage.\n+     * The client lifecycle should be the same as for your service.\n+     * DO NOT CREATE NEW CLIENTS FOR EACH REQUEST!\n+     *\n+     * @param consumerName for identifying the consumer in the Jetty thread pool.\n+     *            Must be between 4 and 20 characters long and must contain only the following characters [a-zA-Z0-9-_]\n+     * @param sslContextFactory the SSL factory managing TLS encryption\n+     * @return the Jetty HTTP/2 client\n+     * @throws IllegalArgumentException if {@code consumerName} is invalid\n+     */\n+    HTTP2Client createHttp2Client(String consumerName, @Nullable SslContextFactory sslContextFactory);\n }\n\ndiff --git a/bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/internal/WebClientFactoryImpl.java b/bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/internal/WebClientFactoryImpl.java\nindex 8d211b7b796..46fba9b0027 100644\n--- a/bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/internal/WebClientFactoryImpl.java\n+++ b/bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/http/internal/WebClientFactoryImpl.java\n@@ -12,10 +12,10 @@\n  */\n package org.openhab.core.io.net.http.internal;\n \n+import java.nio.ByteBuffer;\n import java.security.KeyManagementException;\n import java.security.NoSuchAlgorithmException;\n import java.util.Map;\n-import java.util.Objects;\n import java.util.regex.Pattern;\n \n import javax.net.ssl.SSLContext;\n@@ -25,6 +25,10 @@\n import org.eclipse.jdt.annotation.Nullable;\n import org.eclipse.jetty.client.HttpClient;\n import org.eclipse.jetty.client.HttpProxy;\n+import org.eclipse.jetty.http.HttpHeader;\n+import org.eclipse.jetty.http.HttpVersion;\n+import org.eclipse.jetty.http.PreEncodedHttpField;\n+import org.eclipse.jetty.http2.client.HTTP2Client;\n import org.eclipse.jetty.util.ssl.SslContextFactory;\n import org.eclipse.jetty.util.thread.QueuedThreadPool;\n import org.eclipse.jetty.websocket.client.WebSocketClient;\n@@ -46,6 +50,7 @@\n  * @author Michael Bock - Initial contribution\n  * @author Kai Kreuzer - added web socket support\n  * @author Martin van Wingerden - Add support for ESHTrustManager\n+ * @author Andrew Fiddian-Green - Added support for HTTP2 client creation\n  */\n @Component(immediate = true, configurationPid = \"org.openhab.webclient\")\n @NonNullByDefault\n@@ -77,6 +82,9 @@ public class WebClientFactoryImpl implements HttpClientFactory, WebSocketFactory\n     private int maxThreadsCustom;\n     private int keepAliveTimeoutCustom; // in s\n \n+    private boolean hpackLoadTestDone = false;\n+    private @Nullable HttpClientInitializationException hpackException = null;\n+\n     @Activate\n     public WebClientFactoryImpl(final @Reference ExtensibleTrustManager extensibleTrustManager) {\n         this.extensibleTrustManager = extensibleTrustManager;\n@@ -332,7 +340,6 @@ private QueuedThreadPool createThreadPool(String consumerName, int minThreads, i\n     }\n \n     private void checkConsumerName(String consumerName) {\n-        Objects.requireNonNull(consumerName, \"consumerName must not be null\");\n         if (consumerName.length() < MIN_CONSUMER_NAME_LENGTH) {\n             throw new IllegalArgumentException(\n                     \"consumerName \" + consumerName + \" too short, minimum \" + MIN_CONSUMER_NAME_LENGTH);\n@@ -362,4 +369,49 @@ private SslContextFactory createSslContextFactory() {\n \n         return sslContextFactory;\n     }\n+\n+    @Override\n+    public HTTP2Client createHttp2Client(String consumerName) {\n+        return createHttp2Client(consumerName, null);\n+    }\n+\n+    @Override\n+    public HTTP2Client createHttp2Client(String consumerName, @Nullable SslContextFactory sslContextFactory) {\n+        logger.debug(\"http client for consumer {} requested\", consumerName);\n+        checkConsumerName(consumerName);\n+        return createHttp2ClientInternal(consumerName, sslContextFactory);\n+    }\n+\n+    private HTTP2Client createHttp2ClientInternal(String consumerName, @Nullable SslContextFactory sslContextFactory) {\n+        try {\n+            logger.debug(\"creating HTTP/2 client for consumer {}\", consumerName);\n+\n+            if (!hpackLoadTestDone) {\n+                try {\n+                    PreEncodedHttpField field = new PreEncodedHttpField(HttpHeader.C_METHOD, \"PUT\");\n+                    ByteBuffer bytes = ByteBuffer.allocate(32);\n+                    field.putTo(bytes, HttpVersion.HTTP_2);\n+                    hpackException = null;\n+                } catch (Exception e) {\n+                    hpackException = new HttpClientInitializationException(\"Jetty HTTP/2 hpack module not loaded\", e);\n+                }\n+                hpackLoadTestDone = true;\n+            }\n+            if (hpackException != null) {\n+                throw hpackException;\n+            }\n+\n+            HTTP2Client http2Client = new HTTP2Client();\n+            http2Client.addBean(sslContextFactory != null ? sslContextFactory : createSslContextFactory());\n+            http2Client.setExecutor(\n+                    createThreadPool(consumerName, minThreadsCustom, maxThreadsCustom, keepAliveTimeoutCustom));\n+\n+            return http2Client;\n+        } catch (RuntimeException e) {\n+            throw e;\n+        } catch (Exception e) {\n+            throw new HttpClientInitializationException(\n+                    \"unexpected checked exception during initialization of the Jetty HTTP/2 client\", e);\n+        }\n+    }\n }\n\ndiff --git a/features/karaf/openhab-tp/src/main/feature/feature.xml b/features/karaf/openhab-tp/src/main/feature/feature.xml\nindex 1ea0392623d..62f69e8058d 100644\n--- a/features/karaf/openhab-tp/src/main/feature/feature.xml\n+++ b/features/karaf/openhab-tp/src/main/feature/feature.xml\n@@ -71,12 +71,16 @@\n \n \t<feature name=\"openhab.tp-httpclient\" version=\"${project.version}\">\n \t\t<capability>openhab.tp;feature=httpclient;version=${jetty.version}</capability>\n+\t\t<feature dependency=\"true\">pax-web-jetty-http2</feature>\n+\t\t<feature dependency=\"true\">pax-web-jetty-http2-jdk9</feature>\n \t\t<bundle dependency=\"true\">mvn:javax.servlet/javax.servlet-api/3.1.0</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty/jetty-alpn-client/${jetty.version}</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty/jetty-client/${jetty.version}</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty/jetty-http/${jetty.version}</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty/jetty-util/${jetty.version}</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty/jetty-io/${jetty.version}</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty/jetty-proxy/${jetty.version}</bundle>\n+\t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty.http2/http2-client/${jetty.version}</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty.websocket/websocket-api/${jetty.version}</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty.websocket/websocket-common/${jetty.version}</bundle>\n \t\t<bundle dependency=\"true\">mvn:org.eclipse.jetty.websocket/websocket-client/${jetty.version}</bundle>\n",
    "test_patch": "diff --git a/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun b/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun\nindex d477a3ab9de..9d554de019d 100644\n--- a/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun\n+++ b/itests/org.openhab.core.auth.oauth2client.tests/itest.bndrun\n@@ -65,4 +65,8 @@ Fragment-Host: org.openhab.core.auth.oauth2client\n \torg.eclipse.jetty.websocket.common;version='[9.4.50,9.4.51)',\\\n \torg.ops4j.pax.logging.pax-logging-api;version='[2.2.0,2.2.1)',\\\n \torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n-\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)',\\\n+\torg.eclipse.jetty.alpn.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.common;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.hpack;version='[9.4.50,9.4.51)'\n\ndiff --git a/itests/org.openhab.core.model.item.tests/itest.bndrun b/itests/org.openhab.core.model.item.tests/itest.bndrun\nindex df559fe5d84..de3bed326f6 100644\n--- a/itests/org.openhab.core.model.item.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.item.tests/itest.bndrun\n@@ -88,7 +88,6 @@ Fragment-Host: org.openhab.core.model.item\n \tcom.sun.jna;version='[5.12.1,5.12.2)',\\\n \txstream;version='[1.4.19,1.4.20)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n-\torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.apache.felix.scr;version='[2.2.4,2.2.5)',\\\n \torg.eclipse.jetty.client;version='[9.4.50,9.4.51)',\\\n \torg.eclipse.jetty.http;version='[9.4.50,9.4.51)',\\\n@@ -110,4 +109,9 @@ Fragment-Host: org.openhab.core.model.item\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.15,8.0.16)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.15,8.0.16)',\\\n \torg.osgi.service.cm;version='[1.6.0,1.6.1)',\\\n-\torg.osgi.service.component;version='[1.5.0,1.5.1)'\n+\torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n+\torg.apache.felix.http.servlet-api;version='[1.1.2,1.1.3)',\\\n+\torg.eclipse.jetty.alpn.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.common;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.hpack;version='[9.4.50,9.4.51)'\n\ndiff --git a/itests/org.openhab.core.model.rule.tests/itest.bndrun b/itests/org.openhab.core.model.rule.tests/itest.bndrun\nindex dc34efad4ad..2567d907867 100644\n--- a/itests/org.openhab.core.model.rule.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.rule.tests/itest.bndrun\n@@ -114,4 +114,8 @@ Fragment-Host: org.openhab.core.model.rule.runtime\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.15,8.0.16)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.15,8.0.16)',\\\n \torg.osgi.service.cm;version='[1.6.0,1.6.1)',\\\n-\torg.osgi.service.component;version='[1.5.0,1.5.1)'\n+\torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n+\torg.eclipse.jetty.alpn.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.common;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.hpack;version='[9.4.50,9.4.51)'\n\ndiff --git a/itests/org.openhab.core.model.script.tests/itest.bndrun b/itests/org.openhab.core.model.script.tests/itest.bndrun\nindex 42c1f1991c3..6e786511807 100644\n--- a/itests/org.openhab.core.model.script.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.script.tests/itest.bndrun\n@@ -111,4 +111,8 @@ Fragment-Host: org.openhab.core.model.script\n \torg.ops4j.pax.web.pax-web-runtime;version='[8.0.15,8.0.16)',\\\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.15,8.0.16)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.15,8.0.16)',\\\n-\torg.osgi.service.component;version='[1.5.0,1.5.1)'\n+\torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n+\torg.eclipse.jetty.alpn.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.common;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.hpack;version='[9.4.50,9.4.51)'\n\ndiff --git a/itests/org.openhab.core.model.thing.tests/itest.bndrun b/itests/org.openhab.core.model.thing.tests/itest.bndrun\nindex 0a15574f172..0adcc9a6765 100644\n--- a/itests/org.openhab.core.model.thing.tests/itest.bndrun\n+++ b/itests/org.openhab.core.model.thing.tests/itest.bndrun\n@@ -97,7 +97,6 @@ Fragment-Host: org.openhab.core.model.thing\n \tio.methvin.directory-watcher;version='[0.17.1,0.17.2)',\\\n \tcom.sun.jna;version='[5.12.1,5.12.2)',\\\n \torg.apache.felix.configadmin;version='[1.9.26,1.9.27)',\\\n-\torg.apache.felix.http.servlet-api;version='[1.2.0,1.2.1)',\\\n \torg.apache.felix.scr;version='[2.2.4,2.2.5)',\\\n \torg.eclipse.jetty.client;version='[9.4.50,9.4.51)',\\\n \torg.eclipse.jetty.http;version='[9.4.50,9.4.51)',\\\n@@ -119,4 +118,9 @@ Fragment-Host: org.openhab.core.model.thing\n \torg.ops4j.pax.web.pax-web-spi;version='[8.0.15,8.0.16)',\\\n \torg.ops4j.pax.web.pax-web-tomcat-common;version='[8.0.15,8.0.16)',\\\n \torg.osgi.service.cm;version='[1.6.0,1.6.1)',\\\n-\torg.osgi.service.component;version='[1.5.0,1.5.1)'\n+\torg.osgi.service.component;version='[1.5.0,1.5.1)',\\\n+\torg.apache.felix.http.servlet-api;version='[1.1.2,1.1.3)',\\\n+\torg.eclipse.jetty.alpn.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.client;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.common;version='[9.4.50,9.4.51)',\\\n+\torg.eclipse.jetty.http2.hpack;version='[9.4.50,9.4.51)'\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3404",
    "pr_id": 3404,
    "issue_id": 3400,
    "repo": "openhab/openhab-core",
    "problem_statement": "Rules/Sitemaps/Items files refreshed twice when saved from Samba share\nThis old bug is back.\r\n\r\nhttps://github.com/eclipse-archived/smarthome/issues/4824\r\n\r\nExample:\r\n```\r\n2023-02-25 08:38:40.555 [INFO ] [el.core.internal.ModelRepositoryImpl] - Loading model 'default.sitemap'\r\n2023-02-25 08:38:40.558 [WARN ] [el.core.internal.ModelRepositoryImpl] - Configuration model 'default.sitemap' is either empty or cannot be parsed correctly!\r\n2023-02-25 08:38:40.583 [INFO ] [el.core.internal.ModelRepositoryImpl] - Loading model 'default.sitemap'\r\n```\r\n",
    "issue_word_count": 81,
    "test_files_count": 1,
    "non_test_files_count": 3,
    "pr_changed_files": [
      "bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java",
      "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java",
      "bundles/org.openhab.core.model.core/src/test/java/org/openhab/core/model/core/internal/folder/FolderObserverTest.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/service/WatchServiceImpl.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.model.core/src/test/java/org/openhab/core/model/core/internal/folder/FolderObserverTest.java"
    ],
    "base_commit": "52380b7fbe5aa030f3a1f97d641e7f6cf5aec4e4",
    "head_commit": "f0d715d0fb7d9630789a599e53a778aec3c42d26",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3404",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3404",
    "dockerfile": "",
    "pr_merged_at": "2023-03-05T08:44:24.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java b/bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java\nindex 05442c79f39..6d64fb49106 100644\n--- a/bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java\n+++ b/bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java\n@@ -53,7 +53,7 @@ public ConfigDispatcherFileWatcher(final @Reference ConfigDispatcher configDispa\n \n         this.watchService = watchService;\n \n-        watchService.registerListener(this, Path.of(servicesFolder));\n+        watchService.registerListener(this, Path.of(servicesFolder), false);\n         configDispatcher.processConfigFile(Path.of(OpenHAB.getConfigFolder(), servicesFolder).toFile());\n     }\n \n\ndiff --git a/bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java b/bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java\nindex 7d3cfacd7f0..ed4d2f77f3d 100644\n--- a/bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java\n+++ b/bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java\n@@ -12,7 +12,6 @@\n  */\n package org.openhab.core.model.core.internal.folder;\n \n-import static java.nio.file.StandardWatchEventKinds.*;\n import static org.openhab.core.service.WatchService.Kind.CREATE;\n import static org.openhab.core.service.WatchService.Kind.MODIFY;\n \n@@ -27,8 +26,8 @@\n import java.util.Enumeration;\n import java.util.HashMap;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Map;\n-import java.util.Map.Entry;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.stream.Collectors;\n@@ -64,7 +63,7 @@\n @Component(name = \"org.openhab.core.folder\", immediate = true, configurationPid = \"org.openhab.folder\", configurationPolicy = ConfigurationPolicy.REQUIRE)\n public class FolderObserver implements WatchService.WatchEventListener {\n     private final WatchService watchService;\n-    private Logger logger = LoggerFactory.getLogger(FolderObserver.class);\n+    private final Logger logger = LoggerFactory.getLogger(FolderObserver.class);\n \n     /* the model repository is provided as a service */\n     private final ModelRepository modelRepository;\n@@ -75,7 +74,7 @@ public class FolderObserver implements WatchService.WatchEventListener {\n     private boolean activated;\n \n     /* map that stores a list of valid file extensions for each folder */\n-    private final Map<String, String[]> folderFileExtMap = new ConcurrentHashMap<>();\n+    private final Map<String, List<String>> folderFileExtMap = new ConcurrentHashMap<>();\n \n     /* set of file extensions for which we have parsers already registered */\n     private final Set<String> parsers = new HashSet<>();\n@@ -124,16 +123,16 @@ public void activate(ComponentContext ctx) {\n \n             String[] fileExts = ((String) config.get(foldername)).split(\",\");\n \n-            File folder = getFile(foldername);\n+            File folder = watchService.getWatchPath().resolve(foldername).toFile();\n             if (folder.exists() && folder.isDirectory()) {\n-                folderFileExtMap.put(foldername, fileExts);\n+                folderFileExtMap.put(foldername, Arrays.asList(fileExts));\n             } else {\n                 logger.warn(\"Directory '{}' does not exist in '{}'. Please check your configuration settings!\",\n                         foldername, OpenHAB.getConfigFolder());\n             }\n         }\n \n-        watchService.registerListener(this, folderFileExtMap.keySet().stream().map(Path::of).toList());\n+        watchService.registerListener(this, Path.of(\"\"));\n         addModelsToRepo();\n         this.activated = true;\n     }\n@@ -162,9 +161,9 @@ private void processIgnoredFiles(String extension) {\n     private void addModelsToRepo() {\n         if (!folderFileExtMap.isEmpty()) {\n             for (String folderName : folderFileExtMap.keySet()) {\n-                final String[] validExtension = folderFileExtMap.get(folderName);\n-                if (validExtension != null && validExtension.length > 0) {\n-                    File folder = getFile(folderName);\n+                final List<String> validExtension = folderFileExtMap.get(folderName);\n+                if (validExtension != null && validExtension.size() > 0) {\n+                    File folder = watchService.getWatchPath().resolve(folderName).toFile();\n \n                     File[] files = folder.listFiles(new FileExtensionsFilter(validExtension));\n                     if (files != null) {\n@@ -196,9 +195,9 @@ private void deleteModelsFromRepo() {\n \n     protected static class FileExtensionsFilter implements FilenameFilter {\n \n-        private final String[] validExtensions;\n+        private final List<String> validExtensions;\n \n-        public FileExtensionsFilter(String[] validExtensions) {\n+        public FileExtensionsFilter(List<String> validExtensions) {\n             this.validExtensions = validExtensions;\n         }\n \n@@ -213,7 +212,6 @@ public boolean accept(@NonNullByDefault({}) File dir, @NonNullByDefault({}) Stri\n         }\n     }\n \n-    @SuppressWarnings(\"rawtypes\")\n     private void checkFile(final ModelRepository modelRepository, final File file, final WatchService.Kind kind) {\n         try {\n             synchronized (FolderObserver.class) {\n@@ -238,33 +236,6 @@ private void checkFile(final ModelRepository modelRepository, final File file, f\n         }\n     }\n \n-    private @Nullable File getFileByFileExtMap(Map<String, String[]> folderFileExtMap, String filename) {\n-        if (!filename.trim().isEmpty() && !folderFileExtMap.isEmpty()) {\n-            String extension = getExtension(filename);\n-            if (extension != null && !extension.trim().isEmpty()) {\n-                Set<Entry<String, String[]>> entries = folderFileExtMap.entrySet();\n-                for (Entry<String, String[]> entry : entries) {\n-                    if (Arrays.asList(entry.getValue()).contains(extension)) {\n-                        return new File(getFile(entry.getKey()) + File.separator + filename);\n-                    }\n-                }\n-            }\n-        }\n-        return null;\n-    }\n-\n-    /**\n-     * Returns the {@link File} object for the given filename. <br />\n-     * It must be contained in the configuration folder\n-     *\n-     * @param filename\n-     *            the file name to get the {@link File} for\n-     * @return the corresponding {@link File}\n-     */\n-    protected File getFile(String filename) {\n-        return new File(OpenHAB.getConfigFolder() + File.separator + filename);\n-    }\n-\n     /**\n      * Returns the extension of the given file\n      *\n@@ -282,9 +253,18 @@ protected File getFile(String filename) {\n \n     @Override\n     public void processWatchEvent(WatchService.Kind kind, Path path) {\n-        File toCheck = getFileByFileExtMap(folderFileExtMap, path.getFileName().toString());\n-        if (toCheck != null && !toCheck.isHidden()) {\n-            checkFile(modelRepository, toCheck, kind);\n+        if (path.getNameCount() != 2) {\n+            logger.trace(\"{} event for {} ignored, only depth 1 is allowed.\", kind, path);\n+            return;\n+        }\n+\n+        String fileExtension = getExtension(path.getFileName().toString());\n+        List<String> validExtensions = folderFileExtMap.get(path.getName(0).toString());\n+        if (fileExtension != null && validExtensions != null && validExtensions.contains(fileExtension)) {\n+            File toCheck = watchService.getWatchPath().resolve(path).toFile();\n+            if (!toCheck.isHidden()) {\n+                checkFile(modelRepository, toCheck, kind);\n+            }\n         }\n     }\n }\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/service/WatchServiceImpl.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/service/WatchServiceImpl.java\nindex 456d13a94fe..fb0afbebe1e 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/service/WatchServiceImpl.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/service/WatchServiceImpl.java\n@@ -17,12 +17,18 @@\n import java.nio.file.NoSuchFileException;\n import java.nio.file.Path;\n import java.util.Dictionary;\n+import java.util.HashMap;\n import java.util.Hashtable;\n import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n import java.util.function.Predicate;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -52,6 +58,8 @@\n @Component(immediate = true, service = WatchService.class, configurationPid = WatchService.SERVICE_PID, configurationPolicy = ConfigurationPolicy.REQUIRE)\n public class WatchServiceImpl implements WatchService, DirectoryChangeListener {\n \n+    public static final int PROCESSING_TIME = 1000;\n+\n     public @interface WatchServiceConfiguration {\n         String name() default \"\";\n \n@@ -63,6 +71,8 @@ public class WatchServiceImpl implements WatchService, DirectoryChangeListener {\n     private final List<Listener> dirPathListeners = new CopyOnWriteArrayList<>();\n     private final List<Listener> subDirPathListeners = new CopyOnWriteArrayList<>();\n     private final ExecutorService executor;\n+    private final ScheduledExecutorService scheduler;\n+\n     private final String name;\n     private final BundleContext bundleContext;\n \n@@ -70,6 +80,9 @@ public class WatchServiceImpl implements WatchService, DirectoryChangeListener {\n     private @Nullable DirectoryWatcher dirWatcher;\n     private @Nullable ServiceRegistration<WatchService> reg;\n \n+    private final Map<Path, ScheduledFuture<?>> scheduledEvents = new HashMap<>();\n+    private final Map<Path, List<Kind>> scheduledEventKinds = new ConcurrentHashMap<>();\n+\n     @Activate\n     public WatchServiceImpl(WatchServiceConfiguration config, BundleContext bundleContext) throws IOException {\n         this.bundleContext = bundleContext;\n@@ -79,7 +92,7 @@ public WatchServiceImpl(WatchServiceConfiguration config, BundleContext bundleCo\n \n         this.name = config.name();\n         executor = Executors.newSingleThreadExecutor(r -> new Thread(r, name));\n-\n+        scheduler = ThreadPoolManager.getScheduledPool(\"watchservice\");\n         modified(config);\n     }\n \n@@ -207,6 +220,50 @@ public void onEvent(@Nullable DirectoryChangeEvent directoryChangeEvent) throws\n             case OVERFLOW -> Kind.OVERFLOW;\n         };\n \n+        synchronized (scheduledEvents) {\n+            ScheduledFuture<?> future = scheduledEvents.remove(path);\n+            if (future != null && !future.isDone()) {\n+                future.cancel(true);\n+            }\n+            future = scheduler.schedule(() -> notifyListeners(path), PROCESSING_TIME, TimeUnit.MILLISECONDS);\n+            scheduledEventKinds.computeIfAbsent(path, k -> new CopyOnWriteArrayList<>()).add(kind);\n+            scheduledEvents.put(path, future);\n+\n+        }\n+    }\n+\n+    private void notifyListeners(Path path) {\n+        List<Kind> kinds = scheduledEventKinds.remove(path);\n+        if (kinds == null || kinds.isEmpty()) {\n+            logger.debug(\"Tried to notify listeners of change events for '{}', but the event list is empty.\", path);\n+            return;\n+        }\n+\n+        if (kinds.size() == 1) {\n+            // we have only one event\n+            doNotify(path, kinds.get(0));\n+            return;\n+        }\n+\n+        Kind firstElement = kinds.get(0);\n+        Kind lastElement = kinds.get(kinds.size() - 1);\n+\n+        // determine final event\n+        if (lastElement == Kind.DELETE) {\n+            if (firstElement == Kind.CREATE) {\n+                logger.debug(\"Discarding events for '{}' because file was immediately deleted bafter creation\", path);\n+                return;\n+            }\n+            doNotify(path, Kind.DELETE);\n+        } else if (firstElement == Kind.CREATE) {\n+            doNotify(path, Kind.CREATE);\n+        } else {\n+            doNotify(path, Kind.MODIFY);\n+        }\n+    }\n+\n+    private void doNotify(Path path, Kind kind) {\n+        logger.trace(\"Notifying listeners of '{}' event for '{}'.\", kind, path);\n         subDirPathListeners.stream().filter(isChildOf(path)).forEach(l -> l.notify(path, kind));\n         dirPathListeners.stream().filter(isDirectChildOf(path)).forEach(l -> l.notify(path, kind));\n     }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.model.core/src/test/java/org/openhab/core/model/core/internal/folder/FolderObserverTest.java b/bundles/org.openhab.core.model.core/src/test/java/org/openhab/core/model/core/internal/folder/FolderObserverTest.java\nindex 0fbed211b43..75f45a445e1 100644\n--- a/bundles/org.openhab.core.model.core/src/test/java/org/openhab/core/model/core/internal/folder/FolderObserverTest.java\n+++ b/bundles/org.openhab.core.model.core/src/test/java/org/openhab/core/model/core/internal/folder/FolderObserverTest.java\n@@ -91,13 +91,9 @@ public void beforeEach() throws IOException, InterruptedException {\n \n         when(modelParserMock.getExtension()).thenReturn(\"java\");\n         when(contextMock.getProperties()).thenReturn(configProps);\n+        when(watchServiceMock.getWatchPath()).thenReturn(WATCHED_DIRECTORY.toPath());\n \n-        folderObserver = new FolderObserver(modelRepoMock, readyServiceMock, watchServiceMock) {\n-            @Override\n-            protected File getFile(String filename) {\n-                return new File(WATCHED_DIRECTORY + File.separator + filename);\n-            }\n-        };\n+        folderObserver = new FolderObserver(modelRepoMock, readyServiceMock, watchServiceMock);\n         folderObserver.addModelParser(modelParserMock);\n     }\n \n@@ -134,7 +130,7 @@ public void testCreation() throws Exception {\n         Files.writeString(file.toPath(), INITIAL_FILE_CONTENT, StandardCharsets.UTF_8, StandardOpenOption.CREATE);\n \n         waitForAssert(() -> assertThat(file.exists(), is(true)));\n-        folderObserver.processWatchEvent(CREATE, file.toPath());\n+        folderObserver.processWatchEvent(CREATE, WATCHED_DIRECTORY.toPath().relativize(file.toPath()));\n \n         verify(modelRepoMock).addOrRefreshModel(eq(file.getName()), any());\n         verifyNoMoreInteractions(modelRepoMock);\n@@ -159,12 +155,12 @@ public void testModification() throws Exception {\n         Files.writeString(file.toPath(), INITIAL_FILE_CONTENT, StandardCharsets.UTF_8, StandardOpenOption.CREATE);\n \n         waitForAssert(() -> assertThat(file.exists(), is(true)));\n-        folderObserver.processWatchEvent(CREATE, file.toPath());\n+        folderObserver.processWatchEvent(CREATE, WATCHED_DIRECTORY.toPath().relativize(file.toPath()));\n \n         String text = \"Additional content\";\n         Files.writeString(file.toPath(), text, StandardCharsets.UTF_8, StandardOpenOption.APPEND);\n \n-        folderObserver.processWatchEvent(MODIFY, file.toPath());\n+        folderObserver.processWatchEvent(MODIFY, WATCHED_DIRECTORY.toPath().relativize(file.toPath()));\n \n         verify(modelRepoMock, times(2)).addOrRefreshModel(eq(file.getName()), any());\n         verifyNoMoreInteractions(modelRepoMock);\n@@ -188,7 +184,7 @@ public void testCreationUntrackedExtension() throws Exception {\n         Files.writeString(file.toPath(), INITIAL_FILE_CONTENT, StandardCharsets.UTF_8, StandardOpenOption.CREATE);\n         waitForAssert(() -> assertThat(file.exists(), is(true)));\n \n-        folderObserver.processWatchEvent(CREATE, file.toPath());\n+        folderObserver.processWatchEvent(CREATE, WATCHED_DIRECTORY.toPath().relativize(file.toPath()));\n \n         verifyNoInteractions(modelRepoMock);\n     }\n@@ -208,7 +204,7 @@ public void testCreationUntrackedDirectory() throws Exception {\n         File file = new File(EXISTING_SUBDIR_PATH, \"NewlyCreatedMockFile.java\");\n         Files.writeString(file.toPath(), INITIAL_FILE_CONTENT, StandardCharsets.UTF_8, StandardOpenOption.CREATE);\n         waitForAssert(() -> assertThat(file.exists(), is(true)));\n-        folderObserver.processWatchEvent(CREATE, file.toPath());\n+        folderObserver.processWatchEvent(CREATE, WATCHED_DIRECTORY.toPath().relativize(file.toPath()));\n \n         verifyNoInteractions(modelRepoMock);\n     }\n@@ -261,7 +257,7 @@ public void testCreationNoExtensions() throws Exception {\n         Files.writeString(file.toPath(), INITIAL_FILE_CONTENT, StandardCharsets.UTF_8, StandardOpenOption.CREATE);\n         waitForAssert(() -> assertThat(file.exists(), is(true)));\n \n-        folderObserver.processWatchEvent(CREATE, file.toPath());\n+        folderObserver.processWatchEvent(CREATE, WATCHED_DIRECTORY.toPath().relativize(file.toPath()));\n \n         verifyNoInteractions(modelRepoMock);\n     }\n@@ -270,13 +266,7 @@ public void testCreationNoExtensions() throws Exception {\n     public void testException() throws Exception {\n         when(modelRepoMock.addOrRefreshModel(any(), any())).thenThrow(new IllegalStateException(\"intentional failure\"));\n \n-        FolderObserver localFolderObserver = new FolderObserver(modelRepoMock, readyServiceMock, watchServiceMock) {\n-            @Override\n-            protected File getFile(String filename) {\n-                return new File(WATCHED_DIRECTORY + File.separator + filename);\n-            }\n-        };\n-\n+        FolderObserver localFolderObserver = new FolderObserver(modelRepoMock, readyServiceMock, watchServiceMock);\n         localFolderObserver.addModelParser(modelParserMock);\n \n         String validExtension = \"java\";\n@@ -286,11 +276,13 @@ protected File getFile(String filename) {\n         File mockFileWithValidExt = new File(EXISTING_SUBDIR_PATH, \"MockFileForModification.\" + validExtension);\n         Files.writeString(mockFileWithValidExt.toPath(), INITIAL_FILE_CONTENT, StandardCharsets.UTF_8,\n                 StandardOpenOption.CREATE);\n-        localFolderObserver.processWatchEvent(CREATE, mockFileWithValidExt.toPath());\n+        localFolderObserver.processWatchEvent(CREATE,\n+                WATCHED_DIRECTORY.toPath().relativize(mockFileWithValidExt.toPath()));\n \n         Files.writeString(mockFileWithValidExt.toPath(), \"Additional content\", StandardCharsets.UTF_8,\n                 StandardOpenOption.APPEND);\n-        localFolderObserver.processWatchEvent(MODIFY, mockFileWithValidExt.toPath());\n+        localFolderObserver.processWatchEvent(MODIFY,\n+                WATCHED_DIRECTORY.toPath().relativize(mockFileWithValidExt.toPath()));\n \n         verify(modelRepoMock, times(2)).addOrRefreshModel(eq(mockFileWithValidExt.getName()), any());\n     }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3388",
    "pr_id": 3388,
    "issue_id": 3386,
    "repo": "openhab/openhab-core",
    "problem_statement": "AbstractScriptFileWatcherTest fails on Windows\nThe AbstractScriptFileWatcherTest fails on Windows.\r\n\r\nSee: https://github.com/wborn/openhab-core/actions/runs/4211691329/jobs/7310201202\r\n\r\n```\r\n[ERROR] Tests run: 21, Failures: 5, Errors: 0, Skipped: 0, Time elapsed: 41.936 s <<< FAILURE! - in org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest\r\n[ERROR] org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testLoadTwoCustomFilesAlternativePatternDifferentStartLevels  Time elapsed: 0.878 s  <<< FAILURE!\r\norg.mockito.exceptions.verification.NeverWantedButInvoked: \r\n\r\nscriptEngineManagerMock.createScriptEngine(\r\n    <any string>,\r\n    \"C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit339990818789447709\\sl70\\script.js\"\r\n);\r\nNever wanted here:\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testLoadTwoCustomFilesAlternativePatternDifferentStartLevels(AbstractScriptFileWatcherTest.java:281)\r\nBut invoked here:\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcher.createAndLoad(AbstractScriptFileWatcher.java:337) with arguments: [js, C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit339990818789447709\\sl70\\script.js]\r\n\r\n\tat org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testLoadTwoCustomFilesAlternativePatternDifferentStartLevels(AbstractScriptFileWatcherTest.java:281)\r\n```\r\n\r\n---\r\n\r\n```\r\n[ERROR] org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testOrderingStartlevelFolders  Time elapsed: 11.384 s  <<< FAILURE!\r\norg.mockito.exceptions.verification.VerificationInOrderFailure: \r\n\r\nVerification in order failure\r\nWanted but not invoked:\r\nscriptEngineManagerMock.createScriptEngine(\r\n    \"js\",\r\n    \"C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit13707886903141936947\\sl40\\b_script.js\"\r\n);\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testOrderingStartlevelFolders(AbstractScriptFileWatcherTest.java:369)\r\nWanted anywhere AFTER following interaction:\r\nscriptEngineManagerMock.createScriptEngine(\r\n    \"js\",\r\n    \"C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit13707886903141936947\\sl30\\script.js\"\r\n);\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcher.createAndLoad(AbstractScriptFileWatcher.java:337)\r\n\r\n\tat org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testOrderingStartlevelFolders(AbstractScriptFileWatcherTest.java:369)\r\n```\r\n\r\n---\r\n\r\n```\r\n[ERROR] org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testOrderingWithinSingleStartLevel  Time elapsed: 10.661 s  <<< FAILURE!\r\norg.mockito.exceptions.verification.VerificationInOrderFailure: \r\n\r\nVerification in order failure\r\nWanted but not invoked:\r\nscriptEngineManagerMock.createScriptEngine(\r\n    \"js\",\r\n    \"C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit3039230032269303023\\script.sl66.js\"\r\n);\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testOrderingWithinSingleStartLevel(AbstractScriptFileWatcherTest.java:342)\r\nWanted anywhere AFTER following interaction:\r\nscriptEngineManagerMock.createScriptEngine(\r\n    \"js\",\r\n    \"C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit3039230032269303023\\script.sl65.js\"\r\n);\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcher.createAndLoad(AbstractScriptFileWatcher.java:337)\r\n\r\n\tat org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testOrderingWithinSingleStartLevel(AbstractScriptFileWatcherTest.java:342)\r\n```\r\n\r\n---\r\n\r\n```\r\n[ERROR] org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testLoadTwoCustomFilesDifferentStartLevels  Time elapsed: 0.525 s  <<< FAILURE!\r\norg.mockito.exceptions.verification.NeverWantedButInvoked: \r\n\r\nscriptEngineManagerMock.createScriptEngine(\r\n    <any string>,\r\n    \"C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit7804289402298206703\\script.sl70.js\"\r\n);\r\nNever wanted here:\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testLoadTwoCustomFilesDifferentStartLevels(AbstractScriptFileWatcherTest.java:247)\r\nBut invoked here:\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcher.createAndLoad(AbstractScriptFileWatcher.java:337) with arguments: [js, C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit7804289402298206703\\script.sl70.js]\r\n\r\n\tat org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testLoadTwoCustomFilesDifferentStartLevels(AbstractScriptFileWatcherTest.java:247)\r\n```\r\n\r\n---\r\n\r\n```\r\n[ERROR] org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testSortsAllFilesInNewDirectory  Time elapsed: 11.798 s  <<< FAILURE!\r\norg.mockito.exceptions.verification.VerificationInOrderFailure: \r\n\r\nVerification in order failure\r\nWanted but not invoked:\r\nscriptEngineManagerMock.createScriptEngine(\r\n    \"js\",\r\n    \"C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit10401868740813211202\\dir\\script.sl20.js\"\r\n);\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testSortsAllFilesInNewDirectory(AbstractScriptFileWatcherTest.java:540)\r\nWanted anywhere AFTER following interaction:\r\nscriptEngineManagerMock.createScriptEngine(\r\n    \"js\",\r\n    \"C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit10401868740813211202\\dir\\script2.sl10.js\"\r\n);\r\n-> at org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcher.createAndLoad(AbstractScriptFileWatcher.java:337)\r\n\r\n\tat org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcherTest.testSortsAllFilesInNewDirectory(AbstractScriptFileWatcherTest.java:540)\r\n```\r\n\r\n_Originally posted by @wborn in https://github.com/openhab/openhab-core/issues/3384#issuecomment-1435702135_\r\n            ",
    "issue_word_count": 577,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcher.java",
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java"
    ],
    "base_commit": "cd45dfe9f72f44504ea39ab4e00034cb31b0d59b",
    "head_commit": "ef3008274bfec9518378e957552166637b3b33f1",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3388",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3388",
    "dockerfile": "",
    "pr_merged_at": "2023-02-20T15:20:04.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcher.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcher.java\nindex 6c1d094fabd..f65907b2053 100644\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcher.java\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcher.java\n@@ -71,11 +71,14 @@ public abstract class AbstractScriptFileWatcher implements WatchService.WatchEve\n \n     private static final Set<String> EXCLUDED_FILE_EXTENSIONS = Set.of(\"txt\", \"old\", \"example\", \"backup\", \"md\", \"swp\",\n             \"tmp\", \"bak\");\n+    private static final String REGEX_SEPARATOR = \"\\\\\".equals(File.separator) ? \"\\\\\\\\\" : File.separator;\n \n     private static final List<Pattern> START_LEVEL_PATTERNS = List.of( //\n-            Pattern.compile(\".*/sl(\\\\d{2})/[^/]+\"), // script in immediate slXX directory\n-            Pattern.compile(\".*/[^/]+\\\\.sl(\\\\d{2})\\\\.[^/.]+\") // script named <name>.slXX.<ext>\n-    );\n+            // script in immediate slXX directory\n+            Pattern.compile(\".*\" + REGEX_SEPARATOR + \"sl(\\\\d{2})\" + REGEX_SEPARATOR + \"[^\" + REGEX_SEPARATOR + \"]+\"),\n+            // script named <name>.slXX.<ext>\n+            Pattern.compile(\".*\" + REGEX_SEPARATOR + \"[^\" + REGEX_SEPARATOR + \"]+\\\\.sl(\\\\d{2})\\\\.[^\" + REGEX_SEPARATOR\n+                    + \".]+\"));\n \n     private final Logger logger = LoggerFactory.getLogger(AbstractScriptFileWatcher.class);\n \n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java\nindex 4a15cbc2da1..dc68e373d79 100644\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java\n@@ -67,6 +67,7 @@\n @ExtendWith(MockitoExtension.class)\n @MockitoSettings(strictness = Strictness.LENIENT)\n class AbstractScriptFileWatcherTest extends JavaTest {\n+    private static final int DEFAULT_TEST_TIMEOUT_MS = 10000;\n \n     private @NonNullByDefault({}) AbstractScriptFileWatcher scriptFileWatcher;\n \n@@ -114,7 +115,7 @@ public void testLoadOneDefaultFileAlreadyStarted() {\n \n         scriptFileWatcher.processWatchEvent(CREATE, p);\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p.toString());\n     }\n \n     @Test\n@@ -132,9 +133,9 @@ public void testSubDirectoryIncludedInInitialImport() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\",\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n                 ScriptFileReference.getScriptIdentifier(p0));\n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\",\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n                 ScriptFileReference.getScriptIdentifier(p1));\n     }\n \n@@ -154,7 +155,7 @@ public void testSubDirectoryIgnoredInInitialImport() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\",\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n                 ScriptFileReference.getScriptIdentifier(p0));\n         verify(scriptEngineManagerMock, never()).createScriptEngine(\"js\", ScriptFileReference.getScriptIdentifier(p1));\n     }\n@@ -182,7 +183,7 @@ public void testLoadOneDefaultFileWaitUntilStarted() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p.toString());\n     }\n \n     @Test\n@@ -209,7 +210,7 @@ public void testLoadOneCustomFileWaitUntilStarted() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p.toString());\n     }\n \n     @Test\n@@ -243,14 +244,14 @@ public void testLoadTwoCustomFilesDifferentStartLevels() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p2.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p2.toString());\n         verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), eq(p1.toString()));\n \n         updateStartLevel(80);\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p1.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p1.toString());\n     }\n \n     @Test\n@@ -277,14 +278,14 @@ public void testLoadTwoCustomFilesAlternativePatternDifferentStartLevels() {\n \n         updateStartLevel(60);\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p2.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p2.toString());\n         verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), eq(p1.toString()));\n \n         updateStartLevel(80);\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p1.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p1.toString());\n     }\n \n     @Test\n@@ -311,7 +312,7 @@ public void testLoadOneDefaultFileDelayedSupport() {\n         awaitEmptyQueue();\n \n         // verify script has now been processed\n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p.toString());\n     }\n \n     @Test\n@@ -337,9 +338,12 @@ public void testOrderingWithinSingleStartLevel() {\n \n         InOrder inOrder = inOrder(scriptEngineManagerMock);\n \n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p64.toString());\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p65.toString());\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p66.toString());\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                p64.toString());\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                p65.toString());\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                p66.toString());\n     }\n \n     @Test\n@@ -365,9 +369,12 @@ public void testOrderingStartlevelFolders() {\n         awaitEmptyQueue();\n \n         InOrder inOrder = inOrder(scriptEngineManagerMock);\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p30.toString());\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p40.toString());\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p50.toString());\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                p30.toString());\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                p40.toString());\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                p50.toString());\n     }\n \n     @Test\n@@ -389,13 +396,15 @@ public void testReloadActiveWhenDependencyChanged() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\", p.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS).times(1)).createScriptEngine(\"js\",\n+                p.toString());\n \n         scriptFileWatcher.onDependencyChange(p.toString());\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000).times(2)).createScriptEngine(\"js\", p.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS).times(2)).createScriptEngine(\"js\",\n+                p.toString());\n     }\n \n     @Test\n@@ -439,13 +448,15 @@ public void testRemoveBeforeReAdd() {\n         scriptFileWatcher.processWatchEvent(CREATE, p);\n \n         awaitEmptyQueue();\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", scriptIdentifier);\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                scriptIdentifier);\n \n         scriptFileWatcher.processWatchEvent(MODIFY, p);\n \n         awaitEmptyQueue();\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).removeEngine(scriptIdentifier);\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", scriptIdentifier);\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).removeEngine(scriptIdentifier);\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                scriptIdentifier);\n     }\n \n     @Test\n@@ -466,8 +477,8 @@ public void testDirectoryAdded() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p1.toString());\n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p2.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p1.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p2.toString());\n     }\n \n     @Test\n@@ -488,9 +499,9 @@ public void testDirectoryAddedSubDirIncluded() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\",\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n                 ScriptFileReference.getScriptIdentifier(p1));\n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\",\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n                 ScriptFileReference.getScriptIdentifier(p2));\n     }\n \n@@ -512,7 +523,7 @@ public void testDirectoryAddedSubDirIgnored() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\",\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n                 ScriptFileReference.getScriptIdentifier(p1));\n         verify(scriptEngineManagerMock, never()).createScriptEngine(\"js\", ScriptFileReference.getScriptIdentifier(p2));\n     }\n@@ -536,8 +547,10 @@ public void testSortsAllFilesInNewDirectory() {\n         awaitEmptyQueue();\n \n         InOrder inOrder = inOrder(scriptEngineManagerMock);\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p10.toString());\n-        inOrder.verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p20.toString());\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                p10.toString());\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n+                p20.toString());\n     }\n \n     @Test\n@@ -560,10 +573,10 @@ public void testDirectoryRemoved() {\n \n         awaitEmptyQueue();\n \n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p1.toString());\n-        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p2.toString());\n-        verify(scriptEngineManagerMock, timeout(10000)).removeEngine(p1.toString());\n-        verify(scriptEngineManagerMock, timeout(10000)).removeEngine(p2.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p1.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\", p2.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).removeEngine(p1.toString());\n+        verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).removeEngine(p2.toString());\n     }\n \n     @Test\n@@ -585,11 +598,12 @@ public void testScriptEngineRemovedOnFailedLoad() {\n         awaitEmptyQueue();\n \n         InOrder inOrder = inOrder(scriptEngineManagerMock);\n-        inOrder.verify(scriptEngineManagerMock, timeout(1000)).createScriptEngine(\"js\",\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS)).createScriptEngine(\"js\",\n                 ScriptFileReference.getScriptIdentifier(p));\n-        inOrder.verify(scriptEngineManagerMock, timeout(1000))\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS))\n                 .loadScript(eq(ScriptFileReference.getScriptIdentifier(p)), any());\n-        inOrder.verify(scriptEngineManagerMock, timeout(1000)).removeEngine(ScriptFileReference.getScriptIdentifier(p));\n+        inOrder.verify(scriptEngineManagerMock, timeout(DEFAULT_TEST_TIMEOUT_MS))\n+                .removeEngine(ScriptFileReference.getScriptIdentifier(p));\n     }\n \n     @Test\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3384",
    "pr_id": 3384,
    "issue_id": 3383,
    "repo": "openhab/openhab-core",
    "problem_statement": "ConfigDispatcherFileWatcherTest always fails on Windows\nThese tests now always fail on Windows builds so it might be a real bug e.g. caused by #3004.\r\n\r\nSee this GHA build: https://github.com/wborn/openhab-core/actions/runs/4210674830/jobs/7308736469\r\n\r\n### configurationFileCreated\r\n\r\n```\r\n[ERROR] Tests run: 6, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 1.562 s <<< FAILURE! - in org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest\r\n[ERROR] org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest.configurationFileCreated  Time elapsed: 1.426 s  <<< FAILURE!\r\nWanted but not invoked:\r\nconfigDispatcherMock.processConfigFile(\r\n    myPath.cfg\r\n);\r\n-> at org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest.configurationFileCreated(ConfigDispatcherFileWatcherTest.java:50)\r\n\r\nHowever, there was exactly 1 interaction with this mock:\r\nconfigDispatcherMock.processConfigFile(\r\n    conf\\services\r\n);\r\n-> at org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcher.<init>(ConfigDispatcherFileWatcher.java:58)\r\n\r\n\r\n\tat org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest.configurationFileCreated(ConfigDispatcherFileWatcherTest.java:50)\r\n```\r\n\r\n### configurationFileRemoved\r\n\r\n```\r\n[ERROR] org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest.configurationFileRemoved  Time elapsed: 0.004 s  <<< FAILURE!\r\nWanted but not invoked:\r\nconfigDispatcherMock.fileRemoved(\r\n    \"D:\\a\\openhab-core\\openhab-core\\bundles\\org.openhab.core.config.dispatch\\myPath.cfg\"\r\n);\r\n-> at org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest.configurationFileRemoved(ConfigDispatcherFileWatcherTest.java:82)\r\n\r\nHowever, there was exactly 1 interaction with this mock:\r\nconfigDispatcherMock.processConfigFile(\r\n    conf\\services\r\n);\r\n-> at org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcher.<init>(ConfigDispatcherFileWatcher.java:58)\r\n\r\n\r\n\tat org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest.configurationFileRemoved(ConfigDispatcherFileWatcherTest.java:82)\r\n```\r\n\r\n### configurationFileModified\r\n\r\n```\r\n[ERROR] org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest.configurationFileModified  Time elapsed: 0.007 s  <<< FAILURE!\r\nWanted but not invoked:\r\nconfigDispatcherMock.processConfigFile(\r\n    myPath.cfg\r\n);\r\n-> at org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest.configurationFileModified(ConfigDispatcherFileWatcherTest.java:58)\r\n\r\nHowever, there was exactly 1 interaction with this mock:\r\nconfigDispatcherMock.processConfigFile(\r\n    conf\\services\r\n);\r\n-> at org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcher.<init>(ConfigDispatcherFileWatcher.java:58)\r\n\r\n\r\n\tat org.openhab.core.config.dispatch.internal.ConfigDispatcherFileWatcherTest.configurationFileModified(ConfigDispatcherFileWatcherTest.java:58)\r\n```",
    "issue_word_count": 295,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java",
      "bundles/org.openhab.core.config.dispatch/src/test/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcherTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.config.dispatch/src/test/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcherTest.java"
    ],
    "base_commit": "c17481c2acc1fd5c005db38a3ce872be71d11685",
    "head_commit": "91a2b7f204278659e360c2d764306c9aa9d02abe",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3384",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3384",
    "dockerfile": "",
    "pr_merged_at": "2023-02-19T10:47:21.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java b/bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java\nindex 01aba7849b6..d46c5e1d75d 100644\n--- a/bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java\n+++ b/bundles/org.openhab.core.config.dispatch/src/main/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcher.java\n@@ -12,7 +12,6 @@\n  */\n package org.openhab.core.config.dispatch.internal;\n \n-import java.io.File;\n import java.io.IOException;\n import java.nio.file.Files;\n import java.nio.file.Path;\n@@ -65,22 +64,22 @@ public void deactivate() {\n \n     @Override\n     public void processWatchEvent(WatchService.Kind kind, Path path) {\n+        Path fullPath = watchService.getWatchPath().resolve(path);\n         try {\n             if (kind == WatchService.Kind.CREATE || kind == WatchService.Kind.MODIFY) {\n-                if (!Files.isHidden(path) && path.toString().endsWith(\".cfg\")) {\n-                    configDispatcher.processConfigFile(path.toFile());\n+                if (!Files.isHidden(fullPath) && fullPath.toString().endsWith(\".cfg\")) {\n+                    configDispatcher.processConfigFile(fullPath.toFile());\n                 }\n             } else if (kind == WatchService.Kind.DELETE) {\n                 // Detect if a service specific configuration file was removed. We want to\n                 // notify the service in this case with an updated empty configuration.\n-                File configFile = path.toFile();\n-                if (Files.isHidden(path) || Files.isDirectory(path) || !path.toString().endsWith(\".cfg\")) {\n+                if (Files.isHidden(fullPath) || Files.isDirectory(fullPath) || !fullPath.toString().endsWith(\".cfg\")) {\n                     return;\n                 }\n-                configDispatcher.fileRemoved(configFile.getAbsolutePath());\n+                configDispatcher.fileRemoved(fullPath.toString());\n             }\n         } catch (IOException e) {\n-            logger.error(\"Failed to process watch event {} for {}\", kind, path);\n+            logger.error(\"Failed to process watch event {} for {}\", kind, path, e);\n         }\n     }\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.config.dispatch/src/test/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcherTest.java b/bundles/org.openhab.core.config.dispatch/src/test/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcherTest.java\nindex c42154be78c..fc4c36f5372 100644\n--- a/bundles/org.openhab.core.config.dispatch/src/test/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcherTest.java\n+++ b/bundles/org.openhab.core.config.dispatch/src/test/java/org/openhab/core/config/dispatch/internal/ConfigDispatcherFileWatcherTest.java\n@@ -14,12 +14,15 @@\n \n import static org.mockito.Mockito.*;\n \n+import java.io.IOException;\n+import java.nio.file.Files;\n import java.nio.file.Path;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.jupiter.api.io.TempDir;\n import org.mockito.Mock;\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.openhab.core.service.WatchService;\n@@ -36,57 +39,58 @@ public class ConfigDispatcherFileWatcherTest {\n     private @Mock @NonNullByDefault({}) ConfigDispatcher configDispatcherMock;\n     private @Mock @NonNullByDefault({}) WatchService watchService;\n \n+    private @TempDir @NonNullByDefault({}) Path tempDir;\n+\n+    private @NonNullByDefault({}) Path cfgPath;\n+    private @NonNullByDefault({}) Path nonCfgPath;\n+\n     @BeforeEach\n-    public void setUp() {\n+    public void setUp() throws IOException {\n         configDispatcherFileWatcher = new ConfigDispatcherFileWatcher(configDispatcherMock, watchService);\n         verify(configDispatcherMock).processConfigFile(any());\n-    }\n \n-    @Test\n-    public void configurationFileCreated() {\n-        Path path = Path.of(\"myPath.cfg\");\n-        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.CREATE, path);\n+        when(watchService.getWatchPath()).thenReturn(tempDir.toAbsolutePath());\n+\n+        cfgPath = tempDir.resolve(\"myPath.cfg\");\n+        nonCfgPath = tempDir.resolve(\"myPath\");\n \n-        verify(configDispatcherMock).processConfigFile(path.toFile());\n+        Files.createFile(cfgPath);\n+        Files.createFile(nonCfgPath);\n     }\n \n     @Test\n-    public void configurationFileModified() {\n-        Path path = Path.of(\"myPath.cfg\");\n-        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.MODIFY, path);\n+    public void configurationFileCreated() throws IOException {\n+        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.CREATE, cfgPath);\n+        verify(configDispatcherMock).processConfigFile(cfgPath.toAbsolutePath().toFile());\n+    }\n \n-        verify(configDispatcherMock).processConfigFile(path.toFile());\n+    @Test\n+    public void configurationFileModified() throws IOException {\n+        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.MODIFY, cfgPath);\n+        verify(configDispatcherMock).processConfigFile(cfgPath.toAbsolutePath().toFile());\n     }\n \n     @Test\n     public void nonConfigurationFileCreated() {\n-        Path path = Path.of(\"myPath\");\n-        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.CREATE, path);\n-\n+        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.CREATE, nonCfgPath);\n         verifyNoMoreInteractions(configDispatcherMock);\n     }\n \n     @Test\n     public void nonConfigurationFileModified() {\n-        Path path = Path.of(\"myPath\");\n-        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.MODIFY, path);\n-\n+        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.MODIFY, nonCfgPath);\n         verifyNoMoreInteractions(configDispatcherMock);\n     }\n \n     @Test\n     public void configurationFileRemoved() {\n-        Path path = Path.of(\"myPath.cfg\");\n-        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.DELETE, path);\n-\n-        verify(configDispatcherMock).fileRemoved(path.toAbsolutePath().toString());\n+        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.DELETE, cfgPath);\n+        verify(configDispatcherMock).fileRemoved(cfgPath.toAbsolutePath().toString());\n     }\n \n     @Test\n     public void nonConfigurationFileRemoved() {\n-        Path path = Path.of(\"myPath\");\n-        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.DELETE, path);\n-\n+        configDispatcherFileWatcher.processWatchEvent(WatchService.Kind.DELETE, nonCfgPath);\n         verifyNoMoreInteractions(configDispatcherMock);\n     }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3366",
    "pr_id": 3366,
    "issue_id": 3316,
    "repo": "openhab/openhab-core",
    "problem_statement": "unable to load /settings/things\nI'm running 3.4.0. A thing is offline for reasons unknown. When I try to go to `/settings/things` in the browser, the AJAX call to `/rest/things` gives a 200, but has malformed output. If I look in openhab.log, I see\r\n\r\n```\r\n2023-01-13 10:35:45.204 [ERROR] [rg.apache.cxf.jaxrs.utils.JAXRSUtils] - Problem with writing the data, class org.openhab.core.io.rest.Stream2JSONInputStream, ContentType: application/json\r\n2023-01-13 10:35:45.204 [ERROR] [internal.JSONResponseExceptionMapper] - Unexpected exception occurred while processing REST request.\r\njava.lang.IllegalArgumentException: can't parse argument number: \r\n        at java.text.MessageFormat.makeFormat(MessageFormat.java:1454) ~[?:?]\r\n        at java.text.MessageFormat.applyPattern(MessageFormat.java:492) ~[?:?]\r\n        at java.text.MessageFormat.<init>(MessageFormat.java:371) ~[?:?]\r\n        at java.text.MessageFormat.format(MessageFormat.java:860) ~[?:?]\r\n        at org.openhab.core.internal.i18n.I18nProviderImpl.getText(I18nProviderImpl.java:349) ~[?:?]\r\n        at org.openhab.core.thing.i18n.ThingStatusInfoI18nLocalizationService.getTranslationForClass(ThingStatusInfoI18nLocalizationService.java:147) ~[?:?]\r\n        at org.openhab.core.thing.i18n.ThingStatusInfoI18nLocalizationService.translateDescription(ThingStatusInfoI18nLocalizationService.java:128) ~[?:?]\r\n        at org.openhab.core.thing.i18n.ThingStatusInfoI18nLocalizationService.getLocalizedThingStatusInfo(ThingStatusInfoI18nLocalizationService.java:86) ~[?:?]\r\n        at org.openhab.core.io.rest.core.internal.thing.ThingResource.convertToEnrichedThingDTO(ThingResource.java:743) ~[?:?]\r\n        at org.openhab.core.io.rest.core.internal.thing.ThingResource.lambda$0(ThingResource.java:299) ~[?:?]\r\n...\r\nCaused by: java.lang.NumberFormatException: For input string: \"\"\r\n        at java.lang.NumberFormatException.forInputString(NumberFormatException.java:67) ~[?:?]\r\n        at java.lang.Integer.parseInt(Integer.java:678) ~[?:?]\r\n        at java.lang.Integer.parseInt(Integer.java:786) ~[?:?]\r\n        at java.text.MessageFormat.makeFormat(MessageFormat.java:1452) ~[?:?]\r\n        ... 74 more\r\n```\r\n\r\nThe JSON the browser gets ends with:\r\n\r\n```\r\n...\r\n{\"statusInfo\":{\"status\":\"ONLINE\",\"statusDetail\":\"NONE\"},\"editable\":false,\"label\":\"Master Toilet Room Occupancy\",\"bridgeUID\":\"mqtt:broker:hiome\",\"UID\":\"mqt\"{\\\"error\\\":{\\\"message\\\":\\\"can\\\\u0027t parse argument number: \\\",\\\"http-code\\\":500,\\\"exception\\\":{\\\"class\\\":\\\"java.lang.IllegalArgumentException\\\",\\\"message\\\":\\\"can\\\\u0027t parse argument number: \\\",\\\"localized-message\\\":\\\"can\\\\u0027t parse argument number: \\\",\\\"cause\\\":\\\"java.lang.NumberFormatException\\\"}}}\"\r\n```\r\n\r\nIf I do `things list` in console, the list ends with:\r\n\r\n```\r\nmqtt:topic:1576466893 (Type=Thing, Status=ONLINE, Label=Suzie's Room Occupancy, Bridge=mqtt:broker:hiome)\r\nAn unexpected error occurred during execution.\r\n```\r\n\r\nand I see the following similar error in my log:\r\n\r\n```\r\n2023-01-13 10:37:45.813 [ERROR] [b.core.io.console.ConsoleInterpreter] - An error occurred while executing the console command.\r\njava.lang.IllegalArgumentException: can't parse argument number: \r\n        at java.text.MessageFormat.makeFormat(MessageFormat.java:1454) ~[?:?]\r\n        at java.text.MessageFormat.applyPattern(MessageFormat.java:492) ~[?:?]\r\n        at java.text.MessageFormat.<init>(MessageFormat.java:371) ~[?:?]\r\n        at java.text.MessageFormat.format(MessageFormat.java:860) ~[?:?]\r\n        at org.openhab.core.internal.i18n.I18nProviderImpl.getText(I18nProviderImpl.java:349) ~[?:?]\r\n        at org.openhab.core.thing.i18n.ThingStatusInfoI18nLocalizationService.getTranslationForClass(ThingStatusInfoI18nLocalizationService.java:147) ~[?:?]\r\n        at org.openhab.core.thing.i18n.ThingStatusInfoI18nLocalizationService.translateDescription(ThingStatusInfoI18nLocalizationService.java:128) ~[?:?]\r\n        at org.openhab.core.thing.i18n.ThingStatusInfoI18nLocalizationService.getLocalizedThingStatusInfo(ThingStatusInfoI18nLocalizationService.java:86) ~[?:?]\r\n        at org.openhab.core.thing.internal.console.ThingConsoleCommandExtension.printThings(ThingConsoleCommandExtension.java:184) ~[?:?]\r\n        at org.openhab.core.thing.internal.console.ThingConsoleCommandExtension.execute(ThingConsoleCommandExtension.java:89) ~[?:?]\r\n        at org.openhab.core.io.console.ConsoleInterpreter.execute(ConsoleInterpreter.java:57) [bundleFile:?]\r\n        at org.openhab.core.io.console.karaf.internal.CommandWrapper.execute(CommandWrapper.java:79) [bundleFile:?]\r\n        at org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:68) [bundleFile:4.3.7]\r\n        at org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:86) [bundleFile:4.3.7]\r\n        at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:599) [bundleFile:4.3.7]\r\n        at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:526) [bundleFile:4.3.7]\r\n        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:415) [bundleFile:4.3.7]\r\n        at org.apache.felix.gogo.runtime.Pipe.doCall(Pipe.java:416) [bundleFile:4.3.7]\r\n        at org.apache.felix.gogo.runtime.Pipe.call(Pipe.java:229) [bundleFile:4.3.7]\r\n        at org.apache.felix.gogo.runtime.Pipe.call(Pipe.java:59) [bundleFile:4.3.7]\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]\r\n        at java.lang.Thread.run(Thread.java:833) [?:?]\r\nCaused by: java.lang.NumberFormatException: For input string: \"\"\r\n        at java.lang.NumberFormatException.forInputString(NumberFormatException.java:67) ~[?:?]\r\n        at java.lang.Integer.parseInt(Integer.java:678) ~[?:?]\r\n        at java.lang.Integer.parseInt(Integer.java:786) ~[?:?]\r\n        at java.text.MessageFormat.makeFormat(MessageFormat.java:1452) ~[?:?]\r\n        ... 23 more\r\n```\r\n\r\nI've tracked this down to a `bondhome:bondBridge` thing type with a thing status of `bondhome:bondBridge:BD30179\r\nOFFLINE (COMMUNICATION_ERROR): @text/offline.comm-error.api-call-failed` so I'll be fixing the i18n there, but even so, core should be tolerant of a bad binding and fall back to a non-localized string.",
    "issue_word_count": 765,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/i18n/I18nProviderImpl.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/i18n/I18nProviderImplTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/i18n/I18nProviderImplTest.java"
    ],
    "base_commit": "c349c0114e5a505b8ddaa4c0b0c269f176c53ab1",
    "head_commit": "194673823f052dfe68d95855a0d02be8934cb12e",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3366",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3366",
    "dockerfile": "",
    "pr_merged_at": "2023-02-12T16:04:34.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/i18n/I18nProviderImpl.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/i18n/I18nProviderImpl.java\nindex f8f033e4e30..80151468a3d 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/i18n/I18nProviderImpl.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/i18n/I18nProviderImpl.java\n@@ -345,8 +345,12 @@ public Locale getLocale() {\n             @Nullable Locale locale, @Nullable Object @Nullable... arguments) {\n         String text = getText(bundle, key, defaultText, locale);\n \n-        if (text != null) {\n-            return MessageFormat.format(text, arguments);\n+        try {\n+            if (text != null) {\n+                return MessageFormat.format(text, arguments);\n+            }\n+        } catch (IllegalArgumentException e) {\n+            logger.warn(\"Failed to format message '{}' with parameters {}. This is a bug.\", text, arguments);\n         }\n \n         return text;\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/internal/i18n/I18nProviderImplTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/internal/i18n/I18nProviderImplTest.java\nindex 7cedbe45d4c..bbbca4f4e3d 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/internal/i18n/I18nProviderImplTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/internal/i18n/I18nProviderImplTest.java\n@@ -189,6 +189,17 @@ private static Stream<String> getAllDimensions() {\n                 .map(UnitUtils::getDimensionName).filter(Objects::nonNull).map(Objects::requireNonNull).distinct();\n     }\n \n+    @Test\n+    public void testFormattingTexts() {\n+        String defaultText = \"formatString {0} {1,number}\";\n+        String successResult = i18nProviderImpl.getText(bundleMock, \"testKey\", defaultText, null, false, 1);\n+        assertThat(successResult, is(\"formatString false 1\"));\n+\n+        // make sure bugs are properly handled\n+        String failedResult = i18nProviderImpl.getText(bundleMock, \"testKey\", defaultText, null, false, \"foo\");\n+        assertThat(failedResult, is(defaultText));\n+    }\n+\n     private Dictionary<String, Object> buildInitialConfig() {\n         Dictionary<String, Object> conf = new Hashtable<>();\n         conf.put(LOCATION, LOCATION_ZERO);\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3335",
    "pr_id": 3335,
    "issue_id": 3329,
    "repo": "openhab/openhab-core",
    "problem_statement": "Support Last-Modified or ETag headers on critical REST API endpoints\nIdea from https://github.com/openhab/openhab-webui/issues/1650#issuecomment-1399446960:\r\n\r\nThe Main UI (and possibly others) makes relatively frequent REST API calls to get all things, or item, or rules, or UI components to make sure the data is up-to-date. For instance every time an item or thing picker is rendered, a call to `/rest/items` resp. `/rest/things` is performed.\r\n`/rest/items` is also called every time the home page is shown, to compute the model cards (locations, equipment, points) with the latest data.\r\n\r\nIt could be a huge performance improvement if these critical and costly endpoints supported either the `ETag` or `Last-Modified` HTTP response headers, and their equivalent request headers (`If-None-Match` and `If-Modified-Since`).\r\nIf the preconditions don't match (see [JAX-RS - Handling 'Last-Modified' and 'ETag' headers with Request Injection](https://www.logicbig.com/tutorials/java-ee-tutorial/jax-rs/request-context.html)) then a 304 Not Modified response would be sent instead.\r\n\r\nThe UI and other clients would store the last known list of entities in a client-side cache (possibly even surviving page refreshes with IndexedDB), as well as the last sent EntityTag or modified date retrieved from the response headers, which would then be sent along with future requests. It would react to a 200 OK response by updating the cache before returning the data to the caller, and to a 304 Not Modified response by simply returning the cache.\r\n\r\nTo determine if the data has changed, resources backed by a Registry could keep the last sent EntityTag or last modified date as well, and add a [change listener](https://www.openhab.org/javadoc/latest/org/openhab/core/common/registry/registry#addRegistryChangeListener(org.openhab.core.common.registry.RegistryChangeListener)) to reset this last ETag or date when a change was notified.\r\n\r\nFor items it would surely be a little more complicated since changes to metadata would have to be handled as well.",
    "issue_word_count": 337,
    "test_files_count": 1,
    "non_test_files_count": 4,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java",
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java",
      "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/thing/ThingResource.java",
      "bundles/org.openhab.core.io.rest.ui/src/main/java/org/openhab/core/io/rest/ui/internal/UIResource.java",
      "itests/org.openhab.core.io.rest.core.tests/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResourceOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.io.rest.core.tests/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResourceOSGiTest.java"
    ],
    "base_commit": "885a8548c8985f296dcab3e021321c89d63626eb",
    "head_commit": "7e5d1267285849211a7d5aa810fd945bb9c6f741",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3335",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3335",
    "dockerfile": "",
    "pr_merged_at": "2023-06-15T18:16:15.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java b/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java\nindex ac226f289e9..2ffb7adb75e 100644\n--- a/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java\n+++ b/bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java\n@@ -17,9 +17,11 @@\n import java.io.IOException;\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n+import java.time.Instant;\n import java.time.ZonedDateTime;\n import java.time.temporal.ChronoUnit;\n import java.util.Collection;\n+import java.util.Date;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Predicate;\n@@ -29,6 +31,7 @@\n import javax.annotation.security.RolesAllowed;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n+import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n import javax.ws.rs.PUT;\n@@ -36,8 +39,10 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.CacheControl;\n import javax.ws.rs.core.Context;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Request;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.Status;\n import javax.ws.rs.core.SecurityContext;\n@@ -69,6 +74,7 @@\n import org.openhab.core.automation.rest.internal.dto.EnrichedRuleDTOMapper;\n import org.openhab.core.automation.util.ModuleBuilder;\n import org.openhab.core.automation.util.RuleBuilder;\n+import org.openhab.core.common.registry.RegistryChangeListener;\n import org.openhab.core.config.core.ConfigUtil;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n@@ -80,6 +86,7 @@\n import org.openhab.core.library.types.DateTimeType;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Deactivate;\n import org.osgi.service.component.annotations.Reference;\n import org.osgi.service.jaxrs.whiteboard.JaxrsWhiteboardConstants;\n import org.osgi.service.jaxrs.whiteboard.propertytypes.JSONRequired;\n@@ -128,8 +135,10 @@ public class RuleResource implements RESTResource {\n     private final RuleManager ruleManager;\n     private final RuleRegistry ruleRegistry;\n     private final ManagedRuleProvider managedRuleProvider;\n+    private final ResetLastModifiedChangeListener resetLastModifiedChangeListener = new ResetLastModifiedChangeListener();\n \n     private @Context @NonNullByDefault({}) UriInfo uriInfo;\n+    private @Nullable Date cacheableListLastModified = null;\n \n     @Activate\n     public RuleResource( //\n@@ -141,6 +150,13 @@ public RuleResource( //\n         this.ruleManager = ruleManager;\n         this.ruleRegistry = ruleRegistry;\n         this.managedRuleProvider = managedRuleProvider;\n+\n+        this.ruleRegistry.addRegistryChangeListener(resetLastModifiedChangeListener);\n+    }\n+\n+    @Deactivate\n+    void deactivate() {\n+        this.ruleRegistry.removeRegistryChangeListener(resetLastModifiedChangeListener);\n     }\n \n     @GET\n@@ -148,13 +164,38 @@ public RuleResource( //\n     @Produces(MediaType.APPLICATION_JSON)\n     @Operation(operationId = \"getRules\", summary = \"Get available rules, optionally filtered by tags and/or prefix.\", responses = {\n             @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(array = @ArraySchema(schema = @Schema(implementation = EnrichedRuleDTO.class)))) })\n-    public Response get(@Context SecurityContext securityContext, @QueryParam(\"prefix\") final @Nullable String prefix,\n-            @QueryParam(\"tags\") final @Nullable List<String> tags,\n-            @QueryParam(\"summary\") @Parameter(description = \"summary fields only\") @Nullable Boolean summary) {\n+    public Response get(@Context SecurityContext securityContext, @Context Request request,\n+            @QueryParam(\"prefix\") final @Nullable String prefix, @QueryParam(\"tags\") final @Nullable List<String> tags,\n+            @QueryParam(\"summary\") @Parameter(description = \"summary fields only\") @Nullable Boolean summary,\n+            @DefaultValue(\"false\") @QueryParam(\"staticDataOnly\") @Parameter(description = \"provides a cacheable list of values not expected to change regularly and honors the If-Modified-Since header, all other parameters are ignored\") boolean staticDataOnly) {\n+\n         if ((summary == null || !summary) && !securityContext.isUserInRole(Role.ADMIN)) {\n             // users may only access the summary\n             return JSONResponse.createErrorResponse(Status.UNAUTHORIZED, \"Authentication required\");\n         }\n+\n+        if (staticDataOnly) {\n+            if (cacheableListLastModified != null) {\n+                Response.ResponseBuilder responseBuilder = request.evaluatePreconditions(cacheableListLastModified);\n+                if (responseBuilder != null) {\n+                    // send 304 Not Modified\n+                    return responseBuilder.build();\n+                }\n+            } else {\n+                cacheableListLastModified = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n+            }\n+\n+            Stream<EnrichedRuleDTO> rules = ruleRegistry.stream()\n+                    .map(rule -> EnrichedRuleDTOMapper.map(rule, ruleManager, managedRuleProvider));\n+\n+            CacheControl cc = new CacheControl();\n+            cc.setMustRevalidate(true);\n+            cc.setPrivate(true);\n+            rules = dtoMapper.limitToFields(rules, \"uid,templateUID,name,visibility,description,tags,editable\");\n+            return Response.ok(new Stream2JSONInputStream(rules)).lastModified(cacheableListLastModified)\n+                    .cacheControl(cc).build();\n+        }\n+\n         // match all\n         Predicate<Rule> p = r -> true;\n \n@@ -567,4 +608,26 @@ public Response setModuleConfigParam(@PathParam(\"ruleUID\") @Parameter(descriptio\n             return null;\n         }\n     }\n+\n+    private void resetStaticListLastModified() {\n+        cacheableListLastModified = null;\n+    }\n+\n+    private class ResetLastModifiedChangeListener implements RegistryChangeListener<Rule> {\n+\n+        @Override\n+        public void added(Rule element) {\n+            resetStaticListLastModified();\n+        }\n+\n+        @Override\n+        public void removed(Rule element) {\n+            resetStaticListLastModified();\n+        }\n+\n+        @Override\n+        public void updated(Rule oldElement, Rule element) {\n+            resetStaticListLastModified();\n+        }\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java\nindex 46d734be7a2..28e1b6e5ef0 100644\n--- a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java\n+++ b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResource.java\n@@ -12,9 +12,12 @@\n  */\n package org.openhab.core.io.rest.core.internal.item;\n \n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Date;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n@@ -40,9 +43,11 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.CacheControl;\n import javax.ws.rs.core.Context;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Request;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.ResponseBuilder;\n import javax.ws.rs.core.Response.Status;\n@@ -52,6 +57,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.auth.Role;\n+import org.openhab.core.common.registry.RegistryChangeListener;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.io.rest.DTOMapper;\n import org.openhab.core.io.rest.JSONResponse;\n@@ -68,6 +74,7 @@\n import org.openhab.core.items.ItemBuilderFactory;\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.items.ItemRegistryChangeListener;\n import org.openhab.core.items.ManagedItemProvider;\n import org.openhab.core.items.Metadata;\n import org.openhab.core.items.MetadataKey;\n@@ -88,6 +95,7 @@\n import org.openhab.core.types.TypeParser;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Deactivate;\n import org.osgi.service.component.annotations.Reference;\n import org.osgi.service.jaxrs.whiteboard.JaxrsWhiteboardConstants;\n import org.osgi.service.jaxrs.whiteboard.propertytypes.JSONRequired;\n@@ -174,6 +182,10 @@ private static void respectForwarded(final UriBuilder uriBuilder, final @Context\n     private final ManagedItemProvider managedItemProvider;\n     private final MetadataRegistry metadataRegistry;\n     private final MetadataSelectorMatcher metadataSelectorMatcher;\n+    private final ItemRegistryChangeListener resetLastModifiedItemChangeListener = new ResetLastModifiedItemChangeListener();\n+    private final RegistryChangeListener<Metadata> resetLastModifiedMetadataChangeListener = new ResetLastModifiedMetadataChangeListener();\n+\n+    private Map<@Nullable String, Date> cacheableListsLastModified = new HashMap<>();\n \n     @Activate\n     public ItemResource(//\n@@ -193,6 +205,15 @@ public ItemResource(//\n         this.managedItemProvider = managedItemProvider;\n         this.metadataRegistry = metadataRegistry;\n         this.metadataSelectorMatcher = metadataSelectorMatcher;\n+\n+        this.itemRegistry.addRegistryChangeListener(resetLastModifiedItemChangeListener);\n+        this.metadataRegistry.addRegistryChangeListener(resetLastModifiedMetadataChangeListener);\n+    }\n+\n+    @Deactivate\n+    void deactivate() {\n+        this.itemRegistry.removeRegistryChangeListener(resetLastModifiedItemChangeListener);\n+        this.metadataRegistry.removeRegistryChangeListener(resetLastModifiedMetadataChangeListener);\n     }\n \n     private UriBuilder uriBuilder(final UriInfo uriInfo, final HttpHeaders httpHeaders) {\n@@ -207,17 +228,47 @@ private UriBuilder uriBuilder(final UriInfo uriInfo, final HttpHeaders httpHeade\n     @Operation(operationId = \"getItems\", summary = \"Get all available items.\", responses = {\n             @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(array = @ArraySchema(schema = @Schema(implementation = EnrichedItemDTO.class)))) })\n     public Response getItems(final @Context UriInfo uriInfo, final @Context HttpHeaders httpHeaders,\n+            @Context Request request,\n             @HeaderParam(HttpHeaders.ACCEPT_LANGUAGE) @Parameter(description = \"language\") @Nullable String language,\n             @QueryParam(\"type\") @Parameter(description = \"item type filter\") @Nullable String type,\n             @QueryParam(\"tags\") @Parameter(description = \"item tag filter\") @Nullable String tags,\n             @DefaultValue(\".*\") @QueryParam(\"metadata\") @Parameter(description = \"metadata selector - a comma separated list or a regular expression (returns all if no value given)\") @Nullable String namespaceSelector,\n             @DefaultValue(\"false\") @QueryParam(\"recursive\") @Parameter(description = \"get member items recursively\") boolean recursive,\n-            @QueryParam(\"fields\") @Parameter(description = \"limit output to the given fields (comma separated)\") @Nullable String fields) {\n+            @QueryParam(\"fields\") @Parameter(description = \"limit output to the given fields (comma separated)\") @Nullable String fields,\n+            @DefaultValue(\"false\") @QueryParam(\"staticDataOnly\") @Parameter(description = \"provides a cacheable list of values not expected to change regularly and checks the If-Modified-Since header, all other parameters are ignored except \\\"metadata\\\"\") boolean staticDataOnly) {\n         final Locale locale = localeService.getLocale(language);\n         final Set<String> namespaces = splitAndFilterNamespaces(namespaceSelector, locale);\n \n         final UriBuilder uriBuilder = uriBuilder(uriInfo, httpHeaders);\n \n+        if (staticDataOnly) {\n+            Date lastModifiedDate = Date.from(Instant.now());\n+            if (cacheableListsLastModified.containsKey(namespaceSelector)) {\n+                lastModifiedDate = cacheableListsLastModified.get(namespaceSelector);\n+                Response.ResponseBuilder responseBuilder = request.evaluatePreconditions(lastModifiedDate);\n+                if (responseBuilder != null) {\n+                    // send 304 Not Modified\n+                    return responseBuilder.build();\n+                }\n+            } else {\n+                lastModifiedDate = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n+                cacheableListsLastModified.put(namespaceSelector, lastModifiedDate);\n+            }\n+\n+            Stream<EnrichedItemDTO> itemStream = getItems(null, null).stream() //\n+                    .map(item -> EnrichedItemDTOMapper.map(item, false, null, uriBuilder, locale)) //\n+                    .peek(dto -> addMetadata(dto, namespaces, null)) //\n+                    .peek(dto -> dto.editable = isEditable(dto.name));\n+            itemStream = dtoMapper.limitToFields(itemStream,\n+                    \"name,label,type,groupType,function,category,editable,groupNames,link,tags,metadata\");\n+\n+            CacheControl cc = new CacheControl();\n+            cc.setMustRevalidate(true);\n+            cc.setPrivate(true);\n+            return Response.ok(new Stream2JSONInputStream(itemStream)).lastModified(lastModifiedDate).cacheControl(cc)\n+                    .build();\n+        }\n+\n         Stream<EnrichedItemDTO> itemStream = getItems(type, tags).stream() //\n                 .map(item -> EnrichedItemDTOMapper.map(item, recursive, null, uriBuilder, locale)) //\n                 .peek(dto -> addMetadata(dto, namespaces, null)) //\n@@ -935,4 +986,48 @@ private void addMetadata(EnrichedItemDTO dto, Set<String> namespaces, @Nullable\n     private boolean isEditable(String itemName) {\n         return managedItemProvider.get(itemName) != null;\n     }\n+\n+    private void resetCacheableListsLastModified() {\n+        this.cacheableListsLastModified.clear();\n+    }\n+\n+    private class ResetLastModifiedItemChangeListener implements ItemRegistryChangeListener {\n+        @Override\n+        public void added(Item element) {\n+            resetCacheableListsLastModified();\n+        }\n+\n+        @Override\n+        public void allItemsChanged(Collection<String> oldItemNames) {\n+            resetCacheableListsLastModified();\n+        }\n+\n+        @Override\n+        public void removed(Item element) {\n+            resetCacheableListsLastModified();\n+        }\n+\n+        @Override\n+        public void updated(Item oldElement, Item element) {\n+            resetCacheableListsLastModified();\n+        }\n+    }\n+\n+    private class ResetLastModifiedMetadataChangeListener implements RegistryChangeListener<Metadata> {\n+\n+        @Override\n+        public void added(Metadata element) {\n+            resetCacheableListsLastModified();\n+        }\n+\n+        @Override\n+        public void removed(Metadata element) {\n+            resetCacheableListsLastModified();\n+        }\n+\n+        @Override\n+        public void updated(Metadata oldElement, Metadata element) {\n+            resetCacheableListsLastModified();\n+        }\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/thing/ThingResource.java b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/thing/ThingResource.java\nindex 324482635ff..84816fa841a 100644\n--- a/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/thing/ThingResource.java\n+++ b/bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/thing/ThingResource.java\n@@ -15,9 +15,12 @@\n import java.io.IOException;\n import java.net.URI;\n import java.net.URISyntaxException;\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.Date;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Locale;\n@@ -39,9 +42,11 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.CacheControl;\n import javax.ws.rs.core.Context;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Request;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.Status;\n import javax.ws.rs.core.UriInfo;\n@@ -49,6 +54,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.auth.Role;\n+import org.openhab.core.common.registry.RegistryChangeListener;\n import org.openhab.core.config.core.ConfigDescription;\n import org.openhab.core.config.core.ConfigDescriptionRegistry;\n import org.openhab.core.config.core.ConfigUtil;\n@@ -100,6 +106,7 @@\n import org.openhab.core.thing.util.ThingHelper;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Deactivate;\n import org.osgi.service.component.annotations.Reference;\n import org.osgi.service.jaxrs.whiteboard.JaxrsWhiteboardConstants;\n import org.osgi.service.jaxrs.whiteboard.propertytypes.JSONRequired;\n@@ -164,8 +171,10 @@ public class ThingResource implements RESTResource {\n     private final ThingRegistry thingRegistry;\n     private final ThingStatusInfoI18nLocalizationService thingStatusInfoI18nLocalizationService;\n     private final ThingTypeRegistry thingTypeRegistry;\n+    private final ResetLastModifiedChangeListener resetLastModifiedChangeListener = new ResetLastModifiedChangeListener();\n \n     private @Context @NonNullByDefault({}) UriInfo uriInfo;\n+    private @Nullable Date cacheableListLastModified = null;\n \n     @Activate\n     public ThingResource( //\n@@ -198,6 +207,13 @@ public ThingResource( //\n         this.thingRegistry = thingRegistry;\n         this.thingStatusInfoI18nLocalizationService = thingStatusInfoI18nLocalizationService;\n         this.thingTypeRegistry = thingTypeRegistry;\n+\n+        this.thingRegistry.addRegistryChangeListener(resetLastModifiedChangeListener);\n+    }\n+\n+    @Deactivate\n+    void deactivate() {\n+        this.thingRegistry.removeRegistryChangeListener(resetLastModifiedChangeListener);\n     }\n \n     /**\n@@ -291,13 +307,34 @@ public Response create(\n     @Operation(operationId = \"getThings\", summary = \"Get all available things.\", security = {\n             @SecurityRequirement(name = \"oauth2\", scopes = { \"admin\" }) }, responses = {\n                     @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(array = @ArraySchema(schema = @Schema(implementation = EnrichedThingDTO.class), uniqueItems = true))) })\n-    public Response getAll(\n+    public Response getAll(@Context Request request,\n             @HeaderParam(HttpHeaders.ACCEPT_LANGUAGE) @Parameter(description = \"language\") @Nullable String language,\n-            @QueryParam(\"summary\") @Parameter(description = \"summary fields only\") @Nullable Boolean summary) {\n+            @QueryParam(\"summary\") @Parameter(description = \"summary fields only\") @Nullable Boolean summary,\n+            @DefaultValue(\"false\") @QueryParam(\"staticDataOnly\") @Parameter(description = \"provides a cacheable list of values not expected to change regularly and checks the If-Modified-Since header\") boolean staticDataOnly) {\n         final Locale locale = localeService.getLocale(language);\n \n         Stream<EnrichedThingDTO> thingStream = thingRegistry.stream().map(t -> convertToEnrichedThingDTO(t, locale))\n                 .distinct();\n+\n+        if (staticDataOnly) {\n+            if (cacheableListLastModified != null) {\n+                Response.ResponseBuilder responseBuilder = request.evaluatePreconditions(cacheableListLastModified);\n+                if (responseBuilder != null) {\n+                    // send 304 Not Modified\n+                    return responseBuilder.build();\n+                }\n+            } else {\n+                cacheableListLastModified = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n+            }\n+\n+            CacheControl cc = new CacheControl();\n+            cc.setMustRevalidate(true);\n+            cc.setPrivate(true);\n+            thingStream = dtoMapper.limitToFields(thingStream, \"UID,label,bridgeUID,thingTypeUID,location,editable\");\n+            return Response.ok(new Stream2JSONInputStream(thingStream)).lastModified(cacheableListLastModified)\n+                    .cacheControl(cc).build();\n+        }\n+\n         if (summary != null && summary) {\n             thingStream = dtoMapper.limitToFields(thingStream,\n                     \"UID,label,bridgeUID,thingTypeUID,statusInfo,firmwareStatus,location,editable\");\n@@ -853,4 +890,26 @@ private URI getConfigDescriptionURI(ChannelUID channelUID) {\n             throw new BadRequestException(\"Invalid URI syntax: \" + uriString);\n         }\n     }\n+\n+    private void resetCacheableListLastModified() {\n+        cacheableListLastModified = null;\n+    }\n+\n+    private class ResetLastModifiedChangeListener implements RegistryChangeListener<Thing> {\n+\n+        @Override\n+        public void added(Thing element) {\n+            resetCacheableListLastModified();\n+        }\n+\n+        @Override\n+        public void removed(Thing element) {\n+            resetCacheableListLastModified();\n+        }\n+\n+        @Override\n+        public void updated(Thing oldElement, Thing element) {\n+            resetCacheableListLastModified();\n+        }\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.io.rest.ui/src/main/java/org/openhab/core/io/rest/ui/internal/UIResource.java b/bundles/org.openhab.core.io.rest.ui/src/main/java/org/openhab/core/io/rest/ui/internal/UIResource.java\nindex 166a3863dd5..eb34f73ce11 100644\n--- a/bundles/org.openhab.core.io.rest.ui/src/main/java/org/openhab/core/io/rest/ui/internal/UIResource.java\n+++ b/bundles/org.openhab.core.io.rest.ui/src/main/java/org/openhab/core/io/rest/ui/internal/UIResource.java\n@@ -13,7 +13,11 @@\n package org.openhab.core.io.rest.ui.internal;\n \n import java.security.InvalidParameterException;\n+import java.time.Instant;\n+import java.time.temporal.ChronoUnit;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n import java.util.Set;\n import java.util.stream.Stream;\n \n@@ -27,13 +31,17 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.CacheControl;\n+import javax.ws.rs.core.Context;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Request;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.Status;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.auth.Role;\n+import org.openhab.core.common.registry.RegistryChangeListener;\n import org.openhab.core.io.rest.RESTConstants;\n import org.openhab.core.io.rest.RESTResource;\n import org.openhab.core.io.rest.Stream2JSONInputStream;\n@@ -45,6 +53,7 @@\n import org.openhab.core.ui.tiles.TileProvider;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Deactivate;\n import org.osgi.service.component.annotations.Reference;\n import org.osgi.service.jaxrs.whiteboard.JaxrsWhiteboardConstants;\n import org.osgi.service.jaxrs.whiteboard.propertytypes.JSONRequired;\n@@ -84,6 +93,9 @@ public class UIResource implements RESTResource {\n     private final UIComponentRegistryFactory componentRegistryFactory;\n     private final TileProvider tileProvider;\n \n+    private Map<String, Date> lastModifiedDates = new HashMap<>();\n+    private Map<String, RegistryChangeListener<RootUIComponent>> registryChangeListeners = new HashMap<>();\n+\n     @Activate\n     public UIResource( //\n             final @Reference UIComponentRegistryFactory componentRegistryFactory,\n@@ -92,6 +104,14 @@ public UIResource( //\n         this.tileProvider = tileProvider;\n     }\n \n+    @Deactivate\n+    public void deactivate() {\n+        registryChangeListeners.forEach((n, l) -> {\n+            UIComponentRegistry registry = componentRegistryFactory.getRegistry(n);\n+            registry.removeRegistryChangeListener(l);\n+        });\n+    }\n+\n     @GET\n     @Path(\"/tiles\")\n     @Produces({ MediaType.APPLICATION_JSON })\n@@ -107,7 +127,7 @@ public Response getAll() {\n     @Produces({ MediaType.APPLICATION_JSON })\n     @Operation(operationId = \"getRegisteredUIComponentsInNamespace\", summary = \"Get all registered UI components in the specified namespace.\", responses = {\n             @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(array = @ArraySchema(schema = @Schema(implementation = RootUIComponent.class)))) })\n-    public Response getAllComponents(@PathParam(\"namespace\") String namespace,\n+    public Response getAllComponents(@Context Request request, @PathParam(\"namespace\") String namespace,\n             @QueryParam(\"summary\") @Parameter(description = \"summary fields only\") @Nullable Boolean summary) {\n         UIComponentRegistry registry = componentRegistryFactory.getRegistry(namespace);\n         Stream<RootUIComponent> components = registry.getAll().stream();\n@@ -126,8 +146,33 @@ public Response getAllComponents(@PathParam(\"namespace\") String namespace,\n                 }\n                 return component;\n             });\n+            return Response.ok(new Stream2JSONInputStream(components)).build();\n+        } else {\n+            if (!registryChangeListeners.containsKey(namespace)) {\n+                RegistryChangeListener<RootUIComponent> changeListener = new ResetLastModifiedChangeListener(namespace);\n+                registryChangeListeners.put(namespace, changeListener);\n+                registry.addRegistryChangeListener(changeListener);\n+            }\n+\n+            Date lastModifiedDate = Date.from(Instant.now());\n+            if (lastModifiedDates.containsKey(namespace)) {\n+                lastModifiedDate = lastModifiedDates.get(namespace);\n+                Response.ResponseBuilder responseBuilder = request.evaluatePreconditions(lastModifiedDate);\n+                if (responseBuilder != null) {\n+                    // send 304 Not Modified\n+                    return responseBuilder.build();\n+                }\n+            } else {\n+                lastModifiedDate = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n+                lastModifiedDates.put(namespace, lastModifiedDate);\n+            }\n+\n+            CacheControl cc = new CacheControl();\n+            cc.setMustRevalidate(true);\n+            cc.setPrivate(true);\n+            return Response.ok(new Stream2JSONInputStream(components)).lastModified(lastModifiedDate).cacheControl(cc)\n+                    .build();\n         }\n-        return Response.ok(new Stream2JSONInputStream(components)).build();\n     }\n \n     @GET\n@@ -208,4 +253,32 @@ public Response deleteComponent(@PathParam(\"namespace\") String namespace,\n     private TileDTO toTileDTO(Tile tile) {\n         return new TileDTO(tile.getName(), tile.getUrl(), tile.getOverlay(), tile.getImageUrl());\n     }\n+\n+    private void resetLastModifiedDate(String namespace) {\n+        lastModifiedDates.remove(namespace);\n+    }\n+\n+    private class ResetLastModifiedChangeListener implements RegistryChangeListener<RootUIComponent> {\n+\n+        private String namespace;\n+\n+        ResetLastModifiedChangeListener(String namespace) {\n+            this.namespace = namespace;\n+        }\n+\n+        @Override\n+        public void added(RootUIComponent element) {\n+            resetLastModifiedDate(namespace);\n+        }\n+\n+        @Override\n+        public void removed(RootUIComponent element) {\n+            resetLastModifiedDate(namespace);\n+        }\n+\n+        @Override\n+        public void updated(RootUIComponent oldElement, RootUIComponent element) {\n+            resetLastModifiedDate(namespace);\n+        }\n+    }\n }\n",
    "test_patch": "diff --git a/itests/org.openhab.core.io.rest.core.tests/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResourceOSGiTest.java b/itests/org.openhab.core.io.rest.core.tests/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResourceOSGiTest.java\nindex 5e684f4ed62..b39d4a01192 100644\n--- a/itests/org.openhab.core.io.rest.core.tests/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResourceOSGiTest.java\n+++ b/itests/org.openhab.core.io.rest.core.tests/src/main/java/org/openhab/core/io/rest/core/internal/item/ItemResourceOSGiTest.java\n@@ -30,6 +30,7 @@\n import java.util.stream.Stream;\n \n import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.Request;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.Status;\n import javax.ws.rs.core.UriBuilder;\n@@ -94,6 +95,7 @@ public class ItemResourceOSGiTest extends JavaOSGiTest {\n     private @Mock @NonNullByDefault({}) ItemProvider itemProviderMock;\n     private @Mock @NonNullByDefault({}) UriBuilder uriBuilderMock;\n     private @Mock @NonNullByDefault({}) UriInfo uriInfoMock;\n+    private @Mock @NonNullByDefault({}) Request request;\n \n     @BeforeEach\n     public void beforeEach() {\n@@ -127,7 +129,8 @@ public void beforeEach() {\n     public void shouldReturnUnicodeItems() throws IOException, TransformationException {\n         item4.setLabel(ITEM_LABEL4);\n \n-        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, null, null, null, false, null);\n+        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, null, null, null, false,\n+                null, false);\n         assertThat(readItemLabelsFromResponse(response), hasItems(ITEM_LABEL4));\n     }\n \n@@ -147,28 +150,31 @@ public void shouldFilterItemsByTag() throws Exception {\n         item3.addTag(\"Tag2\");\n         item4.addTag(\"Tag4\");\n \n-        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, null, \"Tag1\", null, false, null);\n+        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, null, \"Tag1\", null,\n+                false, null, false);\n         assertThat(readItemNamesFromResponse(response), hasItems(ITEM_NAME1, ITEM_NAME2));\n \n-        response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, null, \"Tag2\", null, false, null);\n+        response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, null, \"Tag2\", null, false, null,\n+                false);\n         assertThat(readItemNamesFromResponse(response), hasItems(ITEM_NAME2, ITEM_NAME3));\n \n-        response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, null, \"NotExistingTag\", null, false, null);\n+        response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, null, \"NotExistingTag\", null,\n+                false, null, false);\n         assertThat(readItemNamesFromResponse(response), hasSize(0));\n     }\n \n     @Test\n     public void shouldFilterItemsByType() throws Exception {\n-        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, CoreItemFactory.SWITCH, null,\n-                null, false, null);\n+        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, CoreItemFactory.SWITCH,\n+                null, null, false, null, false);\n         assertThat(readItemNamesFromResponse(response), hasItems(ITEM_NAME1, ITEM_NAME2));\n \n-        response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, CoreItemFactory.DIMMER, null, null, false,\n-                null);\n+        response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, CoreItemFactory.DIMMER, null,\n+                null, false, null, false);\n         assertThat(readItemNamesFromResponse(response), hasItems(ITEM_NAME3));\n \n-        response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, CoreItemFactory.COLOR, null, null, false,\n-                null);\n+        response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, CoreItemFactory.COLOR, null, null,\n+                false, null, false);\n         assertThat(readItemNamesFromResponse(response), hasSize(0));\n     }\n \n@@ -176,15 +182,18 @@ public void shouldFilterItemsByType() throws Exception {\n     public void shouldAddAndRemoveTags() throws Exception {\n         managedItemProvider.add(new SwitchItem(\"Switch\"));\n \n-        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, null, \"MyTag\", null, false, null);\n+        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, null, \"MyTag\", null,\n+                false, null, false);\n         assertThat(readItemNamesFromResponse(response), hasSize(0));\n \n         itemResource.addTag(\"Switch\", \"MyTag\");\n-        response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, null, \"MyTag\", null, false, null);\n+        response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, null, \"MyTag\", null, false, null,\n+                false);\n         assertThat(readItemNamesFromResponse(response), hasSize(1));\n \n         itemResource.removeTag(\"Switch\", \"MyTag\");\n-        response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, null, \"MyTag\", null, false, null);\n+        response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, null, \"MyTag\", null, false, null,\n+                false);\n         assertThat(readItemNamesFromResponse(response), hasSize(0));\n     }\n \n@@ -192,8 +201,8 @@ public void shouldAddAndRemoveTags() throws Exception {\n     public void shouldIncludeRequestedFieldsOnly() throws Exception {\n         managedItemProvider.add(new SwitchItem(\"Switch\"));\n         itemResource.addTag(\"Switch\", \"MyTag\");\n-        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, null, null, \"MyTag\", null, false,\n-                \"type,name\");\n+        Response response = itemResource.getItems(uriInfoMock, httpHeadersMock, request, null, null, \"MyTag\", null,\n+                false, \"type,name\", false);\n \n         JsonElement result = JsonParser\n                 .parseString(new String(((InputStream) response.getEntity()).readAllBytes(), StandardCharsets.UTF_8));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3299",
    "pr_id": 3299,
    "issue_id": 3234,
    "repo": "openhab/openhab-core",
    "problem_statement": "RFC: Implement event topic filtering directly in EventHandler\n(summary re-written):\r\n\r\nI've investigated this issue quite a bit at this point. Right now, a large number of `EventSubscriber`s will set the `event.topics` OSGi service property to the topic they expect to receive, but `OSGiEventManager` (who receives notice of the service registration) does absolutely nothing with it, and `EventHandler` only filters events based on the `EventSubscriber.getSubscribedEventTypes()` method, filtering against the event's type. The `EventSubscriber`s will then also implement `EventFilter`, and in their filter _actually_ check the event topic (or not... a lot of them simply rely on the event type). Confounding this, there's `GenericEventTriggerHandler` that has configuration for `eventSource`, `eventTopic`, and `eventType`, but `eventTopic` is ignored besides to set the service property (which is then ignored), and unintuitively filters the incoming event's _topic_ against the configured _source_. The docs at https://www.openhab.org/docs/configuration/jsr223.html#triggertype-objects-all-jsr223-languages are incorrect, that the event topic _cannot_ be filtered, and also claim that `eventSource` can be used for filtering based on the subject of the event. This is only (partially) true because `GenericEventTriggerHandler` is checking against a different property, as mentioned above. And it's buggy because it's simply doing a `String.contains` check, so if you configured it look for `MySwitchItem`, it will still pass through events for `MySwitchItem1`. `Event.getSource()` is actually intended to carry the name of the component that created the event, not the subject of the event. Adding additional confusion: there's also a `GenericEventConditionHandler`, that _does_ compare topic-to-topic, source-to-source, event-type-to-event-type (and payload-to-payload). But it's doing a regex match (except some special processing for payload).\r\n\r\nSooo... my proposal:\r\n * Add implementation to `OSGiEventManager` to capture the `event.topics` service param, and pass it to `EventHandler` (if present), and `EventHandler` will apply that _before_ checking for an `EventFilter` on the `EventSubscriber`, with the intention that the vast majority of `EventSubscriber`s no longer even need to implement an `EventFilter`.\r\n * The filter described above should be implemented as a filesystem glob syntax ( https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/file/FileSystem.html#getPathMatcher(java.lang.string) ). It's not as complicated as a full-on regex, but allows for single-level matching which is what most of the currently defined event.topics expect. A few will still need to be tweaked.\r\n * Remove `EventFilter` from almost all `EventSubscriber`s, simply relying on the now-built-in topic processing.\r\n * `GenericEventTriggerHandler` will simply forward its `eventTopic` param as the service property `events.topic`, as it already does. It will still implement an `EventFilter` to apply the `eventSource` filter, but that will filter against the event's source, exact match. `eventType` still works as before - exact match. This is a _breaking change_.\r\n * `GenericEventConditionHandler` will be updated to process the topic, source, and type the same as `EventHandler` and `GenericEventTriggerHandler` do. Again a _breaking change_.\r\n\r\nHopefully the impact of the breaking changes will be relatively small - most rules already rely on higher level triggers and conditions such as ItemStateChangeTrigger. MainUI doesn't expose GenericEventTrigger or GenericEventCondition. The vast majority of existing users are already setting up their topic and event types as if it works this way already (with some exceptions because of the vagueness of how the topic filtering (doesn't!) work).\r\n\r\n@openhab/core-maintainers WDYT?\r\n\r\n",
    "issue_word_count": 573,
    "test_files_count": 13,
    "non_test_files_count": 6,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventConditionHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericConditions.json",
      "bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericTriggers.json",
      "bundles/org.openhab.core.automation/src/main/resources/OH-INF/i18n/automation.properties",
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandlerTest.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicGlobEventFilter.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/events/TopicGlobEventFilterTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/rules/ItemRuleDefinition.json",
      "itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/SimpleTestTemplate.json",
      "itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/TestTemplateRuleWithReferences.json",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/DemoScriptRule.json",
      "itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java",
      "itests/org.openhab.core.automation.module.script.tests/src/main/resources/OH-INF/automation/rules/DemoScriptRule.json",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandlerTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/events/TopicGlobEventFilterTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/rules/ItemRuleDefinition.json",
      "itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/SimpleTestTemplate.json",
      "itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/TestTemplateRuleWithReferences.json",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/DemoScriptRule.json",
      "itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java",
      "itests/org.openhab.core.automation.module.script.tests/src/main/resources/OH-INF/automation/rules/DemoScriptRule.json",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java"
    ],
    "base_commit": "8be306a5bc794821a15d7e95534efd2a4e135ab0",
    "head_commit": "2d4aafd807b224f11048c6ab3085ea50fadae7eb",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3299",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3299",
    "dockerfile": "",
    "pr_merged_at": "2023-02-14T08:07:24.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventConditionHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventConditionHandler.java\nindex 956afab4cb7..bb7c35c3ae2 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventConditionHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventConditionHandler.java\n@@ -13,12 +13,15 @@\n package org.openhab.core.automation.internal.module.handler;\n \n import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.automation.Condition;\n import org.openhab.core.automation.handler.BaseConditionModuleHandler;\n import org.openhab.core.events.Event;\n+import org.openhab.core.events.TopicGlobEventFilter;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -27,50 +30,69 @@\n  *\n  * @author Benedikt Niehues - Initial contribution\n  * @author Kai Kreuzer - refactored and simplified customized module handling\n+ * @author Cody Cutrer - refactored to match configuration and semantics of GenericEventTriggerHandler\n  */\n @NonNullByDefault\n public class GenericEventConditionHandler extends BaseConditionModuleHandler {\n \n     public static final String MODULETYPE_ID = \"core.GenericEventCondition\";\n \n-    private static final String TOPIC = \"topic\";\n-    private static final String EVENTTYPE = \"eventType\";\n-    private static final String SOURCE = \"source\";\n-    private static final String PAYLOAD = \"payload\";\n+    public static final String CFG_TOPIC = \"topic\";\n+    public static final String CFG_TYPES = \"types\";\n+    public static final String CFG_SOURCE = \"source\";\n+    public static final String CFG_PAYLOAD = \"payload\";\n \n     public final Logger logger = LoggerFactory.getLogger(GenericEventConditionHandler.class);\n \n+    private final String source;\n+    private final @Nullable TopicGlobEventFilter topicFilter;\n+    private final Set<String> types;\n+    private final @Nullable Pattern payloadPattern;\n+\n     public GenericEventConditionHandler(Condition module) {\n         super(module);\n-    }\n \n-    private boolean isConfiguredAndMatches(String keyParam, @Nullable String value) {\n-        Object mo = module.getConfiguration().get(keyParam);\n-        String configValue = mo != null && mo instanceof String ? (String) mo : null;\n-        if (configValue != null) {\n-            if (PAYLOAD.equals(keyParam)) {\n-                // automatically adding wildcards only for payload matching\n-                configValue = configValue.startsWith(\"*\") ? configValue : \".*\" + configValue;\n-                configValue = configValue.endsWith(\"*\") ? configValue : configValue + \".*\";\n-            }\n-            if (value != null) {\n-                return value.matches(configValue);\n-            } else {\n-                return false;\n-            }\n+        this.source = (String) module.getConfiguration().get(CFG_SOURCE);\n+        String topic = (String) module.getConfiguration().get(CFG_TOPIC);\n+        if (!topic.isBlank()) {\n+            topicFilter = new TopicGlobEventFilter(topic);\n+        } else {\n+            topicFilter = null;\n+        }\n+        if (module.getConfiguration().get(CFG_TYPES) != null) {\n+            this.types = Set.of(((String) module.getConfiguration().get(CFG_TYPES)).split(\",\"));\n+        } else {\n+            this.types = Set.of();\n+        }\n+        String payload = (String) module.getConfiguration().get(CFG_PAYLOAD);\n+        if (!payload.isBlank()) {\n+            payloadPattern = Pattern.compile(payload);\n         } else {\n-            return true;\n+            payloadPattern = null;\n         }\n     }\n \n     @Override\n     public boolean isSatisfied(Map<String, Object> inputs) {\n-        Event event = inputs.get(\"event\") != null ? (Event) inputs.get(\"event\") : null;\n-        if (event != null) {\n-            return isConfiguredAndMatches(TOPIC, event.getTopic()) && isConfiguredAndMatches(SOURCE, event.getSource())\n-                    && isConfiguredAndMatches(PAYLOAD, event.getPayload())\n-                    && isConfiguredAndMatches(EVENTTYPE, event.getType());\n+        Event event = inputs.get(\"event\") instanceof Event ? (Event) inputs.get(\"event\") : null;\n+        if (event == null) {\n+            return false;\n         }\n-        return false;\n+        if (!types.isEmpty() && !types.contains(event.getType())) {\n+            return false;\n+        }\n+        TopicGlobEventFilter localTopicFilter = topicFilter;\n+        if (localTopicFilter != null && !localTopicFilter.apply(event)) {\n+            return false;\n+        }\n+        if (!source.isEmpty() && !source.equals(event.getSource())) {\n+            return false;\n+        }\n+        Pattern localPayloadPattern = payloadPattern;\n+        if (localPayloadPattern != null && !localPayloadPattern.matcher(event.getPayload()).find()) {\n+            return false;\n+        }\n+\n+        return true;\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java\nindex 4d9517c73e6..6577817aee6 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java\n@@ -15,6 +15,7 @@\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Set;\n+import java.util.regex.Pattern;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -25,6 +26,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.events.TopicGlobEventFilter;\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.ServiceRegistration;\n import org.slf4j.Logger;\n@@ -41,37 +43,51 @@\n  *\n  * @author Benedikt Niehues - Initial contribution\n  * @author Kai Kreuzer - refactored and simplified customized module handling\n+ * @author Cody Cutrer - refactored to match configuration and semantics of GenericConditionTriggerHandler\n  */\n @NonNullByDefault\n public class GenericEventTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber, EventFilter {\n \n     public static final String MODULE_TYPE_ID = \"core.GenericEventTrigger\";\n \n-    private static final String CFG_EVENT_TOPIC = \"eventTopic\";\n-    private static final String CFG_EVENT_SOURCE = \"eventSource\";\n-    private static final String CFG_EVENT_TYPES = \"eventTypes\";\n+    public static final String CFG_TOPIC = \"topic\";\n+    public static final String CFG_SOURCE = \"source\";\n+    public static final String CFG_TYPES = \"types\";\n+    public static final String CFG_PAYLOAD = \"payload\";\n \n     private final Logger logger = LoggerFactory.getLogger(GenericEventTriggerHandler.class);\n \n     private final String source;\n-    private String topic;\n+    private final @Nullable TopicGlobEventFilter topicFilter;\n     private final Set<String> types;\n-    private final BundleContext bundleContext;\n+    private final @Nullable Pattern payloadPattern;\n \n     private @Nullable ServiceRegistration<?> eventSubscriberRegistration;\n \n     public GenericEventTriggerHandler(Trigger module, BundleContext bundleContext) {\n         super(module);\n-        this.source = (String) module.getConfiguration().get(CFG_EVENT_SOURCE);\n-        this.topic = (String) module.getConfiguration().get(CFG_EVENT_TOPIC);\n-        if (module.getConfiguration().get(CFG_EVENT_TYPES) != null) {\n-            this.types = Set.of(((String) module.getConfiguration().get(CFG_EVENT_TYPES)).split(\",\"));\n+        this.source = (String) module.getConfiguration().get(CFG_SOURCE);\n+        String topic = (String) module.getConfiguration().get(CFG_TOPIC);\n+        if (!topic.isBlank()) {\n+            topicFilter = new TopicGlobEventFilter(topic);\n+        } else {\n+            topicFilter = null;\n+        }\n+        if (module.getConfiguration().get(CFG_TYPES) != null) {\n+            this.types = Set.of(((String) module.getConfiguration().get(CFG_TYPES)).split(\",\"));\n         } else {\n             this.types = Set.of();\n         }\n-        this.bundleContext = bundleContext;\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n-        logger.trace(\"Registered EventSubscriber: Topic: {} Type: {} Source: {}\", topic, types, source);\n+        String payload = (String) module.getConfiguration().get(CFG_PAYLOAD);\n+        if (!payload.isBlank()) {\n+            payloadPattern = Pattern.compile(payload);\n+        } else {\n+            payloadPattern = null;\n+        }\n+\n+        eventSubscriberRegistration = bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n+        logger.trace(\"Registered EventSubscriber: Topic: {} Type: {} Source: {} Payload: {}\", topic, types, source,\n+                payload);\n     }\n \n     @Override\n@@ -100,21 +116,6 @@ public void receive(Event event) {\n         }\n     }\n \n-    /**\n-     * @return the topic\n-     */\n-    public String getTopic() {\n-        return topic;\n-    }\n-\n-    /**\n-     * @param topic\n-     *            the topic to set\n-     */\n-    public void setTopic(String topic) {\n-        this.topic = topic;\n-    }\n-\n     /**\n      * do the cleanup: unregistering eventSubscriber...\n      */\n@@ -129,7 +130,20 @@ public void dispose() {\n \n     @Override\n     public boolean apply(Event event) {\n-        logger.trace(\"->FILTER: {}:{}\", event.getTopic(), source);\n-        return event.getTopic().contains(source);\n+        logger.trace(\"->FILTER: {}: {}\", event.getTopic(), source);\n+\n+        TopicGlobEventFilter localTopicFilter = topicFilter;\n+        if (localTopicFilter != null && !topicFilter.apply(event)) {\n+            return false;\n+        }\n+        if (!source.isEmpty() && !source.equals(event.getSource())) {\n+            return false;\n+        }\n+        Pattern localPayloadPattern = payloadPattern;\n+        if (localPayloadPattern != null && !localPayloadPattern.matcher(event.getPayload()).find()) {\n+            return false;\n+        }\n+\n+        return true;\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericConditions.json b/bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericConditions.json\nindex c607a87855b..ed9684a1eb0 100644\n--- a/bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericConditions.json\n+++ b/bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericConditions.json\n@@ -9,26 +9,34 @@\n \t\t\t\t{\n \t\t\t\t\t\"name\": \"topic\",\n \t\t\t\t\t\"type\": \"TEXT\",\n-\t\t\t\t\t\"description\": \"topic should match\",\n-\t\t\t\t\t\"required\": false\n+\t\t\t\t\t\"label\": \"Topic\",\n+\t\t\t\t\t\"description\": \"the topic, as a file-system style glob (*, ** and {} operators). will match all events if empty\",\n+\t\t\t\t\t\"required\": true,\n+\t\t\t\t\t\"default\": \"\"\n \t\t\t\t},\n \t\t\t\t{\n-\t\t\t\t\t\"name\": \"eventType\",\n+\t\t\t\t\t\"name\": \"source\",\n \t\t\t\t\t\"type\": \"TEXT\",\n-\t\t\t\t\t\"description\": \"eventType should match\",\n-\t\t\t\t\t\"required\": false\n+\t\t\t\t\t\"label\": \"Source\",\n+\t\t\t\t\t\"description\": \"the source of the event (e.g. org.openhab.core.expire, etc.). will match all events if empty\",\n+\t\t\t\t\t\"required\": true,\n+\t\t\t\t\t\"default\": \"\"\n \t\t\t\t},\n \t\t\t\t{\n-\t\t\t\t\t\"name\": \"source\",\n+\t\t\t\t\t\"name\": \"types\",\n \t\t\t\t\t\"type\": \"TEXT\",\n-\t\t\t\t\t\"description\": \"source should match\",\n-\t\t\t\t\t\"required\": false\n+\t\t\t\t\t\"label\": \"Event Type\",\n+\t\t\t\t\t\"description\": \"the event type the trigger should listen to. multiple types can be specified comma-separated. will match all events if empty\",\n+\t\t\t\t\t\"required\": true,\n+\t\t\t\t\t\"default\": \"\"\n \t\t\t\t},\n \t\t\t\t{\n \t\t\t\t\t\"name\": \"payload\",\n \t\t\t\t\t\"type\": \"TEXT\",\n-\t\t\t\t\t\"description\": \"payload should match\",\n-\t\t\t\t\t\"required\": false\n+\t\t\t\t\t\"label\": \"Event Payload\",\n+\t\t\t\t\t\"description\": \"A regex to match the event's serialized payload. will match all events if empty\",\n+\t\t\t\t\t\"required\": true,\n+\t\t\t\t\t\"default\": \"\"\n \t\t\t\t}\n \t\t\t],\n \t\t\t\"inputs\": [\n@@ -36,7 +44,7 @@\n \t\t\t\t\t\"name\": \"event\",\n \t\t\t\t\t\"type\": \"org.openhab.core.events.Event\",\n \t\t\t\t\t\"label\": \"Event\",\n-\t\t\t\t\t\"description\": \"The events which was sent.\",\n+\t\t\t\t\t\"description\": \"The event which was sent.\",\n \t\t\t\t\t\"required\": true\n \t\t\t\t}\n \t\t\t]\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericTriggers.json b/bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericTriggers.json\nindex 57cc345c97b..23a3754a1a5 100644\n--- a/bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericTriggers.json\n+++ b/bundles/org.openhab.core.automation/src/main/resources/OH-INF/automation/moduletypes/GenericTriggers.json\n@@ -7,26 +7,34 @@\n \t\t\t\"visibility\": \"HIDDEN\",\n \t\t\t\"configDescriptions\": [\n \t\t\t\t{\n-\t\t\t\t\t\"name\": \"eventTopic\",\n+\t\t\t\t\t\"name\": \"topic\",\n \t\t\t\t\t\"type\": \"TEXT\",\n \t\t\t\t\t\"label\": \"Topic\",\n-\t\t\t\t\t\"description\": \"This is the topic, the trigger will listen to: >>openhab/*<<\",\n+\t\t\t\t\t\"description\": \"the topic, as a file-system style glob (*, ** and {} operators). will match all events if empty\",\n \t\t\t\t\t\"required\": true,\n-\t\t\t\t\t\"default\": \"openhab/*\"\n+\t\t\t\t\t\"default\": \"\"\n \t\t\t\t},\n \t\t\t\t{\n-\t\t\t\t\t\"name\": \"eventSource\",\n+\t\t\t\t\t\"name\": \"source\",\n \t\t\t\t\t\"type\": \"TEXT\",\n \t\t\t\t\t\"label\": \"Source\",\n-\t\t\t\t\t\"description\": \"This is the source of the event (eg. item name)\",\n+\t\t\t\t\t\"description\": \"the source of the event (e.g. org.openhab.core.expire, etc.). will match all events if empty\",\n \t\t\t\t\t\"required\": true,\n \t\t\t\t\t\"default\": \"\"\n \t\t\t\t},\n \t\t\t\t{\n-\t\t\t\t\t\"name\": \"eventTypes\",\n+\t\t\t\t\t\"name\": \"types\",\n \t\t\t\t\t\"type\": \"TEXT\",\n \t\t\t\t\t\"label\": \"Event Type\",\n-\t\t\t\t\t\"description\": \"the event type, the trigger should listen to. Multiple types can be specified comma-separated\",\n+\t\t\t\t\t\"description\": \"the event type the trigger should listen to. multiple types can be specified comma-separated. will match all events if empty\",\n+\t\t\t\t\t\"required\": true,\n+\t\t\t\t\t\"default\": \"\"\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\t\"name\": \"payload\",\n+\t\t\t\t\t\"type\": \"TEXT\",\n+\t\t\t\t\t\"label\": \"Event Payload\",\n+\t\t\t\t\t\"description\": \"A regex to match the event's serialized payload. will match all events if empty\",\n \t\t\t\t\t\"required\": true,\n \t\t\t\t\t\"default\": \"\"\n \t\t\t\t}\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/resources/OH-INF/i18n/automation.properties b/bundles/org.openhab.core.automation/src/main/resources/OH-INF/i18n/automation.properties\nindex 080028dbc32..74412d85274 100644\n--- a/bundles/org.openhab.core.automation/src/main/resources/OH-INF/i18n/automation.properties\n+++ b/bundles/org.openhab.core.automation/src/main/resources/OH-INF/i18n/automation.properties\n@@ -26,23 +26,29 @@ module-type.core.GenericCompareCondition.input.input.description = The input whi\n \n module-type.core.GenericEventCondition.label = Event Condition\n module-type.core.GenericEventCondition.description = Condition for events\n-module-type.core.GenericEventCondition.config.topic.description = topic should match\n-module-type.core.GenericEventCondition.config.eventType.description = eventType should match\n-module-type.core.GenericEventCondition.config.source.description = source should match\n-module-type.core.GenericEventCondition.config.payload.description = payload should match\n+module-type.core.GenericEventCondition.config.topic.label = Topic\n+module-type.core.GenericEventCondition.config.topic.description = the topic, as a file-system style glob (*, ** and {} operators). will match all events if empty\n+module-type.core.GenericEventCondition.config.source.label = Source\n+module-type.core.GenericEventCondition.config.source.description = the source of the event (e.g. org.openhab.core.expire, etc.). will match all events if empty\n+module-type.core.GenericEventCondition.config.types.label = Event Type\n+module-type.core.GenericEventCondition.config.types.description = the event type the trigger should listen to. multiple types can be specified comma-separated. will match all events if empty\n+module-type.core.GenericEventCondition.config.payload.label = Event Payload\n+module-type.core.GenericEventCondition.config.payload.description = A regex to match the event's serialized payload. will match all events if empty\n module-type.core.GenericEventCondition.input.event.label = Event\n-module-type.core.GenericEventCondition.input.event.description = The events which was sent.\n+module-type.core.GenericEventCondition.input.event.description = The event which was sent.\n \n # core.GenericEventTrigger\n \n module-type.core.GenericEventTrigger.label = Basic Event Trigger\n module-type.core.GenericEventTrigger.description = Triggers Rules on Events\n-module-type.core.GenericEventTrigger.config.eventTopic.label = Topic\n-module-type.core.GenericEventTrigger.config.eventTopic.description = This is the topic, the trigger will listen to: >>openhab/*<<\n-module-type.core.GenericEventTrigger.config.eventSource.label = Source\n-module-type.core.GenericEventTrigger.config.eventSource.description = This is the source of the event (eg. item name)\n-module-type.core.GenericEventTrigger.config.eventTypes.label = Event Type\n-module-type.core.GenericEventTrigger.config.eventTypes.description = the event type, the trigger should listen to. Multiple types can be specified comma-separated\n+module-type.core.GenericEventTrigger.config.topic.label = Topic\n+module-type.core.GenericEventTrigger.config.topic.description = the topic, as a file-system style glob (*, ** and {} operators). will match all events if empty\n+module-type.core.GenericEventTrigger.config.source.label = Source\n+module-type.core.GenericEventTrigger.config.source.description = the source of the event (e.g. org.openhab.core.expire, etc.). will match all events if empty\n+module-type.core.GenericEventTrigger.config.types.label = Event Type\n+module-type.core.GenericEventTrigger.config.types.description = the event type the trigger should listen to. multiple types can be specified comma-separated. will match all events if empty\n+module-type.core.GenericEventTrigger.config.payload.label = Event Payload\n+module-type.core.GenericEventTrigger.config.payload.description = A regex to match the event's serialized payload. will match all events if empty\n module-type.core.GenericEventTrigger.output.event.label = Event\n module-type.core.GenericEventTrigger.output.event.description = The events which was sent.\n \n@@ -382,6 +388,10 @@ module-type.timer.DateTimeTrigger.label = it is a date and time specified in an\n module-type.timer.DateTimeTrigger.description = Triggers at a time specified in an item\n module-type.timer.DateTimeTrigger.config.itemName.label = Item\n module-type.timer.DateTimeTrigger.config.itemName.description = the name of the item\n+module-type.timer.DateTimeTrigger.config.timeOnly.label = Time only\n+module-type.timer.DateTimeTrigger.config.timeOnly.description = Specifies whether only the time of the item should be compared or the date and time.\n+module-type.timer.DateTimeTrigger.config.timeOnly.option.true = Yes\n+module-type.timer.DateTimeTrigger.config.timeOnly.option.false = No\n \n # timer.DayOfWeekCondition\n \n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicGlobEventFilter.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicGlobEventFilter.java\nnew file mode 100644\nindex 00000000000..cce421ff13a\n--- /dev/null\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicGlobEventFilter.java\n@@ -0,0 +1,51 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.events;\n+\n+import java.nio.file.FileSystems;\n+import java.nio.file.PathMatcher;\n+import java.nio.file.Paths;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link TopicGlobalEventFilter} is a default openHAB {@link EventFilter} implementation that ensures filtering\n+ * of events based on an event topic.\n+ * \n+ * The syntax for the filter is the glob syntax documented at\n+ * https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/file/FileSystem.html#getPathMatcher(java.lang.String)\n+ *\n+ * @author Cody Cutrer - Initial contribution\n+ */\n+@NonNullByDefault\n+public class TopicGlobEventFilter implements EventFilter {\n+\n+    private final PathMatcher topicMatcher;\n+\n+    /**\n+     * Constructs a new topic event filter.\n+     *\n+     * @param topicGlob the glob\n+     * @see <a href=\n+     *      \"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/file/FileSystem.html#getPathMatcher(java.lang.String)\">Java\n+     *      Glob</a>\n+     */\n+    public TopicGlobEventFilter(String topicGlob) {\n+        this.topicMatcher = FileSystems.getDefault().getPathMatcher(\"glob:\" + topicGlob);\n+    }\n+\n+    @Override\n+    public boolean apply(Event event) {\n+        return topicMatcher.matches(Paths.get(event.getTopic()));\n+    }\n+}\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandlerTest.java b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandlerTest.java\nnew file mode 100644\nindex 00000000000..8c86e803383\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandlerTest.java\n@@ -0,0 +1,82 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.internal.module.handler;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.openhab.core.automation.Trigger;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.events.Event;\n+import org.osgi.framework.BundleContext;\n+\n+/**\n+ * Basic test cases for {@link GenericEventTriggerHandler}\n+ *\n+ * @author Cody Cutrer - Initial contribution\n+ */\n+@NonNullByDefault\n+class GenericEventTriggerHandlerTest {\n+    private @NonNullByDefault({}) GenericEventTriggerHandler handler;\n+    private @NonNullByDefault({}) Trigger moduleMock;\n+    private @NonNullByDefault({}) BundleContext contextMock;\n+\n+    public Event createEvent(String topic, String source) {\n+        Event event = mock(Event.class);\n+        when(event.getTopic()).thenReturn(topic);\n+        when(event.getSource()).thenReturn(source);\n+        return event;\n+    }\n+\n+    @BeforeEach\n+    public void setUp() {\n+        moduleMock = mock(Trigger.class);\n+        contextMock = mock(BundleContext.class);\n+    }\n+\n+    @Test\n+    public void testTopicFilterIsGlobbed() {\n+        when(moduleMock.getConfiguration()).thenReturn(new Configuration(Map.of(GenericEventTriggerHandler.CFG_TOPIC,\n+                \"openhab/items/*/command\", GenericEventTriggerHandler.CFG_SOURCE, \"\",\n+                GenericEventTriggerHandler.CFG_TYPES, \"\", GenericEventTriggerHandler.CFG_PAYLOAD, \"\")));\n+        handler = new GenericEventTriggerHandler(moduleMock, contextMock);\n+\n+        assertTrue(handler.apply(createEvent(\"openhab/items/myMotion1/command\", \"Source\")));\n+    }\n+\n+    @Test\n+    public void testsSourceFilterIsExactMatch() {\n+        when(moduleMock.getConfiguration()).thenReturn(new Configuration(\n+                Map.of(GenericEventTriggerHandler.CFG_TOPIC, \"\", GenericEventTriggerHandler.CFG_SOURCE, \"ExactSource\",\n+                        GenericEventTriggerHandler.CFG_TYPES, \"\", GenericEventTriggerHandler.CFG_PAYLOAD, \"\")));\n+        handler = new GenericEventTriggerHandler(moduleMock, contextMock);\n+\n+        assertTrue(handler.apply(createEvent(\"openhab/items/myMotion1/command\", \"ExactSource\")));\n+    }\n+\n+    @Test\n+    public void testsSourceFilterDoesntMatchSubstring() {\n+        when(moduleMock.getConfiguration()).thenReturn(new Configuration(\n+                Map.of(GenericEventTriggerHandler.CFG_TOPIC, \"\", GenericEventTriggerHandler.CFG_SOURCE, \"Source\",\n+                        GenericEventTriggerHandler.CFG_TYPES, \"\", GenericEventTriggerHandler.CFG_PAYLOAD, \"\")));\n+        handler = new GenericEventTriggerHandler(moduleMock, contextMock);\n+\n+        assertFalse(handler.apply(createEvent(\"openhab/items/myMotion1/command\", \"ExactSource\")));\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/events/TopicGlobEventFilterTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/events/TopicGlobEventFilterTest.java\nnew file mode 100644\nindex 00000000000..2ddc98c50d8\n--- /dev/null\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/events/TopicGlobEventFilterTest.java\n@@ -0,0 +1,50 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.events;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * {@link TopicGlobEventFilterTest} tests the {@link org.openhab.core.events.TopicGlobEventFilter}.\n+ *\n+ * @author Cody Cutrer - Initial contribution\n+ */\n+@NonNullByDefault\n+public class TopicGlobEventFilterTest {\n+    public Event createEvent(String topic) {\n+        Event event = mock(Event.class);\n+        when(event.getTopic()).thenReturn(topic);\n+        return event;\n+    }\n+\n+    @Test\n+    public void testBasic() throws Exception {\n+        var filter = new TopicGlobEventFilter(\"openhab/**\");\n+        assertTrue(filter.apply(createEvent(\"openhab/items/a\")));\n+        assertFalse(filter.apply(createEvent(\"somewhereElse\")));\n+        assertFalse(filter.apply(createEvent(\"preopenhab/items/apost\")));\n+\n+        // * does not match multiple sub-directories\n+        filter = new TopicGlobEventFilter(\"openhab/*\");\n+        assertFalse(filter.apply(createEvent(\"openhab/items/a\")));\n+\n+        // * can be used in the middle of a path component\n+        filter = new TopicGlobEventFilter(\"openhab/it*s/*\");\n+        assertTrue(filter.apply(createEvent(\"openhab/items/a\")));\n+        assertFalse(filter.apply(createEvent(\"openhab/things/a\")));\n+    }\n+}\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\nindex a33972b430e..33362852a65 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\n@@ -247,9 +247,10 @@ public void assertThatARuleFromJsonFileIsAddedAutomatically() {\n                 .filter(t -> \"ItemStateChangeTriggerID\".equals(t.getId())).findFirst();\n         assertThat(trigger.isPresent(), is(true));\n         assertThat(trigger.get().getTypeUID(), is(\"core.GenericEventTrigger\"));\n-        assertThat(trigger.get().getConfiguration().get(\"eventSource\"), is(\"myMotionItem\"));\n-        assertThat(trigger.get().getConfiguration().get(\"eventTopic\"), is(\"openhab/items/*\"));\n-        assertThat(trigger.get().getConfiguration().get(\"eventTypes\"), is(\"ItemStateEvent\"));\n+        assertThat(trigger.get().getConfiguration().get(\"source\"), is(\"\"));\n+        assertThat(trigger.get().getConfiguration().get(\"topic\"), is(\"openhab/items/myMotionItem/*\"));\n+        assertThat(trigger.get().getConfiguration().get(\"types\"), is(\"ItemStateEvent\"));\n+        assertThat(trigger.get().getConfiguration().get(\"payload\"), is(\"\"));\n         Optional<? extends Action> action = rule.getActions().stream()\n                 .filter(a -> \"ItemPostCommandActionID\".equals(a.getId())).findFirst();\n         assertThat(action.isPresent(), is(true));\n@@ -287,8 +288,10 @@ public void assertThatARuleFromJsonFileIsAddedAutomaticallyAndTheRuntimeRuleHasR\n                 .filter(t -> \"ItemStateChangeTriggerID\".equals(t.getId())).findFirst();\n         assertThat(trigger.isPresent(), is(true));\n         assertThat(trigger.get().getTypeUID(), is(\"core.GenericEventTrigger\"));\n-        assertThat(trigger.get().getConfiguration().get(\"eventTopic\"), is(\"openhab/items/*\"));\n-        assertThat(trigger.get().getConfiguration().get(\"eventTypes\"), is(\"ItemStateEvent\"));\n+        assertThat(trigger.get().getConfiguration().get(\"source\"), is(\"\"));\n+        assertThat(trigger.get().getConfiguration().get(\"topic\"), is(\"openhab/items/myMotionItem/*\"));\n+        assertThat(trigger.get().getConfiguration().get(\"types\"), is(\"ItemStateEvent\"));\n+        assertThat(trigger.get().getConfiguration().get(\"payload\"), is(\"\"));\n         Optional<? extends Action> action = rule.getActions().stream()\n                 .filter(a -> \"ItemPostCommandActionID\".equals(a.getId())).findFirst();\n         assertThat(action.isPresent(), is(true));\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\nindex 730eb8ded5d..d8bc15abec4 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\n@@ -254,12 +254,11 @@ public void receive(Event e) {\n     public void assertThatARuleWithConnectionsIsExecuted() {\n         logger.info(\"assert that a rule with connections is executed\");\n         Map<String, Object> params = new HashMap<>();\n-        params.put(\"eventSource\", \"myMotionItem3\");\n-        params.put(\"eventTopic\", \"openhab/*\");\n-        params.put(\"eventTypes\", \"ItemStateEvent\");\n+        params.put(\"topic\", \"openhab/items/myMotionItem3/*\");\n+        params.put(\"types\", \"ItemStateEvent\");\n         Configuration triggerConfig = new Configuration(params);\n         params = new HashMap<>();\n-        params.put(\"eventTopic\", \"openhab/*\");\n+        params.put(\"topic\", \"openhab/**\");\n         Configuration condition1Config = new Configuration(params);\n         params = new HashMap<>();\n         params.put(\"itemName\", \"myLampItem3\");\n@@ -321,7 +320,7 @@ public void assertThatARuleWithNonExistingModuleTypeHandlerIsAddedToTheRuleRegis\n         params.put(\"eventTypes\", \"ItemStateEvent\");\n         Configuration triggerConfig = new Configuration(params);\n         params = new HashMap<>();\n-        params.put(\"topic\", \"openhab/*\");\n+        params.put(\"topic\", \"openhab/**\");\n         Configuration condition1Config = new Configuration(params);\n         params = new HashMap<>();\n         params.put(\"itemName\", \"myLampItem3\");\n@@ -404,7 +403,7 @@ public void receive(Event e) {\n \n     @Test\n     public void assertThatRuleNowMethodExecutesActionsOfTheRule() throws ItemNotFoundException {\n-        Configuration triggerConfig = new Configuration(Map.of(\"eventTopic\", \"runNowEventTopic/*\"));\n+        Configuration triggerConfig = new Configuration(Map.of(\"topic\", \"runNowEventTopic/*\"));\n         Map<String, Object> params = new HashMap<>();\n         params.put(\"itemName\", \"myLampItem3\");\n         params.put(\"command\", \"TOGGLE\");\n@@ -467,7 +466,7 @@ public void receive(Event e) {\n \n     @Test\n     public void assertThatRuleCanBeUpdated() throws ItemNotFoundException {\n-        Configuration triggerConfig = new Configuration(Map.of(\"eventTopic\", \"runNowEventTopic/*\"));\n+        Configuration triggerConfig = new Configuration(Map.of(\"topic\", \"runNowEventTopic/*\"));\n         Map<String, Object> params = new HashMap<>();\n         params.put(\"itemName\", \"myLampItem3\");\n         params.put(\"command\", \"ON\");\n@@ -594,9 +593,8 @@ public void assertARuleAddedByApiIsExecutedAsExpected() {\n         logger.info(\"assert a rule added by api is executed as expected\");\n         // Creation of RULE\n         Map<String, Object> params = new HashMap<>();\n-        params.put(\"eventSource\", \"myMotionItem2\");\n-        params.put(\"eventTopic\", \"openhab/*\");\n-        params.put(\"eventTypes\", \"ItemStateEvent\");\n+        params.put(\"topic\", \"openhab/items/myMotionItem2/*\");\n+        params.put(\"types\", \"ItemStateEvent\");\n         Configuration triggerConfig = new Configuration(params);\n         params = new HashMap<>();\n         params.put(\"itemName\", \"myLampItem2\");\n@@ -854,9 +852,8 @@ private Rule createSimpleRule() {\n         int rand = new Random().nextInt();\n \n         Map<String, Object> configs = new HashMap<>();\n-        configs.put(\"eventSource\", \"myMotionItem2\");\n-        configs.put(\"eventTopic\", \"openhab/*\");\n-        configs.put(\"eventTypes\", \"ItemStateEvent\");\n+        configs.put(\"topic\", \"openhab/items/myMotionItem2/*\");\n+        configs.put(\"types\", \"ItemStateEvent\");\n         Configuration triggerConfig = new Configuration(configs);\n         configs = new HashMap<>();\n         configs.put(\"itemName\", \"myLampItem2\");\n@@ -880,9 +877,8 @@ public void assertARuleWithGenericConditionWorks() throws ItemNotFoundException\n         logger.info(\"assert a rule with generic condition works\");\n         // Creation of RULE\n         Map<String, Object> configs = new HashMap<>();\n-        configs.put(\"eventSource\", \"myMotionItem5\");\n-        configs.put(\"eventTopic\", \"openhab/*\");\n-        configs.put(\"eventTypes\", \"ItemStateEvent\");\n+        configs.put(\"topic\", \"openhab/items/myMotionItem5/*\");\n+        configs.put(\"types\", \"ItemStateEvent\");\n         Configuration triggerConfig = new Configuration(configs);\n         configs = new HashMap<>();\n         configs.put(\"operator\", \"matches\");\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/rules/ItemRuleDefinition.json b/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/rules/ItemRuleDefinition.json\nindex 2980189e941..f19ef5ba7f9 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/rules/ItemRuleDefinition.json\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/rules/ItemRuleDefinition.json\n@@ -17,9 +17,8 @@\n \t\t\t\t\"id\": \"ItemStateChangeTriggerID\",\n \t\t\t\t\"type\": \"core.GenericEventTrigger\",\n \t\t\t\t\"configuration\": {\n-\t\t\t\t\t\"eventSource\": \"myMotionItem\",\n-\t\t\t\t\t\"eventTopic\": \"openhab/items/*\",\n-\t\t\t\t\t\"eventTypes\": \"ItemStateEvent\"\n+\t\t\t\t\t\"topic\": \"openhab/items/myMotionItem/*\",\n+\t\t\t\t\t\"types\": \"ItemStateEvent\"\n \t\t\t\t}\n \t\t\t}\n \t\t],\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/SimpleTestTemplate.json b/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/SimpleTestTemplate.json\nindex ff595c0b060..3b4058ef554 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/SimpleTestTemplate.json\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/SimpleTestTemplate.json\n@@ -39,9 +39,8 @@\n \t\t\t\t\"id\": \"ItemUpdateTrigger_1\",\n \t\t\t\t\"type\": \"core.GenericEventTrigger\",\n \t\t\t\t\"configuration\": {\n-\t\t\t\t\t\"eventSource\": \"{{onItem}}\",\n-\t\t\t\t\t\"eventTopic\": \"openhab/items/*\",\n-\t\t\t\t\t\"eventTypes\": \"ItemStateEvent\"\n+\t\t\t\t\t\"topic\": \"openhab/items/{{onItem}}/*\",\n+\t\t\t\t\t\"types\": \"ItemStateEvent\"\n \t\t\t\t}\n \t\t\t}\n \t\t],\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/TestTemplateRuleWithReferences.json b/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/TestTemplateRuleWithReferences.json\nindex 3fc9a904b7b..1fd99be3837 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/TestTemplateRuleWithReferences.json\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/resources/OH-INF/automation/templates/TestTemplateRuleWithReferences.json\n@@ -29,9 +29,8 @@\n \t\t\t\t\"id\": \"ItemStateChangeTriggerID\",\n \t\t\t\t\"type\": \"core.GenericEventTrigger\",\n \t\t\t\t\"configuration\": {\n-\t\t\t\t\t\"eventSource\": \"{{triggerItem}}\",\n-\t\t\t\t\t\"eventTopic\": \"openhab/items/*\",\n-\t\t\t\t\t\"eventTypes\": \"ItemStateEvent\"\n+\t\t\t\t\t\"topic\": \"openhab/items/{{triggerItem}}/*\",\n+\t\t\t\t\t\"types\": \"ItemStateEvent\"\n \t\t\t\t}\n \t\t\t}\n \t\t],\n@@ -41,7 +40,7 @@\n \t\t\t\t\"type\": \"core.GenericEventCondition\",\n \t\t\t\t\"configuration\": {\n \t\t\t\t\t\"topic\": \"openhab/items/{{triggerItem}}/state\",\n-\t\t\t\t\t\"payload\": \".*ON.*\"\n+\t\t\t\t\t\"payload\": \"ON\"\n \t\t\t\t},\n \t\t\t\t\"inputs\": {\n \t\t\t\t\t\"event\": \"ItemStateChangeTriggerID.event\"\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\nindex ec95124c4a7..3ba71f090e0 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\n+++ b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\n@@ -113,8 +113,7 @@ private Rule createSceneRule() {\n \n     private Rule createOuterRule() {\n         final Configuration outerRuleTriggerConfig = new Configuration(\n-                Map.ofEntries(entry(\"eventSource\", \"ruleTrigger\"), entry(\"eventTopic\", \"openhab/*\"),\n-                        entry(\"eventTypes\", \"ItemStateEvent\")));\n+                Map.ofEntries(entry(\"topic\", \"openhab/items/ruleTrigger/*\"), entry(\"types\", \"ItemStateEvent\")));\n \n         final List<String> ruleUIDs = new ArrayList<>();\n         ruleUIDs.add(\"exampleSceneRule\");\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\nindex 9755fd409a7..c7fddef1b7f 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\n+++ b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\n@@ -142,8 +142,8 @@ public void testPredefinedRule() throws ItemNotFoundException, InterruptedExcept\n \n     @Test\n     public void itemStateUpdatedBySimpleRule() throws ItemNotFoundException, InterruptedException {\n-        final Configuration triggerConfig = new Configuration(Map.ofEntries(entry(\"eventSource\", \"myMotionItem2\"),\n-                entry(\"eventTopic\", \"openhab/*\"), entry(\"eventTypes\", \"ItemStateEvent\")));\n+        final Configuration triggerConfig = new Configuration(\n+                Map.ofEntries(entry(\"topic\", \"openhab/items/myMotionItem2/*\"), entry(\"types\", \"ItemStateEvent\")));\n         final Configuration actionConfig = new Configuration(\n                 Map.ofEntries(entry(\"itemName\", \"myLampItem2\"), entry(\"command\", \"ON\")));\n         final Rule rule = RuleBuilder.create(\"myRule21\" + new Random().nextInt())\n\ndiff --git a/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/DemoScriptRule.json b/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/DemoScriptRule.json\nindex 04f11da3579..5eda62fa74b 100644\n--- a/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/DemoScriptRule.json\n+++ b/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/DemoScriptRule.json\n@@ -8,9 +8,8 @@\n \t\t\t\t\"id\": \"trigger\",\n \t\t\t\t\"type\": \"core.GenericEventTrigger\",\n \t\t\t\t\"configuration\": {\n-\t\t\t\t\t\"eventSource\": \"MyTrigger\",\n-\t\t\t\t\t\"eventTopic\": \"openhab/items/MyTrigger/state\",\n-\t\t\t\t\t\"eventTypes\": \"ItemStateEvent\"\n+\t\t\t\t\t\"topic\": \"openhab/items/MyTrigger/state\",\n+\t\t\t\t\t\"types\": \"ItemStateEvent\"\n \t\t\t\t}\n \t\t\t}\n \t\t],\n\ndiff --git a/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java b/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java\nindex ac702eae5b5..4ec523772c9 100644\n--- a/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java\n+++ b/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java\n@@ -118,9 +118,8 @@ public void testPredefinedRule() throws ItemNotFoundException {\n                 .findFirst();\n         assertThat(trigger.isPresent(), is(true));\n         assertThat(trigger.get().getTypeUID(), is(\"core.GenericEventTrigger\"));\n-        assertThat(trigger.get().getConfiguration().get(\"eventSource\"), is(\"MyTrigger\"));\n-        assertThat(trigger.get().getConfiguration().get(\"eventTopic\"), is(\"openhab/items/MyTrigger/state\"));\n-        assertThat(trigger.get().getConfiguration().get(\"eventTypes\"), is(\"ItemStateEvent\"));\n+        assertThat(trigger.get().getConfiguration().get(\"topic\"), is(\"openhab/items/MyTrigger/state\"));\n+        assertThat(trigger.get().getConfiguration().get(\"types\"), is(\"ItemStateEvent\"));\n         Optional<? extends Condition> condition1 = rule.getConditions().stream()\n                 .filter(c -> \"condition\".equals(c.getId())).findFirst();\n         assertThat(condition1.isPresent(), is(true));\n\ndiff --git a/itests/org.openhab.core.automation.module.script.tests/src/main/resources/OH-INF/automation/rules/DemoScriptRule.json b/itests/org.openhab.core.automation.module.script.tests/src/main/resources/OH-INF/automation/rules/DemoScriptRule.json\nindex 04f11da3579..5eda62fa74b 100644\n--- a/itests/org.openhab.core.automation.module.script.tests/src/main/resources/OH-INF/automation/rules/DemoScriptRule.json\n+++ b/itests/org.openhab.core.automation.module.script.tests/src/main/resources/OH-INF/automation/rules/DemoScriptRule.json\n@@ -8,9 +8,8 @@\n \t\t\t\t\"id\": \"trigger\",\n \t\t\t\t\"type\": \"core.GenericEventTrigger\",\n \t\t\t\t\"configuration\": {\n-\t\t\t\t\t\"eventSource\": \"MyTrigger\",\n-\t\t\t\t\t\"eventTopic\": \"openhab/items/MyTrigger/state\",\n-\t\t\t\t\t\"eventTypes\": \"ItemStateEvent\"\n+\t\t\t\t\t\"topic\": \"openhab/items/MyTrigger/state\",\n+\t\t\t\t\t\"types\": \"ItemStateEvent\"\n \t\t\t\t}\n \t\t\t}\n \t\t],\n\ndiff --git a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\nindex a76e37b88e0..42d3e4aa8da 100644\n--- a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\n+++ b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\n@@ -127,8 +127,8 @@ public void receive(Event event) {\n         registerService(ruleEventHandler);\n \n         // Creation of RULE\n-        Configuration triggerConfig = new Configuration(Map.ofEntries(entry(\"eventSource\", \"myMotionItem2\"),\n-                entry(\"eventTopic\", \"openhab/*\"), entry(\"eventTypes\", \"ItemStateEvent\")));\n+        Configuration triggerConfig = new Configuration(\n+                Map.ofEntries(entry(\"topic\", \"openhab/items/myMotionItem2/*\"), entry(\"types\", \"ItemStateEvent\")));\n \n         Configuration actionConfig = new Configuration(\n                 Map.ofEntries(entry(\"itemName\", \"myLampItem2\"), entry(\"command\", \"ON\")));\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3297",
    "pr_id": 3297,
    "issue_id": 3296,
    "repo": "openhab/openhab-core",
    "problem_statement": "QuantityType.as(PercentType.class) is not dealing with units properly\nWhile this works\r\n\r\n```\r\nnew QuantityType<>(\"10 %\").as(PercentType.class)\r\n```\r\n\r\nthis would not:\r\n```\r\nnew QuantityType<>(\"100000 ppm\").as(PercentType.class)\r\n```\r\n\r\nas the `QuantityType.as(PercentType.class)` only converts quantities with `%` as unit, everything else discards the unit and uses the value (i.e. trying to construct `100000*100 %` which is not allowed with `PercentType`)\r\n\r\nPR to follow with a **breaking** fix. The fix is breaking in the sense that behaviour changes... \r\n- Previously `new QuantityType<>(\"0.31 ppm\").as(PercentType.class)` would have produced `PercentType(31)`\r\n\r\n",
    "issue_word_count": 94,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeTest.java"
    ],
    "base_commit": "062e4a1758705b4a3e03e0c6e4881fc08348cdd7",
    "head_commit": "169bd4c4263758f4bd2d23511cc1ea0af8d56476",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3297",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3297",
    "dockerfile": "",
    "pr_merged_at": "2023-01-05T17:51:59.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java\nindex 5efaa8543d2..998a2adf4f8 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java\n@@ -290,7 +290,7 @@ public Dimension getDimension() {\n \n     /**\n      * Convert this QuantityType to a new {@link QuantityType} using the given target unit.\n-     * \n+     *\n      * Implicit conversions using inverse units are allowed (i.e. mired <=> Kelvin). This may\n      * change the dimension.\n      *\n@@ -306,7 +306,7 @@ public Dimension getDimension() {\n \n     @SuppressWarnings(\"unchecked\")\n     public @Nullable QuantityType<?> toInvertibleUnit(String targetUnit) {\n-        Unit<?> unit = (Unit<?>) AbstractUnit.parse(targetUnit);\n+        Unit<?> unit = AbstractUnit.parse(targetUnit);\n         if (unit != null) {\n             return toInvertibleUnit(unit);\n         }\n@@ -336,7 +336,7 @@ public Dimension getDimension() {\n         }\n         Quantity<?> result = quantity.to(targetUnit);\n \n-        return new QuantityType<T>(result.getValue(), (Unit<T>) targetUnit);\n+        return new QuantityType<T>(result.getValue(), targetUnit);\n     }\n \n     public BigDecimal toBigDecimal() {\n@@ -455,10 +455,13 @@ public String toFullString() {\n             return target.cast(new HSBType(DecimalType.ZERO, PercentType.ZERO,\n                     new PercentType(toBigDecimal().multiply(BIG_DECIMAL_HUNDRED))));\n         } else if (target == PercentType.class) {\n-            if (Units.PERCENT.equals(getUnit())) {\n-                return target.cast(new PercentType(toBigDecimal()));\n+            QuantityType<T> inPercent = toUnit(Units.PERCENT);\n+            if (inPercent == null) {\n+                // incompatible unit\n+                return null;\n+            } else {\n+                return target.cast(new PercentType(inPercent.toBigDecimal()));\n             }\n-            return target.cast(new PercentType(toBigDecimal().multiply(BIG_DECIMAL_HUNDRED)));\n         } else if (target == DecimalType.class) {\n             return target.cast(new DecimalType(toBigDecimal()));\n         } else {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeTest.java\nindex 5b5f5bba719..dce8da96601 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/QuantityTypeTest.java\n@@ -307,6 +307,19 @@ public void testConversionToPercentType(Locale locale) {\n \n         assertEquals(PercentType.HUNDRED, new QuantityType<>(\"100 %\").as(PercentType.class));\n         assertEquals(PercentType.ZERO, new QuantityType<>(\"0 %\").as(PercentType.class));\n+\n+        // Test QuantityType (different ways to refer to 10%) conversion to PercentType\n+        assertEquals(new PercentType(BigDecimal.valueOf(10)), new QuantityType<>(\"10 %\").as(PercentType.class));\n+        assertEquals(new PercentType(BigDecimal.valueOf(10)), new QuantityType<>(\"0.1\").as(PercentType.class));\n+        assertEquals(new PercentType(BigDecimal.valueOf(10)), new QuantityType<>(\"100 %/10\").as(PercentType.class));\n+        assertEquals(new PercentType(BigDecimal.valueOf(10)), new QuantityType<>(\"100000 ppm\").as(PercentType.class));\n+\n+        // Known caveat: bare unit, different dimension. Still gets converted to %\n+        assertEquals(new PercentType(BigDecimal.valueOf(10)),\n+                new QuantityType<>(0.1, Units.RADIAN).as(PercentType.class));\n+\n+        // incompatible units\n+        assertEquals(null, new QuantityType<>(\"0.5 m\").as(PercentType.class));\n     }\n \n     @ParameterizedTest\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3295",
    "pr_id": 3295,
    "issue_id": 3234,
    "repo": "openhab/openhab-core",
    "problem_statement": "RFC: Implement event topic filtering directly in EventHandler\n(summary re-written):\r\n\r\nI've investigated this issue quite a bit at this point. Right now, a large number of `EventSubscriber`s will set the `event.topics` OSGi service property to the topic they expect to receive, but `OSGiEventManager` (who receives notice of the service registration) does absolutely nothing with it, and `EventHandler` only filters events based on the `EventSubscriber.getSubscribedEventTypes()` method, filtering against the event's type. The `EventSubscriber`s will then also implement `EventFilter`, and in their filter _actually_ check the event topic (or not... a lot of them simply rely on the event type). Confounding this, there's `GenericEventTriggerHandler` that has configuration for `eventSource`, `eventTopic`, and `eventType`, but `eventTopic` is ignored besides to set the service property (which is then ignored), and unintuitively filters the incoming event's _topic_ against the configured _source_. The docs at https://www.openhab.org/docs/configuration/jsr223.html#triggertype-objects-all-jsr223-languages are incorrect, that the event topic _cannot_ be filtered, and also claim that `eventSource` can be used for filtering based on the subject of the event. This is only (partially) true because `GenericEventTriggerHandler` is checking against a different property, as mentioned above. And it's buggy because it's simply doing a `String.contains` check, so if you configured it look for `MySwitchItem`, it will still pass through events for `MySwitchItem1`. `Event.getSource()` is actually intended to carry the name of the component that created the event, not the subject of the event. Adding additional confusion: there's also a `GenericEventConditionHandler`, that _does_ compare topic-to-topic, source-to-source, event-type-to-event-type (and payload-to-payload). But it's doing a regex match (except some special processing for payload).\r\n\r\nSooo... my proposal:\r\n * Add implementation to `OSGiEventManager` to capture the `event.topics` service param, and pass it to `EventHandler` (if present), and `EventHandler` will apply that _before_ checking for an `EventFilter` on the `EventSubscriber`, with the intention that the vast majority of `EventSubscriber`s no longer even need to implement an `EventFilter`.\r\n * The filter described above should be implemented as a filesystem glob syntax ( https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/file/FileSystem.html#getPathMatcher(java.lang.string) ). It's not as complicated as a full-on regex, but allows for single-level matching which is what most of the currently defined event.topics expect. A few will still need to be tweaked.\r\n * Remove `EventFilter` from almost all `EventSubscriber`s, simply relying on the now-built-in topic processing.\r\n * `GenericEventTriggerHandler` will simply forward its `eventTopic` param as the service property `events.topic`, as it already does. It will still implement an `EventFilter` to apply the `eventSource` filter, but that will filter against the event's source, exact match. `eventType` still works as before - exact match. This is a _breaking change_.\r\n * `GenericEventConditionHandler` will be updated to process the topic, source, and type the same as `EventHandler` and `GenericEventTriggerHandler` do. Again a _breaking change_.\r\n\r\nHopefully the impact of the breaking changes will be relatively small - most rules already rely on higher level triggers and conditions such as ItemStateChangeTrigger. MainUI doesn't expose GenericEventTrigger or GenericEventCondition. The vast majority of existing users are already setting up their topic and event types as if it works this way already (with some exceptions because of the vagueness of how the topic filtering (doesn't!) work).\r\n\r\n@openhab/core-maintainers WDYT?\r\n\r\n",
    "issue_word_count": 573,
    "test_files_count": 20,
    "non_test_files_count": 25,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ChannelEventTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/DateTimeTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupCommandTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupStateTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ThingStatusTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java",
      "bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/EventLogger.java",
      "bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/EventCountMetric.java",
      "bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/RuleMetric.java",
      "bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java",
      "bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java",
      "bundles/org.openhab.core.io.rest.sse/src/main/java/org/openhab/core/io/rest/sse/internal/listeners/SseEventSubscriber.java",
      "bundles/org.openhab.core.io.websocket/src/main/java/org/openhab/core/io/websocket/EventWebSocketServlet.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/firmware/FirmwareUpdateServiceImpl.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/events/AbstractTypedEventSubscriber.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/events/EventSubscriber.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicEventFilter.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicPrefixEventFilter.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ExpireManager.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/AbstractItemEventSubscriber.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java",
      "itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/internal/InboxOSGiTest.java",
      "itests/org.openhab.core.model.item.tests/src/main/java/org/openhab/core/model/item/internal/GenericItemProviderTest.java",
      "itests/org.openhab.core.model.thing.tests/src/main/java/org/openhab/core/model/thing/test/hue/GenericThingProviderTest.java",
      "itests/org.openhab.core.tests/src/main/java/org/openhab/core/internal/items/ItemUpdaterOSGiTest.java",
      "itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/binding/BindingBaseClassesOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/events/ThingEventOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ChannelLinkNotifierOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingManagerOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingRegistryOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/link/LinkEventOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java",
      "itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/internal/InboxOSGiTest.java",
      "itests/org.openhab.core.model.item.tests/src/main/java/org/openhab/core/model/item/internal/GenericItemProviderTest.java",
      "itests/org.openhab.core.model.thing.tests/src/main/java/org/openhab/core/model/thing/test/hue/GenericThingProviderTest.java",
      "itests/org.openhab.core.tests/src/main/java/org/openhab/core/internal/items/ItemUpdaterOSGiTest.java",
      "itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/binding/BindingBaseClassesOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/events/ThingEventOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ChannelLinkNotifierOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingManagerOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingRegistryOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/link/LinkEventOSGiTest.java"
    ],
    "base_commit": "062e4a1758705b4a3e03e0c6e4881fc08348cdd7",
    "head_commit": "faebf48034fe70fa78459018ecd3cb57ada887ad",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3295",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3295",
    "dockerfile": "",
    "pr_merged_at": "2023-01-03T15:30:13.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ChannelEventTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ChannelEventTriggerHandler.java\nindex 61175b2cfdf..12bdcbb399f 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ChannelEventTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ChannelEventTriggerHandler.java\n@@ -12,8 +12,6 @@\n  */\n package org.openhab.core.automation.internal.module.handler;\n \n-import java.util.Dictionary;\n-import java.util.Hashtable;\n import java.util.Map;\n import java.util.Set;\n \n@@ -63,10 +61,7 @@ public ChannelEventTriggerHandler(Trigger module, BundleContext bundleContext) {\n         this.types = Set.of(\"ChannelTriggeredEvent\");\n         this.bundleContext = bundleContext;\n \n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", TOPIC);\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n     }\n \n     @Override\n@@ -81,7 +76,6 @@ public void receive(Event event) {\n \n     @Override\n     public boolean apply(Event event) {\n-        logger.trace(\"->FILTER: {}:{}\", event.getTopic(), TOPIC);\n         boolean eventMatches = false;\n         if (event instanceof ChannelTriggeredEvent) {\n             ChannelTriggeredEvent cte = (ChannelTriggeredEvent) event;\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/DateTimeTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/DateTimeTriggerHandler.java\nindex 56010a64a57..5becf097979 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/DateTimeTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/DateTimeTriggerHandler.java\n@@ -14,8 +14,6 @@\n \n import java.time.ZoneId;\n import java.time.format.DateTimeFormatter;\n-import java.util.Dictionary;\n-import java.util.Hashtable;\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -29,6 +27,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.events.TopicPrefixEventFilter;\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemRegistry;\n import org.openhab.core.items.events.ItemCommandEvent;\n@@ -54,7 +53,7 @@\n  */\n @NonNullByDefault\n public class DateTimeTriggerHandler extends BaseTriggerModuleHandler\n-        implements SchedulerRunnable, TimeBasedTriggerHandler, EventSubscriber, EventFilter {\n+        implements SchedulerRunnable, TimeBasedTriggerHandler, EventSubscriber {\n \n     public static final String MODULE_TYPE_ID = \"timer.DateTimeTrigger\";\n     public static final String CONFIG_ITEM_NAME = \"itemName\";\n@@ -67,6 +66,7 @@ public class DateTimeTriggerHandler extends BaseTriggerModuleHandler\n \n     private final CronScheduler scheduler;\n     private final String itemName;\n+    private final @Nullable EventFilter eventFilter;\n     private String cronExpression = CronAdjuster.REBOOT;\n     private Boolean timeOnly = false;\n \n@@ -80,13 +80,13 @@ public DateTimeTriggerHandler(Trigger module, CronScheduler scheduler, ItemRegis\n         this.itemName = ConfigParser.valueAsOrElse(module.getConfiguration().get(CONFIG_ITEM_NAME), String.class, \"\");\n         if (this.itemName.isBlank()) {\n             logger.warn(\"itemName is blank in module '{}', trigger will not work\", module.getId());\n+            eventFilter = null;\n             return;\n         }\n+        this.eventFilter = new TopicPrefixEventFilter(\"openhab/items/\" + itemName + \"/\");\n         this.timeOnly = ConfigParser.valueAsOrElse(module.getConfiguration().get(CONFIG_TIME_ONLY), Boolean.class,\n                 false);\n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", \"openhab/items/\" + itemName + \"/*\");\n-        eventSubscriberRegistration = bundleContext.registerService(EventSubscriber.class.getName(), this, properties);\n+        eventSubscriberRegistration = bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n         try {\n             process(itemRegistry.getItem(itemName).getState());\n         } catch (ItemNotFoundException e) {\n@@ -134,7 +134,7 @@ public Set<String> getSubscribedEventTypes() {\n \n     @Override\n     public @Nullable EventFilter getEventFilter() {\n-        return this;\n+        return eventFilter;\n     }\n \n     @Override\n@@ -150,12 +150,6 @@ public void receive(Event event) {\n         }\n     }\n \n-    @Override\n-    public boolean apply(Event event) {\n-        logger.trace(\"->FILTER: {}:{}\", event.getTopic(), itemName);\n-        return event.getTopic().contains(\"openhab/items/\" + itemName + \"/\");\n-    }\n-\n     private synchronized void startScheduler() {\n         cancelScheduler();\n         if (!CronAdjuster.REBOOT.equals(cronExpression)) {\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java\nindex 90b8d8a2a12..0ae0d52cd85 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GenericEventTriggerHandler.java\n@@ -12,9 +12,7 @@\n  */\n package org.openhab.core.automation.internal.module.handler;\n \n-import java.util.Dictionary;\n import java.util.HashMap;\n-import java.util.Hashtable;\n import java.util.Map;\n import java.util.Set;\n \n@@ -72,10 +70,7 @@ public GenericEventTriggerHandler(Trigger module, BundleContext bundleContext) {\n             this.types = Set.of();\n         }\n         this.bundleContext = bundleContext;\n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", topic);\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n         logger.trace(\"Registered EventSubscriber: Topic: {} Type: {} Source: {}\", topic, types, source);\n     }\n \n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupCommandTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupCommandTriggerHandler.java\nindex 176f0e4fe1e..093e2ae4fc4 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupCommandTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupCommandTriggerHandler.java\n@@ -12,9 +12,7 @@\n  */\n package org.openhab.core.automation.internal.module.handler;\n \n-import java.util.Dictionary;\n import java.util.HashMap;\n-import java.util.Hashtable;\n import java.util.Map;\n import java.util.Set;\n \n@@ -24,7 +22,6 @@\n import org.openhab.core.automation.handler.BaseTriggerModuleHandler;\n import org.openhab.core.automation.handler.TriggerHandlerCallback;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemRegistry;\n@@ -45,13 +42,12 @@\n  * @author Kai Kreuzer - Initial contribution\n  */\n @NonNullByDefault\n-public class GroupCommandTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber, EventFilter {\n+public class GroupCommandTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber {\n \n     private final Logger logger = LoggerFactory.getLogger(GroupCommandTriggerHandler.class);\n \n     private final String groupName;\n     private final @Nullable String command;\n-    private final String topic;\n \n     private final Set<String> types;\n     private final BundleContext bundleContext;\n@@ -74,11 +70,7 @@ public GroupCommandTriggerHandler(Trigger module, String ruleUID, BundleContext\n         this.bundleContext = bundleContext;\n         this.itemRegistry = itemRegistry;\n         this.ruleUID = ruleUID;\n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        this.topic = \"openhab/items/*\";\n-        properties.put(\"event.topics\", topic);\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n \n         if (itemRegistry.get(groupName) == null) {\n             logger.warn(\"Group '{}' needed for rule '{}' is missing. Trigger '{}' will not work.\", groupName, ruleUID,\n@@ -91,11 +83,6 @@ public Set<String> getSubscribedEventTypes() {\n         return types;\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return this;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         if (event instanceof ItemAddedEvent) {\n@@ -143,10 +130,4 @@ public void dispose() {\n         super.dispose();\n         eventSubscriberRegistration.unregister();\n     }\n-\n-    @Override\n-    public boolean apply(Event event) {\n-        logger.trace(\"->FILTER: {}\", event.getTopic());\n-        return event.getTopic().startsWith(\"openhab/items/\");\n-    }\n }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupStateTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupStateTriggerHandler.java\nindex 7ae135c36be..a6a70e71280 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupStateTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/GroupStateTriggerHandler.java\n@@ -12,9 +12,7 @@\n  */\n package org.openhab.core.automation.internal.module.handler;\n \n-import java.util.Dictionary;\n import java.util.HashMap;\n-import java.util.Hashtable;\n import java.util.Map;\n import java.util.Set;\n \n@@ -24,7 +22,6 @@\n import org.openhab.core.automation.handler.BaseTriggerModuleHandler;\n import org.openhab.core.automation.handler.TriggerHandlerCallback;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemRegistry;\n@@ -47,7 +44,7 @@\n  * @author Kai Kreuzer - Initial contribution\n  */\n @NonNullByDefault\n-public class GroupStateTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber, EventFilter {\n+public class GroupStateTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber {\n \n     public static final String UPDATE_MODULE_TYPE_ID = \"core.GroupStateUpdateTrigger\";\n     public static final String CHANGE_MODULE_TYPE_ID = \"core.GroupStateChangeTrigger\";\n@@ -83,10 +80,7 @@ public GroupStateTriggerHandler(Trigger module, String ruleUID, BundleContext bu\n         this.bundleContext = bundleContext;\n         this.ruleUID = ruleUID;\n         this.itemRegistry = itemRegistry;\n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", \"openhab/items/*\");\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n \n         if (itemRegistry.get(groupName) == null) {\n             logger.warn(\"Group '{}' needed for rule '{}' is missing. Trigger '{}' will not work.\", groupName, ruleUID,\n@@ -99,11 +93,6 @@ public Set<String> getSubscribedEventTypes() {\n         return types;\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return this;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         if (event instanceof ItemAddedEvent) {\n@@ -176,10 +165,4 @@ public void dispose() {\n         super.dispose();\n         eventSubscriberRegistration.unregister();\n     }\n-\n-    @Override\n-    public boolean apply(Event event) {\n-        logger.trace(\"->FILTER: {}:{}\", event.getTopic(), groupName);\n-        return event.getTopic().startsWith(\"openhab/items/\");\n-    }\n }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java\nindex a85ef025eea..d2918d2a2b2 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemCommandTriggerHandler.java\n@@ -27,6 +27,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.events.TopicPrefixEventFilter;\n import org.openhab.core.items.ItemRegistry;\n import org.openhab.core.items.events.ItemAddedEvent;\n import org.openhab.core.items.events.ItemCommandEvent;\n@@ -45,7 +46,7 @@\n  * @author Kai Kreuzer - Initial contribution\n  */\n @NonNullByDefault\n-public class ItemCommandTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber, EventFilter {\n+public class ItemCommandTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber {\n \n     public static final String MODULE_TYPE_ID = \"core.ItemCommandTrigger\";\n \n@@ -56,11 +57,11 @@ public class ItemCommandTriggerHandler extends BaseTriggerModuleHandler implemen\n \n     private final String itemName;\n     private final @Nullable String command;\n-    private final String topic;\n \n     private final Set<String> types;\n     private final BundleContext bundleContext;\n     private final String ruleUID;\n+    private final EventFilter eventFilter;\n \n     private final ServiceRegistration<?> eventSubscriberRegistration;\n \n@@ -68,15 +69,13 @@ public ItemCommandTriggerHandler(Trigger module, String ruleUID, BundleContext b\n             ItemRegistry itemRegistry) {\n         super(module);\n         this.itemName = (String) module.getConfiguration().get(CFG_ITEMNAME);\n+        this.eventFilter = new TopicPrefixEventFilter(\"openhab/items/\" + itemName + \"/\");\n         this.command = (String) module.getConfiguration().get(CFG_COMMAND);\n         this.bundleContext = bundleContext;\n         this.ruleUID = ruleUID;\n         this.types = Set.of(ItemCommandEvent.TYPE, ItemAddedEvent.TYPE, ItemRemovedEvent.TYPE);\n         Dictionary<String, Object> properties = new Hashtable<>();\n-        this.topic = \"openhab/items/\" + itemName + \"/*\";\n-        properties.put(\"event.topics\", topic);\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n         if (itemRegistry.get(itemName) == null) {\n             logger.warn(\"Item '{}' needed for rule '{}' is missing. Trigger '{}' will not work.\", itemName, ruleUID,\n                     module.getId());\n@@ -90,7 +89,7 @@ public Set<String> getSubscribedEventTypes() {\n \n     @Override\n     public @Nullable EventFilter getEventFilter() {\n-        return this;\n+        return eventFilter;\n     }\n \n     @Override\n@@ -134,10 +133,4 @@ public void dispose() {\n         super.dispose();\n         eventSubscriberRegistration.unregister();\n     }\n-\n-    @Override\n-    public boolean apply(Event event) {\n-        logger.trace(\"->FILTER: {}:{}\", event.getTopic(), itemName);\n-        return event.getTopic().contains(\"openhab/items/\" + itemName + \"/\");\n-    }\n }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandler.java\nindex 65ed2717552..71bb4afd224 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandler.java\n@@ -17,8 +17,6 @@\n import java.time.ZonedDateTime;\n import java.time.format.DateTimeFormatter;\n import java.time.format.DateTimeParseException;\n-import java.util.Dictionary;\n-import java.util.Hashtable;\n import java.util.Map;\n import java.util.Set;\n \n@@ -29,6 +27,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.events.TopicPrefixEventFilter;\n import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n@@ -54,7 +53,7 @@\n  * @author Kai Kreuzer - refactored and simplified customized module handling\n  */\n @NonNullByDefault\n-public class ItemStateConditionHandler extends BaseConditionModuleHandler implements EventSubscriber, EventFilter {\n+public class ItemStateConditionHandler extends BaseConditionModuleHandler implements EventSubscriber {\n \n     /**\n      * Constants for Config-Parameters corresponding to Definition in ItemModuleTypeDefinition.json\n@@ -70,6 +69,7 @@ public class ItemStateConditionHandler extends BaseConditionModuleHandler implem\n     private final ItemRegistry itemRegistry;\n     private final String ruleUID;\n     private final String itemName;\n+    private final EventFilter eventFilter;\n     private final BundleContext bundleContext;\n     private final Set<String> types;\n     private final ServiceRegistration<?> eventSubscriberRegistration;\n@@ -82,13 +82,11 @@ public ItemStateConditionHandler(Condition condition, String ruleUID, BundleCont\n         this.bundleContext = bundleContext;\n         this.timeZoneProvider = timeZoneProvider;\n         this.itemName = (String) module.getConfiguration().get(ITEM_NAME);\n+        this.eventFilter = new TopicPrefixEventFilter(\"openhab/items/\" + itemName + \"/\");\n         this.types = Set.of(ItemAddedEvent.TYPE, ItemRemovedEvent.TYPE);\n         this.ruleUID = ruleUID;\n \n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", \"openhab/items/\" + itemName + \"/*\");\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n \n         if (itemRegistry.get(itemName) == null) {\n             logger.warn(\"Item '{}' needed for rule '{}' is missing. Condition '{}' will not work.\", itemName, ruleUID,\n@@ -103,7 +101,7 @@ public Set<String> getSubscribedEventTypes() {\n \n     @Override\n     public @Nullable EventFilter getEventFilter() {\n-        return this;\n+        return eventFilter;\n     }\n \n     @Override\n@@ -261,12 +259,6 @@ public void dispose() {\n         eventSubscriberRegistration.unregister();\n     }\n \n-    @Override\n-    public boolean apply(Event event) {\n-        logger.trace(\"->FILTER: {}:{}\", event.getTopic(), itemName);\n-        return event.getTopic().contains(\"openhab/items/\" + itemName + \"/\");\n-    }\n-\n     private ZonedDateTime getCompareTime(String input) {\n         if (input.isBlank()) {\n             // no parameter given, use now\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java\nindex 642dffd150d..8c1838fcd7b 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java\n@@ -12,9 +12,7 @@\n  */\n package org.openhab.core.automation.internal.module.handler;\n \n-import java.util.Dictionary;\n import java.util.HashMap;\n-import java.util.Hashtable;\n import java.util.Map;\n import java.util.Set;\n \n@@ -27,6 +25,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.events.TopicPrefixEventFilter;\n import org.openhab.core.items.ItemRegistry;\n import org.openhab.core.items.events.GroupItemStateChangedEvent;\n import org.openhab.core.items.events.ItemAddedEvent;\n@@ -48,7 +47,7 @@\n  * @author Simon Merschjohann - Initial contribution\n  */\n @NonNullByDefault\n-public class ItemStateTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber, EventFilter {\n+public class ItemStateTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber {\n \n     public static final String UPDATE_MODULE_TYPE_ID = \"core.ItemStateUpdateTrigger\";\n     public static final String CHANGE_MODULE_TYPE_ID = \"core.ItemStateChangeTrigger\";\n@@ -65,6 +64,7 @@ public class ItemStateTriggerHandler extends BaseTriggerModuleHandler implements\n     private final String ruleUID;\n     private Set<String> types;\n     private final BundleContext bundleContext;\n+    private final EventFilter eventFilter;\n \n     private @Nullable ServiceRegistration<?> eventSubscriberRegistration;\n \n@@ -72,6 +72,7 @@ public ItemStateTriggerHandler(Trigger module, String ruleUID, BundleContext bun\n             ItemRegistry itemRegistry) {\n         super(module);\n         this.itemName = (String) module.getConfiguration().get(CFG_ITEMNAME);\n+        this.eventFilter = new TopicPrefixEventFilter(\"openhab/items/\" + itemName + \"/\");\n         this.state = (String) module.getConfiguration().get(CFG_STATE);\n         this.previousState = (String) module.getConfiguration().get(CFG_PREVIOUS_STATE);\n         this.ruleUID = ruleUID;\n@@ -82,10 +83,7 @@ public ItemStateTriggerHandler(Trigger module, String ruleUID, BundleContext bun\n                     ItemRemovedEvent.TYPE);\n         }\n         this.bundleContext = bundleContext;\n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", \"openhab/items/\" + itemName + \"/*\");\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n \n         if (itemRegistry.get(itemName) == null) {\n             logger.warn(\"Item '{}' needed for rule '{}' is missing. Trigger '{}' will not work.\", itemName, ruleUID,\n@@ -100,7 +98,7 @@ public Set<String> getSubscribedEventTypes() {\n \n     @Override\n     public @Nullable EventFilter getEventFilter() {\n-        return this;\n+        return eventFilter;\n     }\n \n     @Override\n@@ -166,10 +164,4 @@ public void dispose() {\n             eventSubscriberRegistration = null;\n         }\n     }\n-\n-    @Override\n-    public boolean apply(Event event) {\n-        logger.trace(\"->FILTER: {}:{}\", event.getTopic(), itemName);\n-        return event.getTopic().contains(\"openhab/items/\" + itemName + \"/\");\n-    }\n }\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java\nindex c09e4184cef..6ab2aadc633 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java\n@@ -13,20 +13,16 @@\n package org.openhab.core.automation.internal.module.handler;\n \n import java.math.BigDecimal;\n-import java.util.Dictionary;\n import java.util.HashMap;\n-import java.util.Hashtable;\n import java.util.Map;\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.automation.ModuleHandlerCallback;\n import org.openhab.core.automation.Trigger;\n import org.openhab.core.automation.handler.BaseTriggerModuleHandler;\n import org.openhab.core.automation.handler.TriggerHandlerCallback;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.events.system.StartlevelEvent;\n import org.openhab.core.service.StartLevelService;\n@@ -41,7 +37,7 @@\n  * @author Kai Kreuzer - Initial contribution\n  */\n @NonNullByDefault\n-public class SystemTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber, EventFilter {\n+public class SystemTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber {\n \n     public static final String STARTLEVEL_MODULE_TYPE_ID = \"core.SystemStartlevelTrigger\";\n     public static final String CFG_STARTLEVEL = \"startlevel\";\n@@ -67,10 +63,7 @@ public SystemTriggerHandler(Trigger module, BundleContext bundleContext) {\n             throw new IllegalArgumentException(module.getTypeUID() + \" is no valid module type.\");\n         }\n         this.bundleContext = bundleContext;\n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", \"openhab/system/*\");\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n     }\n \n     @Override\n@@ -78,11 +71,6 @@ public Set<String> getSubscribedEventTypes() {\n         return types;\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return this;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         if (triggered) {\n@@ -110,11 +98,6 @@ public void dispose() {\n         super.dispose();\n     }\n \n-    @Override\n-    public boolean apply(Event event) {\n-        return true;\n-    }\n-\n     public void trigger() {\n         final ModuleHandlerCallback callback = this.callback;\n         if (!(callback instanceof TriggerHandlerCallback)) {\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ThingStatusTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ThingStatusTriggerHandler.java\nindex 35a49100b8a..cd3a9625f0f 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ThingStatusTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ThingStatusTriggerHandler.java\n@@ -12,12 +12,9 @@\n  */\n package org.openhab.core.automation.internal.module.handler;\n \n-import java.util.Dictionary;\n import java.util.HashMap;\n-import java.util.Hashtable;\n import java.util.Map;\n import java.util.Set;\n-import java.util.regex.Pattern;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -28,6 +25,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.events.TopicEventFilter;\n import org.openhab.core.thing.ThingStatus;\n import org.openhab.core.thing.events.ThingStatusInfoChangedEvent;\n import org.openhab.core.thing.events.ThingStatusInfoEvent;\n@@ -43,7 +41,7 @@\n  * @author Christoph Weitkamp - Initial contribution\n  */\n @NonNullByDefault\n-public class ThingStatusTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber, EventFilter {\n+public class ThingStatusTriggerHandler extends BaseTriggerModuleHandler implements EventSubscriber {\n \n     public static final String UPDATE_MODULE_TYPE_ID = \"core.ThingStatusUpdateTrigger\";\n     public static final String CHANGE_MODULE_TYPE_ID = \"core.ThingStatusChangeTrigger\";\n@@ -66,7 +64,7 @@ public class ThingStatusTriggerHandler extends BaseTriggerModuleHandler implemen\n     private final BundleContext bundleContext;\n \n     private final ServiceRegistration<?> eventSubscriberRegistration;\n-    private final Pattern eventTopicFilter;\n+    private final TopicEventFilter eventTopicFilter;\n \n     public ThingStatusTriggerHandler(Trigger module, BundleContext bundleContext) {\n         super(module);\n@@ -80,12 +78,9 @@ public ThingStatusTriggerHandler(Trigger module, BundleContext bundleContext) {\n         }\n         this.bundleContext = bundleContext;\n \n-        this.eventTopicFilter = Pattern.compile(\"^openhab/things/\" + thingUID.replace(\"*\", \".*?\") + \"/.*$\");\n+        this.eventTopicFilter = new TopicEventFilter(\"^openhab/things/\" + thingUID.replace(\"*\", \".*?\") + \"/.*$\");\n \n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", \"openhab/things/\" + thingUID + \"/*\");\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n     }\n \n     @Override\n@@ -95,7 +90,7 @@ public Set<String> getSubscribedEventTypes() {\n \n     @Override\n     public @Nullable EventFilter getEventFilter() {\n-        return this;\n+        return eventTopicFilter;\n     }\n \n     @Override\n@@ -144,10 +139,4 @@ public void dispose() {\n         eventSubscriberRegistration.unregister();\n         super.dispose();\n     }\n-\n-    @Override\n-    public boolean apply(Event event) {\n-        logger.trace(\"->FILTER: {}: {}\", event.getTopic(), thingUID);\n-        return eventTopicFilter.matcher(event.getTopic()).matches();\n-    }\n }\n\ndiff --git a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/EventLogger.java b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/EventLogger.java\nindex 21c74bfa9cd..76939b2e476 100644\n--- a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/EventLogger.java\n+++ b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/EventLogger.java\n@@ -17,9 +17,7 @@\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.service.ReadyMarker;\n import org.openhab.core.service.ReadyMarkerFilter;\n@@ -64,12 +62,6 @@ public Set<String> getSubscribedEventTypes() {\n         return subscribedEventTypes;\n     }\n \n-    @Override\n-    @Nullable\n-    public EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         Logger logger = getLogger(event.getType());\n\ndiff --git a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/EventCountMetric.java b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/EventCountMetric.java\nindex ffe59073a32..7a1ba68b341 100644\n--- a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/EventCountMetric.java\n+++ b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/EventCountMetric.java\n@@ -13,15 +13,12 @@\n package org.openhab.core.io.monitor.internal.metrics;\n \n import java.util.Collection;\n-import java.util.Dictionary;\n import java.util.HashSet;\n-import java.util.Hashtable;\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.events.ItemCommandEvent;\n import org.openhab.core.items.events.ItemStateEvent;\n@@ -63,10 +60,8 @@ public void bindTo(@NonNullByDefault({}) MeterRegistry meterRegistry) {\n         unbind();\n         logger.debug(\"EventCountMetric is being bound...\");\n         this.meterRegistry = meterRegistry;\n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", \"openhab/*\");\n         this.eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+                null);\n     }\n \n     @Override\n@@ -94,11 +89,6 @@ public Set<String> getSubscribedEventTypes() {\n         return Set.of(ItemCommandEvent.TYPE, ItemStateEvent.TYPE);\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         MeterRegistry meterRegistry = this.meterRegistry;\n\ndiff --git a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/RuleMetric.java b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/RuleMetric.java\nindex 1bf4c220e6f..9b3989f20e8 100644\n--- a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/RuleMetric.java\n+++ b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/RuleMetric.java\n@@ -13,9 +13,7 @@\n package org.openhab.core.io.monitor.internal.metrics;\n \n import java.util.Collection;\n-import java.util.Dictionary;\n import java.util.HashSet;\n-import java.util.Hashtable;\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -25,7 +23,6 @@\n import org.openhab.core.automation.RuleStatus;\n import org.openhab.core.automation.events.RuleStatusInfoEvent;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.ServiceRegistration;\n@@ -47,8 +44,6 @@ public class RuleMetric implements OpenhabCoreMeterBinder, EventSubscriber {\n     public static final String METRIC_NAME = \"openhab.rule.runs\";\n     public static final String RULES_TOPIC_PREFIX = \"openhab/rules/\";\n     public static final String RULES_TOPIC_SUFFIX = \"/state\";\n-    public static final String SUBSCRIPTION_PROPERTY_TOPIC = \"event.topics\";\n-    public static final String RULES_TOPIC_FILTER = \"openhab/rules/*\";\n     private final Logger logger = LoggerFactory.getLogger(RuleMetric.class);\n     private static final Tag CORE_RULE_METRIC_TAG = Tag.of(\"metric\", \"openhab.core.metric.rules\");\n     private static final String RULE_ID_TAG_NAME = \"rule\";\n@@ -71,10 +66,7 @@ public void bindTo(@NonNullByDefault({}) MeterRegistry meterRegistry) {\n         unbind();\n         logger.debug(\"RuleMetric is being bound...\");\n         this.meterRegistry = meterRegistry;\n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(SUBSCRIPTION_PROPERTY_TOPIC, RULES_TOPIC_FILTER);\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n     }\n \n     @Override\n@@ -102,11 +94,6 @@ public Set<String> getSubscribedEventTypes() {\n         return Set.of(RuleStatusInfoEvent.TYPE);\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         MeterRegistry meterRegistry = this.meterRegistry;\n\ndiff --git a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java\nindex 8e3e941f343..d2b3672829b 100644\n--- a/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java\n+++ b/bundles/org.openhab.core.io.monitor/src/main/java/org/openhab/core/io/monitor/internal/metrics/ThingStateMetric.java\n@@ -13,9 +13,7 @@\n package org.openhab.core.io.monitor.internal.metrics;\n \n import java.util.Collection;\n-import java.util.Dictionary;\n import java.util.HashMap;\n-import java.util.Hashtable;\n import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.atomic.AtomicInteger;\n@@ -23,7 +21,6 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.thing.ThingRegistry;\n import org.openhab.core.thing.ThingStatus;\n@@ -74,10 +71,7 @@ public void bindTo(@NonNullByDefault({}) MeterRegistry meterRegistry) {\n         this.meterRegistry = meterRegistry;\n         thingRegistry.getAll().forEach(\n                 thing -> createOrUpdateMetricForBundleState(thing.getUID().getId(), thing.getStatus().ordinal()));\n-        Dictionary<String, Object> properties = new Hashtable<>();\n-        properties.put(\"event.topics\", \"openhab/things/*\");\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this,\n-                properties);\n+        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n     }\n \n     private void createOrUpdateMetricForBundleState(String thingUid, int thingStatus) {\n@@ -115,11 +109,6 @@ public Set<String> getSubscribedEventTypes() {\n         return Set.of(ThingStatusInfoEvent.TYPE);\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         logger.trace(\"Received ThingStatusInfo(Changed)Event...\");\n\ndiff --git a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java\nindex a0dcfb78795..c87535bf68e 100644\n--- a/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java\n+++ b/bundles/org.openhab.core.io.rest.sitemap/src/main/java/org/openhab/core/io/rest/sitemap/SitemapSubscriptionService.java\n@@ -28,7 +28,6 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.io.rest.sitemap.internal.PageChangeListener;\n import org.openhab.core.io.rest.sitemap.internal.SitemapEvent;\n@@ -347,11 +346,6 @@ public Set<String> getSubscribedEventTypes() {\n         return Set.of(ItemStatePredictedEvent.TYPE, ChannelDescriptionChangedEvent.TYPE);\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         if (event instanceof ItemStatePredictedEvent) {\n\ndiff --git a/bundles/org.openhab.core.io.rest.sse/src/main/java/org/openhab/core/io/rest/sse/internal/listeners/SseEventSubscriber.java b/bundles/org.openhab.core.io.rest.sse/src/main/java/org/openhab/core/io/rest/sse/internal/listeners/SseEventSubscriber.java\nindex 6b3f53d51f8..4db1f0cf1b7 100644\n--- a/bundles/org.openhab.core.io.rest.sse/src/main/java/org/openhab/core/io/rest/sse/internal/listeners/SseEventSubscriber.java\n+++ b/bundles/org.openhab.core.io.rest.sse/src/main/java/org/openhab/core/io/rest/sse/internal/listeners/SseEventSubscriber.java\n@@ -15,9 +15,7 @@\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.io.rest.sse.internal.SsePublisher;\n import org.osgi.service.component.annotations.Activate;\n@@ -49,11 +47,6 @@ public Set<String> getSubscribedEventTypes() {\n         return subscribedEventTypes;\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         ssePublisher.broadcast(event);\n\ndiff --git a/bundles/org.openhab.core.io.websocket/src/main/java/org/openhab/core/io/websocket/EventWebSocketServlet.java b/bundles/org.openhab.core.io.websocket/src/main/java/org/openhab/core/io/websocket/EventWebSocketServlet.java\nindex d20f82e9b5f..87eed9aefc2 100644\n--- a/bundles/org.openhab.core.io.websocket/src/main/java/org/openhab/core/io/websocket/EventWebSocketServlet.java\n+++ b/bundles/org.openhab.core.io.websocket/src/main/java/org/openhab/core/io/websocket/EventWebSocketServlet.java\n@@ -36,7 +36,6 @@\n import org.openhab.core.auth.UserRegistry;\n import org.openhab.core.auth.UsernamePasswordCredentials;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.ItemRegistry;\n@@ -98,11 +97,6 @@ public Set<String> getSubscribedEventTypes() {\n         return Set.of(EventSubscriber.ALL_EVENT_TYPES);\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         webSockets.forEach(ws -> ws.processEvent(event));\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java\nindex 3640c3a33fd..5c11bd8a737 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java\n@@ -33,7 +33,6 @@\n import org.openhab.core.common.SafeCaller;\n import org.openhab.core.common.registry.RegistryChangeListener;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -178,11 +177,6 @@ public Set<String> getSubscribedEventTypes() {\n         return SUBSCRIBED_EVENT_TYPES;\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         if (event instanceof ItemStateEvent) {\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/firmware/FirmwareUpdateServiceImpl.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/firmware/FirmwareUpdateServiceImpl.java\nindex 02a399240cb..b48158591ee 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/firmware/FirmwareUpdateServiceImpl.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/firmware/FirmwareUpdateServiceImpl.java\n@@ -34,7 +34,6 @@\n import org.openhab.core.config.core.validation.ConfigDescriptionValidator;\n import org.openhab.core.config.core.validation.ConfigValidationException;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.i18n.LocaleProvider;\n@@ -264,11 +263,6 @@ public Set<String> getSubscribedEventTypes() {\n         return subscribedEventTypes;\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         if (event instanceof ThingStatusInfoChangedEvent) {\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/events/AbstractTypedEventSubscriber.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/AbstractTypedEventSubscriber.java\nindex d5ca58512f7..6953fd7910d 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/events/AbstractTypedEventSubscriber.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/AbstractTypedEventSubscriber.java\n@@ -15,7 +15,6 @@\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n \n /**\n  * The {@link AbstractTypedEventSubscriber} is an abstract implementation of the {@link EventSubscriber} interface which\n@@ -46,11 +45,6 @@ public Set<String> getSubscribedEventTypes() {\n         return subscribedEventTypes;\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void receive(Event event) {\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/events/EventSubscriber.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/EventSubscriber.java\nindex a8c0251ddff..f30e9ad7494 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/events/EventSubscriber.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/EventSubscriber.java\n@@ -45,8 +45,9 @@ public interface EventSubscriber {\n      *\n      * @return the event filter, or null\n      */\n-    @Nullable\n-    EventFilter getEventFilter();\n+    default @Nullable EventFilter getEventFilter() {\n+        return null;\n+    }\n \n     /**\n      * Callback method for receiving {@link Event}s from the openHAB event bus. This method is called for\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicEventFilter.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicEventFilter.java\nindex 5075e7ecca0..f8b2e2fe3fe 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicEventFilter.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicEventFilter.java\n@@ -12,6 +12,8 @@\n  */\n package org.openhab.core.events;\n \n+import java.util.regex.Pattern;\n+\n import org.eclipse.jdt.annotation.NonNullByDefault;\n \n /**\n@@ -23,7 +25,7 @@\n @NonNullByDefault\n public class TopicEventFilter implements EventFilter {\n \n-    private final String topicRegex;\n+    private final Pattern topicRegex;\n \n     /**\n      * Constructs a new topic event filter.\n@@ -32,11 +34,11 @@ public class TopicEventFilter implements EventFilter {\n      * @see <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html\">Java Regex</a>\n      */\n     public TopicEventFilter(String topicRegex) {\n-        this.topicRegex = topicRegex;\n+        this.topicRegex = Pattern.compile(topicRegex);\n     }\n \n     @Override\n     public boolean apply(Event event) {\n-        return event.getTopic().matches(topicRegex);\n+        return topicRegex.matcher(event.getTopic()).matches();\n     }\n }\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicPrefixEventFilter.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicPrefixEventFilter.java\nnew file mode 100644\nindex 00000000000..34e1eca6320\n--- /dev/null\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/events/TopicPrefixEventFilter.java\n@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.events;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link TopicPrefixEventFilter} is a default openHAB {@link EventFilter} implementation that ensures filtering\n+ * of events based on the prefix of an event topic.\n+ *\n+ * @author Cody Cutrer - Initial contribution\n+ */\n+@NonNullByDefault\n+public class TopicPrefixEventFilter implements EventFilter {\n+\n+    private final String topicPrefix;\n+\n+    /**\n+     * Constructs a new topic event filter.\n+     *\n+     * @param topicRegex the prefix event topics must start with\n+     */\n+    public TopicPrefixEventFilter(String topicPrefix) {\n+        this.topicPrefix = topicPrefix;\n+    }\n+\n+    @Override\n+    public boolean apply(Event event) {\n+        return event.getTopic().startsWith(topicPrefix);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ExpireManager.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ExpireManager.java\nindex 72a68615330..42652e77a9a 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ExpireManager.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ExpireManager.java\n@@ -29,7 +29,6 @@\n import org.openhab.core.common.ThreadPoolManager;\n import org.openhab.core.common.registry.RegistryChangeListener;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -227,11 +226,6 @@ public Set<String> getSubscribedEventTypes() {\n         return SUBSCRIBED_EVENT_TYPES;\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         if (!enabled) {\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/AbstractItemEventSubscriber.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/AbstractItemEventSubscriber.java\nindex 3598ca1cee7..4db09a0c508 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/AbstractItemEventSubscriber.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/AbstractItemEventSubscriber.java\n@@ -15,9 +15,7 @@\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n \n /**\n@@ -40,11 +38,6 @@ public Set<String> getSubscribedEventTypes() {\n         return subscribedEventTypes;\n     }\n \n-    @Override\n-    public @Nullable EventFilter getEventFilter() {\n-        return null;\n-    }\n-\n     @Override\n     public void receive(Event event) {\n         if (event instanceof ItemStateEvent) {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java\nindex 709d2c0708b..f3a21edd41b 100644\n--- a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java\n+++ b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java\n@@ -326,14 +326,14 @@ public void itemMessagesAreLogged() {\n \n         // added later\n         ItemAddedEvent addedEvent = ItemEventFactory.createAddedEvent(new SwitchItem(ITEM_NAME));\n-        assertTrue(handler.apply(addedEvent));\n+        assertTrue(handler.getEventFilter().apply(addedEvent));\n         handler.receive(addedEvent);\n         assertLogMessage(ItemStateConditionHandler.class, LogLevel.INFO,\n                 \"Item 'myItem' needed for rule 'foo' added. Condition 'conditionId' will now work.\");\n \n         // removed later\n         ItemRemovedEvent removedEvent = ItemEventFactory.createRemovedEvent(new SwitchItem(ITEM_NAME));\n-        assertTrue(handler.apply(removedEvent));\n+        assertTrue(handler.getEventFilter().apply(removedEvent));\n         handler.receive(removedEvent);\n         assertLogMessage(ItemStateConditionHandler.class, LogLevel.WARN,\n                 \"Item 'myItem' needed for rule 'foo' removed. Condition 'conditionId' will no longer work.\");\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\nindex 2523439e170..3efd75cb5ba 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\n@@ -44,7 +44,6 @@\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.config.core.ConfigDescriptionParameter;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -124,11 +123,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(RuleStatusInfoEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"RuleEvent: {} --> {}\", e.getTopic(), e.getPayload());\n@@ -313,11 +307,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"Event: {}\", e.getTopic());\n@@ -363,11 +352,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"Event: {}\", e.getTopic());\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\nindex 56c3ee4b9f6..7a54dee82df 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\n@@ -65,7 +65,6 @@\n import org.openhab.core.config.core.ConfigDescriptionParameterBuilder;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -197,11 +196,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Stream.of(RuleAddedEvent.TYPE, RuleRemovedEvent.TYPE, RuleUpdatedEvent.TYPE).collect(toSet());\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"RuleEvent: {}\", e.getTopic());\n@@ -298,11 +292,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(RuleStatusInfoEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"RuleEvent: {}\", e.getTopic());\n@@ -395,11 +384,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"Event: {}\", e.getTopic());\n@@ -460,11 +444,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"Event: {}\", e.getTopic());\n@@ -515,11 +494,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"Event: {}\", e.getTopic());\n@@ -596,11 +570,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"Event: {}\", e.getTopic());\n@@ -709,11 +678,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"Event: {}\", e.getTopic());\n@@ -768,11 +732,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"Event: {}\", e.getTopic());\n@@ -983,11 +942,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event e) {\n                 logger.info(\"Event: {}\", e.getTopic());\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\nindex 3bb36739490..48309b43668 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\n+++ b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\n@@ -25,7 +25,6 @@\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.openhab.core.automation.Rule;\n@@ -38,7 +37,6 @@\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -194,11 +192,6 @@ public void receive(final Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(eventType);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         ServiceReference<?> subscriberReference = registerService(eventSubscriber).getReference();\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\nindex d0aede698f1..21efcd7d27c 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\n+++ b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\n@@ -45,7 +45,6 @@\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -118,11 +117,6 @@ public void receive(final Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(eventType);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         ServiceReference<?> subscriberReference = registerService(eventSubscriber).getReference();\n\ndiff --git a/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java b/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java\nindex 9e13cc11e7e..a48df20bcda 100644\n--- a/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java\n+++ b/itests/org.openhab.core.automation.module.script.tests/src/main/java/org/openhab/core/automation/module/script/internal/defaultscope/ScriptRuleOSGiTest.java\n@@ -21,7 +21,6 @@\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.junit.jupiter.api.BeforeEach;\n import org.openhab.core.automation.Action;\n import org.openhab.core.automation.Condition;\n@@ -33,7 +32,6 @@\n import org.openhab.core.automation.Trigger;\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -93,11 +91,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n         registerService(eventSubscriber);\n     }\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\nindex 8875d304a88..7233225de7f 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\n+++ b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\n@@ -45,7 +45,6 @@\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -153,11 +152,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event event) {\n                 logger.info(\"Event: {}\", event.getTopic());\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java\nindex 15a63d282cd..4c05fa50658 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java\n+++ b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java\n@@ -26,7 +26,6 @@\n import java.util.Set;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.openhab.core.automation.Action;\n@@ -45,7 +44,6 @@\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemProvider;\n@@ -167,11 +165,6 @@ public void receive(Event event) {\n             public java.util.Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            };\n         };\n         registerService(itemEventHandler);\n \n\ndiff --git a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\nindex a7beacdb5fc..9b99e8ce818 100644\n--- a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\n+++ b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\n@@ -46,7 +46,6 @@\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -119,11 +118,6 @@ public Set<String> getSubscribedEventTypes() {\n                         RuleUpdatedEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event event) {\n                 logger.info(\"RuleEvent: {}\", event.getTopic());\n@@ -180,11 +174,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemCommandEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n         registerService(itemEventHandler);\n         eventPublisher.post(ItemEventFactory.createStateEvent(\"myMotionItem2\", OnOffType.ON));\n@@ -210,11 +199,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(RuleRemovedEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event event) {\n                 logger.info(\"RuleRemovedEvent: {}\", event.getTopic());\n\ndiff --git a/itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/internal/InboxOSGiTest.java b/itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/internal/InboxOSGiTest.java\nindex 51b405edef2..3a2f5c5b198 100644\n--- a/itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/internal/InboxOSGiTest.java\n+++ b/itests/org.openhab.core.config.discovery.tests/src/main/java/org/openhab/core/config/discovery/internal/InboxOSGiTest.java\n@@ -58,7 +58,6 @@\n import org.openhab.core.config.discovery.inbox.events.InboxUpdatedEvent;\n import org.openhab.core.config.discovery.test.DummyThingTypeProvider;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.test.AsyncResultWrapper;\n import org.openhab.core.test.java.JavaOSGiTest;\n@@ -229,11 +228,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(InboxRemovedEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         registerService(inboxEventSubscriber);\n@@ -755,11 +749,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(InboxAddedEvent.TYPE, InboxRemovedEvent.TYPE, InboxUpdatedEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         registerService(inboxEventSubscriber);\n@@ -800,11 +789,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(InboxAddedEvent.TYPE, InboxRemovedEvent.TYPE, InboxUpdatedEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         registerService(inboxEventSubscriber);\n@@ -848,11 +832,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(InboxAddedEvent.TYPE, InboxRemovedEvent.TYPE, InboxUpdatedEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         registerService(inboxEventSubscriber);\n@@ -890,11 +869,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(InboxAddedEvent.TYPE, InboxRemovedEvent.TYPE, InboxUpdatedEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         registerService(inboxEventSubscriber);\n\ndiff --git a/itests/org.openhab.core.model.item.tests/src/main/java/org/openhab/core/model/item/internal/GenericItemProviderTest.java b/itests/org.openhab.core.model.item.tests/src/main/java/org/openhab/core/model/item/internal/GenericItemProviderTest.java\nindex 87cbb028fe8..c9ff01f569d 100644\n--- a/itests/org.openhab.core.model.item.tests/src/main/java/org/openhab/core/model/item/internal/GenericItemProviderTest.java\n+++ b/itests/org.openhab.core.model.item.tests/src/main/java/org/openhab/core/model/item/internal/GenericItemProviderTest.java\n@@ -31,12 +31,10 @@\n import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.GenericItem;\n import org.openhab.core.items.GroupFunction;\n@@ -138,11 +136,6 @@ public void receive(Event event) {\n                 public Set<String> getSubscribedEventTypes() {\n                     return Set.of(ItemRemovedEvent.TYPE);\n                 }\n-\n-                @Override\n-                public @Nullable EventFilter getEventFilter() {\n-                    return null;\n-                }\n             };\n \n             modelRepository.addModelRepositoryChangeListener(modelListener);\n@@ -271,11 +264,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Stream.of(ItemAddedEvent.TYPE, ItemUpdatedEvent.TYPE, ItemRemovedEvent.TYPE).collect(toSet());\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         registerService(itemEventSubscriber);\n@@ -338,11 +326,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Stream.of(ItemAddedEvent.TYPE, ItemUpdatedEvent.TYPE, ItemRemovedEvent.TYPE).collect(toSet());\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         registerService(itemEventSubscriber);\n@@ -608,11 +591,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Stream.of(ItemRemovedEvent.TYPE).collect(toSet());\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         registerService(itemEventSubscriber);\n\ndiff --git a/itests/org.openhab.core.model.thing.tests/src/main/java/org/openhab/core/model/thing/test/hue/GenericThingProviderTest.java b/itests/org.openhab.core.model.thing.tests/src/main/java/org/openhab/core/model/thing/test/hue/GenericThingProviderTest.java\nindex f2ba646359a..6755e3f2926 100644\n--- a/itests/org.openhab.core.model.thing.tests/src/main/java/org/openhab/core/model/thing/test/hue/GenericThingProviderTest.java\n+++ b/itests/org.openhab.core.model.thing.tests/src/main/java/org/openhab/core/model/thing/test/hue/GenericThingProviderTest.java\n@@ -26,12 +26,10 @@\n import java.util.stream.Stream;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.library.CoreItemFactory;\n import org.openhab.core.model.core.ModelRepository;\n@@ -488,11 +486,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Stream.of(ThingUpdatedEvent.TYPE, ThingRemovedEvent.TYPE, ThingAddedEvent.TYPE).collect(toSet());\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event event) {\n                 AbstractThingRegistryEvent registryEvent = (AbstractThingRegistryEvent) event;\n\ndiff --git a/itests/org.openhab.core.tests/src/main/java/org/openhab/core/internal/items/ItemUpdaterOSGiTest.java b/itests/org.openhab.core.tests/src/main/java/org/openhab/core/internal/items/ItemUpdaterOSGiTest.java\nindex d38f86bbb13..376d2bda749 100644\n--- a/itests/org.openhab.core.tests/src/main/java/org/openhab/core/internal/items/ItemUpdaterOSGiTest.java\n+++ b/itests/org.openhab.core.tests/src/main/java/org/openhab/core/internal/items/ItemUpdaterOSGiTest.java\n@@ -18,11 +18,9 @@\n import java.util.concurrent.ConcurrentLinkedQueue;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n@@ -68,11 +66,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemStateChangedEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n         registerService(eventSubscriber);\n     }\n\ndiff --git a/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java b/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java\nindex 8b2eb4610c1..4aabb07a711 100644\n--- a/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java\n+++ b/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java\n@@ -30,7 +30,6 @@\n import javax.measure.quantity.Temperature;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Disabled;\n import org.junit.jupiter.api.Test;\n@@ -40,7 +39,6 @@\n import org.mockito.junit.jupiter.MockitoSettings;\n import org.mockito.quality.Strictness;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.i18n.UnitProvider;\n@@ -111,11 +109,6 @@ public Set<String> getSubscribedEventTypes() {\n                 hs.add(ItemUpdatedEvent.TYPE);\n                 return hs;\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         });\n \n         when(unitProviderMock.getUnit(Temperature.class)).thenReturn(Units.CELSIUS);\n\ndiff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/binding/BindingBaseClassesOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/binding/BindingBaseClassesOSGiTest.java\nindex ff3c81e177c..46dae38aa70 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/binding/BindingBaseClassesOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/binding/BindingBaseClassesOSGiTest.java\n@@ -58,6 +58,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.events.TopicEventFilter;\n import org.openhab.core.i18n.LocaleProvider;\n import org.openhab.core.i18n.TranslationProvider;\n import org.openhab.core.library.CoreItemFactory;\n@@ -277,13 +278,8 @@ public Set<String> getSubscribedEventTypes() {\n \n         @Override\n         public @Nullable EventFilter getEventFilter() {\n-            return new EventFilter() {\n-                @Override\n-                public boolean apply(Event event) {\n-                    return event.getTopic().equals(\n-                            \"openhab/things/{thingUID}/config/status\".replace(\"{thingUID}\", thingUID.getAsString()));\n-                };\n-            };\n+            return new TopicEventFilter(\n+                    \"openhab/things/{thingUID}/config/status\".replace(\"{thingUID}\", thingUID.getAsString()));\n         }\n \n         @Override\n\ndiff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/events/ThingEventOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/events/ThingEventOSGiTest.java\nindex ba1ccf58d5a..98e49672f64 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/events/ThingEventOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/events/ThingEventOSGiTest.java\n@@ -23,7 +23,6 @@\n import org.junit.jupiter.api.Test;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.openhab.core.thing.Thing;\n@@ -50,11 +49,6 @@ public Set<String> getSubscribedEventTypes() {\n             return Set.of(ThingAddedEvent.TYPE, ThingUpdatedEvent.TYPE, ThingRemovedEvent.TYPE);\n         }\n \n-        @Override\n-        public @Nullable EventFilter getEventFilter() {\n-            return null;\n-        }\n-\n         @Override\n         public void receive(Event event) {\n             lastReceivedEvent = event;\n\ndiff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ChannelLinkNotifierOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ChannelLinkNotifierOSGiTest.java\nindex 506629ac105..b3b5648d4b9 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ChannelLinkNotifierOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ChannelLinkNotifierOSGiTest.java\n@@ -40,7 +40,6 @@\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.openhab.core.common.registry.RegistryChangeListener;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ManagedItemProvider;\n@@ -227,11 +226,6 @@ public void receive(Event event) {\n             public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ItemChannelLinkRemovedEvent.TYPE, ItemRemovedEvent.TYPE, ThingRemovedEvent.TYPE);\n             }\n-\n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n         };\n \n         registerService(itemEventSubscriber);\n\ndiff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingManagerOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingManagerOSGiTest.java\nindex 62ebbdfccce..46ac7b010af 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingManagerOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingManagerOSGiTest.java\n@@ -1227,11 +1227,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ThingStatusInfoEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event event) {\n                 receivedEvents.add(event);\n@@ -1319,11 +1314,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ThingStatusInfoChangedEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event event) {\n                 infoChangedEvents.add((ThingStatusInfoChangedEvent) event);\n@@ -1402,11 +1392,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ThingStatusInfoEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event event) {\n                 infoEvents.add((ThingStatusInfoEvent) event);\n@@ -1422,11 +1407,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ThingStatusInfoChangedEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event event) {\n                 infoChangedEvents.add((ThingStatusInfoChangedEvent) event);\n\ndiff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingRegistryOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingRegistryOSGiTest.java\nindex ada2d3d29df..860d8fc6353 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingRegistryOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingRegistryOSGiTest.java\n@@ -30,7 +30,6 @@\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.openhab.core.thing.ChannelUID;\n@@ -95,11 +94,6 @@ public Set<String> getSubscribedEventTypes() {\n                 return Set.of(ThingAddedEvent.TYPE, ThingRemovedEvent.TYPE, ThingUpdatedEvent.TYPE);\n             }\n \n-            @Override\n-            public @Nullable EventFilter getEventFilter() {\n-                return null;\n-            }\n-\n             @Override\n             public void receive(Event event) {\n                 receivedEvent = event;\n\ndiff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/link/LinkEventOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/link/LinkEventOSGiTest.java\nindex 8f217a8eaef..0b3b7faecca 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/link/LinkEventOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/link/LinkEventOSGiTest.java\n@@ -24,7 +24,6 @@\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.openhab.core.events.Event;\n-import org.openhab.core.events.EventFilter;\n import org.openhab.core.events.EventSubscriber;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.openhab.core.thing.ChannelUID;\n@@ -53,11 +52,6 @@ public Set<String> getSubscribedEventTypes() {\n                     .collect(Collectors.toSet());\n         }\n \n-        @Override\n-        public @Nullable EventFilter getEventFilter() {\n-            return null;\n-        }\n-\n         @Override\n         public void receive(Event event) {\n             lastReceivedEvent = event;\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3287",
    "pr_id": 3287,
    "issue_id": 2898,
    "repo": "openhab/openhab-core",
    "problem_statement": "[DateTimeType] ZonedDateTime, Instant or neither?\nI'm creating this issue in order to discuss how [DateTimeType](https://www.openhab.org/javadoc/latest/org/openhab/core/library/types/datetimetype) should work. It seems like currently it internally stores a [ZonedDateTime](https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html) stripped of [ZoneId](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html), but preserving a [ZoneOffset](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html):\r\n\r\nhttps://github.com/openhab/openhab-core/blob/cabb3f73150d13f44d647f46af8362e396684b92/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/DateTimeType.java#L75-L77\r\n\r\nThis means that information about **Daylight Savings Time** is lost. Expressed as DSL rule:\r\n\r\n```\r\nval zdt1 = now\r\nval zdt2 = new DateTimeType().getZonedDateTime()\r\nlogInfo(\"zdt1\", \"toString: \" + zdt1.toString() + \", zone: \" + zdt1.getZone() + \", dst: \" + zdt1.getZone().getRules().isDaylightSavings(zdt1.toInstant()))\r\nlogInfo(\"zdt2\", \"toString: \" + zdt2.toString() + \", zone: \" + zdt2.getZone() + \", dst: \" + zdt2.getZone().getRules().isDaylightSavings(zdt2.toInstant()))\r\n```\r\n\r\nResult:\r\n```\r\n2022-04-06 22:11:29.194 [INFO ] [org.openhab.core.model.script.zdt1  ] - toString: 2022-04-06T22:11:29.183384+02:00[Europe/Berlin], zone: Europe/Berlin, dst: true\r\n2022-04-06 22:11:29.203 [INFO ] [org.openhab.core.model.script.zdt2  ] - toString: 2022-04-06T22:11:29.183905+02:00, zone: +02:00, dst: false\r\n```\r\n(side note: I have [Europe/Copenhagen] configured in openHAB, so DSL rule engine doesn't seem to use TimeZoneProvider for `now`)\r\n\r\nThis has been a problem for at least openhab/openhab-addons#12546.\r\n\r\nI'm wondering if `ZoneId` being stripped is a feature or a bug? It seems intended as `withFixedOffsetZone()` is explicitly called, I'm just not sure why.\r\n\r\n### Instant?\r\nSecond, a bigger topic: I'm wondering if it even makes sense to store a `ZonedDateTime` for `DateTimeType`. It's documented here:\r\nhttps://www.openhab.org/docs/concepts/items.html#datetimetype\r\n\r\nWhen constructing a `DateTimeType` for a channel, we need an unambiguous timestamp which could be expressed as an [Instant](https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html). Any logic that would need time-zone information could obtain this from another source, namely [TimeZoneProvider](https://www.openhab.org/javadoc/latest/org/openhab/core/i18n/timezoneprovider). This of course must be possible anywhere needed, including within rules running in a scripting engine. The advantage would be that the logic is applied for the **currently configured** time-zone.\r\n\r\nCurrently when `DateTimeType` is displayed in any UI without any custom formatting for the channel or item, the raw `ZonedDateTime` string is displayed, for example: \"2022-04-06T22:11:29.183905+02:00\". In my opinion, this should be converted to local time. It is also worth noting that this string currently depends on the **time-zone from the system or openHAB at the moment when the `DateTimeType` was created**, not according to the currently configured time-zone. When using a pattern like \"%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS\" to convert to local time, it doesn't really matter which time-zone the system was in. All we need is an `Instant` and current `ZoneId` so we can display it in the local time-zone currently configured. And in fact when using mentioned pattern, the two DateTimes 2022-02-28T21:24:52.000+0000 and 2022-02-28T22:24:52.000+0100 are both displayed as 2022-02-28 22:24:52 for my time-zone.",
    "issue_word_count": 570,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/DateTimeType.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/DateTimeTypeTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/DateTimeTypeTest.java"
    ],
    "base_commit": "98b4902c4ab9d764f2839a330d9a3901d38e05d6",
    "head_commit": "215c049977dfd2418bcea629f2a7d49c027b9e0c",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3287",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3287",
    "dockerfile": "",
    "pr_merged_at": "2022-12-30T19:40:58.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/DateTimeType.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/DateTimeType.java\nindex 0a6f85585e6..cb2cbe348a6 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/DateTimeType.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/DateTimeType.java\n@@ -119,6 +119,15 @@ public ZonedDateTime getZonedDateTime() {\n         return zonedDateTime;\n     }\n \n+    /**\n+     * Get curent object represented as an {@link Instant}\n+     *\n+     * @return an {@link Instant} representation of the current object\n+     */\n+    public Instant getInstant() {\n+        return zonedDateTime.toInstant();\n+    }\n+\n     public static DateTimeType valueOf(String value) {\n         return new DateTimeType(value);\n     }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/DateTimeTypeTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/DateTimeTypeTest.java\nindex ceb2e26057f..342bfb1a0d1 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/DateTimeTypeTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/DateTimeTypeTest.java\n@@ -18,6 +18,7 @@\n import static org.junit.jupiter.api.Assertions.*;\n \n import java.time.DateTimeException;\n+import java.time.Instant;\n import java.time.LocalDateTime;\n import java.time.ZoneId;\n import java.time.ZonedDateTime;\n@@ -242,11 +243,12 @@ public void equalityTest() {\n \n         assertTrue(dt1.toString().equals(dt2.toFullString()));\n         assertTrue(dt1.getZonedDateTime().equals(dt2.getZonedDateTime()));\n+        assertTrue(dt1.getInstant().equals(dt2.getInstant()));\n         assertTrue(dt1.equals(dt2));\n     }\n \n     @Test\n-    public void parsingTest() {\n+    public void zonedParsingTest() {\n         DateTimeType dt1 = new DateTimeType(\"2019-06-12T17:30:00Z\");\n         DateTimeType dt2 = new DateTimeType(\"2019-06-12T17:30:00+0000\");\n         DateTimeType dt3 = new DateTimeType(\"2019-06-12T19:30:00+0200\");\n@@ -261,6 +263,20 @@ public void parsingTest() {\n         assertThat(zdt2, is(zdt3.withZoneSameInstant(zdt2.getZone())));\n     }\n \n+    @Test\n+    public void instantParsingTest() {\n+        DateTimeType dt1 = new DateTimeType(\"2019-06-12T17:30:00Z\");\n+        DateTimeType dt2 = new DateTimeType(\"2019-06-12T17:30:00+0000\");\n+        DateTimeType dt3 = new DateTimeType(\"2019-06-12T19:30:00+0200\");\n+        assertThat(dt1, is(dt2));\n+\n+        Instant i1 = dt1.getInstant();\n+        Instant i2 = dt2.getInstant();\n+        Instant i3 = dt3.getInstant();\n+        assertThat(i1, is(i2));\n+        assertThat(i1, is(i3));\n+    }\n+\n     @Test\n     public void epochTest() {\n         DateTimeType zdtEpoch = new DateTimeType(\"1970-01-01T00:00:00+0000\");\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3278",
    "pr_id": 3278,
    "issue_id": 3199,
    "repo": "openhab/openhab-core",
    "problem_statement": "JSR223 scripts and start levels\nWe're in the process of implementing the system start level trigger in the JRuby helper library, and a few things have come up that I noticed.\r\n\r\nI was surprised that if you create a rule with the `core.SystemStartlevelTrigger` trigger, it will _not_ fire if the system has already passed that start level when the rule is created. Whenever using a ReadyService.ReadyTracker within core or an add-on, the tracker is notified of markers matching its filter as soon as it is registered. I think this isn't a problem for DSL and UI rules, because the rule engine won't start until all of those rules are loaded. At which point, the rule engine will execute those rules which have a start level that's already satisfied.\r\n\r\nHowever, when creating rules using scripts, the ScriptFileWatcher is completely asynchronous from the start level service. Scripts have an associated start level (default 50 - rule engine), which they're not allowed to run before. But loading of all scripts is ordered, and the rest of openHAB is allowed to continue loading in the background. So it's completely possible to have many scripts, set to run at default level 50, but say one at the end registers a SystemStartlevelTrigger at level 100, but if openHAB reaches level 100 _before_ that script gets around to loading, it will never fire.\r\n\r\nI see a couple possible solutions:\r\n * `SystemTriggerHandler` checks the start level when it's activated, and triggers immediately if the level has already been reached. This does mean that if a rules file is reloaded/UI rule is re-saved, it will immediately trigger. I'm not sure if this is a bad thing, but is a change in behavior.\r\n * StartLevelService's default config is changed requiring a ready marker from ScriptFileWatcher before progressing to start level 40 (or possibly each individual level?). This is touchy for a few reasons though. ScriptFileWatcher can hold scripts at arbitrary start levels, so you have to be careful that only scripts at lesser start levels are required to load before marking it as ready. Secondly, some languages (JS, and shortly Ruby) use their own ScriptFileWatcher, and thus would have their own ReadyMarkers. Perhaps we could dynamically change the config for StartLevelService, but that seems perilous. I relative recently fixed a bug that was deadlocking StartLevelService if its config was changed, so it's clearly not a well-trodden path. While more difficult to implement, this could have additional benefits - like if scripts are providing items and thing, and then other components (like HomeKit integration) are waiting for start level model, they could be sure that the items they depend on are available before they start.\r\n\r\nTangentially... what are thoughts on expanding the `core.SystemStartlevelTrigger` trigger - _not_ require a configuration for a particular start level, and then to trigger every time a new start level is reached? The triggering start level is already included in the outputs from the trigger, so the action can do further processing. Right now the way to do it is just have multiple triggers with varying start level configurations, so a reasonable work already exists. Unless of course solution 1 above is taken, and suddenly the rule is triggered 5 times, once for each trigger!",
    "issue_word_count": 550,
    "test_files_count": 14,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java",
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java",
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java",
      "bundles/org.openhab.core.test/src/main/java/org/openhab/core/test/java/JavaOSGiTest.java",
      "itests/org.openhab.core.automation.integration.tests/itest.bndrun",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java",
      "itests/org.openhab.core.automation.module.core.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/DayOfWeekConditionHandlerTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.tests/itest.bndrun",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java",
      "bundles/org.openhab.core.test/src/main/java/org/openhab/core/test/java/JavaOSGiTest.java",
      "itests/org.openhab.core.automation.integration.tests/itest.bndrun",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java",
      "itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java",
      "itests/org.openhab.core.automation.module.core.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java",
      "itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/itest.bndrun",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/DayOfWeekConditionHandlerTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java",
      "itests/org.openhab.core.automation.tests/itest.bndrun",
      "itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java"
    ],
    "base_commit": "796f66a2fa684e8a776ab1c50aac2346557f6329",
    "head_commit": "70b2c9cc6640a379cfa6fb117260ee753968e9ed",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3278",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3278",
    "dockerfile": "",
    "pr_merged_at": "2023-05-28T08:14:03.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java\nindex 9862255a7c8..f69cb05cba7 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/factory/CoreModuleHandlerFactory.java\n@@ -42,6 +42,7 @@\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.service.StartLevelService;\n import org.osgi.framework.BundleContext;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n@@ -78,14 +79,17 @@ public class CoreModuleHandlerFactory extends BaseModuleHandlerFactory implement\n     private final TimeZoneProvider timeZoneProvider;\n     private final EventPublisher eventPublisher;\n     private final BundleContext bundleContext;\n+    private final StartLevelService startLevelService;\n \n     @Activate\n     public CoreModuleHandlerFactory(BundleContext bundleContext, final @Reference EventPublisher eventPublisher,\n-            final @Reference ItemRegistry itemRegistry, final @Reference TimeZoneProvider timeZoneProvider) {\n+            final @Reference ItemRegistry itemRegistry, final @Reference TimeZoneProvider timeZoneProvider,\n+            final @Reference StartLevelService startLevelService) {\n         this.bundleContext = bundleContext;\n         this.eventPublisher = eventPublisher;\n         this.itemRegistry = itemRegistry;\n         this.timeZoneProvider = timeZoneProvider;\n+        this.startLevelService = startLevelService;\n     }\n \n     @Override\n@@ -112,7 +116,7 @@ public Collection<String> getTypes() {\n             } else if (ItemCommandTriggerHandler.MODULE_TYPE_ID.equals(moduleTypeUID)) {\n                 return new ItemCommandTriggerHandler(trigger, ruleUID, bundleContext, itemRegistry);\n             } else if (SystemTriggerHandler.STARTLEVEL_MODULE_TYPE_ID.equals(moduleTypeUID)) {\n-                return new SystemTriggerHandler(trigger, bundleContext);\n+                return new SystemTriggerHandler(trigger, bundleContext, startLevelService);\n             } else if (ThingStatusTriggerHandler.CHANGE_MODULE_TYPE_ID.equals(moduleTypeUID)\n                     || ThingStatusTriggerHandler.UPDATE_MODULE_TYPE_ID.equals(moduleTypeUID)) {\n                 return new ThingStatusTriggerHandler(trigger, bundleContext);\n\ndiff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java\nindex acf3b1f9384..9310be832a6 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandler.java\n@@ -47,14 +47,15 @@ public class SystemTriggerHandler extends BaseTriggerModuleHandler implements Ev\n \n     private final Integer startlevel;\n     private final Set<String> types;\n-    private final BundleContext bundleContext;\n+    private final StartLevelService startLevelService;\n \n     private boolean triggered = false;\n \n-    private ServiceRegistration<?> eventSubscriberRegistration;\n+    private final ServiceRegistration<?> eventSubscriberRegistration;\n \n-    public SystemTriggerHandler(Trigger module, BundleContext bundleContext) {\n+    public SystemTriggerHandler(Trigger module, BundleContext bundleContext, StartLevelService startLevelService) {\n         super(module);\n+        this.startLevelService = startLevelService;\n         this.startlevel = ((BigDecimal) module.getConfiguration().get(CFG_STARTLEVEL)).intValue();\n         if (STARTLEVEL_MODULE_TYPE_ID.equals(module.getTypeUID())) {\n             this.types = Set.of(StartlevelEvent.TYPE);\n@@ -62,8 +63,18 @@ public SystemTriggerHandler(Trigger module, BundleContext bundleContext) {\n             logger.warn(\"Module type '{}' is not (yet) handled by this class.\", module.getTypeUID());\n             throw new IllegalArgumentException(module.getTypeUID() + \" is no valid module type.\");\n         }\n-        this.bundleContext = bundleContext;\n-        eventSubscriberRegistration = this.bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n+        eventSubscriberRegistration = bundleContext.registerService(EventSubscriber.class.getName(), this, null);\n+    }\n+\n+    @Override\n+    public void setCallback(ModuleHandlerCallback callback) {\n+        super.setCallback(callback);\n+\n+        // trigger immediately when start level is already reached\n+        int currentStartLevel = startLevelService.getStartLevel();\n+        if (currentStartLevel > StartLevelService.STARTLEVEL_RULEENGINE && currentStartLevel >= startlevel) {\n+            trigger();\n+        }\n     }\n \n     @Override\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java\nnew file mode 100644\nindex 00000000000..4d25df52dec\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/SystemTriggerHandlerTest.java\n@@ -0,0 +1,165 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.internal.module.handler;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.openhab.core.automation.Trigger;\n+import org.openhab.core.automation.handler.TriggerHandlerCallback;\n+import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.events.Event;\n+import org.openhab.core.events.system.SystemEventFactory;\n+import org.openhab.core.service.StartLevelService;\n+import org.osgi.framework.BundleContext;\n+\n+/**\n+ * The {@link SystemTriggerHandlerTest} contains tests for the {@link SystemTriggerHandler}\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class SystemTriggerHandlerTest {\n+    private static final int CFG_STARTLEVEL = 80;\n+\n+    private @Mock @NonNullByDefault({}) BundleContext bundleContextMock;\n+    private @Mock @NonNullByDefault({}) StartLevelService startLevelServiceMock;\n+    private @Mock @NonNullByDefault({}) TriggerHandlerCallback callbackMock;\n+\n+    private @Mock @NonNullByDefault({}) Trigger triggerMock;\n+\n+    @BeforeEach\n+    public void setup() {\n+        when(triggerMock.getConfiguration())\n+                .thenReturn(new Configuration(Map.of(SystemTriggerHandler.CFG_STARTLEVEL, CFG_STARTLEVEL)));\n+        when(triggerMock.getTypeUID()).thenReturn(SystemTriggerHandler.STARTLEVEL_MODULE_TYPE_ID);\n+    }\n+\n+    @Test\n+    public void testDoesNotTriggerIfStartLevelTooLow() {\n+        when(startLevelServiceMock.getStartLevel()).thenReturn(0);\n+\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n+                startLevelServiceMock);\n+        triggerHandler.setCallback(callbackMock);\n+\n+        verifyNoInteractions(callbackMock);\n+    }\n+\n+    @Test\n+    public void testDoesTriggerImmediatelyIfStartLevelHigherOnInit() {\n+        when(startLevelServiceMock.getStartLevel()).thenReturn(100);\n+\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n+                startLevelServiceMock);\n+        triggerHandler.setCallback(callbackMock);\n+\n+        ArgumentCaptor<Map> captor = ArgumentCaptor.forClass(Map.class);\n+        verify(callbackMock).triggered(eq(triggerMock), captor.capture());\n+\n+        Map<String, Object> configuration = (Map<String, Object>) captor.getValue();\n+        assertThat(configuration.get(SystemTriggerHandler.OUT_STARTLEVEL), is(CFG_STARTLEVEL));\n+    }\n+\n+    @Test\n+    public void testDoesNotTriggerIfStartLevelEventLower() {\n+        when(startLevelServiceMock.getStartLevel()).thenReturn(0);\n+\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n+                startLevelServiceMock);\n+        triggerHandler.setCallback(callbackMock);\n+\n+        Event event = SystemEventFactory.createStartlevelEvent(70);\n+        triggerHandler.receive(event);\n+\n+        verifyNoInteractions(callbackMock);\n+    }\n+\n+    @Test\n+    public void testDoesTriggerIfStartLevelEventHigher() {\n+        when(startLevelServiceMock.getStartLevel()).thenReturn(0);\n+\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n+                startLevelServiceMock);\n+        triggerHandler.setCallback(callbackMock);\n+\n+        Event event = SystemEventFactory.createStartlevelEvent(100);\n+        triggerHandler.receive(event);\n+\n+        ArgumentCaptor<Map> captor = ArgumentCaptor.forClass(Map.class);\n+        verify(callbackMock).triggered(eq(triggerMock), captor.capture());\n+\n+        Map<String, Object> configuration = (Map<String, Object>) captor.getValue();\n+        assertThat(configuration.get(SystemTriggerHandler.OUT_STARTLEVEL), is(CFG_STARTLEVEL));\n+    }\n+\n+    @Test\n+    public void testDoesNotTriggerAfterInitialTrigger() {\n+        when(startLevelServiceMock.getStartLevel()).thenReturn(100);\n+\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n+                startLevelServiceMock);\n+        triggerHandler.setCallback(callbackMock);\n+\n+        ArgumentCaptor<Map> captor = ArgumentCaptor.forClass(Map.class);\n+        verify(callbackMock).triggered(eq(triggerMock), captor.capture());\n+\n+        Map<String, Object> configuration = (Map<String, Object>) captor.getValue();\n+        assertThat(configuration.get(SystemTriggerHandler.OUT_STARTLEVEL), is(CFG_STARTLEVEL));\n+\n+        Event event = SystemEventFactory.createStartlevelEvent(100);\n+        triggerHandler.receive(event);\n+\n+        verifyNoMoreInteractions(callbackMock);\n+    }\n+\n+    @Test\n+    public void testDoesNotTriggerAfterEventTrigger() {\n+        when(startLevelServiceMock.getStartLevel()).thenReturn(0);\n+\n+        SystemTriggerHandler triggerHandler = new SystemTriggerHandler(triggerMock, bundleContextMock,\n+                startLevelServiceMock);\n+        triggerHandler.setCallback(callbackMock);\n+\n+        Event event = SystemEventFactory.createStartlevelEvent(100);\n+        triggerHandler.receive(event);\n+\n+        ArgumentCaptor<Map> captor = ArgumentCaptor.forClass(Map.class);\n+        verify(callbackMock).triggered(eq(triggerMock), captor.capture());\n+\n+        Map<String, Object> configuration = (Map<String, Object>) captor.getValue();\n+        assertThat(configuration.get(SystemTriggerHandler.OUT_STARTLEVEL), is(CFG_STARTLEVEL));\n+\n+        triggerHandler.receive(event);\n+\n+        verifyNoMoreInteractions(callbackMock);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.test/src/main/java/org/openhab/core/test/java/JavaOSGiTest.java b/bundles/org.openhab.core.test/src/main/java/org/openhab/core/test/java/JavaOSGiTest.java\nindex 27f55a748a9..4f944c548da 100644\n--- a/bundles/org.openhab.core.test/src/main/java/org/openhab/core/test/java/JavaOSGiTest.java\n+++ b/bundles/org.openhab.core.test/src/main/java/org/openhab/core/test/java/JavaOSGiTest.java\n@@ -344,6 +344,15 @@ protected String getInterfaceName(final Object service) {\n         }\n     }\n \n+    /**\n+     * Get the OSGi {@link BundleContext}\n+     *\n+     * @return the bundle context\n+     */\n+    protected BundleContext getBundleContext() {\n+        return bundleContext;\n+    }\n+\n     /**\n      * Registers a volatile storage service.\n      */\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/itest.bndrun b/itests/org.openhab.core.automation.integration.tests/itest.bndrun\nindex 41f22a29f5e..21aafaab4ef 100644\n--- a/itests/org.openhab.core.automation.integration.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.integration.tests/itest.bndrun\n@@ -61,4 +61,9 @@ Fragment-Host: org.openhab.core.automation\n \tjunit-jupiter-engine;version='[5.9.2,5.9.3)',\\\n \tjunit-platform-commons;version='[1.9.2,1.9.3)',\\\n \tjunit-platform-engine;version='[1.9.2,1.9.3)',\\\n-\tjunit-platform-launcher;version='[1.9.2,1.9.3)'\n+\tjunit-platform-launcher;version='[1.9.2,1.9.3)',\\\n+\tnet.bytebuddy.byte-buddy;version='[1.12.19,1.12.20)',\\\n+\tnet.bytebuddy.byte-buddy-agent;version='[1.12.19,1.12.20)',\\\n+\torg.mockito.mockito-core;version='[4.11.0,4.11.1)',\\\n+\torg.objenesis;version='[3.3.0,3.3.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\nindex 33362852a65..14fcf8d0c68 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationJsonTest.java\n@@ -15,6 +15,7 @@\n import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.mock;\n \n import java.util.Collection;\n import java.util.Optional;\n@@ -36,6 +37,7 @@\n import org.openhab.core.automation.Trigger;\n import org.openhab.core.automation.events.RuleStatusInfoEvent;\n import org.openhab.core.automation.internal.RuleEngineImpl;\n+import org.openhab.core.automation.internal.module.factory.CoreModuleHandlerFactory;\n import org.openhab.core.automation.type.ActionType;\n import org.openhab.core.automation.type.Input;\n import org.openhab.core.automation.type.ModuleTypeRegistry;\n@@ -46,6 +48,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemProvider;\n@@ -55,6 +58,7 @@\n import org.openhab.core.library.items.SwitchItem;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.service.ReadyMarker;\n+import org.openhab.core.service.StartLevelService;\n import org.openhab.core.storage.StorageService;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.openhab.core.test.storage.VolatileStorageService;\n@@ -90,7 +94,12 @@ public class AutomationIntegrationJsonTest extends JavaOSGiTest {\n     public void before() {\n         logger.info(\"@Before.begin\");\n \n-        getService(ItemRegistry.class);\n+        eventPublisher = getService(EventPublisher.class);\n+        itemRegistry = getService(ItemRegistry.class);\n+        CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n+                eventPublisher, itemRegistry, mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+        mock(CoreModuleHandlerFactory.class);\n+        registerService(coreModuleHandlerFactory);\n \n         ItemProvider itemProvider = new ItemProvider() {\n \n@@ -136,8 +145,6 @@ public void receive(Event e) {\n \n         StorageService storageService = getService(StorageService.class);\n         managedRuleProvider = getService(ManagedRuleProvider.class);\n-        eventPublisher = getService(EventPublisher.class);\n-        itemRegistry = getService(ItemRegistry.class);\n         ruleRegistry = getService(RuleRegistry.class);\n         ruleManager = getService(RuleManager.class);\n         moduleTypeRegistry = getService(ModuleTypeRegistry.class);\n\ndiff --git a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\nindex d8bc15abec4..1632e368bb0 100644\n--- a/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\n+++ b/itests/org.openhab.core.automation.integration.tests/src/main/java/org/openhab/core/automation/integration/test/AutomationIntegrationTest.java\n@@ -16,6 +16,7 @@\n import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.mock;\n \n import java.util.Collection;\n import java.util.Collections;\n@@ -24,6 +25,7 @@\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Random;\n import java.util.Set;\n import java.util.concurrent.CopyOnWriteArrayList;\n@@ -49,6 +51,7 @@\n import org.openhab.core.automation.events.RuleStatusInfoEvent;\n import org.openhab.core.automation.events.RuleUpdatedEvent;\n import org.openhab.core.automation.internal.RuleEngineImpl;\n+import org.openhab.core.automation.internal.module.factory.CoreModuleHandlerFactory;\n import org.openhab.core.automation.template.RuleTemplate;\n import org.openhab.core.automation.template.RuleTemplateProvider;\n import org.openhab.core.automation.template.Template;\n@@ -67,6 +70,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemProvider;\n@@ -76,6 +80,7 @@\n import org.openhab.core.library.items.SwitchItem;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.service.ReadyMarker;\n+import org.openhab.core.service.StartLevelService;\n import org.openhab.core.storage.StorageService;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.slf4j.Logger;\n@@ -106,7 +111,13 @@ public class AutomationIntegrationTest extends JavaOSGiTest {\n     public void before() {\n         logger.info(\"@Before.begin\");\n \n-        getService(ItemRegistry.class);\n+        eventPublisher = getService(EventPublisher.class);\n+        itemRegistry = getService(ItemRegistry.class);\n+        CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n+                Objects.requireNonNull(eventPublisher), Objects.requireNonNull(itemRegistry),\n+                mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+        mock(CoreModuleHandlerFactory.class);\n+        registerService(coreModuleHandlerFactory);\n \n         ItemProvider itemProvider = new ItemProvider() {\n             @Override\n@@ -148,8 +159,6 @@ public void removeProviderChangeListener(ProviderChangeListener<Item> listener)\n         registerVolatileStorageService();\n \n         StorageService storageService = getService(StorageService.class);\n-        eventPublisher = getService(EventPublisher.class);\n-        itemRegistry = getService(ItemRegistry.class);\n         ruleRegistry = getService(RuleRegistry.class);\n         ruleEngine = getService(RuleManager.class);\n         managedRuleProvider = getService(ManagedRuleProvider.class);\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/itest.bndrun b/itests/org.openhab.core.automation.module.core.tests/itest.bndrun\nindex f86cb861a69..de798e868f5 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.module.core.tests/itest.bndrun\n@@ -61,4 +61,9 @@ Fragment-Host: org.openhab.core.automation\n \tjunit-jupiter-engine;version='[5.9.2,5.9.3)',\\\n \tjunit-platform-commons;version='[1.9.2,1.9.3)',\\\n \tjunit-platform-engine;version='[1.9.2,1.9.3)',\\\n-\tjunit-platform-launcher;version='[1.9.2,1.9.3)'\n+\tjunit-platform-launcher;version='[1.9.2,1.9.3)',\\\n+\tnet.bytebuddy.byte-buddy;version='[1.12.19,1.12.20)',\\\n+\tnet.bytebuddy.byte-buddy-agent;version='[1.12.19,1.12.20)',\\\n+\torg.mockito.mockito-core;version='[4.11.0,4.11.1)',\\\n+\torg.objenesis;version='[3.3.0,3.3.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\nindex e3c68f6d6c9..b6e0dac1487 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\n+++ b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RunRuleModuleTest.java\n@@ -14,6 +14,7 @@\n \n import static java.util.Map.entry;\n import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -32,6 +33,7 @@\n import org.openhab.core.automation.RuleRegistry;\n import org.openhab.core.automation.RuleStatus;\n import org.openhab.core.automation.internal.RuleEngineImpl;\n+import org.openhab.core.automation.internal.module.factory.CoreModuleHandlerFactory;\n import org.openhab.core.automation.util.ModuleBuilder;\n import org.openhab.core.automation.util.RuleBuilder;\n import org.openhab.core.common.registry.ProviderChangeListener;\n@@ -39,6 +41,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemProvider;\n@@ -48,6 +51,7 @@\n import org.openhab.core.library.items.SwitchItem;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.service.ReadyMarker;\n+import org.openhab.core.service.StartLevelService;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.openhab.core.test.storage.VolatileStorageService;\n import org.osgi.framework.ServiceReference;\n@@ -68,6 +72,13 @@ public class RunRuleModuleTest extends JavaOSGiTest {\n \n     @BeforeEach\n     public void before() {\n+        EventPublisher eventPublisher = getService(EventPublisher.class);\n+        ItemRegistry itemRegistry = getService(ItemRegistry.class);\n+        CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n+                eventPublisher, itemRegistry, mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+        mock(CoreModuleHandlerFactory.class);\n+        registerService(coreModuleHandlerFactory);\n+\n         registerService(new ItemProvider() {\n             @Override\n             public void addProviderChangeListener(final ProviderChangeListener<Item> listener) {\n\ndiff --git a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\nindex c7fddef1b7f..22d0e6a8f39 100644\n--- a/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\n+++ b/itests/org.openhab.core.automation.module.core.tests/src/main/java/org/openhab/core/automation/internal/module/RuntimeRuleTest.java\n@@ -14,6 +14,7 @@\n \n import static java.util.Map.entry;\n import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n \n import java.util.Collection;\n import java.util.Collections;\n@@ -38,6 +39,7 @@\n import org.openhab.core.automation.RuleStatusDetail;\n import org.openhab.core.automation.events.RuleStatusInfoEvent;\n import org.openhab.core.automation.internal.RuleEngineImpl;\n+import org.openhab.core.automation.internal.module.factory.CoreModuleHandlerFactory;\n import org.openhab.core.automation.internal.module.handler.CompareConditionHandler;\n import org.openhab.core.automation.type.ModuleTypeRegistry;\n import org.openhab.core.automation.util.ModuleBuilder;\n@@ -47,6 +49,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemProvider;\n@@ -56,6 +59,7 @@\n import org.openhab.core.library.items.SwitchItem;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.service.ReadyMarker;\n+import org.openhab.core.service.StartLevelService;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.openhab.core.test.storage.VolatileStorageService;\n import org.openhab.core.types.Command;\n@@ -78,6 +82,13 @@ public class RuntimeRuleTest extends JavaOSGiTest {\n \n     @BeforeEach\n     public void before() {\n+        EventPublisher eventPublisher = getService(EventPublisher.class);\n+        ItemRegistry itemRegistry = getService(ItemRegistry.class);\n+        CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n+                eventPublisher, itemRegistry, mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+        mock(CoreModuleHandlerFactory.class);\n+        registerService(coreModuleHandlerFactory);\n+\n         registerService(new ItemProvider() {\n             @Override\n             public void addProviderChangeListener(final ProviderChangeListener<Item> listener) {\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun b/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun\nindex c938385357a..364e3f2dcac 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.module.timer.tests/itest.bndrun\n@@ -61,4 +61,9 @@ Fragment-Host: org.openhab.core.automation\n \tjunit-jupiter-engine;version='[5.9.2,5.9.3)',\\\n \tjunit-platform-commons;version='[1.9.2,1.9.3)',\\\n \tjunit-platform-engine;version='[1.9.2,1.9.3)',\\\n-\tjunit-platform-launcher;version='[1.9.2,1.9.3)'\n+\tjunit-platform-launcher;version='[1.9.2,1.9.3)',\\\n+\tnet.bytebuddy.byte-buddy;version='[1.12.19,1.12.20)',\\\n+\tnet.bytebuddy.byte-buddy-agent;version='[1.12.19,1.12.20)',\\\n+\torg.mockito.mockito-core;version='[4.11.0,4.11.1)',\\\n+\torg.objenesis;version='[3.3.0,3.3.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\nindex 3a06424bad8..19c7b4b6d12 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\n+++ b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\n@@ -15,6 +15,7 @@\n import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.mock;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -38,6 +39,7 @@\n import org.openhab.core.automation.RuleStatusInfo;\n import org.openhab.core.automation.Trigger;\n import org.openhab.core.automation.internal.RuleEngineImpl;\n+import org.openhab.core.automation.internal.module.factory.CoreModuleHandlerFactory;\n import org.openhab.core.automation.internal.module.handler.ItemCommandActionHandler;\n import org.openhab.core.automation.internal.module.handler.ItemStateTriggerHandler;\n import org.openhab.core.automation.util.ModuleBuilder;\n@@ -47,14 +49,17 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemProvider;\n+import org.openhab.core.items.ItemRegistry;\n import org.openhab.core.items.events.ItemCommandEvent;\n import org.openhab.core.items.events.ItemEventFactory;\n import org.openhab.core.library.items.SwitchItem;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.service.ReadyMarker;\n+import org.openhab.core.service.StartLevelService;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.openhab.core.test.storage.VolatileStorageService;\n import org.slf4j.Logger;\n@@ -81,6 +86,13 @@ public abstract class BasicConditionHandlerTest extends JavaOSGiTest {\n      */\n     @BeforeEach\n     public void beforeBase() {\n+        EventPublisher eventPublisher = getService(EventPublisher.class);\n+        ItemRegistry itemRegistry = getService(ItemRegistry.class);\n+        CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n+                eventPublisher, itemRegistry, mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+        mock(CoreModuleHandlerFactory.class);\n+        registerService(coreModuleHandlerFactory);\n+\n         ItemProvider itemProvider = new ItemProvider() {\n             @Override\n             public void addProviderChangeListener(ProviderChangeListener<Item> listener) {\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/DayOfWeekConditionHandlerTest.java b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/DayOfWeekConditionHandlerTest.java\nindex 8f5cc114ba8..61d3c6c54a8 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/DayOfWeekConditionHandlerTest.java\n+++ b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/DayOfWeekConditionHandlerTest.java\n@@ -14,6 +14,7 @@\n \n import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.mockito.Mockito.mock;\n \n import java.text.SimpleDateFormat;\n import java.time.ZonedDateTime;\n@@ -24,12 +25,18 @@\n import java.util.Map;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.openhab.core.automation.Condition;\n+import org.openhab.core.automation.internal.module.factory.CoreModuleHandlerFactory;\n import org.openhab.core.automation.internal.module.handler.DayOfWeekConditionHandler;\n import org.openhab.core.automation.type.ModuleTypeRegistry;\n import org.openhab.core.automation.util.ModuleBuilder;\n import org.openhab.core.config.core.Configuration;\n+import org.openhab.core.events.EventPublisher;\n+import org.openhab.core.i18n.TimeZoneProvider;\n+import org.openhab.core.items.ItemRegistry;\n+import org.openhab.core.service.StartLevelService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -50,6 +57,16 @@ public DayOfWeekConditionHandlerTest() {\n         logger.info(\"Today is {}\", dayOfWeek);\n     }\n \n+    @BeforeEach\n+    public void before() {\n+        EventPublisher eventPublisher = getService(EventPublisher.class);\n+        ItemRegistry itemRegistry = getService(ItemRegistry.class);\n+        CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n+                eventPublisher, itemRegistry, mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+        mock(CoreModuleHandlerFactory.class);\n+        registerService(coreModuleHandlerFactory);\n+    }\n+\n     @Test\n     public void assertThatConditionWorks() {\n         Configuration conditionConfiguration = new Configuration(\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java\nindex 1077c801b41..120f02c4b17 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java\n+++ b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/RuntimeRuleTest.java\n@@ -15,6 +15,7 @@\n import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.mock;\n \n import java.util.Collection;\n import java.util.HashMap;\n@@ -37,6 +38,7 @@\n import org.openhab.core.automation.RuleStatusInfo;\n import org.openhab.core.automation.Trigger;\n import org.openhab.core.automation.internal.RuleEngineImpl;\n+import org.openhab.core.automation.internal.module.factory.CoreModuleHandlerFactory;\n import org.openhab.core.automation.internal.module.handler.GenericCronTriggerHandler;\n import org.openhab.core.automation.type.ModuleTypeRegistry;\n import org.openhab.core.automation.util.ModuleBuilder;\n@@ -44,12 +46,16 @@\n import org.openhab.core.common.registry.ProviderChangeListener;\n import org.openhab.core.config.core.Configuration;\n import org.openhab.core.events.Event;\n+import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemProvider;\n+import org.openhab.core.items.ItemRegistry;\n import org.openhab.core.items.events.ItemCommandEvent;\n import org.openhab.core.library.items.SwitchItem;\n import org.openhab.core.service.ReadyMarker;\n+import org.openhab.core.service.StartLevelService;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.openhab.core.test.storage.VolatileStorageService;\n import org.slf4j.Logger;\n@@ -72,6 +78,13 @@ public class RuntimeRuleTest extends JavaOSGiTest {\n \n     @BeforeEach\n     public void before() {\n+        EventPublisher eventPublisher = getService(EventPublisher.class);\n+        ItemRegistry itemRegistry = getService(ItemRegistry.class);\n+        CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n+                eventPublisher, itemRegistry, mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+        mock(CoreModuleHandlerFactory.class);\n+        registerService(coreModuleHandlerFactory);\n+\n         ItemProvider itemProvider = new TestItemProvider(Set.of(new SwitchItem(\"myLampItem\")));\n         registerService(itemProvider);\n         registerService(volatileStorageService);\n\ndiff --git a/itests/org.openhab.core.automation.tests/itest.bndrun b/itests/org.openhab.core.automation.tests/itest.bndrun\nindex 3d9499b316a..55ed88082d3 100644\n--- a/itests/org.openhab.core.automation.tests/itest.bndrun\n+++ b/itests/org.openhab.core.automation.tests/itest.bndrun\n@@ -61,4 +61,9 @@ Fragment-Host: org.openhab.core.automation\n \tjunit-jupiter-engine;version='[5.9.2,5.9.3)',\\\n \tjunit-platform-commons;version='[1.9.2,1.9.3)',\\\n \tjunit-platform-engine;version='[1.9.2,1.9.3)',\\\n-\tjunit-platform-launcher;version='[1.9.2,1.9.3)'\n+\tjunit-platform-launcher;version='[1.9.2,1.9.3)',\\\n+\tnet.bytebuddy.byte-buddy;version='[1.12.19,1.12.20)',\\\n+\tnet.bytebuddy.byte-buddy-agent;version='[1.12.19,1.12.20)',\\\n+\torg.mockito.mockito-core;version='[4.11.0,4.11.1)',\\\n+\torg.objenesis;version='[3.3.0,3.3.1)',\\\n+\torg.osgi.service.cm;version='[1.6.0,1.6.1)'\n\ndiff --git a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\nindex 42d3e4aa8da..fabce422523 100644\n--- a/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\n+++ b/itests/org.openhab.core.automation.tests/src/main/java/org/openhab/core/automation/event/RuleEventTest.java\n@@ -16,6 +16,7 @@\n import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n \n import java.util.ArrayList;\n import java.util.Collection;\n@@ -41,6 +42,7 @@\n import org.openhab.core.automation.events.RuleStatusInfoEvent;\n import org.openhab.core.automation.events.RuleUpdatedEvent;\n import org.openhab.core.automation.internal.RuleEngineImpl;\n+import org.openhab.core.automation.internal.module.factory.CoreModuleHandlerFactory;\n import org.openhab.core.automation.util.ModuleBuilder;\n import org.openhab.core.automation.util.RuleBuilder;\n import org.openhab.core.common.registry.ProviderChangeListener;\n@@ -48,6 +50,7 @@\n import org.openhab.core.events.Event;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.events.EventSubscriber;\n+import org.openhab.core.i18n.TimeZoneProvider;\n import org.openhab.core.items.Item;\n import org.openhab.core.items.ItemNotFoundException;\n import org.openhab.core.items.ItemProvider;\n@@ -57,6 +60,7 @@\n import org.openhab.core.library.items.SwitchItem;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.service.ReadyMarker;\n+import org.openhab.core.service.StartLevelService;\n import org.openhab.core.test.java.JavaOSGiTest;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -80,6 +84,13 @@ public RuleEventTest() {\n \n     @BeforeEach\n     public void before() {\n+        EventPublisher eventPublisher = getService(EventPublisher.class);\n+        ItemRegistry itemRegistry = getService(ItemRegistry.class);\n+        CoreModuleHandlerFactory coreModuleHandlerFactory = new CoreModuleHandlerFactory(getBundleContext(),\n+                eventPublisher, itemRegistry, mock(TimeZoneProvider.class), mock(StartLevelService.class));\n+        mock(CoreModuleHandlerFactory.class);\n+        registerService(coreModuleHandlerFactory);\n+\n         ItemProvider itemProvider = new ItemProvider() {\n \n             @Override\n@@ -148,9 +159,7 @@ public void receive(Event event) {\n         ruleRegistry.add(rule);\n         ruleEngine.setEnabled(rule.getUID(), true);\n \n-        waitForAssert(() -> {\n-            assertThat(ruleEngine.getStatusInfo(rule.getUID()).getStatus(), is(RuleStatus.IDLE));\n-        });\n+        waitForAssert(() -> assertThat(ruleEngine.getStatusInfo(rule.getUID()).getStatus(), is(RuleStatus.IDLE)));\n \n         // TEST RULE\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3264",
    "pr_id": 3264,
    "issue_id": 3265,
    "repo": "openhab/openhab-core",
    "problem_statement": "Allow configure persistent voice dialogs\nAdding the capability to the voice manager to handle the dialog creation/re-creation based on a description of the dialog services and options, that is persisted and can be listed.\r\nThis will reduce the dialog configuration/management for the openHAB user.\r\nThis will allow building a dialog configuration page on the UI.",
    "issue_word_count": 58,
    "test_files_count": 6,
    "non_test_files_count": 6,
    "pr_changed_files": [
      "bundles/org.openhab.core.voice/pom.xml",
      "bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/DialogContext.java",
      "bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/DialogRegistration.java",
      "bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java",
      "bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/DialogProcessor.java",
      "bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java",
      "itests/org.openhab.core.voice.tests/itest.bndrun",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/InterpretCommandTest.java",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/SayCommandTest.java",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoiceConsoleCommandExtensionTest.java",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoicesCommandTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.voice.tests/itest.bndrun",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/InterpretCommandTest.java",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/SayCommandTest.java",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoiceConsoleCommandExtensionTest.java",
      "itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoicesCommandTest.java"
    ],
    "base_commit": "a3dc57784af5cf308018d09157f3ba7ef9f38d0a",
    "head_commit": "e255952f78d062f7b5ba1a382ddf596320bc4c7a",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3264",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3264",
    "dockerfile": "",
    "pr_merged_at": "2023-02-08T20:12:22.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.voice/pom.xml b/bundles/org.openhab.core.voice/pom.xml\nindex dd06334e0bc..8b7fe260222 100644\n--- a/bundles/org.openhab.core.voice/pom.xml\n+++ b/bundles/org.openhab.core.voice/pom.xml\n@@ -30,6 +30,17 @@\n       <artifactId>org.openhab.core.io.console</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.openhab.core.bundles</groupId>\n+      <artifactId>org.openhab.core</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.openhab.core.bundles</groupId>\n+      <artifactId>org.openhab.core.test</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n \n </project>\n\ndiff --git a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/DialogContext.java b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/DialogContext.java\nindex eeddedece13..6a2b11b71b2 100644\n--- a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/DialogContext.java\n+++ b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/DialogContext.java\n@@ -137,17 +137,23 @@ public Builder withSink(@Nullable AudioSink sink) {\n         }\n \n         public Builder withKS(@Nullable KSService service) {\n-            this.ks = service;\n+            if (service != null) {\n+                this.ks = service;\n+            }\n             return this;\n         }\n \n         public Builder withSTT(@Nullable STTService service) {\n-            this.stt = service;\n+            if (service != null) {\n+                this.stt = service;\n+            }\n             return this;\n         }\n \n         public Builder withTTS(@Nullable TTSService service) {\n-            this.tts = service;\n+            if (service != null) {\n+                this.tts = service;\n+            }\n             return this;\n         }\n \n@@ -156,32 +162,44 @@ public Builder withHLIs(Collection<HumanLanguageInterpreter> services) {\n         }\n \n         public Builder withHLIs(List<HumanLanguageInterpreter> services) {\n-            this.hlis = services;\n+            if (!services.isEmpty()) {\n+                this.hlis = services;\n+            }\n             return this;\n         }\n \n-        public Builder withKeyword(String keyword) {\n-            this.keyword = keyword;\n+        public Builder withKeyword(@Nullable String keyword) {\n+            if (keyword != null && !keyword.isBlank()) {\n+                this.keyword = keyword;\n+            }\n             return this;\n         }\n \n         public Builder withVoice(@Nullable Voice voice) {\n-            this.voice = voice;\n+            if (voice != null) {\n+                this.voice = voice;\n+            }\n             return this;\n         }\n \n         public Builder withListeningItem(@Nullable String listeningItem) {\n-            this.listeningItem = listeningItem;\n+            if (listeningItem != null) {\n+                this.listeningItem = listeningItem;\n+            }\n             return this;\n         }\n \n         public Builder withMelody(@Nullable String listeningMelody) {\n-            this.listeningMelody = listeningMelody;\n+            if (listeningMelody != null) {\n+                this.listeningMelody = listeningMelody;\n+            }\n             return this;\n         }\n \n-        public Builder withLocale(Locale locale) {\n-            this.locale = locale;\n+        public Builder withLocale(@Nullable Locale locale) {\n+            if (locale != null) {\n+                this.locale = locale;\n+            }\n             return this;\n         }\n \n\ndiff --git a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/DialogRegistration.java b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/DialogRegistration.java\nnew file mode 100644\nindex 00000000000..12421a7e480\n--- /dev/null\n+++ b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/DialogRegistration.java\n@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.voice;\n+\n+import java.util.List;\n+import java.util.Locale;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+/**\n+ * Describes dialog desired services and options.\n+ *\n+ * @author Miguel Ãlvarez - Initial contribution\n+ */\n+@NonNullByDefault\n+public class DialogRegistration {\n+    /**\n+     * Dialog audio source id\n+     */\n+    public String sourceId;\n+    /**\n+     * Dialog audio sink id\n+     */\n+    public String sinkId;\n+    /**\n+     * Preferred keyword-spotting service\n+     */\n+    public @Nullable String ksId;\n+    /**\n+     * Selected keyword for spotting\n+     */\n+    public @Nullable String keyword;\n+    /**\n+     * Preferred speech-to-text service id\n+     */\n+    public @Nullable String sttId;\n+    /**\n+     * Preferred text-to-speech service id\n+     */\n+    public @Nullable String ttsId;\n+    /**\n+     * Preferred voice id\n+     */\n+    public @Nullable String voiceId;\n+    /**\n+     * List of interpreters\n+     */\n+    public List<String> hliIds = List.of();\n+    /**\n+     * Dialog locale\n+     */\n+    public @Nullable Locale locale;\n+    /**\n+     * Linked listening item\n+     */\n+    public @Nullable String listeningItem;\n+    /**\n+     * Custom listening melody\n+     */\n+    public @Nullable String listeningMelody;\n+    /**\n+     * True if an associated dialog is running\n+     */\n+    public boolean running = false;\n+\n+    public DialogRegistration(String sourceId, String sinkId) {\n+        this.sourceId = sourceId;\n+        this.sinkId = sinkId;\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java\nindex 0caab37bc96..c223aa0c05b 100644\n--- a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java\n+++ b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/VoiceManager.java\n@@ -284,6 +284,38 @@ void listenAndAnswer(@Nullable STTService stt, @Nullable TTSService tts, @Nullab\n      */\n     void listenAndAnswer(DialogContext context) throws IllegalStateException;\n \n+    /**\n+     * Register a dialog, so it will be persisted and started any time the required services are available.\n+     *\n+     * Only one registration can be done for an audio source.\n+     *\n+     * @param registration with the desired services ids and options for the dialog\n+     *\n+     * @throws IllegalStateException if there is another registration for the same source\n+     */\n+    void registerDialog(DialogRegistration registration) throws IllegalStateException;\n+\n+    /**\n+     * Removes a dialog registration and stops the associate dialog.\n+     *\n+     * @param registration with the desired services ids and options for the dialog\n+     */\n+    void unregisterDialog(DialogRegistration registration);\n+\n+    /**\n+     * Removes a dialog registration and stops the associate dialog.\n+     *\n+     * @param sourceId the registration audio source id.\n+     */\n+    void unregisterDialog(String sourceId);\n+\n+    /**\n+     * List current dialog registrations\n+     *\n+     * @return a list of {@link DialogRegistration}\n+     */\n+    List<DialogRegistration> getDialogRegistrations();\n+\n     /**\n      * Retrieves a TTS service.\n      * If a default name is configured and the service available, this is returned. Otherwise, the first available\n\ndiff --git a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/DialogProcessor.java b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/DialogProcessor.java\nindex 25e7c307b47..7f5b7b2445c 100644\n--- a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/DialogProcessor.java\n+++ b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/DialogProcessor.java\n@@ -76,7 +76,7 @@ public class DialogProcessor implements KSListener, STTListener {\n \n     private final Logger logger = LoggerFactory.getLogger(DialogProcessor.class);\n \n-    private final DialogContext dialogContext;\n+    public final DialogContext dialogContext;\n     private @Nullable List<ToneSynthesizer.Tone> listeningMelody;\n     private final EventPublisher eventPublisher;\n     private final TranslationProvider i18nProvider;\n@@ -220,6 +220,7 @@ public void stop() {\n         closeStreamKS();\n         toggleProcessing(false);\n         playStopSound();\n+        eventListener.onDialogStopped(dialogContext);\n     }\n \n     /**\n@@ -458,5 +459,12 @@ public interface DialogEventListener {\n          * @param context used by the dialog processor\n          */\n         void onBeforeDialogInterpretation(DialogContext context);\n+\n+        /**\n+         * Runs whenever the dialog it stopped\n+         *\n+         * @param context used by the dialog processor\n+         */\n+        void onDialogStopped(DialogContext context);\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java\nindex 81aef251679..ce888f60478 100644\n--- a/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java\n+++ b/bundles/org.openhab.core.voice/src/main/java/org/openhab/core/voice/internal/VoiceManagerImpl.java\n@@ -28,6 +28,10 @@\n import java.util.Objects;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Predicate;\n import java.util.stream.Collectors;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n@@ -39,6 +43,7 @@\n import org.openhab.core.audio.AudioStream;\n import org.openhab.core.audio.UnsupportedAudioFormatException;\n import org.openhab.core.audio.UnsupportedAudioStreamException;\n+import org.openhab.core.common.ThreadPoolManager;\n import org.openhab.core.config.core.ConfigOptionProvider;\n import org.openhab.core.config.core.ConfigurableService;\n import org.openhab.core.config.core.ParameterOption;\n@@ -46,7 +51,10 @@\n import org.openhab.core.i18n.LocaleProvider;\n import org.openhab.core.i18n.TranslationProvider;\n import org.openhab.core.library.types.PercentType;\n+import org.openhab.core.storage.Storage;\n+import org.openhab.core.storage.StorageService;\n import org.openhab.core.voice.DialogContext;\n+import org.openhab.core.voice.DialogRegistration;\n import org.openhab.core.voice.KSService;\n import org.openhab.core.voice.STTService;\n import org.openhab.core.voice.TTSException;\n@@ -103,7 +111,8 @@ public class VoiceManagerImpl implements VoiceManager, ConfigOptionProvider, Dia\n     private static final String CONFIG_PREFIX_DEFAULT_VOICE = \"defaultVoice.\";\n \n     private final Logger logger = LoggerFactory.getLogger(VoiceManagerImpl.class);\n-\n+    private final ScheduledExecutorService scheduledExecutorService = ThreadPoolManager\n+            .getScheduledPool(ThreadPoolManager.THREAD_POOL_NAME_COMMON);\n     // service maps\n     private final Map<String, KSService> ksServices = new HashMap<>();\n     private final Map<String, STTService> sttServices = new HashMap<>();\n@@ -114,6 +123,7 @@ public class VoiceManagerImpl implements VoiceManager, ConfigOptionProvider, Dia\n     private final AudioManager audioManager;\n     private final EventPublisher eventPublisher;\n     private final TranslationProvider i18nProvider;\n+    private final Storage<DialogRegistration> dialogRegistrationStorage;\n \n     private @Nullable Bundle bundle;\n \n@@ -129,18 +139,21 @@ public class VoiceManagerImpl implements VoiceManager, ConfigOptionProvider, Dia\n     private @Nullable String defaultHLI;\n     private @Nullable String defaultVoice;\n     private final Map<String, String> defaultVoices = new HashMap<>();\n-\n-    private Map<String, DialogProcessor> dialogProcessors = new HashMap<>();\n-    private Map<String, DialogProcessor> singleDialogProcessors = new ConcurrentHashMap<>();\n-    private @Nullable DialogContext lastDialogContext = null;\n+    private final Map<String, DialogProcessor> dialogProcessors = new HashMap<>();\n+    private final Map<String, DialogProcessor> singleDialogProcessors = new ConcurrentHashMap<>();\n+    private @Nullable DialogContext lastDialogContext;\n+    private @Nullable ScheduledFuture<?> dialogRegistrationFuture;\n \n     @Activate\n     public VoiceManagerImpl(final @Reference LocaleProvider localeProvider, final @Reference AudioManager audioManager,\n-            final @Reference EventPublisher eventPublisher, final @Reference TranslationProvider i18nProvider) {\n+            final @Reference EventPublisher eventPublisher, final @Reference TranslationProvider i18nProvider,\n+            final @Reference StorageService storageService) {\n         this.localeProvider = localeProvider;\n         this.audioManager = audioManager;\n         this.eventPublisher = eventPublisher;\n         this.i18nProvider = i18nProvider;\n+        this.dialogRegistrationStorage = storageService.getStorage(DialogRegistration.class.getName(),\n+                this.getClass().getClassLoader());\n     }\n \n     @Activate\n@@ -151,7 +164,13 @@ protected void activate(BundleContext bundleContext, Map<String, Object> config)\n \n     @Deactivate\n     protected void deactivate() {\n-        stopAllDialogs();\n+        dialogProcessors.values().forEach(DialogProcessor::stop);\n+        dialogProcessors.clear();\n+        ScheduledFuture<?> dialogRegistrationFuture = this.dialogRegistrationFuture;\n+        if (dialogRegistrationFuture != null) {\n+            dialogRegistrationFuture.cancel(true);\n+            this.dialogRegistrationFuture = null;\n+        }\n     }\n \n     @SuppressWarnings(\"null\")\n@@ -335,8 +354,10 @@ public String interpret(String text, @Nullable String hliIdList) throws Interpre\n         }\n     }\n \n-    private @Nullable Voice getVoice(String id) {\n-        if (id.contains(\":\")) {\n+    private @Nullable Voice getVoice(@Nullable String id) {\n+        if (id == null) {\n+            return null;\n+        } else if (id.contains(\":\")) {\n             // it is a fully qualified unique id\n             String[] segments = id.split(\":\");\n             TTSService tts = getTTS(segments[0]);\n@@ -623,11 +644,6 @@ public void stopDialog(DialogContext context) throws IllegalStateException {\n         stopDialog(context.source());\n     }\n \n-    private void stopAllDialogs() {\n-        dialogProcessors.values().forEach(DialogProcessor::stop);\n-        dialogProcessors.clear();\n-    }\n-\n     @Override\n     @Deprecated\n     public void listenAndAnswer() throws IllegalStateException {\n@@ -700,6 +716,49 @@ public void listenAndAnswer(DialogContext context) throws IllegalStateException\n         }\n     }\n \n+    @Override\n+    public void registerDialog(DialogRegistration registration) throws IllegalStateException {\n+        if (dialogRegistrationStorage.containsKey(registration.sourceId)) {\n+            throw new IllegalStateException(String.format(\n+                    \"Cannot register dialog as a dialog is registered for audio source '%s'.\", registration.sourceId));\n+        }\n+        synchronized (dialogRegistrationStorage) {\n+            dialogRegistrationStorage.put(registration.sourceId, registration);\n+        }\n+        scheduleDialogRegistrations();\n+    }\n+\n+    @Override\n+    public void unregisterDialog(DialogRegistration registration) {\n+        unregisterDialog(registration.sourceId);\n+    }\n+\n+    @Override\n+    public void unregisterDialog(String sourceId) {\n+        synchronized (dialogRegistrationStorage) {\n+            var registrationRef = dialogRegistrationStorage.remove(sourceId);\n+            if (registrationRef != null) {\n+                var dialog = dialogProcessors.get(sourceId);\n+                if (dialog != null) {\n+                    stopDialog(dialog.dialogContext);\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public List<DialogRegistration> getDialogRegistrations() {\n+        var list = new ArrayList<DialogRegistration>();\n+        dialogRegistrationStorage.getValues().forEach(dr -> {\n+            if (dr != null) {\n+                // update running state\n+                dr.running = dialogProcessors.containsKey(dr.sourceId);\n+                list.add(dr);\n+            }\n+        });\n+        return list;\n+    }\n+\n     private boolean checkLocales(Set<Locale> supportedLocales, Locale locale) {\n         if (supportedLocales.isEmpty()) {\n             return true;\n@@ -711,40 +770,70 @@ private boolean checkLocales(Set<Locale> supportedLocales, Locale locale) {\n         });\n     }\n \n+    @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n+    protected void addAudioSink(AudioSink audioSink) {\n+        scheduleDialogRegistrations();\n+    }\n+\n+    protected void removeAudioSink(AudioSink audioSink) {\n+        stopDialogs((dialog) -> dialog.dialogContext.sink().getId().equals(audioSink.getId()));\n+    }\n+\n+    @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n+    protected void addAudioSource(AudioSource audioSource) {\n+        scheduleDialogRegistrations();\n+    }\n+\n+    protected void removeAudioSource(AudioSource audioSource) {\n+        stopDialogs((dialog) -> dialog.dialogContext.source().getId().equals(audioSource.getId()));\n+    }\n+\n     @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n     protected void addKSService(KSService ksService) {\n         this.ksServices.put(ksService.getId(), ksService);\n+        scheduleDialogRegistrations();\n     }\n \n     protected void removeKSService(KSService ksService) {\n         this.ksServices.remove(ksService.getId());\n+        stopDialogs((dialog) -> {\n+            var ks = dialog.dialogContext.ks();\n+            return ks != null && ks.getId().equals(ksService.getId());\n+        });\n     }\n \n     @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n     protected void addSTTService(STTService sttService) {\n         this.sttServices.put(sttService.getId(), sttService);\n+        scheduleDialogRegistrations();\n     }\n \n     protected void removeSTTService(STTService sttService) {\n         this.sttServices.remove(sttService.getId());\n+        stopDialogs((dialog) -> dialog.dialogContext.stt().getId().equals(sttService.getId()));\n     }\n \n     @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n     protected void addTTSService(TTSService ttsService) {\n         this.ttsServices.put(ttsService.getId(), ttsService);\n+        scheduleDialogRegistrations();\n     }\n \n     protected void removeTTSService(TTSService ttsService) {\n         this.ttsServices.remove(ttsService.getId());\n+        stopDialogs((dialog) -> dialog.dialogContext.tts().getId().equals(ttsService.getId()));\n     }\n \n     @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n     protected void addHumanLanguageInterpreter(HumanLanguageInterpreter humanLanguageInterpreter) {\n         this.humanLanguageInterpreters.put(humanLanguageInterpreter.getId(), humanLanguageInterpreter);\n+        scheduleDialogRegistrations();\n     }\n \n     protected void removeHumanLanguageInterpreter(HumanLanguageInterpreter humanLanguageInterpreter) {\n         this.humanLanguageInterpreters.remove(humanLanguageInterpreter.getId());\n+        stopDialogs((dialog) -> dialog.dialogContext.hlis().stream()\n+                .anyMatch(hli -> hli.getId().equals(humanLanguageInterpreter.getId())));\n     }\n \n     @Override\n@@ -764,8 +853,8 @@ protected void removeHumanLanguageInterpreter(HumanLanguageInterpreter humanLang\n     }\n \n     @Override\n-    public @Nullable TTSService getTTS(String id) {\n-        return ttsServices.get(id);\n+    public @Nullable TTSService getTTS(@Nullable String id) {\n+        return id == null ? null : ttsServices.get(id);\n     }\n \n     private @Nullable TTSService getTTS(Voice voice) {\n@@ -794,8 +883,8 @@ public Collection<TTSService> getTTSs() {\n     }\n \n     @Override\n-    public @Nullable STTService getSTT(String id) {\n-        return sttServices.get(id);\n+    public @Nullable STTService getSTT(@Nullable String id) {\n+        return id == null ? null : sttServices.get(id);\n     }\n \n     @Override\n@@ -820,8 +909,8 @@ public Collection<STTService> getSTTs() {\n     }\n \n     @Override\n-    public @Nullable KSService getKS(String id) {\n-        return ksServices.get(id);\n+    public @Nullable KSService getKS(@Nullable String id) {\n+        return id == null ? null : ksServices.get(id);\n     }\n \n     @Override\n@@ -846,8 +935,8 @@ public Collection<KSService> getKSs() {\n     }\n \n     @Override\n-    public @Nullable HumanLanguageInterpreter getHLI(String id) {\n-        return humanLanguageInterpreters.get(id);\n+    public @Nullable HumanLanguageInterpreter getHLI(@Nullable String id) {\n+        return id == null ? null : humanLanguageInterpreters.get(id);\n     }\n \n     @Override\n@@ -951,8 +1040,74 @@ private Comparator<Voice> createVoiceComparator(Locale locale) {\n         return null;\n     }\n \n+    private void stopDialogs(Predicate<DialogProcessor> filter) {\n+        synchronized (dialogRegistrationStorage) {\n+            var dialogsToStop = dialogProcessors.values().stream().filter(filter).toList();\n+            if (dialogsToStop.isEmpty()) {\n+                return;\n+            }\n+            for (var dialog : dialogsToStop) {\n+                stopDialog(dialog.dialogContext.source());\n+            }\n+        }\n+    }\n+\n+    /**\n+     * In order to reduce the number of dialog registration builds\n+     * this method schedules a call to {@link #buildDialogRegistrations() buildDialogRegistrations} in five seconds\n+     * and cancel the previous scheduled call if any.\n+     */\n+    private void scheduleDialogRegistrations() {\n+        ScheduledFuture<?> job = this.dialogRegistrationFuture;\n+        if (job != null) {\n+            job.cancel(false);\n+        }\n+        dialogRegistrationFuture = scheduledExecutorService.schedule(this::buildDialogRegistrations, 5,\n+                TimeUnit.SECONDS);\n+    }\n+\n+    /**\n+     * This method tries to start a dialog for each dialog registration.\n+     * It's only called from {@link #scheduleDialogRegistrations() scheduleDialogRegistrations} in order to\n+     * reduce the number of executions.\n+     */\n+    private void buildDialogRegistrations() {\n+        synchronized (dialogRegistrationStorage) {\n+            dialogRegistrationStorage.getValues().stream().forEach(dr -> {\n+                if (dr != null && !dialogProcessors.containsKey(dr.sourceId)) {\n+                    try {\n+                        startDialog(getDialogContextBuilder() //\n+                                .withSink(audioManager.getSink(dr.sinkId)) //\n+                                .withSource(audioManager.getSource(dr.sourceId)) //\n+                                .withKS(getKS(dr.ksId)) //\n+                                .withKeyword(dr.keyword) //\n+                                .withSTT(getSTT(dr.sttId)) //\n+                                .withTTS(getTTS(dr.ttsId)) //\n+                                .withVoice(getVoice(dr.voiceId)) //\n+                                .withHLIs(getHLIsByIds(dr.hliIds)) //\n+                                .withLocale(dr.locale) //\n+                                .withListeningItem(dr.listeningItem) //\n+                                .withMelody(dr.listeningMelody) //\n+                                .build());\n+                    } catch (IllegalStateException e) {\n+                        logger.debug(\"Unable to start dialog registration: {}\", e.getMessage());\n+                    }\n+                }\n+            });\n+        }\n+    }\n+\n     @Override\n     public void onBeforeDialogInterpretation(DialogContext context) {\n         lastDialogContext = context;\n     }\n+\n+    @Override\n+    public void onDialogStopped(DialogContext context) {\n+        var registration = dialogRegistrationStorage.get(context.source().getId());\n+        if (registration != null) {\n+            // try to rebuild in case it was manually stopped\n+            scheduleDialogRegistrations();\n+        }\n+    }\n }\n",
    "test_patch": "diff --git a/itests/org.openhab.core.voice.tests/itest.bndrun b/itests/org.openhab.core.voice.tests/itest.bndrun\nindex c5d6aec2848..febdf64d8c6 100644\n--- a/itests/org.openhab.core.voice.tests/itest.bndrun\n+++ b/itests/org.openhab.core.voice.tests/itest.bndrun\n@@ -63,6 +63,7 @@ Fragment-Host: org.openhab.core.voice\n \tbiz.aQute.tester.junit-platform;version='[6.4.0,6.4.1)',\\\n \torg.openhab.core;version='[4.0.0,4.0.1)',\\\n \torg.openhab.core.audio;version='[4.0.0,4.0.1)',\\\n+\torg.openhab.core;version='[4.0.0,4.0.1)',\\\n \torg.openhab.core.config.core;version='[4.0.0,4.0.1)',\\\n \torg.openhab.core.io.console;version='[4.0.0,4.0.1)',\\\n \torg.openhab.core.io.http;version='[4.0.0,4.0.1)',\\\n\ndiff --git a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java\nindex 601fd91f9f8..51c714c6884 100644\n--- a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java\n+++ b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/internal/VoiceManagerImplTest.java\n@@ -14,7 +14,11 @@\n \n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import java.io.IOException;\n import java.net.URI;\n@@ -34,6 +38,7 @@\n import org.openhab.core.i18n.LocaleProvider;\n import org.openhab.core.i18n.TranslationProvider;\n import org.openhab.core.test.java.JavaOSGiTest;\n+import org.openhab.core.voice.DialogRegistration;\n import org.openhab.core.voice.Voice;\n import org.openhab.core.voice.VoiceManager;\n import org.openhab.core.voice.text.InterpretationException;\n@@ -74,16 +79,15 @@ public class VoiceManagerImplTest extends JavaOSGiTest {\n \n     @BeforeEach\n     public void setUp() throws IOException {\n+        registerVolatileStorageService();\n         BundleContext context = bundleContext;\n         ttsService = new TTSServiceStub(context);\n         sink = new SinkStub();\n         voice = new VoiceStub();\n         source = new AudioSourceStub();\n-\n         registerService(sink);\n         registerService(voice);\n         registerService(source);\n-\n         ConfigurationAdmin configAdmin = super.getService(ConfigurationAdmin.class);\n \n         audioManager = getService(AudioManager.class);\n@@ -582,4 +586,48 @@ public void getPreferredVoiceOfEmptySet() {\n         Voice voice = voiceManager.getPreferredVoice(Set.of());\n         assertNull(voice);\n     }\n+\n+    @Test\n+    public void registerDialog() throws IOException, InterruptedException {\n+        // register services\n+        sttService = new STTServiceStub();\n+        ksService = new KSServiceStub();\n+        hliStub = new HumanLanguageInterpreterStub();\n+        registerService(sttService);\n+        registerService(ksService);\n+        registerService(ttsService);\n+        registerService(hliStub);\n+        // configure\n+        Dictionary<String, Object> config = new Hashtable<>();\n+        config.put(CONFIG_KEYWORD, \"word\");\n+        config.put(CONFIG_DEFAULT_STT, sttService.getId());\n+        config.put(CONFIG_DEFAULT_KS, ksService.getId());\n+        config.put(CONFIG_DEFAULT_HLI, hliStub.getId());\n+        config.put(CONFIG_DEFAULT_VOICE, voice.getUID());\n+        ConfigurationAdmin configAdmin = super.getService(ConfigurationAdmin.class);\n+        Configuration configuration = configAdmin.getConfiguration(VoiceManagerImpl.CONFIGURATION_PID);\n+        configuration.update(config);\n+        // Wait some time to be sure that the configuration will be updated\n+        Thread.sleep(2000);\n+        // Add a dialog registration\n+        var dialogRegistration = new DialogRegistration(source.getId(), sink.getId());\n+        voiceManager.registerDialog(dialogRegistration);\n+        // Wait some time to be sure dialog build has been fired and check dialog has been started\n+        Thread.sleep(6000);\n+        // Assert registration is available and running\n+        var registrations = voiceManager.getDialogRegistrations();\n+        assertThat(registrations.size(), is(1));\n+        assertTrue(registrations.stream().findAny().map(r -> r.running).orElse(false));\n+        // Assert dialog has been stated\n+        assertTrue(ksService.isWordSpotted());\n+        assertTrue(sttService.isRecognized());\n+        assertThat(hliStub.getQuestion(), is(\"Recognized text\"));\n+        assertThat(hliStub.getAnswer(), is(\"Interpreted text\"));\n+        assertThat(ttsService.getSynthesized(), is(\"Interpreted text\"));\n+        assertTrue(sink.getIsStreamProcessed());\n+        // Remove the dialog registration\n+        voiceManager.unregisterDialog(dialogRegistration);\n+        // Assert dialog has been stopped\n+        assertTrue(ksService.isAborted());\n+    }\n }\n\ndiff --git a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/InterpretCommandTest.java b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/InterpretCommandTest.java\nindex 7fc9553de51..10262707a8b 100644\n--- a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/InterpretCommandTest.java\n+++ b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/InterpretCommandTest.java\n@@ -51,6 +51,7 @@ public class InterpretCommandTest extends VoiceConsoleCommandExtensionTest {\n \n     @BeforeEach\n     public void setUp() throws IOException, InterruptedException {\n+        registerVolatileStorageService();\n         ttsService = new TTSServiceStub();\n         hliStub = new HumanLanguageInterpreterStub();\n         voice = new VoiceStub();\n\ndiff --git a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/SayCommandTest.java b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/SayCommandTest.java\nindex 17828f6a12c..bc6e7c7d782 100644\n--- a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/SayCommandTest.java\n+++ b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/SayCommandTest.java\n@@ -61,6 +61,7 @@ public class SayCommandTest extends VoiceConsoleCommandExtensionTest {\n \n     @BeforeEach\n     public void setUp() {\n+        registerVolatileStorageService();\n         sink = new SinkStub();\n         voice = new VoiceStub();\n \n\ndiff --git a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoiceConsoleCommandExtensionTest.java b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoiceConsoleCommandExtensionTest.java\nindex 72132d64891..cec7987e589 100644\n--- a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoiceConsoleCommandExtensionTest.java\n+++ b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoiceConsoleCommandExtensionTest.java\n@@ -44,6 +44,7 @@ public abstract class VoiceConsoleCommandExtensionTest extends JavaOSGiTest {\n \n     @BeforeEach\n     public void setup() {\n+        registerVolatileStorageService();\n         voiceManager = getService(VoiceManager.class, VoiceManagerImpl.class);\n         assertNotNull(voiceManager);\n         audioManager = getService(AudioManager.class, AudioManager.class);\n\ndiff --git a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoicesCommandTest.java b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoicesCommandTest.java\nindex 3910a02c2d6..a92acd1369a 100644\n--- a/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoicesCommandTest.java\n+++ b/itests/org.openhab.core.voice.tests/src/main/java/org/openhab/core/voice/voiceconsolecommandextension/VoicesCommandTest.java\n@@ -50,6 +50,7 @@ public class VoicesCommandTest extends VoiceConsoleCommandExtensionTest {\n \n     @BeforeEach\n     public void setUp() throws IOException {\n+        registerVolatileStorageService();\n         localeProvider = getService(LocaleProvider.class);\n         assertNotNull(localeProvider);\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3249",
    "pr_id": 3249,
    "issue_id": 3243,
    "repo": "openhab/openhab-core",
    "problem_statement": "Allow inline scripting in SCRIPT transformation\nThe old JS transformation did, we should be able to do that, too.",
    "issue_word_count": 19,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java",
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java"
    ],
    "base_commit": "a3a95b5bb954fe1895b337ec5b09eb7589941b54",
    "head_commit": "faeda606449b94f0ae33e3ce471bf0bd7746d8ac",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3249",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3249",
    "dockerfile": "",
    "pr_merged_at": "2023-03-12T11:00:06.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java\nindex 130dfcf8f17..a94ff083d43 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptTransformationService.java\n@@ -96,13 +96,20 @@ public void deactivate() {\n         scriptRecord.lock.lock();\n         try {\n             if (scriptRecord.script.isBlank()) {\n-                Transformation transformation = transformationRegistry.get(scriptUid);\n-                if (transformation != null) {\n-                    if (!SUPPORTED_CONFIGURATION_TYPE.equals(transformation.getType())) {\n-                        throw new TransformationException(\"Configuration does not have correct type 'script' but '\"\n-                                + transformation.getType() + \"'.\");\n+                if (scriptUid.startsWith(\"|\")) {\n+                    // inline script -> strip inline-identifier\n+                    scriptRecord.script = scriptUid.substring(1);\n+                } else {\n+                    // get script from transformation registry\n+                    Transformation transformation = transformationRegistry.get(scriptUid);\n+                    if (transformation != null) {\n+                        if (!SUPPORTED_CONFIGURATION_TYPE.equals(transformation.getType())) {\n+                            throw new TransformationException(\"Configuration does not have correct type 'script' but '\"\n+                                    + transformation.getType() + \"'.\");\n+                        }\n+                        scriptRecord.script = transformation.getConfiguration().getOrDefault(Transformation.FUNCTION,\n+                                \"\");\n                     }\n-                    scriptRecord.script = transformation.getConfiguration().getOrDefault(Transformation.FUNCTION, \"\");\n                 }\n                 if (scriptRecord.script.isBlank()) {\n                     throw new TransformationException(\"Could not get script for UID '\" + scriptUid + \"'.\");\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java\nindex df834febe71..f339903120d 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/ScriptTransformationServiceTest.java\n@@ -51,6 +51,8 @@ public class ScriptTransformationServiceTest {\n     private static final String SCRIPT_UID = \"scriptUid\";\n     private static final String INVALID_SCRIPT_UID = \"invalidScriptUid\";\n \n+    private static final String INLINE_SCRIPT = \"|inlineScript\";\n+\n     private static final String SCRIPT = \"script\";\n     private static final String SCRIPT_OUTPUT = \"output\";\n \n@@ -176,4 +178,11 @@ public void invalidConfigurationTypeThrowsTransformationException() {\n \n         assertThat(e.getMessage(), is(\"Configuration does not have correct type 'script' but 'invalid'.\"));\n     }\n+\n+    @Test\n+    public void inlineScriptProperlyProcessed() throws TransformationException, ScriptException {\n+        service.transform(SCRIPT_LANGUAGE + \":\" + INLINE_SCRIPT, \"input\");\n+\n+        verify(scriptEngine).eval(INLINE_SCRIPT.substring(1));\n+    }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3180",
    "pr_id": 3180,
    "issue_id": 3179,
    "repo": "openhab/openhab-core",
    "problem_statement": "Single JSR223 script can permanently lock up all other scripts from loading\nSay you have a super simple script (simplified for illustration purposes; a real world example could involve an accidental deadlock, or waiting indefinitely for an external service the script calls), like this:\r\n\r\n```ruby\r\nloop { sleep 1 }\r\n```\r\n\r\n(Yes, I shot myself in the foot doing something kind of like this trying to debug something! Luckily my condition eventually happened, so I didn't have to restart, but I realized my mistake as soon as I saved the file.)\r\n\r\nScriptFileWatcher loads scripts serially, so that will permanently lock up any other scripts from loading, and the only way to recover is to restart openHAB.",
    "issue_word_count": 114,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java",
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java"
    ],
    "base_commit": "f64874e226e794ef095b42a2cfbd7327c016450c",
    "head_commit": "0e0068797a6bbfd851a43f21ef9287c51346b57d",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3180",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3180",
    "dockerfile": "",
    "pr_merged_at": "2022-11-30T21:36:50.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java\nindex fc11724d4db..48d08a249e4 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java\n@@ -36,6 +36,7 @@\n import org.openhab.core.automation.module.script.ScriptEngineFactory;\n import org.openhab.core.automation.module.script.ScriptEngineManager;\n import org.openhab.core.automation.module.script.ScriptExtensionManagerWrapper;\n+import org.openhab.core.common.SafeCaller;\n import org.openhab.core.common.ThreadPoolManager;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n@@ -54,9 +55,14 @@\n @NonNullByDefault\n @Component(service = ScriptEngineManager.class)\n public class ScriptEngineManagerImpl implements ScriptEngineManager {\n+    /**\n+     * Timeout for scripts in milliseconds.\n+     */\n+    static private final long TIMEOUT = TimeUnit.SECONDS.toMillis(30);\n \n     private final ScheduledExecutorService scheduler = ThreadPoolManager\n             .getScheduledPool(ThreadPoolManager.THREAD_POOL_NAME_COMMON);\n+    private final SafeCaller safeCaller;\n \n     private final Logger logger = LoggerFactory.getLogger(ScriptEngineManagerImpl.class);\n     private final Map<String, ScriptEngineContainer> loadedScriptEngineInstances = new HashMap<>();\n@@ -66,8 +72,10 @@ public class ScriptEngineManagerImpl implements ScriptEngineManager {\n     private final Set<FactoryChangeListener> listeners = new HashSet<>();\n \n     @Activate\n-    public ScriptEngineManagerImpl(final @Reference ScriptExtensionManager scriptExtensionManager) {\n+    public ScriptEngineManagerImpl(final @Reference ScriptExtensionManager scriptExtensionManager,\n+            final @Reference SafeCaller safeCaller) {\n         this.scriptExtensionManager = scriptExtensionManager;\n+        this.safeCaller = safeCaller;\n     }\n \n     @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC)\n@@ -181,22 +189,15 @@ public void loadScript(String engineIdentifier, InputStreamReader scriptData) {\n         } else {\n             ScriptEngine engine = container.getScriptEngine();\n \n-            try {\n-                engine.eval(scriptData);\n-                if (engine instanceof Invocable) {\n-                    Invocable inv = (Invocable) engine;\n-                    try {\n-                        inv.invokeFunction(\"scriptLoaded\", engineIdentifier);\n-                    } catch (NoSuchMethodException e) {\n-                        logger.trace(\"scriptLoaded() is not defined in the script: {}\", engineIdentifier);\n-                    }\n-                } else {\n-                    logger.trace(\"ScriptEngine does not support Invocable interface\");\n+            safeCall(engineIdentifier, () -> {\n+                try {\n+                    engine.eval(scriptData);\n+                } catch (Exception ex) {\n+                    logger.error(\"Error during evaluation of script '{}': {}\", engineIdentifier, ex.getMessage());\n+                    logger.debug(\"\", ex);\n                 }\n-            } catch (Exception ex) {\n-                logger.error(\"Error during evaluation of script '{}': {}\", engineIdentifier, ex.getMessage());\n-                logger.debug(\"\", ex);\n-            }\n+            }, true);\n+            callHook(engineIdentifier, engine, \"scriptLoaded\", true, engineIdentifier);\n         }\n     }\n \n@@ -209,21 +210,10 @@ public void removeEngine(String engineIdentifier) {\n                 tracker.removeTracking(engineIdentifier);\n             }\n             ScriptEngine scriptEngine = container.getScriptEngine();\n-            if (scriptEngine instanceof Invocable) {\n-                Invocable inv = (Invocable) scriptEngine;\n-                try {\n-                    inv.invokeFunction(\"scriptUnloaded\");\n-                } catch (NoSuchMethodException e) {\n-                    logger.trace(\"scriptUnloaded() is not defined in the script\");\n-                } catch (ScriptException ex) {\n-                    logger.error(\"Error while executing script\", ex);\n-                }\n-            } else {\n-                logger.trace(\"ScriptEngine does not support Invocable interface\");\n-            }\n+            callHook(engineIdentifier, scriptEngine, \"scriptUnloaded\", false);\n \n             if (scriptEngine instanceof AutoCloseable) {\n-                // we cannot not use ScheduledExecutorService.execute here as it might execute the task in the calling\n+                // we cannot use ScheduledExecutorService.execute here as it might execute the task in the calling\n                 // thread (calling ScriptEngine.close in the same thread may result in a deadlock if the ScriptEngine\n                 // tries to Thread.join)\n                 scheduler.schedule(() -> {\n@@ -294,4 +284,33 @@ public void addFactoryChangeListener(FactoryChangeListener listener) {\n     public void removeFactoryChangeListener(FactoryChangeListener listener) {\n         listeners.remove(listener);\n     }\n+\n+    private void safeCall(String engineIdentifier, Runnable r, boolean unloadOnTimeout) {\n+        safeCaller.create(r, Runnable.class).withTimeout(TIMEOUT).onTimeout(() -> {\n+            logger.warn(\"Script evaluation of '{}' takes more than {}ms\", engineIdentifier, TIMEOUT);\n+            if (unloadOnTimeout) {\n+                removeEngine(engineIdentifier);\n+            }\n+        }).build().run();\n+    }\n+\n+    private void callHook(String engineIdentifier, ScriptEngine engine, String hook, boolean unloadOnTimeout,\n+            Object... args) {\n+        if (!(engine instanceof Invocable)) {\n+            logger.trace(\"ScriptEngine does not support Invocable interface\");\n+            return;\n+        }\n+\n+        safeCall(engineIdentifier, () -> {\n+            Invocable inv = (Invocable) engine;\n+            try {\n+                inv.invokeFunction(hook, args);\n+            } catch (NoSuchMethodException e) {\n+                logger.trace(\"{}() is not defined in the script '{}'\", hook, engineIdentifier);\n+            } catch (ScriptException ex) {\n+                logger.error(\"Error while executing script '{}': {}\", engineIdentifier, ex.getMessage());\n+                logger.debug(\"\", ex);\n+            }\n+        }, unloadOnTimeout);\n+    }\n }\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java\nindex 01d876d1a40..00215d212ec 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java\n@@ -40,6 +40,7 @@\n import org.mockito.quality.Strictness;\n import org.openhab.core.automation.module.script.ScriptDependencyTracker;\n import org.openhab.core.automation.module.script.ScriptEngineFactory;\n+import org.openhab.core.internal.common.SafeCallerImpl;\n \n /**\n  * The {@link ScriptEngineManagerImplTest} is a test class for the {@link ScriptEngineManagerImpl}\n@@ -73,7 +74,7 @@ public void setup() {\n         when(scriptEngineFactoryMock.getDependencyTracker()).thenReturn(scriptDependencyTrackerMock);\n         when(scriptDependencyTrackerMock.getTracker(any())).thenReturn(dependencyListenerMock);\n \n-        scriptEngineManager = new ScriptEngineManagerImpl(scriptExtensionManagerMock);\n+        scriptEngineManager = new ScriptEngineManagerImpl(scriptExtensionManagerMock, new SafeCallerImpl(null));\n         scriptEngineManager.addScriptEngineFactory(scriptEngineFactoryMock);\n     }\n \n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3168",
    "pr_id": 3168,
    "issue_id": 3166,
    "repo": "openhab/openhab-core",
    "problem_statement": "[automation] Missing dependency listener/tracker for UI scripts\nAn issue of the JS Scripting binding (https://github.com/openhab/openhab-addons/issues/12479) revealed, that there is no dependency listener/tracker for UI scripts but is needed. Otherwise, automation add-ons like JS Scripting can not track the dependencies of a script for changes and reload e.g. when a npm package is updated.\r\n\r\ncc @J-N-K ",
    "issue_word_count": 68,
    "test_files_count": 3,
    "non_test_files_count": 13,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/DefaultScriptFileWatcher.java",
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptLibraryWatcher.java",
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/collection/BidiSetBag.java",
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptDependencyTracker.java",
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcher.java",
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/DependencyTracker.java",
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptDependencyTrackerTest.java",
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptDependencyTracker.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineFactory.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineManager.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/factory/ScriptModuleHandlerFactory.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/AbstractScriptModuleHandler.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/ScriptActionHandler.java",
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptDependencyTrackerTest.java",
      "bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java",
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java"
    ],
    "base_commit": "d00d14d9fcab6e614da67264bce18e91c2be1be8",
    "head_commit": "915a1d53d9de4708daf3833ccb02c55132e6149f",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3168",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3168",
    "dockerfile": "",
    "pr_merged_at": "2022-11-29T19:59:09.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/DefaultScriptFileWatcher.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/DefaultScriptFileWatcher.java\nindex 1a540cda0dd..2291a1a9e43 100644\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/DefaultScriptFileWatcher.java\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/DefaultScriptFileWatcher.java\n@@ -16,7 +16,7 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.openhab.core.automation.module.script.ScriptEngineManager;\n-import org.openhab.core.automation.module.script.rulesupport.loader.ScriptFileWatcher;\n+import org.openhab.core.automation.module.script.rulesupport.loader.AbstractScriptFileWatcher;\n import org.openhab.core.service.ReadyService;\n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n@@ -31,14 +31,14 @@\n  */\n @NonNullByDefault\n @Component(immediate = true)\n-public class DefaultScriptFileWatcher extends ScriptFileWatcher {\n+public class DefaultScriptFileWatcher extends AbstractScriptFileWatcher {\n \n     private static final String FILE_DIRECTORY = \"automation\" + File.separator + \"jsr223\";\n \n     @Activate\n     public DefaultScriptFileWatcher(final @Reference ScriptEngineManager manager,\n             final @Reference ReadyService readyService) {\n-        super(manager, null, readyService, FILE_DIRECTORY);\n+        super(manager, readyService, FILE_DIRECTORY);\n     }\n \n     @Activate\n\ndiff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptLibraryWatcher.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptLibraryWatcher.java\ndeleted file mode 100644\nindex f3ebb550926..00000000000\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptLibraryWatcher.java\n+++ /dev/null\n@@ -1,62 +0,0 @@\n-/**\n- * Copyright (c) 2010-2022 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.automation.module.script.rulesupport.internal.loader;\n-\n-import static java.nio.file.StandardWatchEventKinds.*;\n-\n-import java.io.File;\n-import java.nio.file.Path;\n-import java.nio.file.WatchEvent;\n-\n-import org.eclipse.jdt.annotation.NonNullByDefault;\n-import org.eclipse.jdt.annotation.Nullable;\n-import org.openhab.core.service.AbstractWatchService;\n-\n-/**\n- * Listens for changes to script libraries\n- *\n- * @author Jonathan Gilbert - Initial contribution\n- */\n-@NonNullByDefault\n-public abstract class ScriptLibraryWatcher extends AbstractWatchService {\n-\n-    public ScriptLibraryWatcher(final String libraryPath) {\n-        super(libraryPath);\n-    }\n-\n-    @Override\n-    protected boolean watchSubDirectories() {\n-        return true;\n-    }\n-\n-    @Override\n-    protected WatchEvent.Kind<?> @Nullable [] getWatchEventKinds(Path path) {\n-        return new WatchEvent.Kind<?>[] { ENTRY_CREATE, ENTRY_DELETE, ENTRY_MODIFY };\n-    }\n-\n-    @Override\n-    protected void processWatchEvent(WatchEvent<?> watchEvent, WatchEvent.Kind<?> kind, Path path) {\n-        File file = path.toFile();\n-        if (!file.isHidden()) {\n-            if (kind.equals(ENTRY_DELETE)) {\n-                this.updateFile(file.getPath());\n-            }\n-\n-            if (file.canRead() && (kind.equals(ENTRY_CREATE) || kind.equals(ENTRY_MODIFY))) {\n-                this.updateFile(file.getPath());\n-            }\n-        }\n-    }\n-\n-    protected abstract void updateFile(String filePath);\n-}\n\ndiff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/collection/BidiSetBag.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/collection/BidiSetBag.java\nindex fe76f589baa..e8f217875e3 100644\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/collection/BidiSetBag.java\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/collection/BidiSetBag.java\n@@ -17,6 +17,7 @@\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n \n@@ -25,61 +26,84 @@\n  * Provides optimized lookup of values for a key, as well as keys referencing a value.\n  *\n  * @author Jonathan Gilbert - Initial contribution\n+ * @author Jan N. Klug - Make implementation thread-safe\n  * @param <K> Type of Key\n  * @param <V> Type of Value\n  */\n @NonNullByDefault\n public class BidiSetBag<K, V> {\n-    private Map<K, Set<V>> keyToValues = new HashMap<>();\n-    private Map<V, Set<K>> valueToKeys = new HashMap<>();\n+\n+    private final ReentrantReadWriteLock lock = new ReentrantReadWriteLock();\n+    private final Map<K, Set<V>> keyToValues = new HashMap<>();\n+    private final Map<V, Set<K>> valueToKeys = new HashMap<>();\n \n     public void put(K key, V value) {\n-        addElement(keyToValues, key, value);\n-        addElement(valueToKeys, value, key);\n+        lock.writeLock().lock();\n+        try {\n+            keyToValues.computeIfAbsent(key, k -> new HashSet<>()).add(value);\n+            valueToKeys.computeIfAbsent(value, v -> new HashSet<>()).add(key);\n+        } finally {\n+            lock.writeLock().unlock();\n+        }\n     }\n \n     public Set<V> getValues(K key) {\n-        Set<V> existing = keyToValues.get(key);\n-        return existing == null ? Collections.emptySet() : Collections.unmodifiableSet(existing);\n+        lock.readLock().lock();\n+        try {\n+            Set<V> values = keyToValues.getOrDefault(key, Set.of());\n+            return Collections.unmodifiableSet(values);\n+        } finally {\n+            lock.readLock().unlock();\n+        }\n     }\n \n     public Set<K> getKeys(V value) {\n-        Set<K> existing = valueToKeys.get(value);\n-        return existing == null ? Collections.emptySet() : Collections.unmodifiableSet(existing);\n+        lock.readLock().lock();\n+        try {\n+            Set<K> keys = valueToKeys.getOrDefault(value, Set.of());\n+            return Collections.unmodifiableSet(keys);\n+        } finally {\n+            lock.readLock().unlock();\n+        }\n     }\n \n     public Set<V> removeKey(K key) {\n-        Set<V> values = keyToValues.remove(key);\n-        if (values != null) {\n-            for (V value : values) {\n-                valueToKeys.computeIfPresent(value, (k, v) -> {\n-                    v.remove(key);\n-                    return v;\n-                });\n+        lock.writeLock().lock();\n+        try {\n+            Set<V> values = keyToValues.remove(key);\n+            if (values != null) {\n+                for (V value : values) {\n+                    valueToKeys.computeIfPresent(value, (k, v) -> {\n+                        v.remove(key);\n+                        return v;\n+                    });\n+                }\n+                return values;\n+            } else {\n+                return Set.of();\n             }\n-            return values;\n-        } else {\n-            return Collections.emptySet();\n+        } finally {\n+            lock.writeLock().unlock();\n         }\n     }\n \n     public Set<K> removeValue(V value) {\n-        Set<K> keys = valueToKeys.remove(value);\n-        if (keys != null) {\n-            for (K key : keys) {\n-                keyToValues.computeIfPresent(key, (k, v) -> {\n-                    v.remove(value);\n-                    return v;\n-                });\n+        lock.writeLock().lock();\n+        try {\n+            Set<K> keys = valueToKeys.remove(value);\n+            if (keys != null) {\n+                for (K key : keys) {\n+                    keyToValues.computeIfPresent(key, (k, v) -> {\n+                        v.remove(value);\n+                        return v;\n+                    });\n+                }\n+                return keys;\n+            } else {\n+                return Set.of();\n             }\n-            return keys;\n-        } else {\n-            return Collections.emptySet();\n+        } finally {\n+            lock.writeLock().unlock();\n         }\n     }\n-\n-    private static <T, U> void addElement(Map<T, Set<U>> map, T key, U value) {\n-        Set<U> elements = map.compute(key, (k, l) -> l == null ? new HashSet<>() : l);\n-        elements.add(value);\n-    }\n }\n\ndiff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptDependencyTracker.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptDependencyTracker.java\nnew file mode 100644\nindex 00000000000..867926a15b6\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptDependencyTracker.java\n@@ -0,0 +1,137 @@\n+/**\n+ * Copyright (c) 2010-2022 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.module.script.rulesupport.loader;\n+\n+import static java.nio.file.StandardWatchEventKinds.ENTRY_CREATE;\n+import static java.nio.file.StandardWatchEventKinds.ENTRY_DELETE;\n+import static java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.nio.file.WatchEvent;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.function.Consumer;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.automation.module.script.ScriptDependencyTracker;\n+import org.openhab.core.automation.module.script.rulesupport.internal.loader.collection.BidiSetBag;\n+import org.openhab.core.service.AbstractWatchService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link AbstractScriptDependencyTracker} tracks dependencies between scripts and reloads dependees\n+ * It needs to be sub-classed for each {@link org.openhab.core.automation.module.script.ScriptEngineFactory}\n+ * that wants to support dependency tracking\n+ *\n+ * @author Jonathan Gilbert - Initial contribution\n+ * @author Jan N. Klug - Refactored to OSGi service\n+ */\n+@NonNullByDefault\n+public abstract class AbstractScriptDependencyTracker implements ScriptDependencyTracker {\n+    private final Logger logger = LoggerFactory.getLogger(AbstractScriptDependencyTracker.class);\n+\n+    protected final String libraryPath;\n+\n+    private final Set<ScriptDependencyTracker.Listener> dependencyChangeListeners = ConcurrentHashMap.newKeySet();\n+\n+    private final BidiSetBag<String, String> scriptToLibs = new BidiSetBag<>();\n+    private @Nullable AbstractWatchService dependencyWatchService;\n+\n+    public AbstractScriptDependencyTracker(final String libraryPath) {\n+        this.libraryPath = libraryPath;\n+    }\n+\n+    public void activate() {\n+        AbstractWatchService dependencyWatchService = createDependencyWatchService();\n+        dependencyWatchService.activate();\n+        this.dependencyWatchService = dependencyWatchService;\n+    }\n+\n+    public void deactivate() {\n+        AbstractWatchService dependencyWatchService = this.dependencyWatchService;\n+        if (dependencyWatchService != null) {\n+            dependencyWatchService.deactivate();\n+        }\n+    }\n+\n+    protected AbstractWatchService createDependencyWatchService() {\n+        return new AbstractWatchService(libraryPath) {\n+            @Override\n+            protected boolean watchSubDirectories() {\n+                return true;\n+            }\n+\n+            @Override\n+            protected WatchEvent.Kind<?> @Nullable [] getWatchEventKinds(Path path) {\n+                return new WatchEvent.Kind<?>[] { ENTRY_CREATE, ENTRY_DELETE, ENTRY_MODIFY };\n+            }\n+\n+            @Override\n+            protected void processWatchEvent(WatchEvent<?> watchEvent, WatchEvent.Kind<?> kind, Path path) {\n+                File file = path.toFile();\n+                if (!file.isHidden() && (kind.equals(ENTRY_DELETE)\n+                        || (file.canRead() && (kind.equals(ENTRY_CREATE) || kind.equals(ENTRY_MODIFY))))) {\n+                    dependencyChanged(file.getPath());\n+                }\n+            }\n+        };\n+    }\n+\n+    protected void dependencyChanged(String dependency) {\n+        Set<String> scripts = new HashSet<>(scriptToLibs.getKeys(dependency)); // take a copy as it will change as we\n+        logger.debug(\"Library {} changed; reimporting {} scripts...\", libraryPath, scripts.size());\n+        for (String scriptUrl : scripts) {\n+            for (ScriptDependencyTracker.Listener listener : dependencyChangeListeners) {\n+                try {\n+                    listener.onDependencyChange(scriptUrl);\n+                } catch (Exception e) {\n+                    logger.warn(\"Failed to notify tracker of dependency change: {}: {}\", e.getClass(), e.getMessage());\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public Consumer<String> getTracker(String scriptId) {\n+        return dependencyPath -> startTracking(scriptId, dependencyPath);\n+    }\n+\n+    @Override\n+    public void removeTracking(String scriptId) {\n+        scriptToLibs.removeKey(scriptId);\n+    }\n+\n+    protected void startTracking(String scriptId, String libPath) {\n+        scriptToLibs.put(scriptId, libPath);\n+    }\n+\n+    /**\n+     * Add a dependency change listener\n+     *\n+     * Since this is done via service injection and OSGi annotations are not inherited it is required that subclasses\n+     * expose this method with proper annotation\n+     *\n+     * @param listener the dependency change listener\n+     */\n+    public void addChangeTracker(ScriptDependencyTracker.Listener listener) {\n+        dependencyChangeListeners.add(listener);\n+    }\n+\n+    public void removeChangeTracker(ScriptDependencyTracker.Listener listener) {\n+        dependencyChangeListeners.remove(listener);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/ScriptFileWatcher.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcher.java\nsimilarity index 89%\nrename from bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/ScriptFileWatcher.java\nrename to bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcher.java\nindex 7e7488d1155..1bec9d49f8d 100644\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/ScriptFileWatcher.java\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcher.java\n@@ -39,6 +39,7 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.OpenHAB;\n+import org.openhab.core.automation.module.script.ScriptDependencyTracker;\n import org.openhab.core.automation.module.script.ScriptEngineContainer;\n import org.openhab.core.automation.module.script.ScriptEngineManager;\n import org.openhab.core.common.NamedThreadFactory;\n@@ -51,23 +52,24 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * The {@link ScriptFileWatcher} watches a directory for files. If a new/modified file is detected, the script\n- * is read and passed to the {@link ScriptEngineManager}.\n+ * The {@link AbstractScriptFileWatcher} is default implementation for watching a directory for files. If a new/modified\n+ * file is detected, the script\n+ * is read and passed to the {@link ScriptEngineManager}. It needs to be sub-classed for actual use.\n  *\n  * @author Simon Merschjohann - Initial contribution\n  * @author Kai Kreuzer - improved logging and removed thread pool\n  * @author Jonathan Gilbert - added dependency tracking & per-script start levels; made reusable\n+ * @author Jan N. Klug - Refactored dependy tracking to script engine factories\n  */\n @NonNullByDefault\n-public class ScriptFileWatcher extends AbstractWatchService implements ReadyService.ReadyTracker,\n-        DependencyTracker.DependencyChangeListener, ScriptEngineManager.FactoryChangeListener {\n+public abstract class AbstractScriptFileWatcher extends AbstractWatchService implements ReadyService.ReadyTracker,\n+        ScriptDependencyTracker.Listener, ScriptEngineManager.FactoryChangeListener {\n \n     private static final long RECHECK_INTERVAL = 20;\n \n-    private final Logger logger = LoggerFactory.getLogger(ScriptFileWatcher.class);\n+    private final Logger logger = LoggerFactory.getLogger(AbstractScriptFileWatcher.class);\n \n     private final ScriptEngineManager manager;\n-    private final Optional<DependencyTracker> dependencyTracker;\n     private final ReadyService readyService;\n \n     private @Nullable ScheduledExecutorService scheduler;\n@@ -78,11 +80,10 @@ public class ScriptFileWatcher extends AbstractWatchService implements ReadyServ\n \n     private volatile int currentStartLevel = 0;\n \n-    public ScriptFileWatcher(final ScriptEngineManager manager, @Nullable final DependencyTracker dependencyTracker,\n-            final ReadyService readyService, final String fileDirectory) {\n+    public AbstractScriptFileWatcher(final ScriptEngineManager manager, final ReadyService readyService,\n+            final String fileDirectory) {\n         super(OpenHAB.getConfigFolder() + File.separator + fileDirectory);\n         this.manager = manager;\n-        this.dependencyTracker = Optional.ofNullable(dependencyTracker);\n         this.readyService = readyService;\n         this.executorFactory = () -> Executors\n                 .newSingleThreadScheduledExecutor(new NamedThreadFactory(\"scriptwatcher\"));\n@@ -206,7 +207,7 @@ protected void processWatchEvent(@Nullable WatchEvent<?> event, @Nullable Kind<?\n     private void removeFile(ScriptFileReference ref) {\n         dequeueUrl(ref);\n         String scriptIdentifier = ref.getScriptIdentifier();\n-        dependencyTracker.ifPresent(tracker -> tracker.removeScript(scriptIdentifier));\n+\n         manager.removeEngine(scriptIdentifier);\n         loaded.remove(ref);\n     }\n@@ -248,8 +249,7 @@ protected boolean createAndLoad(ScriptFileReference ref) {\n \n             if (container != null) {\n                 container.getScriptEngine().put(ScriptEngine.FILENAME, fileName);\n-                manager.loadScript(container.getIdentifier(), reader, dependency -> dependencyTracker\n-                        .ifPresent((it) -> it.addLibForScript(scriptIdentifier, dependency)));\n+                manager.loadScript(container.getIdentifier(), reader);\n \n                 logger.debug(\"Script loaded: {}\", fileName);\n                 return true;\n@@ -318,13 +318,16 @@ private synchronized void onStartLevelChanged(int newLevel) {\n     }\n \n     @Override\n-    public void onDependencyChange(@Nullable String scriptPath) {\n-        logger.debug(\"Reimporting {}...\", scriptPath);\n+    public void onDependencyChange(@Nullable String scriptId) {\n+        logger.debug(\"Reimporting {}...\", scriptId);\n         try {\n-            importFileWhenReady(new ScriptFileReference(new URL(scriptPath)));\n-        } catch (MalformedURLException e) {\n-            logger.warn(\"Failed to reimport {} as it cannot be parsed as a URL\", scriptPath);\n+            ScriptFileReference scriptFileReference = new ScriptFileReference(new URL(scriptId));\n+            if (loaded.contains(scriptFileReference)) {\n+                importFileWhenReady(scriptFileReference);\n+            }\n+        } catch (MalformedURLException ignored) {\n         }\n+        logger.debug(\"Ignoring dependency change for {} as it is no file or not loaded by this file watcher\", scriptId);\n     }\n \n     @Override\n\ndiff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/DependencyTracker.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/DependencyTracker.java\ndeleted file mode 100644\nindex d840e50dbdc..00000000000\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/loader/DependencyTracker.java\n+++ /dev/null\n@@ -1,108 +0,0 @@\n-/**\n- * Copyright (c) 2010-2022 Contributors to the openHAB project\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.openhab.core.automation.module.script.rulesupport.loader;\n-\n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.concurrent.ConcurrentHashMap;\n-\n-import org.openhab.core.automation.module.script.rulesupport.internal.loader.ScriptLibraryWatcher;\n-import org.openhab.core.automation.module.script.rulesupport.internal.loader.collection.BidiSetBag;\n-import org.osgi.service.component.annotations.Reference;\n-import org.osgi.service.component.annotations.ReferenceCardinality;\n-import org.osgi.service.component.annotations.ReferencePolicy;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * Tracks dependencies between scripts and reloads dependees\n- *\n- * @author Jonathan Gilbert - Initial contribution\n- */\n-public class DependencyTracker {\n-\n-    public String libraryPath;\n-\n-    private final Logger logger = LoggerFactory.getLogger(DependencyTracker.class);\n-\n-    private final Set<DependencyChangeListener> dependencyChangeListeners = ConcurrentHashMap.newKeySet();\n-\n-    private final BidiSetBag<String, String> scriptToLibs = new BidiSetBag<>();\n-    private ScriptLibraryWatcher scriptLibraryWatcher;\n-\n-    public DependencyTracker(final String libraryPath) {\n-        this.libraryPath = libraryPath;\n-    }\n-\n-    public void activate() {\n-        createScriptLibraryWatcher();\n-        scriptLibraryWatcher.activate();\n-    }\n-\n-    public void deactivate() {\n-        scriptLibraryWatcher.deactivate();\n-    }\n-\n-    private void createScriptLibraryWatcher() {\n-        scriptLibraryWatcher = new ScriptLibraryWatcher(libraryPath) {\n-            @Override\n-            protected void updateFile(String libraryPath) {\n-                Set<String> scripts;\n-                synchronized (scriptToLibs) {\n-                    scripts = new HashSet<>(scriptToLibs.getKeys(libraryPath)); // take a copy as it will change as we\n-                    // reimport\n-                }\n-                DependencyTracker.this.logger.debug(\"Library {} changed; reimporting {} scripts...\", libraryPath,\n-                        scripts.size());\n-                for (String scriptUrl : scripts) {\n-                    reimportScript(scriptUrl);\n-                }\n-            }\n-        };\n-    }\n-\n-    public void addLibForScript(String scriptPath, String libPath) {\n-        synchronized (scriptToLibs) {\n-            scriptToLibs.put(scriptPath, libPath);\n-        }\n-    }\n-\n-    public void removeScript(String scriptPath) {\n-        synchronized (scriptToLibs) {\n-            scriptToLibs.removeKey(scriptPath);\n-        }\n-    }\n-\n-    @Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC, unbind = \"removeChangeTracker\")\n-    public void addChangeTracker(DependencyChangeListener listener) {\n-        dependencyChangeListeners.add(listener);\n-    }\n-\n-    public void removeChangeTracker(DependencyChangeListener listener) {\n-        dependencyChangeListeners.remove(listener);\n-    }\n-\n-    public void reimportScript(String scriptPath) {\n-        for (DependencyChangeListener listener : dependencyChangeListeners) {\n-            try {\n-                listener.onDependencyChange(scriptPath);\n-            } catch (Exception e) {\n-                logger.warn(\"Failed to notify tracker of dependency change: {}: {}\", e.getClass(), e.getMessage());\n-            }\n-        }\n-    }\n-\n-    public interface DependencyChangeListener {\n-        void onDependencyChange(String scriptPath);\n-    }\n-}\n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptDependencyTracker.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptDependencyTracker.java\nnew file mode 100644\nindex 00000000000..136d0389e46\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptDependencyTracker.java\n@@ -0,0 +1,56 @@\n+/**\n+ * Copyright (c) 2010-2022 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.module.script;\n+\n+import java.util.function.Consumer;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+\n+/**\n+ * The {@link ScriptDependencyTracker} is an interface that script dependency trackers can implement to allow automatic\n+ * re-loading if scripts on dependency changes\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface ScriptDependencyTracker {\n+\n+    /**\n+     * Get the tracker for a given script identifier\n+     *\n+     * @param scriptId the unique id of the script\n+     * @return a {@link Consumer<String>} that accepts a the path to a dependency\n+     */\n+    Consumer<String> getTracker(String scriptId);\n+\n+    /**\n+     * Remove all tracking data for a given scipt identifier\n+     *\n+     * @param scriptId the uniwue id of the script\n+     */\n+    void removeTracking(String scriptId);\n+\n+    /**\n+     * The {@link ScriptDependencyTracker.Listener} is an interface that needs to be implemented by listeners that want\n+     * to be notified about a dependency change\n+     */\n+    interface Listener {\n+\n+        /**\n+         * Called by the dependency tracker when a registered dependency changes\n+         *\n+         * @param scriptId the identifier of the script whose dependency changed\n+         */\n+        void onDependencyChange(String scriptId);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineFactory.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineFactory.java\nindex fe216a175d6..4475b4a8d11 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineFactory.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineFactory.java\n@@ -74,4 +74,14 @@ public interface ScriptEngineFactory {\n      */\n     @Nullable\n     ScriptEngine createScriptEngine(String scriptType);\n+\n+    /**\n+     * This method returns a {@link ScriptDependencyTracker} if it is available\n+     *\n+     * @return a {@link ScriptDependencyTracker} or <code>null</code> if dependency tracking is not supported for\n+     *         {@link ScriptEngine}s created by this factory\n+     */\n+    default @Nullable ScriptDependencyTracker getDependencyTracker() {\n+        return null;\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineManager.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineManager.java\nindex ca778487da2..7339bcefeca 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineManager.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/ScriptEngineManager.java\n@@ -45,16 +45,6 @@ public interface ScriptEngineManager {\n      */\n     void loadScript(String engineIdentifier, InputStreamReader scriptData);\n \n-    /**\n-     * Loads a script and initializes its scope variables\n-     *\n-     * @param engineIdentifier the unique identifier for the ScriptEngine (script file path or UUID)\n-     * @param scriptData the content of the script\n-     * @param scriptDependencyListener listener to be notified of script dependencies\n-     */\n-    void loadScript(String engineIdentifier, InputStreamReader scriptData,\n-            ScriptDependencyListener scriptDependencyListener);\n-\n     /**\n      * Unloads the ScriptEngine loaded with the engineIdentifier\n      *\n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java\nindex 9f0f91d23fc..f75c2bc270d 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImpl.java\n@@ -31,7 +31,7 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n-import org.openhab.core.automation.module.script.ScriptDependencyListener;\n+import org.openhab.core.automation.module.script.ScriptDependencyTracker;\n import org.openhab.core.automation.module.script.ScriptEngineContainer;\n import org.openhab.core.automation.module.script.ScriptEngineFactory;\n import org.openhab.core.automation.module.script.ScriptEngineManager;\n@@ -155,6 +155,12 @@ private boolean isCustomFactory(ScriptEngineFactory engineFactory) {\n \n                     addAttributeToScriptContext(engine, CONTEXT_KEY_ENGINE_IDENTIFIER, engineIdentifier);\n                     addAttributeToScriptContext(engine, CONTEXT_KEY_EXTENSION_ACCESSOR, scriptExtensionManager);\n+\n+                    ScriptDependencyTracker tracker = engineFactory.getDependencyTracker();\n+                    if (tracker != null) {\n+                        addAttributeToScriptContext(engine, CONTEXT_KEY_DEPENDENCY_LISTENER,\n+                                tracker.getTracker(engineIdentifier));\n+                    }\n                 } else {\n                     logger.error(\"ScriptEngine for language '{}' could not be created for identifier: {}\", scriptType,\n                             engineIdentifier);\n@@ -169,22 +175,12 @@ private boolean isCustomFactory(ScriptEngineFactory engineFactory) {\n \n     @Override\n     public void loadScript(String engineIdentifier, InputStreamReader scriptData) {\n-        loadScript(engineIdentifier, scriptData, null);\n-    }\n-\n-    @Override\n-    public void loadScript(String engineIdentifier, InputStreamReader scriptData,\n-            @Nullable ScriptDependencyListener dependencyListener) {\n         ScriptEngineContainer container = loadedScriptEngineInstances.get(engineIdentifier);\n         if (container == null) {\n             logger.error(\"Could not load script, as no ScriptEngine has been created\");\n         } else {\n             ScriptEngine engine = container.getScriptEngine();\n \n-            if (dependencyListener != null) {\n-                addAttributeToScriptContext(engine, CONTEXT_KEY_DEPENDENCY_LISTENER, dependencyListener);\n-            }\n-\n             try {\n                 engine.eval(scriptData);\n                 if (engine instanceof Invocable) {\n@@ -207,6 +203,10 @@ public void loadScript(String engineIdentifier, InputStreamReader scriptData,\n     public void removeEngine(String engineIdentifier) {\n         ScriptEngineContainer container = loadedScriptEngineInstances.remove(engineIdentifier);\n         if (container != null) {\n+            ScriptDependencyTracker tracker = container.getFactory().getDependencyTracker();\n+            if (tracker != null) {\n+                tracker.removeTracking(engineIdentifier);\n+            }\n             ScriptEngine scriptEngine = container.getScriptEngine();\n             if (scriptEngine instanceof Invocable) {\n                 Invocable inv = (Invocable) scriptEngine;\n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/factory/ScriptModuleHandlerFactory.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/factory/ScriptModuleHandlerFactory.java\nindex 2d80383e4ff..9433eb95c1a 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/factory/ScriptModuleHandlerFactory.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/factory/ScriptModuleHandlerFactory.java\n@@ -14,6 +14,8 @@\n \n import java.util.Collection;\n import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n@@ -23,6 +25,7 @@\n import org.openhab.core.automation.handler.BaseModuleHandlerFactory;\n import org.openhab.core.automation.handler.ModuleHandler;\n import org.openhab.core.automation.handler.ModuleHandlerFactory;\n+import org.openhab.core.automation.module.script.ScriptDependencyTracker;\n import org.openhab.core.automation.module.script.ScriptEngineManager;\n import org.openhab.core.automation.module.script.internal.handler.ScriptActionHandler;\n import org.openhab.core.automation.module.script.internal.handler.ScriptConditionHandler;\n@@ -39,8 +42,8 @@\n  * @author Kai Kreuzer - Initial contribution\n  */\n @NonNullByDefault\n-@Component(service = ModuleHandlerFactory.class)\n-public class ScriptModuleHandlerFactory extends BaseModuleHandlerFactory {\n+@Component(service = { ModuleHandlerFactory.class, ScriptDependencyTracker.Listener.class })\n+public class ScriptModuleHandlerFactory extends BaseModuleHandlerFactory implements ScriptDependencyTracker.Listener {\n \n     private final Logger logger = LoggerFactory.getLogger(ScriptModuleHandlerFactory.class);\n \n@@ -48,6 +51,8 @@ public class ScriptModuleHandlerFactory extends BaseModuleHandlerFactory {\n             ScriptConditionHandler.TYPE_ID);\n     private @NonNullByDefault({}) ScriptEngineManager scriptEngineManager;\n \n+    private Map<String, ScriptActionHandler> trackedHandlers = new ConcurrentHashMap<>();\n+\n     @Override\n     @Deactivate\n     protected void deactivate() {\n@@ -68,7 +73,9 @@ public Collection<String> getTypes() {\n                     scriptEngineManager);\n             return handler;\n         } else if (ScriptActionHandler.TYPE_ID.equals(moduleTypeUID) && module instanceof Action) {\n-            ScriptActionHandler handler = new ScriptActionHandler((Action) module, ruleUID, scriptEngineManager);\n+            ScriptActionHandler handler = new ScriptActionHandler((Action) module, ruleUID, scriptEngineManager,\n+                    this::onHandlerRemoval);\n+            trackedHandlers.put(handler.getEngineIdentifier(), handler);\n             return handler;\n         } else {\n             logger.error(\"The ModuleHandler is not supported: {}\", moduleTypeUID);\n@@ -84,4 +91,17 @@ public void setScriptEngineManager(ScriptEngineManager scriptEngineManager) {\n     public void unsetScriptEngineManager(ScriptEngineManager scriptEngineManager) {\n         this.scriptEngineManager = null;\n     }\n+\n+    private void onHandlerRemoval(ScriptActionHandler handler) {\n+        trackedHandlers.values().remove(handler);\n+    }\n+\n+    @Override\n+    public void onDependencyChange(String engineIdentifier) {\n+        ScriptActionHandler handler = trackedHandlers.get(engineIdentifier);\n+        if (handler != null) {\n+            logger.debug(\"Resetting script engine for script {}\", engineIdentifier);\n+            handler.resetScriptEngine();\n+        }\n+    }\n }\n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/AbstractScriptModuleHandler.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/AbstractScriptModuleHandler.java\nindex 41d0dd402ef..a3bda9b2cbd 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/AbstractScriptModuleHandler.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/AbstractScriptModuleHandler.java\n@@ -84,6 +84,24 @@ public void dispose() {\n         scriptEngineManager.removeEngine(engineIdentifier);\n     }\n \n+    /**\n+     * Reset the script engine to force a script reload\n+     *\n+     */\n+    public synchronized void resetScriptEngine() {\n+        scriptEngineManager.removeEngine(engineIdentifier);\n+        scriptEngine = Optional.empty();\n+    }\n+\n+    /**\n+     * Gets the script engine identifier for this module\n+     *\n+     * @return the engine identifier string\n+     */\n+    public String getEngineIdentifier() {\n+        return engineIdentifier;\n+    }\n+\n     protected Optional<ScriptEngine> getScriptEngine() {\n         return scriptEngine.isPresent() ? scriptEngine : createScriptEngine();\n     }\n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/ScriptActionHandler.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/ScriptActionHandler.java\nindex 0ea27b747fa..61d93125400 100644\n--- a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/ScriptActionHandler.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/handler/ScriptActionHandler.java\n@@ -14,6 +14,7 @@\n \n import java.util.HashMap;\n import java.util.Map;\n+import java.util.function.Consumer;\n \n import javax.script.ScriptException;\n \n@@ -37,15 +38,27 @@ public class ScriptActionHandler extends AbstractScriptModuleHandler<Action> imp\n     public static final String TYPE_ID = \"script.ScriptAction\";\n \n     private final Logger logger = LoggerFactory.getLogger(ScriptActionHandler.class);\n+    private final Consumer<ScriptActionHandler> onRemoval;\n \n     /**\n      * constructs a new ScriptActionHandler\n      *\n      * @param module the module\n      * @param ruleUID the UID of the rule this handler is used for\n+     * @param onRemoval called on removal of this script\n      */\n-    public ScriptActionHandler(Action module, String ruleUID, ScriptEngineManager scriptEngineManager) {\n+    public ScriptActionHandler(Action module, String ruleUID, ScriptEngineManager scriptEngineManager,\n+            Consumer<ScriptActionHandler> onRemoval) {\n         super(module, ruleUID, scriptEngineManager);\n+\n+        this.onRemoval = onRemoval;\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        onRemoval.accept(this);\n+\n+        super.dispose();\n     }\n \n     @Override\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptDependencyTrackerTest.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptDependencyTrackerTest.java\nnew file mode 100644\nindex 00000000000..30384084ea7\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptDependencyTrackerTest.java\n@@ -0,0 +1,153 @@\n+/**\n+ * Copyright (c) 2010-2022 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.module.script.rulesupport.loader;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.notNullValue;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+\n+import java.nio.file.Path;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.openhab.core.automation.module.script.ScriptDependencyTracker;\n+import org.openhab.core.service.AbstractWatchService;\n+\n+/**\n+ * The {@link AbstractScriptDependencyTrackerTest} contains tests for the {@link AbstractScriptDependencyTracker}\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public class AbstractScriptDependencyTrackerTest {\n+\n+    private static final String WATCH_DIR = \"test\";\n+\n+    private @Nullable AbstractWatchService dependencyWatchService;\n+\n+    private @NonNullByDefault({}) AbstractScriptDependencyTracker scriptDependencyTracker;\n+\n+    @BeforeEach\n+    public void setup() {\n+        scriptDependencyTracker = new AbstractScriptDependencyTracker(WATCH_DIR) {\n+\n+            @Override\n+            protected AbstractWatchService createDependencyWatchService() {\n+                AbstractWatchService dependencyWatchService = Mockito.spy(super.createDependencyWatchService());\n+                AbstractScriptDependencyTrackerTest.this.dependencyWatchService = dependencyWatchService;\n+                return dependencyWatchService;\n+            }\n+\n+            @Override\n+            public void dependencyChanged(String dependency) {\n+                super.dependencyChanged(dependency);\n+            }\n+        };\n+\n+        scriptDependencyTracker.activate();\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        scriptDependencyTracker.deactivate();\n+    }\n+\n+    @Test\n+    public void testScriptLibraryWatcherIsCreatedAndActivated() {\n+        assertThat(dependencyWatchService, is(notNullValue()));\n+\n+        assertThat(dependencyWatchService.getSourcePath(), is(Path.of(WATCH_DIR)));\n+\n+        verify(dependencyWatchService).activate();\n+    }\n+\n+    @Test\n+    public void testScriptLibraryWatchersIsDeactivatedOnShutdown() {\n+        scriptDependencyTracker.deactivate();\n+\n+        verify(dependencyWatchService).deactivate();\n+    }\n+\n+    @Test\n+    public void testDependencyChangeIsForwardedToMultipleListeners() {\n+        ScriptDependencyTracker.Listener listener1 = mock(ScriptDependencyTracker.Listener.class);\n+        ScriptDependencyTracker.Listener listener2 = mock(ScriptDependencyTracker.Listener.class);\n+\n+        scriptDependencyTracker.addChangeTracker(listener1);\n+        scriptDependencyTracker.addChangeTracker(listener2);\n+\n+        scriptDependencyTracker.startTracking(\"scriptId\", \"depPath\");\n+        scriptDependencyTracker.dependencyChanged(\"depPath\");\n+\n+        verify(listener1).onDependencyChange(eq(\"scriptId\"));\n+        verify(listener2).onDependencyChange(eq(\"scriptId\"));\n+        verifyNoMoreInteractions(listener1);\n+        verifyNoMoreInteractions(listener2);\n+    }\n+\n+    @Test\n+    public void testDependencyChangeIsForwardedForMultipleScriptIds() {\n+        ScriptDependencyTracker.Listener listener = mock(ScriptDependencyTracker.Listener.class);\n+\n+        scriptDependencyTracker.addChangeTracker(listener);\n+\n+        scriptDependencyTracker.startTracking(\"scriptId1\", \"depPath\");\n+        scriptDependencyTracker.startTracking(\"scriptId2\", \"depPath\");\n+\n+        scriptDependencyTracker.dependencyChanged(\"depPath\");\n+\n+        verify(listener).onDependencyChange(eq(\"scriptId1\"));\n+        verify(listener).onDependencyChange(eq(\"scriptId2\"));\n+        verifyNoMoreInteractions(listener);\n+    }\n+\n+    @Test\n+    public void testDependencyChangeIsForwardedForMultipleDependencies() {\n+        ScriptDependencyTracker.Listener listener = mock(ScriptDependencyTracker.Listener.class);\n+\n+        scriptDependencyTracker.addChangeTracker(listener);\n+\n+        scriptDependencyTracker.startTracking(\"scriptId\", \"depPath1\");\n+        scriptDependencyTracker.startTracking(\"scriptId\", \"depPath2\");\n+\n+        scriptDependencyTracker.dependencyChanged(\"depPath1\");\n+        scriptDependencyTracker.dependencyChanged(\"depPath2\");\n+\n+        verify(listener, times(2)).onDependencyChange(eq(\"scriptId\"));\n+        verifyNoMoreInteractions(listener);\n+    }\n+\n+    @Test\n+    public void testDependencyChangeIsForwardedForCorrectDependencies() {\n+        ScriptDependencyTracker.Listener listener = mock(ScriptDependencyTracker.Listener.class);\n+\n+        scriptDependencyTracker.addChangeTracker(listener);\n+\n+        scriptDependencyTracker.startTracking(\"scriptId1\", \"depPath1\");\n+        scriptDependencyTracker.startTracking(\"scriptId2\", \"depPath2\");\n+\n+        scriptDependencyTracker.dependencyChanged(\"depPath1\");\n+\n+        verify(listener).onDependencyChange(eq(\"scriptId1\"));\n+        verifyNoMoreInteractions(listener);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/ScriptFileWatcherTest.java b/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java\nsimilarity index 58%\nrename from bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/ScriptFileWatcherTest.java\nrename to bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java\nindex 664211454f3..07e75f4f538 100644\n--- a/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/ScriptFileWatcherTest.java\n+++ b/bundles/org.openhab.core.automation.module.script.rulesupport/src/test/java/org/openhab/core/automation/module/script/rulesupport/loader/AbstractScriptFileWatcherTest.java\n@@ -29,11 +29,17 @@\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n import org.junit.jupiter.api.io.TempDir;\n import org.mockito.ArgumentCaptor;\n import org.mockito.InOrder;\n-import org.openhab.core.automation.module.script.ScriptDependencyListener;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.openhab.core.automation.module.script.ScriptDependencyTracker;\n import org.openhab.core.automation.module.script.ScriptEngineContainer;\n+import org.openhab.core.automation.module.script.ScriptEngineFactory;\n import org.openhab.core.automation.module.script.ScriptEngineManager;\n import org.openhab.core.automation.module.script.rulesupport.internal.loader.DelegatingScheduledExecutorService;\n import org.openhab.core.service.ReadyMarker;\n@@ -47,22 +53,23 @@\n  * @author Jonathan Gilbert - initial contribution\n  */\n @NonNullByDefault\n-class ScriptFileWatcherTest {\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+class AbstractScriptFileWatcherTest {\n \n-    private @NonNullByDefault({}) ScriptFileWatcher scriptFileWatcher;\n-    private @NonNullByDefault({}) ScriptEngineManager scriptEngineManager;\n-    private @NonNullByDefault({}) DependencyTracker dependencyTracker;\n-    private @NonNullByDefault({}) ReadyService readyService;\n+    private @NonNullByDefault({}) AbstractScriptFileWatcher scriptFileWatcher;\n+\n+    private @Mock @NonNullByDefault({}) ScriptEngineManager scriptEngineManagerMock;\n+    private @Mock @NonNullByDefault({}) ScriptDependencyTracker scriptDependencyTrackerMock;\n+    private @Mock @NonNullByDefault({}) ReadyService readyService;\n \n     protected @NonNullByDefault({}) @TempDir Path tempScriptDir;\n \n     @BeforeEach\n     public void setUp() {\n-        scriptEngineManager = mock(ScriptEngineManager.class);\n-        dependencyTracker = mock(DependencyTracker.class);\n-        readyService = mock(ReadyService.class);\n-        scriptFileWatcher = new ScriptFileWatcher(scriptEngineManager, dependencyTracker, readyService,\n-                \"automation\" + File.separator + \"jsr223\");\n+        scriptFileWatcher = new AbstractScriptFileWatcher(scriptEngineManagerMock, readyService,\n+                \"automation\" + File.separator + \"jsr223\") {\n+        };\n         scriptFileWatcher.activate();\n     }\n \n@@ -96,10 +103,10 @@ void updateStartLevel(int level) {\n \n     @Test\n     public void testLoadOneDefaultFileAlreadyStarted() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         updateStartLevel(100);\n \n@@ -107,33 +114,34 @@ public void testLoadOneDefaultFileAlreadyStarted() {\n \n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p);\n \n-        verify(scriptEngineManager, timeout(10000)).createScriptEngine(\"js\", p.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, timeout(10000)).createScriptEngine(\"js\", p.toFile().toURI().toString());\n     }\n \n     @Test\n     public void testLoadOneDefaultFileWaitUntilStarted() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         Path p = getFile(\"script.js\");\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p);\n \n         // verify not yet called\n-        verify(scriptEngineManager, never()).createScriptEngine(anyString(), anyString());\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), anyString());\n \n         // verify is called when the start level increases\n         updateStartLevel(100);\n-        verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\", p.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n+                p.toFile().toURI().toString());\n     }\n \n     @Test\n     public void testLoadOneCustomFileWaitUntilStarted() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         updateStartLevel(50);\n \n@@ -141,19 +149,20 @@ public void testLoadOneCustomFileWaitUntilStarted() {\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p);\n \n         // verify not yet called\n-        verify(scriptEngineManager, never()).createScriptEngine(anyString(), anyString());\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), anyString());\n \n         // verify is called when the start level increases\n         updateStartLevel(100);\n-        verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\", p.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n+                p.toFile().toURI().toString());\n     }\n \n     @Test\n     public void testLoadTwoCustomFilesDifferentStartLevels() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         Path p1 = getFile(\"script.sl70.js\");\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p1);\n@@ -161,29 +170,31 @@ public void testLoadTwoCustomFilesDifferentStartLevels() {\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p2);\n \n         // verify not yet called\n-        verify(scriptEngineManager, never()).createScriptEngine(anyString(), anyString());\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), anyString());\n \n         updateStartLevel(40);\n \n         // verify not yet called\n-        verify(scriptEngineManager, never()).createScriptEngine(anyString(), anyString());\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), anyString());\n \n         updateStartLevel(60);\n \n-        verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\", p2.toFile().toURI().toString());\n-        verify(scriptEngineManager, never()).createScriptEngine(anyString(), eq(p1.toFile().toURI().toString()));\n+        verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n+                p2.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), eq(p1.toFile().toURI().toString()));\n \n         updateStartLevel(80);\n \n-        verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\", p1.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n+                p1.toFile().toURI().toString());\n     }\n \n     @Test\n     public void testLoadTwoCustomFilesAlternativePatternDifferentStartLevels() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         Path p1 = getFile(\"sl70/script.js\");\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p1);\n@@ -191,21 +202,23 @@ public void testLoadTwoCustomFilesAlternativePatternDifferentStartLevels() {\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p2);\n \n         // verify not yet called\n-        verify(scriptEngineManager, never()).createScriptEngine(anyString(), anyString());\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), anyString());\n \n         updateStartLevel(40);\n \n         // verify not yet called\n-        verify(scriptEngineManager, never()).createScriptEngine(anyString(), anyString());\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), anyString());\n \n         updateStartLevel(60);\n \n-        verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\", p2.toFile().toURI().toString());\n-        verify(scriptEngineManager, never()).createScriptEngine(anyString(), eq(p1.toFile().toURI().toString()));\n+        verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n+                p2.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), eq(p1.toFile().toURI().toString()));\n \n         updateStartLevel(80);\n \n-        verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\", p1.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n+                p1.toFile().toURI().toString());\n     }\n \n     @Test\n@@ -216,10 +229,10 @@ public void testLoadOneDefaultFileDelayedSupport() {\n         ArgumentCaptor<Runnable> scheduledTask = ArgumentCaptor.forClass(Runnable.class);\n         scriptFileWatcher.setExecutorFactory(() -> scheduledExecutorService);\n \n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(false);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(false);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n         updateStartLevel(100);\n \n         verify(scheduledExecutorService).scheduleWithFixedDelay(scheduledTask.capture(), anyLong(), anyLong(), any());\n@@ -228,24 +241,25 @@ public void testLoadOneDefaultFileDelayedSupport() {\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p);\n \n         // verify not yet called\n-        verify(scriptEngineManager, never()).createScriptEngine(anyString(), anyString());\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(anyString(), anyString());\n \n         // add support is added for .js files\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         // update (in current thread)\n         scheduledTask.getValue().run();\n \n         // verify script has now been processed\n-        verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\", p.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n+                p.toFile().toURI().toString());\n     }\n \n     @Test\n     public void testOrderingWithinSingleStartLevel() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n \n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         Path p64 = getFile(\"script.sl64.js\");\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p64);\n@@ -256,23 +270,23 @@ public void testOrderingWithinSingleStartLevel() {\n \n         updateStartLevel(70);\n \n-        InOrder inOrder = inOrder(scriptEngineManager);\n+        InOrder inOrder = inOrder(scriptEngineManagerMock);\n \n-        inOrder.verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\",\n+        inOrder.verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n                 p64.toFile().toURI().toString());\n-        inOrder.verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\",\n+        inOrder.verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n                 p65.toFile().toURI().toString());\n-        inOrder.verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\",\n+        inOrder.verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n                 p66.toFile().toURI().toString());\n     }\n \n     @Test\n     public void testOrderingStartlevelFolders() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n \n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         Path p50 = getFile(\"a_script.js\");\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p50);\n@@ -283,22 +297,25 @@ public void testOrderingStartlevelFolders() {\n \n         updateStartLevel(70);\n \n-        InOrder inOrder = inOrder(scriptEngineManager);\n+        InOrder inOrder = inOrder(scriptEngineManagerMock);\n \n-        inOrder.verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\",\n+        inOrder.verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n                 p30.toFile().toURI().toString());\n-        inOrder.verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\",\n+        inOrder.verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n                 p40.toFile().toURI().toString());\n-        inOrder.verify(scriptEngineManager, timeout(10000).times(1)).createScriptEngine(\"js\",\n+        inOrder.verify(scriptEngineManagerMock, timeout(10000).times(1)).createScriptEngine(\"js\",\n                 p50.toFile().toURI().toString());\n     }\n \n     @Test\n     public void testReloadActiveWhenDependencyChanged() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        ScriptEngineFactory scriptEngineFactoryMock = mock(ScriptEngineFactory.class);\n+        when(scriptEngineFactoryMock.getDependencyTracker()).thenReturn(scriptDependencyTrackerMock);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineContainer.getFactory()).thenReturn(scriptEngineFactoryMock);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         updateStartLevel(100);\n \n@@ -308,15 +325,16 @@ public void testReloadActiveWhenDependencyChanged() {\n \n         scriptFileWatcher.onDependencyChange(p.toFile().toURI().toString());\n \n-        verify(scriptEngineManager, timeout(10000).times(2)).createScriptEngine(\"js\", p.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, timeout(10000).times(2)).createScriptEngine(\"js\",\n+                p.toFile().toURI().toString());\n     }\n \n     @Test\n     public void testNotReloadInactiveWhenDependencyChanged() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         Path p = getFile(\"script.js\");\n \n@@ -324,44 +342,15 @@ public void testNotReloadInactiveWhenDependencyChanged() {\n \n         scriptFileWatcher.onDependencyChange(p.toFile().toURI().toString());\n \n-        verify(scriptEngineManager, never()).createScriptEngine(\"js\", p.toFile().toURI().toString());\n-    }\n-\n-    @Test\n-    public void testRegisterDependency() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n-        ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n-        when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n-\n-        updateStartLevel(100);\n-\n-        Path p = getFile(\"script.js\");\n-\n-        when(scriptEngineContainer.getIdentifier()).thenReturn(p.toFile().toURI().toString());\n-\n-        // capture and run the listener\n-        ArgumentCaptor<ScriptDependencyListener> listener = ArgumentCaptor.forClass(ScriptDependencyListener.class);\n-\n-        scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p);\n-\n-        verify(scriptEngineManager).loadScript(eq(p.toFile().toURI().toString()), any(), listener.capture());\n-\n-        listener.getValue().accept(\"test\");\n-\n-        // verify the dependency was tracked\n-        verify(dependencyTracker).addLibForScript(p.toFile().toURI().toString(), \"test\");\n+        verify(scriptEngineManagerMock, never()).createScriptEngine(\"js\", p.toFile().toURI().toString());\n     }\n \n-    /**\n-     * @see https://github.com/openhab/openhab-core/issues/2246\n-     */\n     @Test\n     public void testRemoveBeforeReAdd() {\n-        when(scriptEngineManager.isSupported(\"js\")).thenReturn(true);\n+        when(scriptEngineManagerMock.isSupported(\"js\")).thenReturn(true);\n         ScriptEngineContainer scriptEngineContainer = mock(ScriptEngineContainer.class);\n         when(scriptEngineContainer.getScriptEngine()).thenReturn(mock(ScriptEngine.class));\n-        when(scriptEngineManager.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n+        when(scriptEngineManagerMock.createScriptEngine(anyString(), anyString())).thenReturn(scriptEngineContainer);\n \n         updateStartLevel(100);\n \n@@ -370,7 +359,8 @@ public void testRemoveBeforeReAdd() {\n         scriptFileWatcher.processWatchEvent(null, ENTRY_CREATE, p);\n         scriptFileWatcher.processWatchEvent(null, ENTRY_MODIFY, p);\n \n-        verify(scriptEngineManager).removeEngine(p.toFile().toURI().toString());\n-        verify(scriptEngineManager, timeout(10000).times(2)).createScriptEngine(\"js\", p.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock).removeEngine(p.toFile().toURI().toString());\n+        verify(scriptEngineManagerMock, timeout(10000).times(2)).createScriptEngine(\"js\",\n+                p.toFile().toURI().toString());\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java\nnew file mode 100644\nindex 00000000000..01d876d1a40\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/internal/ScriptEngineManagerImplTest.java\n@@ -0,0 +1,106 @@\n+/**\n+ * Copyright (c) 2010-2022 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.module.script.internal;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+import static org.openhab.core.automation.module.script.ScriptEngineFactory.CONTEXT_KEY_DEPENDENCY_LISTENER;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStreamReader;\n+import java.nio.charset.StandardCharsets;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+import javax.script.ScriptContext;\n+import javax.script.ScriptEngine;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.openhab.core.automation.module.script.ScriptDependencyTracker;\n+import org.openhab.core.automation.module.script.ScriptEngineFactory;\n+\n+/**\n+ * The {@link ScriptEngineManagerImplTest} is a test class for the {@link ScriptEngineManagerImpl}\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class ScriptEngineManagerImplTest {\n+\n+    private static final String SUPPORTED_SCRIPT_TYPE = \"supported\";\n+\n+    private @Mock @NonNullByDefault({}) ScriptExtensionManager scriptExtensionManagerMock;\n+    private @Mock @NonNullByDefault({}) ScriptEngineFactory scriptEngineFactoryMock;\n+    private @Mock @NonNullByDefault({}) ScriptEngine scriptEngineMock;\n+    private @Mock @NonNullByDefault({}) javax.script.ScriptEngineFactory internalScriptEngineFactoryMock;\n+    private @Mock @NonNullByDefault({}) ScriptDependencyTracker scriptDependencyTrackerMock;\n+    private @Mock @NonNullByDefault({}) ScriptContext scriptContextMock;\n+    private @Mock @NonNullByDefault({}) Consumer<String> dependencyListenerMock;\n+\n+    private @NonNullByDefault({}) ScriptEngineManagerImpl scriptEngineManager;\n+\n+    @BeforeEach\n+    public void setup() {\n+        when(scriptEngineMock.getFactory()).thenReturn(internalScriptEngineFactoryMock);\n+        when(scriptEngineMock.getContext()).thenReturn(scriptContextMock);\n+\n+        when(scriptEngineFactoryMock.getScriptTypes()).thenReturn(List.of(SUPPORTED_SCRIPT_TYPE));\n+        when(scriptEngineFactoryMock.createScriptEngine(SUPPORTED_SCRIPT_TYPE)).thenReturn(scriptEngineMock);\n+        when(scriptEngineFactoryMock.getDependencyTracker()).thenReturn(scriptDependencyTrackerMock);\n+        when(scriptDependencyTrackerMock.getTracker(any())).thenReturn(dependencyListenerMock);\n+\n+        scriptEngineManager = new ScriptEngineManagerImpl(scriptExtensionManagerMock);\n+        scriptEngineManager.addScriptEngineFactory(scriptEngineFactoryMock);\n+    }\n+\n+    @Test\n+    public void testDependencyListenerIsProperlyHandled() {\n+        String engineIdentifier = \"testIdentifier\";\n+        String scriptContent = \"testContent\";\n+\n+        InputStreamReader scriptContentReader = new InputStreamReader(\n+                new ByteArrayInputStream(scriptContent.getBytes(StandardCharsets.UTF_8)));\n+\n+        scriptEngineManager.createScriptEngine(SUPPORTED_SCRIPT_TYPE, engineIdentifier);\n+        scriptEngineManager.loadScript(engineIdentifier, scriptContentReader);\n+\n+        // verify the dependency tracker is requested\n+        verify(scriptDependencyTrackerMock).getTracker(eq(engineIdentifier));\n+\n+        // verify dependency tracker is set in the context\n+        ArgumentCaptor<Object> captor = ArgumentCaptor.forClass(Object.class);\n+        verify(scriptContextMock).setAttribute(eq(CONTEXT_KEY_DEPENDENCY_LISTENER), captor.capture(),\n+                eq(ScriptContext.ENGINE_SCOPE));\n+\n+        Object captured = captor.getValue();\n+        assertThat(captured, is(dependencyListenerMock));\n+\n+        // verify tracking is stopped when script engine is removed\n+        scriptEngineManager.removeEngine(engineIdentifier);\n+        verify(scriptDependencyTrackerMock).removeTracking(eq(engineIdentifier));\n+    }\n+}\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3155",
    "pr_id": 3155,
    "issue_id": 3128,
    "repo": "openhab/openhab-core",
    "problem_statement": "Access to `org.eclipse.xtext.xbase.lib` possible from addons?\nDear @openhab/core-maintainers,\r\n\r\nis it possible to access the `org.eclipse.xtext.xbase.lib` package that is used in core in addons?\r\nI am asking, because I need access to that package.\r\nAdding it as a dependency of the addon might be solution, but as it is already at some place (core) it would be great if I could just use it from there.",
    "issue_word_count": 75,
    "test_files_count": 1,
    "non_test_files_count": 9,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/action/ScriptExecution.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/action/Timer.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/ScriptActionScriptScopeProvider.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/ScriptExecutionImpl.java",
      "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/TimerImpl.java",
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/TimerImplTest.java",
      "bundles/org.openhab.core.model.script/bnd.bnd",
      "bundles/org.openhab.core.model.script/pom.xml",
      "bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/ScriptExecution.java",
      "bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/internal/engine/action/ScriptExecutionActionService.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/TimerImplTest.java"
    ],
    "base_commit": "2bceba69549c6017485e5089c64d6131889aa76a",
    "head_commit": "ec132862a21af948be8d3ed189c36bd0372b67c2",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3155",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3155",
    "dockerfile": "",
    "pr_merged_at": "2022-11-19T19:29:59.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/action/ScriptExecution.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/action/ScriptExecution.java\nnew file mode 100644\nindex 00000000000..2925d670998\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/action/ScriptExecution.java\n@@ -0,0 +1,69 @@\n+/**\n+ * Copyright (c) 2010-2022 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.module.script.action;\n+\n+import java.time.ZonedDateTime;\n+import java.util.function.Consumer;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+/**\n+ * The {@link ScriptExecution} allows creating timers for asynchronous script execution\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public interface ScriptExecution {\n+\n+    /**\n+     * Schedules a block of code for later execution.\n+     *\n+     * @param zonedDateTime the point in time when the code should be executed\n+     * @param closure the code block to execute\n+     * @return a handle to the created timer, so that it can be canceled or rescheduled\n+     */\n+    Timer createTimer(ZonedDateTime zonedDateTime, Runnable closure);\n+\n+    /**\n+     * Schedules a block of code for later execution.\n+     *\n+     * @param identifier an optional identifier\n+     * @param zonedDateTime the point in time when the code should be executed\n+     * @param closure the code block to execute\n+     * @return a handle to the created timer, so that it can be canceled or rescheduled\n+     */\n+    Timer createTimer(@Nullable String identifier, ZonedDateTime zonedDateTime, Runnable closure);\n+\n+    /**\n+     * Schedules a block of code (with argument) for later execution\n+     *\n+     * @param zonedDateTime the point in time when the code should be executed\n+     * @param arg1 the argument to pass to the code block\n+     * @param closure the code block to execute\n+     * @return a handle to the created timer, so that it can be canceled or rescheduled\n+     */\n+    Timer createTimerWithArgument(ZonedDateTime zonedDateTime, Object arg1, Consumer<Object> closure);\n+\n+    /**\n+     * Schedules a block of code (with argument) for later execution\n+     *\n+     * @param identifier an optional identifier\n+     * @param zonedDateTime the point in time when the code should be executed\n+     * @param arg1 the argument to pass to the code block\n+     * @param closure the code block to execute\n+     * @return a handle to the created timer, so that it can be canceled or rescheduled\n+     */\n+    Timer createTimerWithArgument(@Nullable String identifier, ZonedDateTime zonedDateTime, Object arg1,\n+            Consumer<Object> closure);\n+}\n\ndiff --git a/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/Timer.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/action/Timer.java\nsimilarity index 97%\nrename from bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/Timer.java\nrename to bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/action/Timer.java\nindex 8be977a1b01..65a262813ba 100644\n--- a/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/Timer.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/action/Timer.java\n@@ -10,7 +10,7 @@\n  *\n  * SPDX-License-Identifier: EPL-2.0\n  */\n-package org.openhab.core.model.script.actions;\n+package org.openhab.core.automation.module.script.action;\n \n import java.time.ZonedDateTime;\n \n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/ScriptActionScriptScopeProvider.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/ScriptActionScriptScopeProvider.java\nnew file mode 100644\nindex 00000000000..f7ba343c447\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/ScriptActionScriptScopeProvider.java\n@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) 2010-2022 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.module.script.internal.action;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.automation.module.script.ScriptExtensionProvider;\n+import org.openhab.core.automation.module.script.action.ScriptExecution;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+/**\n+ * This is a scope provider for script actions that were available in openHAB 1 DSL rules\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@Component(immediate = true)\n+@NonNullByDefault\n+public class ScriptActionScriptScopeProvider implements ScriptExtensionProvider {\n+\n+    private static final String PRESET_ACTIONS = \"ScriptAction\";\n+\n+    private final Map<String, Object> elements;\n+\n+    @Activate\n+    public ScriptActionScriptScopeProvider(final @Reference ScriptExecution scriptExecution) {\n+        elements = Map.of(\"scriptExecution\", scriptExecution);\n+    }\n+\n+    @Override\n+    public Collection<String> getDefaultPresets() {\n+        return Set.of();\n+    }\n+\n+    @Override\n+    public Collection<String> getPresets() {\n+        return Set.of(PRESET_ACTIONS);\n+    }\n+\n+    @Override\n+    public Collection<String> getTypes() {\n+        return elements.keySet();\n+    }\n+\n+    @Override\n+    public @Nullable Object get(String scriptIdentifier, String type) {\n+        return elements.get(type);\n+    }\n+\n+    @Override\n+    public Map<String, Object> importPreset(String scriptIdentifier, String preset) {\n+        if (PRESET_ACTIONS.equals(preset)) {\n+            return elements;\n+        }\n+        return Map.of();\n+    }\n+\n+    @Override\n+    public void unload(String scriptIdentifier) {\n+        // nothing todo\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/ScriptExecutionImpl.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/ScriptExecutionImpl.java\nnew file mode 100644\nindex 00000000000..8a3ca372281\n--- /dev/null\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/ScriptExecutionImpl.java\n@@ -0,0 +1,71 @@\n+/**\n+ * Copyright (c) 2010-2022 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.automation.module.script.internal.action;\n+\n+import java.time.ZonedDateTime;\n+import java.util.function.Consumer;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.automation.RuleManager;\n+import org.openhab.core.automation.RuleRegistry;\n+import org.openhab.core.automation.module.script.action.ScriptExecution;\n+import org.openhab.core.automation.module.script.action.Timer;\n+import org.openhab.core.scheduler.Scheduler;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+/**\n+ * The static methods of this class are made available as functions in the scripts.\n+ * This allows a script to call another script, which is available as a file.\n+ *\n+ * @author Kai Kreuzer - Initial contribution\n+ */\n+@Component(immediate = true, service = ScriptExecution.class)\n+@NonNullByDefault\n+public class ScriptExecutionImpl implements ScriptExecution {\n+\n+    private final Scheduler scheduler;\n+    private final RuleManager ruleManager;\n+    private final RuleRegistry ruleRegistry;\n+\n+    @Activate\n+    public ScriptExecutionImpl(@Reference RuleRegistry ruleRegistry, @Reference RuleManager ruleManager,\n+            @Reference Scheduler scheduler) {\n+        this.ruleRegistry = ruleRegistry;\n+        this.scheduler = scheduler;\n+        this.ruleManager = ruleManager;\n+    }\n+\n+    @Override\n+    public Timer createTimer(ZonedDateTime zonedDateTime, Runnable runnable) {\n+        return createTimer(null, zonedDateTime, runnable);\n+    }\n+\n+    @Override\n+    public Timer createTimer(@Nullable String identifier, ZonedDateTime zonedDateTime, Runnable runnable) {\n+        return new TimerImpl(scheduler, zonedDateTime, runnable::run, identifier);\n+    }\n+\n+    @Override\n+    public Timer createTimerWithArgument(ZonedDateTime zonedDateTime, Object arg1, Consumer<Object> consumer) {\n+        return createTimerWithArgument(null, zonedDateTime, arg1, consumer);\n+    }\n+\n+    @Override\n+    public Timer createTimerWithArgument(@Nullable String identifier, ZonedDateTime zonedDateTime, Object arg1,\n+            Consumer<Object> consumer) {\n+        return new TimerImpl(scheduler, zonedDateTime, () -> consumer.accept(arg1), identifier);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/internal/actions/TimerImpl.java b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/TimerImpl.java\nsimilarity index 95%\nrename from bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/internal/actions/TimerImpl.java\nrename to bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/TimerImpl.java\nindex 22692d3c767..acc43a287f6 100644\n--- a/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/internal/actions/TimerImpl.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/action/TimerImpl.java\n@@ -10,14 +10,14 @@\n  *\n  * SPDX-License-Identifier: EPL-2.0\n  */\n-package org.openhab.core.model.script.internal.actions;\n+package org.openhab.core.automation.module.script.internal.action;\n \n import java.time.ZonedDateTime;\n import java.util.concurrent.TimeUnit;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n-import org.openhab.core.model.script.actions.Timer;\n+import org.openhab.core.automation.module.script.action.Timer;\n import org.openhab.core.scheduler.ScheduledCompletableFuture;\n import org.openhab.core.scheduler.Scheduler;\n import org.openhab.core.scheduler.SchedulerRunnable;\n\ndiff --git a/bundles/org.openhab.core.model.script/bnd.bnd b/bundles/org.openhab.core.model.script/bnd.bnd\nindex 1428cf25700..14fdb26f659 100644\n--- a/bundles/org.openhab.core.model.script/bnd.bnd\n+++ b/bundles/org.openhab.core.model.script/bnd.bnd\n@@ -20,6 +20,7 @@ Export-Package: org.openhab.core.model.script,\\\n Import-Package: \\\n  org.openhab.core.audio,\\\n  org.openhab.core.common.registry,\\\n+ org.openhab.core.automation.module.script.action,\\\n  org.openhab.core.ephemeris,\\\n  org.openhab.core.events,\\\n  org.openhab.core.items,\\\n\ndiff --git a/bundles/org.openhab.core.model.script/pom.xml b/bundles/org.openhab.core.model.script/pom.xml\nindex 7e6a6fcc95e..91bb48883ca 100644\n--- a/bundles/org.openhab.core.model.script/pom.xml\n+++ b/bundles/org.openhab.core.model.script/pom.xml\n@@ -50,6 +50,11 @@\n       <artifactId>org.openhab.core.io.net</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.openhab.core.bundles</groupId>\n+      <artifactId>org.openhab.core.automation.module.script</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n   </dependencies>\n \n   <build>\n\ndiff --git a/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/ScriptExecution.java b/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/ScriptExecution.java\nindex be837c5dcb8..cd1136da053 100644\n--- a/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/ScriptExecution.java\n+++ b/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/actions/ScriptExecution.java\n@@ -12,28 +12,33 @@\n  */\n package org.openhab.core.model.script.actions;\n \n-import java.time.ZonedDateTime;\n-\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n import org.eclipse.xtext.xbase.XExpression;\n-import org.eclipse.xtext.xbase.lib.Procedures.Procedure0;\n-import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;\n+import org.eclipse.xtext.xbase.lib.Procedures;\n+import org.openhab.core.automation.module.script.action.Timer;\n import org.openhab.core.model.core.ModelRepository;\n import org.openhab.core.model.script.ScriptServiceUtil;\n import org.openhab.core.model.script.engine.Script;\n import org.openhab.core.model.script.engine.ScriptEngine;\n import org.openhab.core.model.script.engine.ScriptExecutionException;\n-import org.openhab.core.model.script.internal.actions.TimerImpl;\n-import org.openhab.core.scheduler.Scheduler;\n+import org.openhab.core.model.script.engine.action.ActionDoc;\n+import org.openhab.core.model.script.internal.engine.action.ScriptExecutionActionService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.time.ZonedDateTime;\n \n /**\n- * The static methods of this class are made available as functions in the scripts.\n- * This allows a script to call another script, which is available as a file.\n+ * The {@link ScriptExecution} is a wrapper for the ScriptExecution actions\n  *\n- * @author Kai Kreuzer - Initial contribution\n+ * @author Jan N. Klug - Initial contribution\n  */\n+@NonNullByDefault\n public class ScriptExecution {\n \n+    private static final Logger logger = LoggerFactory.getLogger(ScriptExecution.class);\n+\n     /**\n      * Calls a script which must be located in the configurations/scripts folder.\n      *\n@@ -43,6 +48,7 @@ public class ScriptExecution {\n      * @return the return value of the script\n      * @throws ScriptExecutionException if an error occurs during the execution\n      */\n+    @ActionDoc(text = \"call a script file\")\n     public static Object callScript(String scriptName) throws ScriptExecutionException {\n         ModelRepository repo = ScriptServiceUtil.getModelRepository();\n         if (repo != null) {\n@@ -67,67 +73,23 @@ public static Object callScript(String scriptName) throws ScriptExecutionExcepti\n         }\n     }\n \n-    /**\n-     * Schedules a block of code for later execution.\n-     *\n-     * @param instant the point in time when the code should be executed\n-     * @param closure the code block to execute\n-     *\n-     * @return a handle to the created timer, so that it can be canceled or rescheduled\n-     * @throws ScriptExecutionException if an error occurs during the execution\n-     */\n-    public static Timer createTimer(ZonedDateTime instant, Procedure0 closure) {\n-        return createTimer(null, instant, closure);\n+    @ActionDoc(text = \"create a timer\")\n+    public static Timer createTimer(ZonedDateTime zonedDateTime, Procedures.Procedure0 closure) {\n+        return ScriptExecutionActionService.getScriptExecution().createTimer(zonedDateTime, closure::apply);\n     }\n \n-    /**\n-     * Schedules a block of code for later execution.\n-     *\n-     * @param identifier an optional identifier\n-     * @param instant the point in time when the code should be executed\n-     * @param closure the code block to execute\n-     *\n-     * @return a handle to the created timer, so that it can be canceled or rescheduled\n-     * @throws ScriptExecutionException if an error occurs during the execution\n-     */\n-    public static Timer createTimer(@Nullable String identifier, ZonedDateTime instant, Procedure0 closure) {\n-        Scheduler scheduler = ScriptServiceUtil.getScheduler();\n-\n-        return new TimerImpl(scheduler, instant, () -> {\n-            closure.apply();\n-        }, identifier);\n+    @ActionDoc(text = \"create an identifiable timer \")\n+    public static Timer createTimer(@Nullable String identifier, ZonedDateTime zonedDateTime, Procedures.Procedure0 closure) {\n+        return ScriptExecutionActionService.getScriptExecution().createTimer(identifier, zonedDateTime, closure::apply);\n     }\n \n-    /**\n-     * Schedules a block of code (with argument) for later execution\n-     *\n-     * @param instant the point in time when the code should be executed\n-     * @param arg1 the argument to pass to the code block\n-     * @param closure the code block to execute\n-     *\n-     * @return a handle to the created timer, so that it can be canceled or rescheduled\n-     * @throws ScriptExecutionException if an error occurs during the execution\n-     */\n-    public static Timer createTimerWithArgument(ZonedDateTime instant, Object arg1, Procedure1<Object> closure) {\n-        return createTimerWithArgument(null, instant, arg1, closure);\n+    @ActionDoc(text = \"create a timer with argument\")\n+    public static Timer createTimerWithArgument(ZonedDateTime zonedDateTime, Object arg1, Procedures.Procedure1 closure) {\n+        return ScriptExecutionActionService.getScriptExecution().createTimerWithArgument(zonedDateTime, arg1, closure::apply);\n     }\n \n-    /**\n-     * Schedules a block of code (with argument) for later execution\n-     *\n-     * @param identifier an optional identifier\n-     * @param instant the point in time when the code should be executed\n-     * @param arg1 the argument to pass to the code block\n-     * @param closure the code block to execute\n-     *\n-     * @return a handle to the created timer, so that it can be canceled or rescheduled\n-     * @throws ScriptExecutionException if an error occurs during the execution\n-     */\n-    public static Timer createTimerWithArgument(@Nullable String identifier,  ZonedDateTime instant, Object arg1, Procedure1<Object> closure) {\n-        Scheduler scheduler = ScriptServiceUtil.getScheduler();\n-\n-        return new TimerImpl(scheduler, instant, () -> {\n-            closure.apply(arg1);\n-        }, identifier);\n+    @ActionDoc(text = \"create an identifiable timer with argument\")\n+    public static Timer createTimerWithArgument(@Nullable String identifier, ZonedDateTime zonedDateTime, Object arg1, Procedures.Procedure1 closure) {\n+        return ScriptExecutionActionService.getScriptExecution().createTimerWithArgument(identifier, zonedDateTime, arg1, closure::apply);\n     }\n }\n\ndiff --git a/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/internal/engine/action/ScriptExecutionActionService.java b/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/internal/engine/action/ScriptExecutionActionService.java\nnew file mode 100644\nindex 00000000000..e777d9185a2\n--- /dev/null\n+++ b/bundles/org.openhab.core.model.script/src/org/openhab/core/model/script/internal/engine/action/ScriptExecutionActionService.java\n@@ -0,0 +1,49 @@\n+/**\n+ * Copyright (c) 2010-2022 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.model.script.internal.engine.action;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.automation.module.script.action.ScriptExecution;\n+import org.openhab.core.model.script.engine.action.ActionService;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This class registers an OSGi service for the ScriptExecution action.\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@Component(immediate = true)\n+@NonNullByDefault\n+public class ScriptExecutionActionService implements ActionService {\n+\n+    private static @Nullable ScriptExecution scriptExecution;\n+\n+    @Activate\n+    public ScriptExecutionActionService(final @Reference ScriptExecution scriptExecution) {\n+        ScriptExecutionActionService.scriptExecution = scriptExecution;\n+    }\n+\n+    @Override\n+    public Class<?> getActionClass() {\n+        return ScriptExecution.class;\n+    }\n+\n+    public static ScriptExecution getScriptExecution() {\n+        return Objects.requireNonNull(scriptExecution);\n+    }\n+}\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.model.script/src.moved/test/java/org/openhab/core/model/script/internal/actions/TimerImplTest.java b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/TimerImplTest.java\nsimilarity index 95%\nrename from bundles/org.openhab.core.model.script/src.moved/test/java/org/openhab/core/model/script/internal/actions/TimerImplTest.java\nrename to bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/TimerImplTest.java\nindex 25a71264041..65d1fc2c96e 100644\n--- a/bundles/org.openhab.core.model.script/src.moved/test/java/org/openhab/core/model/script/internal/actions/TimerImplTest.java\n+++ b/bundles/org.openhab.core.automation.module.script/src/test/java/org/openhab/core/automation/module/script/TimerImplTest.java\n@@ -10,7 +10,7 @@\n  *\n  * SPDX-License-Identifier: EPL-2.0\n  */\n-package org.openhab.core.model.script.internal.actions;\n+package org.openhab.core.automation.module.script;\n \n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n@@ -21,8 +21,9 @@\n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n+import org.openhab.core.automation.module.script.action.Timer;\n+import org.openhab.core.automation.module.script.internal.action.TimerImpl;\n import org.openhab.core.internal.scheduler.SchedulerImpl;\n-import org.openhab.core.model.script.actions.Timer;\n import org.openhab.core.scheduler.SchedulerRunnable;\n \n /**\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3153",
    "pr_id": 3153,
    "issue_id": 3121,
    "repo": "openhab/openhab-core",
    "problem_statement": "default UoM missing\nThere's operational states when an UoM item (say Number:Power) has a value but no unit such as after mapdb restoreOnStartup (as persistence generally does not store the unit).\r\nThis state might go unnoticed until e.g. the item is cast to the proper type in rulesDSL. rulesDSL refuses to cast and the rule crashes. Sad but correctly so because it does not know which unit to apply (in the Number:Power example whether to apply W or kW or mW).\r\n\r\nWe need a default unit to apply whenever a UoM item is updated and does not have a unit yet. It is imho not acceptable to leave that problem to the rule writer (incredibly hard to catch and work around everywhere it could surface).\r\nThe default unit to apply can be derived from the UoM (when there's none it is reasonable to assume the base unit i.e. W in the example).\r\n",
    "issue_word_count": 158,
    "test_files_count": 2,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/items/NumberItem.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java"
    ],
    "base_commit": "2bceba69549c6017485e5089c64d6131889aa76a",
    "head_commit": "12c136cc681fe66b5ce48e1085972dd3bdf0b373",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3153",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3153",
    "dockerfile": "",
    "pr_merged_at": "2022-11-19T22:05:56.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/items/NumberItem.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/items/NumberItem.java\nindex 4f337676f1b..50920d471da 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/items/NumberItem.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/items/NumberItem.java\n@@ -81,7 +81,12 @@ public void send(DecimalType command) {\n     }\n \n     public void send(QuantityType command) {\n-        internalSend(command);\n+        if (dimension == null) {\n+            DecimalType strippedCommand = new DecimalType(command.toBigDecimal());\n+            internalSend(strippedCommand);\n+        } else {\n+            internalSend(command);\n+        }\n     }\n \n     @Override\n@@ -109,6 +114,13 @@ public void send(QuantityType command) {\n \n     @Override\n     public void setState(State state) {\n+        // QuantityType update to a NumberItem without, strip unit\n+        if (state instanceof QuantityType && dimension == null) {\n+            DecimalType plainState = new DecimalType(((QuantityType<?>) state).toBigDecimal());\n+            super.setState(plainState);\n+            return;\n+        }\n+\n         // DecimalType update for a NumberItem with dimension, convert to QuantityType:\n         if (state instanceof DecimalType && dimension != null) {\n             Unit<?> unit = getUnit();\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java\nindex 811041da44d..941a2962cf1 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/QuantityType.java\n@@ -160,8 +160,6 @@ public QuantityType(String value, Locale locale) {\n      *\n      * @param value the non null measurement value.\n      * @param unit the non null measurement unit.\n-     * @param conversionUnits the optional unit map which is used to determine the {@link MeasurementSystem} specific\n-     *            unit for conversion.\n      */\n     public QuantityType(Number value, Unit<T> unit) {\n         // Avoid scientific notation for double\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java\nindex 6490a7c9af1..17abc761b8e 100644\n--- a/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java\n+++ b/bundles/org.openhab.core.automation/src/test/java/org/openhab/core/automation/internal/module/handler/ItemStateConditionHandlerTest.java\n@@ -72,6 +72,10 @@ public ParameterSet(String itemType, String comparisonState, State itemState, bo\n                     item = new NumberItem(ITEM_NAME);\n                     ((NumberItem) item).setState(itemState);\n                     break;\n+                case \"Number:Temperature\":\n+                    item = new NumberItem(\"Number:Temperature\", ITEM_NAME);\n+                    ((NumberItem) item).setState(itemState);\n+                    break;\n                 case \"Dimmer\":\n                     item = new DimmerItem(ITEM_NAME);\n                     ((DimmerItem) item).setState(itemState);\n@@ -89,15 +93,16 @@ public static Collection<Object[]> equalsParameters() {\n         return Arrays.asList(new Object[][] { //\n                 { new ParameterSet(\"Number\", \"5\", new DecimalType(23), false) }, //\n                 { new ParameterSet(\"Number\", \"5\", new DecimalType(5), true) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(23), false) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(5), false) }, //\n-                { new ParameterSet(\"Number\", \"0\", new QuantityType<>(), true) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(5, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"0 Â°C\", new QuantityType<>(32, ImperialUnits.FAHRENHEIT), true) }, //\n-                { new ParameterSet(\"Number\", \"32 Â°F\", new QuantityType<>(0, SIUnits.CELSIUS), true) } });\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new DecimalType(23), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new DecimalType(5), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"0\", new QuantityType<>(), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(5, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"0 Â°C\", new QuantityType<>(32, ImperialUnits.FAHRENHEIT),\n+                        true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"32 Â°F\", new QuantityType<>(0, SIUnits.CELSIUS), true) } });\n     }\n \n     public static Collection<Object[]> greaterThanParameters() {\n@@ -106,11 +111,11 @@ public static Collection<Object[]> greaterThanParameters() {\n                 { new ParameterSet(\"Number\", \"5\", new DecimalType(5), false) }, //\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(23), true) }, //\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(5), false) }, //\n-                { new ParameterSet(\"Number\", \"0\", new QuantityType<>(), false) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(5, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(5, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"0\", new QuantityType<>(), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(5, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(5, SIUnits.CELSIUS), false) }, //\n                 { new ParameterSet(\"Dimmer\", \"20\", new PercentType(40), true) }, //\n                 { new ParameterSet(\"Dimmer\", \"20\", new PercentType(20), false) } });\n     }\n@@ -123,15 +128,16 @@ public static Collection<Object[]> greaterThanOrEqualsParameters() {\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(23), true) }, //\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(5), true) }, //\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(4), false) }, //\n-                { new ParameterSet(\"Number\", \"0\", new QuantityType<>(), true) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(4, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(4, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"0 Â°C\", new QuantityType<>(32, ImperialUnits.FAHRENHEIT), true) }, //\n-                { new ParameterSet(\"Number\", \"32 Â°F\", new QuantityType<>(0, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"0\", new QuantityType<>(), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(4, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(4, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"0 Â°C\", new QuantityType<>(32, ImperialUnits.FAHRENHEIT),\n+                        true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"32 Â°F\", new QuantityType<>(0, SIUnits.CELSIUS), true) }, //\n                 { new ParameterSet(\"Dimmer\", \"20\", new PercentType(40), true) }, //\n                 { new ParameterSet(\"Dimmer\", \"40\", new PercentType(20), false) } });\n     }\n@@ -142,11 +148,11 @@ public static Collection<Object[]> lessThanParameters() {\n                 { new ParameterSet(\"Number\", \"5\", new DecimalType(4), true) }, //\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(23), false) }, //\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(4), true) }, //\n-                { new ParameterSet(\"Number\", \"0\", new QuantityType<>(), false) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(4, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(4, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"0\", new QuantityType<>(), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(4, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(4, SIUnits.CELSIUS), true) }, //\n                 { new ParameterSet(\"Dimmer\", \"40\", new PercentType(20), true) }, //\n                 { new ParameterSet(\"Dimmer\", \"20\", new PercentType(20), false) } });\n     }\n@@ -159,15 +165,16 @@ public static Collection<Object[]> lessThanOrEqualsParameters() {\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(23), false) }, //\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(5), true) }, //\n                 { new ParameterSet(\"Number\", \"5 Â°C\", new DecimalType(4), true) }, //\n-                { new ParameterSet(\"Number\", \"0\", new QuantityType<>(), true) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5\", new QuantityType<>(4, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"5 Â°C\", new QuantityType<>(4, SIUnits.CELSIUS), true) }, //\n-                { new ParameterSet(\"Number\", \"0 Â°C\", new QuantityType<>(32, ImperialUnits.FAHRENHEIT), true) }, //\n-                { new ParameterSet(\"Number\", \"32 Â°F\", new QuantityType<>(0, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"0\", new QuantityType<>(), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5\", new QuantityType<>(4, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(23, SIUnits.CELSIUS), false) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(5, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"5 Â°C\", new QuantityType<>(4, SIUnits.CELSIUS), true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"0 Â°C\", new QuantityType<>(32, ImperialUnits.FAHRENHEIT),\n+                        true) }, //\n+                { new ParameterSet(\"Number:Temperature\", \"32 Â°F\", new QuantityType<>(0, SIUnits.CELSIUS), true) }, //\n                 { new ParameterSet(\"Dimmer\", \"20\", new PercentType(40), false) }, //\n                 { new ParameterSet(\"Dimmer\", \"40\", new PercentType(20), true) } });\n     }\n\ndiff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java\nindex 2715d22c08a..6f84abaf378 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java\n@@ -23,11 +23,14 @@\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n import org.mockito.Mock;\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.mockito.junit.jupiter.MockitoSettings;\n import org.mockito.quality.Strictness;\n+import org.openhab.core.events.EventPublisher;\n import org.openhab.core.i18n.UnitProvider;\n+import org.openhab.core.items.events.ItemCommandEvent;\n import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.library.types.HSBType;\n import org.openhab.core.library.types.PercentType;\n@@ -104,6 +107,14 @@ public void testSetQuantityTypeAccepted() {\n         assertThat(item.getState(), is(new QuantityType<>(\"20 Â°C\")));\n     }\n \n+    @Test\n+    public void testSetQuantityOnPlainNumberStripsUnit() {\n+        NumberItem item = new NumberItem(ITEM_NAME);\n+        item.setState(new QuantityType<>(\"20 Â°C\"));\n+\n+        assertThat(item.getState(), is(new DecimalType(\"20\")));\n+    }\n+\n     @Test\n     public void testSetQuantityTypeConverted() {\n         NumberItem item = new NumberItem(\"Number:Temperature\", ITEM_NAME);\n@@ -123,6 +134,40 @@ public void testSetQuantityTypeUnconverted() {\n         assertThat(item.getState(), is(UnDefType.NULL));\n     }\n \n+    @Test\n+    public void testCommandUnitIsPassedForDimensionItem() {\n+        NumberItem item = new NumberItem(\"Number:Temperature\", ITEM_NAME);\n+        UnitProvider unitProvider = mock(UnitProvider.class);\n+        when(unitProvider.getUnit(Temperature.class)).thenReturn(SIUnits.CELSIUS);\n+        item.setUnitProvider(unitProvider);\n+        EventPublisher eventPublisher = mock(EventPublisher.class);\n+        item.setEventPublisher(eventPublisher);\n+\n+        QuantityType<?> command = new QuantityType<>(\"15 Â°C\");\n+        item.send(new QuantityType<>(\"15 Â°C\"));\n+\n+        ArgumentCaptor<ItemCommandEvent> captor = ArgumentCaptor.forClass(ItemCommandEvent.class);\n+        verify(eventPublisher).post(captor.capture());\n+\n+        ItemCommandEvent event = captor.getValue();\n+        assertThat(event.getItemCommand(), is(new QuantityType<>(\"15 Â°C\")));\n+    }\n+\n+    @Test\n+    public void testCommandUnitIsStrippedForDimensionlessItem() {\n+        NumberItem item = new NumberItem(\"Number\", ITEM_NAME);\n+        EventPublisher eventPublisher = mock(EventPublisher.class);\n+        item.setEventPublisher(eventPublisher);\n+\n+        item.send(new QuantityType<>(\"15 Â°C\"));\n+\n+        ArgumentCaptor<ItemCommandEvent> captor = ArgumentCaptor.forClass(ItemCommandEvent.class);\n+        verify(eventPublisher).post(captor.capture());\n+\n+        ItemCommandEvent event = captor.getValue();\n+        assertThat(event.getItemCommand(), is(new DecimalType(\"15\")));\n+    }\n+\n     @SuppressWarnings(\"null\")\n     @Test\n     public void testStripUnitPlaceholderFromPlainNumberItem() {\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3145",
    "pr_id": 3145,
    "issue_id": 944,
    "repo": "openhab/openhab-core",
    "problem_statement": "FR: Persisitence - countSince\nUse-Case:\r\nI have an item, low_battery_alarm which is a switch. If triggered, I switch all appliances off (Solar house). \r\nWhen the alarm state clears I want to turn everything back on.\r\n\r\nWhen the state is cleared, before turning everything back on, I want to check to see if the alarm has triggered n-number of times in the last 30 minutes. \r\n\r\nI could use a Number Item as 1/0 and sum that but that does not smell right.\r\n\r\nCould a new method be added to the persitence CountSince which simply counts persistened instances since the time.\r\n\r\n\r\nthank you.\r\n",
    "issue_word_count": 103,
    "test_files_count": 1,
    "non_test_files_count": 1,
    "pr_changed_files": [
      "bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java",
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java"
    ],
    "base_commit": "9cdaa48fa5e13f8d1194ec48a5a40340e4436a1c",
    "head_commit": "c5aa133fe224e799301717e21e44f029e08bbfe2",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3145",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3145",
    "dockerfile": "",
    "pr_merged_at": "2022-12-10T23:14:06.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\nindex 25ee2589208..034993e4fb4 100644\n--- a/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n+++ b/bundles/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n@@ -16,8 +16,10 @@\n import java.math.MathContext;\n import java.time.Instant;\n import java.time.ZonedDateTime;\n+import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.stream.StreamSupport;\n \n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.items.Item;\n@@ -1091,6 +1093,63 @@ public static DecimalType evolutionRate(Item item, ZonedDateTime begin, ZonedDat\n         return null;\n     }\n \n+    /**\n+     * Gets the number of available historic data points of a given {@link Item} from a point in time until now.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to query\n+     * @param begin the beginning point in time\n+     * @return the number of values persisted for this item\n+     */\n+    public static long countSince(Item item, ZonedDateTime begin) {\n+        return countSince(item, begin, getDefaultServiceId());\n+    }\n+\n+    /**\n+     * Gets the number of available historic data points of a given {@link Item} from a point in time until now.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to query\n+     * @param begin the beginning point in time\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the number of values persisted for this item\n+     */\n+    public static long countSince(Item item, ZonedDateTime begin, String serviceId) {\n+        return countBetween(item, begin, null, serviceId);\n+    }\n+\n+    /**\n+     * Gets the number of available historic data points of a given {@link Item} between two points in time.\n+     * The default {@link PersistenceService} is used.\n+     *\n+     * @param item the {@link Item} to query\n+     * @param begin the beginning point in time\n+     * @param end the end point in time\n+     * @return the number of values persisted for this item\n+     */\n+    public static long countBetween(Item item, ZonedDateTime begin, @Nullable ZonedDateTime end) {\n+        return countBetween(item, begin, end, getDefaultServiceId());\n+    }\n+\n+    /**\n+     * Gets the number of available historic data points of a given {@link Item} between two points in time.\n+     * The {@link PersistenceService} identified by the <code>serviceId</code> is used.\n+     *\n+     * @param item the {@link Item} to query\n+     * @param begin the beginning point in time\n+     * @param end the end point in time\n+     * @param serviceId the name of the {@link PersistenceService} to use\n+     * @return the number of values persisted for this item\n+     */\n+    public static long countBetween(Item item, ZonedDateTime begin, @Nullable ZonedDateTime end, String serviceId) {\n+        Iterable<HistoricItem> historicItems = getAllStatesBetween(item, begin, end, serviceId);\n+        if (historicItems instanceof Collection<?>) {\n+            return ((Collection<?>) historicItems).size();\n+        } else {\n+            return StreamSupport.stream(historicItems.spliterator(), false).count();\n+        }\n+    }\n+\n     private static @Nullable PersistenceService getService(String serviceId) {\n         PersistenceService service = null;\n         if (registry != null) {\n",
    "test_patch": "diff --git a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\nindex ac2fc3434c1..b983db6ad35 100644\n--- a/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n+++ b/bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java\n@@ -914,4 +914,41 @@ public void testUpdatedBetween() {\n                 ZonedDateTime.of(2011, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n         assertFalse(updated);\n     }\n+\n+    @Test\n+    public void testCountBetween() {\n+        long counts = PersistenceExtensions.countBetween(numberItem,\n+                ZonedDateTime.of(1940, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(1970, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), TestPersistenceService.ID);\n+        assertEquals(0, counts);\n+\n+        counts = PersistenceExtensions.countBetween(numberItem,\n+                ZonedDateTime.of(2005, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(2011, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), TestPersistenceService.ID);\n+        assertEquals(7, counts);\n+\n+        counts = PersistenceExtensions.countBetween(numberItem,\n+                ZonedDateTime.of(2005, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()),\n+                ZonedDateTime.of(2011, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertEquals(0, counts);\n+    }\n+\n+    @Test\n+    public void testCountSince() {\n+        long counts = PersistenceExtensions.countSince(numberItem,\n+                ZonedDateTime.of(1980, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), TestPersistenceService.ID);\n+        assertEquals(33, counts);\n+\n+        counts = PersistenceExtensions.countSince(numberItem,\n+                ZonedDateTime.of(2007, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), TestPersistenceService.ID);\n+        assertEquals(6, counts);\n+\n+        counts = PersistenceExtensions.countSince(numberItem,\n+                ZonedDateTime.of(2020, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()), TestPersistenceService.ID);\n+        assertEquals(0, counts);\n+\n+        counts = PersistenceExtensions.countSince(numberItem,\n+                ZonedDateTime.of(2000, 1, 1, 0, 0, 0, 0, ZoneId.systemDefault()));\n+        assertEquals(0, counts);\n+    }\n }\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3144",
    "pr_id": 3144,
    "issue_id": 2449,
    "repo": "openhab/openhab-core",
    "problem_statement": "Group SUM aggregation does not inherit the member's UoM\nA Group containing members with a UoM setting that differs from the 'default' will not use the members' UoM setting in the SUM aggregation. This probably also applies to the AVG aggregation since it also generates a new value (as opposed to returning a matching Item's state when aggregating with MIN or MAX).\r\n\r\nAn example is provided below:\r\n\r\nThe Buienradar binding exposes rain intensity forecasts as `Number:Speed` expressed in **mm/h**.  This is also 'inherited' by the `Item`s linked to these binding channels: the relating `Item`s are of subtype `Number:Speed` and the state is expressed in **mm/h**.\r\n\r\nWhen I create a `Group` and assign all rain intensity `Item`s from the Buienradar binding, and when I set the `SUM` aggregation, the Group uses a different UoM than the individual members, even if I set the member's subtype to 'Number:Speed`. The Group reports a state in **km/h** (1 million bigger unit than the individual members' unit)\r\n\r\nWhere an `Item` can be configured to have an explicit UoM for the quantity represented in the state, this is apparently not possible with a `Group`.\r\n\r\nFor Main UI widgets you can of course use the `displayState` property which behaves similarly to what the `label=\"...\"` construct allows in sitemaps.\r\n\r\nSee also the following discussion:\r\nhttps://community.openhab.org/t/oh3-group-item-number-speed-defaults-to-km-h-how-to-set-item-uom-e-g-to-mm-h/125087\r\n\r\n",
    "issue_word_count": 253,
    "test_files_count": 1,
    "non_test_files_count": 2,
    "pr_changed_files": [
      "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java",
      "itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/ItemRegistryImplTest.java"
    ],
    "pr_changed_test_files": [
      "itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/ItemRegistryImplTest.java"
    ],
    "base_commit": "9cdaa48fa5e13f8d1194ec48a5a40340e4436a1c",
    "head_commit": "9a66926aeec92b04a4d54bc9a93b39c50f4dc268",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3144",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3144",
    "dockerfile": "",
    "pr_merged_at": "2022-11-06T19:50:06.000Z",
    "patch": "diff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java\nindex 6159b544280..d2c1c97bcb6 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java\n@@ -293,14 +293,14 @@ protected void unsetReadyService(ReadyService readyService) {\n     }\n \n     @Reference(cardinality = ReferenceCardinality.OPTIONAL, policy = ReferencePolicy.DYNAMIC)\n-    protected void setUnitProvider(UnitProvider unitProvider) {\n+    public void setUnitProvider(UnitProvider unitProvider) {\n         this.unitProvider = unitProvider;\n         for (Item item : getItems()) {\n             ((GenericItem) item).setUnitProvider(unitProvider);\n         }\n     }\n \n-    protected void unsetUnitProvider(UnitProvider unitProvider) {\n+    public void unsetUnitProvider(UnitProvider unitProvider) {\n         this.unitProvider = null;\n         for (Item item : getItems()) {\n             ((GenericItem) item).setUnitProvider(null);\n@@ -455,7 +455,7 @@ protected void deactivate() {\n     }\n \n     @Reference(cardinality = ReferenceCardinality.OPTIONAL, policy = ReferencePolicy.DYNAMIC)\n-    protected void setStateDescriptionService(StateDescriptionService stateDescriptionService) {\n+    public void setStateDescriptionService(StateDescriptionService stateDescriptionService) {\n         this.stateDescriptionService = stateDescriptionService;\n \n         for (Item item : getItems()) {\n@@ -463,7 +463,7 @@ protected void setStateDescriptionService(StateDescriptionService stateDescripti\n         }\n     }\n \n-    protected void unsetStateDescriptionService(StateDescriptionService stateDescriptionService) {\n+    public void unsetStateDescriptionService(StateDescriptionService stateDescriptionService) {\n         this.stateDescriptionService = null;\n \n         for (Item item : getItems()) {\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java\nindex 1a8429c294e..a97ad952de5 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java\n@@ -27,6 +27,8 @@\n import org.eclipse.jdt.annotation.Nullable;\n import org.openhab.core.i18n.UnitProvider;\n import org.openhab.core.items.events.ItemEventFactory;\n+import org.openhab.core.service.CommandDescriptionService;\n+import org.openhab.core.service.StateDescriptionService;\n import org.openhab.core.types.Command;\n import org.openhab.core.types.State;\n import org.slf4j.Logger;\n@@ -225,14 +227,6 @@ public void removeAllMembers() {\n         members.clear();\n     }\n \n-    @Override\n-    public void setUnitProvider(@Nullable UnitProvider unitProvider) {\n-        super.setUnitProvider(unitProvider);\n-        if (baseItem != null && baseItem instanceof GenericItem) {\n-            ((GenericItem) baseItem).setUnitProvider(unitProvider);\n-        }\n-    }\n-\n     /**\n      * The accepted data types of a group item is the same as of the underlying base item.\n      * If none is defined, the intersection of all sets of accepted data types of all group\n@@ -395,6 +389,30 @@ public void setState(State state) {\n         notifyListeners(oldState, state);\n     }\n \n+    @Override\n+    public void setStateDescriptionService(@Nullable StateDescriptionService stateDescriptionService) {\n+        super.setStateDescriptionService(stateDescriptionService);\n+        if (baseItem instanceof GenericItem) {\n+            ((GenericItem) baseItem).setStateDescriptionService(stateDescriptionService);\n+        }\n+    }\n+\n+    @Override\n+    public void setCommandDescriptionService(@Nullable CommandDescriptionService commandDescriptionService) {\n+        super.setCommandDescriptionService(commandDescriptionService);\n+        if (baseItem instanceof GenericItem) {\n+            ((GenericItem) baseItem).setCommandDescriptionService(commandDescriptionService);\n+        }\n+    }\n+\n+    @Override\n+    public void setUnitProvider(@Nullable UnitProvider unitProvider) {\n+        super.setUnitProvider(unitProvider);\n+        if (baseItem instanceof GenericItem) {\n+            ((GenericItem) baseItem).setUnitProvider(unitProvider);\n+        }\n+    }\n+\n     private void sendGroupStateChangedEvent(String memberName, State newState, State oldState) {\n         if (eventPublisher != null) {\n             eventPublisher\n",
    "test_patch": "diff --git a/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/ItemRegistryImplTest.java b/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/ItemRegistryImplTest.java\nindex a2ef3beb06e..942e1452589 100644\n--- a/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/ItemRegistryImplTest.java\n+++ b/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/ItemRegistryImplTest.java\n@@ -379,15 +379,44 @@ public void assertOldItemIsBeingDisposedOnUpdate() {\n         assertEquals(0, item.listeners.size());\n     }\n \n+    @Test\n+    public void assertStateDescriptionServiceGetsInjected() {\n+        GenericItem item = spy(new SwitchItem(\"Item1\"));\n+        NumberItem baseItem = spy(new NumberItem(\"baseItem\"));\n+        GenericItem group = new GroupItem(\"Group\", baseItem);\n+        itemProvider.add(item);\n+        itemProvider.add(group);\n+\n+        verify(item).setStateDescriptionService(any(StateDescriptionService.class));\n+        verify(baseItem).setStateDescriptionService(any(StateDescriptionService.class));\n+    }\n+\n+    @Test\n+    public void assertUnitProviderGetsInjected() {\n+        GenericItem item = spy(new SwitchItem(\"Item1\"));\n+        NumberItem baseItem = spy(new NumberItem(\"baseItem\"));\n+        GenericItem group = new GroupItem(\"Group\", baseItem);\n+        itemProvider.add(item);\n+        itemProvider.add(group);\n+\n+        verify(item).setUnitProvider(any(UnitProvider.class));\n+        verify(baseItem).setUnitProvider(any(UnitProvider.class));\n+    }\n+\n     @Test\n     public void assertCommandDescriptionServiceGetsInjected() {\n         GenericItem item = spy(new SwitchItem(\"Item1\"));\n+        NumberItem baseItem = spy(new NumberItem(\"baseItem\"));\n+        GenericItem group = new GroupItem(\"Group\", baseItem);\n         itemProvider.add(item);\n+        itemProvider.add(group);\n \n         verify(item).setCommandDescriptionService(null);\n \n         ((ItemRegistryImpl) itemRegistry).setCommandDescriptionService(mock(CommandDescriptionService.class));\n         verify(item).setCommandDescriptionService(any(CommandDescriptionService.class));\n+\n+        verify(baseItem).setCommandDescriptionService(any(CommandDescriptionService.class));\n     }\n \n     @Test\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  },
  {
    "instance_id": "openhab__openhab-core-3141",
    "pr_id": 3141,
    "issue_id": 2956,
    "repo": "openhab/openhab-core",
    "problem_statement": "RFC: Add an ItemStateUpdatedEvent\nFollow-Up To #1092, #1093, #2286\r\n\r\nThere has been quite some confusion about the `ItemStateEvent` which is not emitted by the item if the state was updated but by an \"external\" source to update the item's state. Since these external sources do not necessarily know about the item type (e.g. a switch in the UI is agnostic of the item being Color, Dimmer or Switch and will send ON or OFF) or the unit of the item, the state in the `ItemStateEvent` does not reflect the new item's state.\r\n\r\nIt seems that there are use cases for an event that is emitted if the state was updated and what the new state is (similar to the `ItemStateChangedEvent`). ",
    "issue_word_count": 124,
    "test_files_count": 5,
    "non_test_files_count": 9,
    "pr_changed_files": [
      "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java",
      "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/items/GenericItem.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/GroupItemStateChangedEvent.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/GroupStateUpdatedEvent.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemEventFactory.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemStateEvent.java",
      "bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemStateUpdatedEvent.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/items/GenericItemTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java",
      "itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java"
    ],
    "pr_changed_test_files": [
      "bundles/org.openhab.core/src/test/java/org/openhab/core/items/GenericItemTest.java",
      "bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java",
      "itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java",
      "itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java",
      "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java"
    ],
    "base_commit": "700b0e81ea724042f8b9cbbb809e6cbced17c1ff",
    "head_commit": "3d79e0a68955ac908c6c9dae2a97435d53501e6b",
    "repo_url": "https://github.com/openhab/openhab-core/pull/3141",
    "swe_url": "https://swe-bench-plus.turing.com/repos/openhab__openhab-core/3141",
    "dockerfile": "",
    "pr_merged_at": "2023-03-31T21:01:41.000Z",
    "patch": "diff --git a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java\nindex 702e1977731..c931b4ca6ec 100644\n--- a/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java\n+++ b/bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/module/handler/ItemStateTriggerHandler.java\n@@ -31,7 +31,7 @@\n import org.openhab.core.items.events.ItemAddedEvent;\n import org.openhab.core.items.events.ItemRemovedEvent;\n import org.openhab.core.items.events.ItemStateChangedEvent;\n-import org.openhab.core.items.events.ItemStateEvent;\n+import org.openhab.core.items.events.ItemStateUpdatedEvent;\n import org.openhab.core.types.State;\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.ServiceRegistration;\n@@ -77,7 +77,7 @@ public ItemStateTriggerHandler(Trigger module, String ruleUID, BundleContext bun\n         this.previousState = (String) module.getConfiguration().get(CFG_PREVIOUS_STATE);\n         this.ruleUID = ruleUID;\n         if (UPDATE_MODULE_TYPE_ID.equals(module.getTypeUID())) {\n-            this.types = Set.of(ItemStateEvent.TYPE, ItemAddedEvent.TYPE, ItemRemovedEvent.TYPE);\n+            this.types = Set.of(ItemStateUpdatedEvent.TYPE, ItemAddedEvent.TYPE, ItemRemovedEvent.TYPE);\n         } else {\n             this.types = Set.of(ItemStateChangedEvent.TYPE, GroupItemStateChangedEvent.TYPE, ItemAddedEvent.TYPE,\n                     ItemRemovedEvent.TYPE);\n@@ -122,9 +122,9 @@ public void receive(Event event) {\n             logger.trace(\"Received Event: Source: {} Topic: {} Type: {}  Payload: {}\", event.getSource(),\n                     event.getTopic(), event.getType(), event.getPayload());\n             Map<String, Object> values = new HashMap<>();\n-            if (event instanceof ItemStateEvent && UPDATE_MODULE_TYPE_ID.equals(module.getTypeUID())) {\n+            if (event instanceof ItemStateUpdatedEvent && UPDATE_MODULE_TYPE_ID.equals(module.getTypeUID())) {\n                 String state = this.state;\n-                State itemState = ((ItemStateEvent) event).getItemState();\n+                State itemState = ((ItemStateUpdatedEvent) event).getItemState();\n                 if ((state == null || state.equals(itemState.toFullString()))) {\n                     values.put(\"state\", itemState);\n                 }\n\ndiff --git a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java\nindex b41c1ca5014..e2b3a9b8b1d 100644\n--- a/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java\n+++ b/bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/CommunicationManager.java\n@@ -41,8 +41,10 @@\n import org.openhab.core.items.ItemStateConverter;\n import org.openhab.core.items.ItemUtil;\n import org.openhab.core.items.events.AbstractItemRegistryEvent;\n+import org.openhab.core.items.events.GroupStateUpdatedEvent;\n import org.openhab.core.items.events.ItemCommandEvent;\n import org.openhab.core.items.events.ItemStateEvent;\n+import org.openhab.core.items.events.ItemStateUpdatedEvent;\n import org.openhab.core.library.items.NumberItem;\n import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.library.types.QuantityType;\n@@ -115,7 +117,7 @@ public void onStateUpdateFromItem(State state) {\n     public static final long THINGHANDLER_EVENT_TIMEOUT = TimeUnit.SECONDS.toMillis(30);\n \n     private static final Set<String> SUBSCRIBED_EVENT_TYPES = Set.of(ItemStateEvent.TYPE, ItemCommandEvent.TYPE,\n-            ChannelTriggeredEvent.TYPE);\n+            GroupStateUpdatedEvent.TYPE, ChannelTriggeredEvent.TYPE);\n \n     private final Logger logger = LoggerFactory.getLogger(CommunicationManager.class);\n \n@@ -179,8 +181,8 @@ public Set<String> getSubscribedEventTypes() {\n \n     @Override\n     public void receive(Event event) {\n-        if (event instanceof ItemStateEvent) {\n-            receiveUpdate((ItemStateEvent) event);\n+        if (event instanceof ItemStateUpdatedEvent) {\n+            receiveUpdate((ItemStateUpdatedEvent) event);\n         } else if (event instanceof ItemCommandEvent) {\n             receiveCommand((ItemCommandEvent) event);\n         } else if (event instanceof ChannelTriggeredEvent) {\n@@ -358,7 +360,7 @@ private void receiveCommand(ItemCommandEvent commandEvent) {\n                 });\n     }\n \n-    private void receiveUpdate(ItemStateEvent updateEvent) {\n+    private void receiveUpdate(ItemStateUpdatedEvent updateEvent) {\n         final String itemName = updateEvent.getItemName();\n         final State newState = updateEvent.getItemState();\n         handleEvent(itemName, newState, updateEvent.getSource(), s -> acceptedStateTypeMap.get(s),\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GenericItem.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GenericItem.java\nindex 5e7c3366b01..dd0a53ec29e 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GenericItem.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GenericItem.java\n@@ -231,14 +231,23 @@ protected final void applyState(State state) {\n         State oldState = this.state;\n         this.state = state;\n         notifyListeners(oldState, state);\n+        sendStateUpdatedEvent(state);\n         if (!oldState.equals(state)) {\n             sendStateChangedEvent(state, oldState);\n         }\n     }\n \n+    private void sendStateUpdatedEvent(State newState) {\n+        EventPublisher eventPublisher1 = this.eventPublisher;\n+        if (eventPublisher1 != null) {\n+            eventPublisher1.post(ItemEventFactory.createStateUpdatedEvent(this.name, newState, null));\n+        }\n+    }\n+\n     private void sendStateChangedEvent(State newState, State oldState) {\n-        if (eventPublisher != null) {\n-            eventPublisher.post(ItemEventFactory.createStateChangedEvent(this.name, newState, oldState));\n+        EventPublisher eventPublisher1 = this.eventPublisher;\n+        if (eventPublisher1 != null) {\n+            eventPublisher1.post(ItemEventFactory.createStateChangedEvent(this.name, newState, oldState));\n         }\n     }\n \n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java\nindex 2125ed7ac7f..546d435fc58 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/GroupItem.java\n@@ -25,6 +25,7 @@\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.events.EventPublisher;\n import org.openhab.core.i18n.UnitProvider;\n import org.openhab.core.items.events.ItemEventFactory;\n import org.openhab.core.service.CommandDescriptionService;\n@@ -371,6 +372,7 @@ public void stateUpdated(Item item, State state) {\n             State calculatedState = function.calculate(getStateMembers(getMembers()));\n             newState = itemStateConverter.convertToAcceptedState(calculatedState, baseItem);\n             setState(newState);\n+            sendGroupStateUpdatedEvent(item.getName(), newState);\n         }\n         if (!oldState.equals(newState)) {\n             sendGroupStateChangedEvent(item.getName(), newState, oldState);\n@@ -413,9 +415,17 @@ public void setUnitProvider(@Nullable UnitProvider unitProvider) {\n         }\n     }\n \n+    private void sendGroupStateUpdatedEvent(String memberName, State state) {\n+        EventPublisher eventPublisher1 = this.eventPublisher;\n+        if (eventPublisher1 != null) {\n+            eventPublisher1.post(ItemEventFactory.createGroupStateEvent(getName(), memberName, state, null));\n+        }\n+    }\n+\n     private void sendGroupStateChangedEvent(String memberName, State newState, State oldState) {\n-        if (eventPublisher != null) {\n-            eventPublisher\n+        EventPublisher eventPublisher1 = this.eventPublisher;\n+        if (eventPublisher1 != null) {\n+            eventPublisher1\n                     .post(ItemEventFactory.createGroupStateChangedEvent(getName(), memberName, newState, oldState));\n         }\n     }\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/GroupItemStateChangedEvent.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/GroupItemStateChangedEvent.java\nindex 171aae7ff81..0545c5f1573 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/GroupItemStateChangedEvent.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/GroupItemStateChangedEvent.java\n@@ -17,7 +17,8 @@\n \n /**\n  * {@link GroupItemStateChangedEvent}s can be used to deliver group item state changes through the openHAB event bus. In\n- * contrast to the {@link GroupItemStateEvent} the {@link GroupItemStateChangedEvent} is only sent if the state changed.\n+ * contrast to the {@link GroupStateUpdatedEvent} the {@link GroupItemStateChangedEvent} is only sent if the state\n+ * changed.\n  * State events must be created with the {@link ItemEventFactory}.\n  *\n  * @author Christoph Knauf - Initial contribution\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/GroupStateUpdatedEvent.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/GroupStateUpdatedEvent.java\nnew file mode 100644\nindex 00000000000..9a1d8d773c7\n--- /dev/null\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/GroupStateUpdatedEvent.java\n@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.items.events;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.types.State;\n+\n+/**\n+ * {@link GroupStateUpdatedEvent}s can be used to deliver group item state updates through the openHAB event bus.\n+ * In contrast to the {@link GroupItemStateChangedEvent} it is always sent.\n+ * State events must be created with the {@link ItemEventFactory}.\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public class GroupStateUpdatedEvent extends ItemStateUpdatedEvent {\n+\n+    /**\n+     * The group item state changed event type.\n+     */\n+    public static final String TYPE = GroupStateUpdatedEvent.class.getSimpleName();\n+\n+    private final String memberName;\n+\n+    protected GroupStateUpdatedEvent(String topic, String payload, String itemName, String memberName,\n+            State newItemState, @Nullable String source) {\n+        super(topic, payload, itemName, newItemState, source);\n+        this.memberName = memberName;\n+    }\n+\n+    /**\n+     * @return the name of the changed group member\n+     */\n+    public String getMemberName() {\n+        return this.memberName;\n+    }\n+\n+    @Override\n+    public String getType() {\n+        return TYPE;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return String.format(\"Group '%s' updated to %s through %s\", itemName, itemState, memberName);\n+    }\n+}\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemEventFactory.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemEventFactory.java\nindex b380be7270c..ccf1cababa0 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemEventFactory.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemEventFactory.java\n@@ -50,10 +50,14 @@ public class ItemEventFactory extends AbstractEventFactory {\n \n     private static final String ITEM_STATE_EVENT_TOPIC = \"openhab/items/{itemName}/state\";\n \n+    private static final String ITEM_STATE_UPDATED_EVENT_TOPIC = \"openhab/items/{itemName}/stateupdated\";\n+\n     private static final String ITEM_STATE_PREDICTED_EVENT_TOPIC = \"openhab/items/{itemName}/statepredicted\";\n \n     private static final String ITEM_STATE_CHANGED_EVENT_TOPIC = \"openhab/items/{itemName}/statechanged\";\n \n+    private static final String GROUP_STATE_EVENT_TOPIC = \"openhab/items/{itemName}/{memberName}/stateupdated\";\n+\n     private static final String GROUPITEM_STATE_CHANGED_EVENT_TOPIC = \"openhab/items/{itemName}/{memberName}/statechanged\";\n \n     private static final String ITEM_ADDED_EVENT_TOPIC = \"openhab/items/{itemName}/added\";\n@@ -67,8 +71,8 @@ public class ItemEventFactory extends AbstractEventFactory {\n      */\n     public ItemEventFactory() {\n         super(Set.of(ItemCommandEvent.TYPE, ItemStateEvent.TYPE, ItemStatePredictedEvent.TYPE,\n-                ItemStateChangedEvent.TYPE, ItemAddedEvent.TYPE, ItemUpdatedEvent.TYPE, ItemRemovedEvent.TYPE,\n-                GroupItemStateChangedEvent.TYPE));\n+                ItemStateUpdatedEvent.TYPE, ItemStateChangedEvent.TYPE, ItemAddedEvent.TYPE, ItemUpdatedEvent.TYPE,\n+                ItemRemovedEvent.TYPE, GroupStateUpdatedEvent.TYPE, GroupItemStateChangedEvent.TYPE));\n     }\n \n     @Override\n@@ -80,6 +84,8 @@ protected Event createEventByType(String eventType, String topic, String payload\n             return createStateEvent(topic, payload, source);\n         } else if (ItemStatePredictedEvent.TYPE.equals(eventType)) {\n             return createStatePredictedEvent(topic, payload);\n+        } else if (ItemStateUpdatedEvent.TYPE.equals(eventType)) {\n+            return createStateUpdatedEvent(topic, payload);\n         } else if (ItemStateChangedEvent.TYPE.equals(eventType)) {\n             return createStateChangedEvent(topic, payload);\n         } else if (ItemAddedEvent.TYPE.equals(eventType)) {\n@@ -88,12 +94,22 @@ protected Event createEventByType(String eventType, String topic, String payload\n             return createUpdatedEvent(topic, payload);\n         } else if (ItemRemovedEvent.TYPE.equals(eventType)) {\n             return createRemovedEvent(topic, payload);\n+        } else if (GroupStateUpdatedEvent.TYPE.equals(eventType)) {\n+            return createGroupStateEvent(topic, payload);\n         } else if (GroupItemStateChangedEvent.TYPE.equals(eventType)) {\n             return createGroupStateChangedEvent(topic, payload);\n         }\n         throw new IllegalArgumentException(\"The event type '\" + eventType + \"' is not supported by this factory.\");\n     }\n \n+    private Event createGroupStateEvent(String topic, String payload) {\n+        String itemName = getItemName(topic);\n+        String memberName = getMemberName(topic);\n+        ItemEventPayloadBean bean = deserializePayload(payload, ItemEventPayloadBean.class);\n+        State state = getState(bean.getType(), bean.getValue());\n+        return new GroupStateUpdatedEvent(topic, payload, itemName, memberName, state, null);\n+    }\n+\n     private Event createGroupStateChangedEvent(String topic, String payload) {\n         String itemName = getItemName(topic);\n         String memberName = getMemberName(topic);\n@@ -124,6 +140,13 @@ private Event createStatePredictedEvent(String topic, String payload) {\n         return new ItemStatePredictedEvent(topic, payload, itemName, state, bean.isConfirmation());\n     }\n \n+    private Event createStateUpdatedEvent(String topic, String payload) {\n+        String itemName = getItemName(topic);\n+        ItemEventPayloadBean bean = deserializePayload(payload, ItemEventPayloadBean.class);\n+        State state = getState(bean.getType(), bean.getValue());\n+        return new ItemStateUpdatedEvent(topic, payload, itemName, state, null);\n+    }\n+\n     private Event createStateChangedEvent(String topic, String payload) {\n         String itemName = getItemName(topic);\n         ItemStateChangedEventPayloadBean bean = deserializePayload(payload, ItemStateChangedEventPayloadBean.class);\n@@ -268,6 +291,54 @@ public static ItemEvent createStateEvent(String itemName, State state) {\n         return createStateEvent(itemName, state, null);\n     }\n \n+    /**\n+     * Creates an item state updated event.\n+     *\n+     * @param itemName the name of the item to report the state update for\n+     * @param state the new state\n+     * @return the created item state update event\n+     * @throws IllegalArgumentException if itemName or state is null\n+     */\n+    public static ItemStateUpdatedEvent createStateUpdatedEvent(String itemName, State state) {\n+        return createStateUpdatedEvent(itemName, state, null);\n+    }\n+\n+    /**\n+     * Creates an item state updated event.\n+     *\n+     * @param itemName the name of the item to report the state update for\n+     * @param state the new state\n+     * @param source the name of the source identifying the sender (can be null)\n+     * @return the created item state update event\n+     * @throws IllegalArgumentException if itemName or state is null\n+     */\n+    public static ItemStateUpdatedEvent createStateUpdatedEvent(String itemName, State state, @Nullable String source) {\n+        assertValidArguments(itemName, state, \"state\");\n+        String topic = buildTopic(ITEM_STATE_UPDATED_EVENT_TOPIC, itemName);\n+        ItemEventPayloadBean bean = new ItemEventPayloadBean(getStateType(state), state.toFullString());\n+        String payload = serializePayload(bean);\n+        return new ItemStateUpdatedEvent(topic, payload, itemName, state, source);\n+    }\n+\n+    /**\n+     * Creates an group item state updated event.\n+     *\n+     * @param groupName the name of the group to report the state update for\n+     * @param member the name of the item that updated the group state\n+     * @param state the new state\n+     * @param source the name of the source identifying the sender (can be null)\n+     * @return the created group item state update event\n+     * @throws IllegalArgumentException if groupName or state is null\n+     */\n+    public static GroupStateUpdatedEvent createGroupStateEvent(String groupName, String member, State state,\n+            @Nullable String source) {\n+        assertValidArguments(groupName, member, state, \"state\");\n+        String topic = buildGroupTopic(GROUP_STATE_EVENT_TOPIC, groupName, member);\n+        ItemEventPayloadBean bean = new ItemEventPayloadBean(getStateType(state), state.toFullString());\n+        String payload = serializePayload(bean);\n+        return new GroupStateUpdatedEvent(topic, payload, groupName, member, state, source);\n+    }\n+\n     /**\n      * Creates an item state predicted event.\n      *\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemStateEvent.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemStateEvent.java\nindex 80865370ca5..90d6eb326a4 100644\n--- a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemStateEvent.java\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemStateEvent.java\n@@ -30,7 +30,7 @@ public class ItemStateEvent extends ItemEvent {\n      */\n     public static final String TYPE = ItemStateEvent.class.getSimpleName();\n \n-    private final State itemState;\n+    protected final State itemState;\n \n     /**\n      * Constructs a new item state event.\n@@ -62,6 +62,6 @@ public State getItemState() {\n \n     @Override\n     public String toString() {\n-        return String.format(\"Item '%s' updated to %s\", itemName, itemState);\n+        return String.format(\"Item '%s' shall update to %s\", itemName, itemState);\n     }\n }\n\ndiff --git a/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemStateUpdatedEvent.java b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemStateUpdatedEvent.java\nnew file mode 100644\nindex 00000000000..0b582c282c4\n--- /dev/null\n+++ b/bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemStateUpdatedEvent.java\n@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2010-2023 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.core.items.events;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.core.types.State;\n+\n+/**\n+ * {@link ItemStateUpdatedEvent}s can be used to report item status updates through the openHAB event bus.\n+ * State update events must be created with the {@link ItemEventFactory}.\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ItemStateUpdatedEvent extends ItemEvent {\n+\n+    /**\n+     * The item state event type.\n+     */\n+    public static final String TYPE = ItemStateUpdatedEvent.class.getSimpleName();\n+\n+    protected final State itemState;\n+\n+    /**\n+     * Constructs a new item state event.\n+     *\n+     * @param topic the topic\n+     * @param payload the payload\n+     * @param itemName the item name\n+     * @param itemState the item state\n+     * @param source the source, can be null\n+     */\n+    protected ItemStateUpdatedEvent(String topic, String payload, String itemName, State itemState,\n+            @Nullable String source) {\n+        super(topic, payload, itemName, source);\n+        this.itemState = itemState;\n+    }\n+\n+    @Override\n+    public String getType() {\n+        return TYPE;\n+    }\n+\n+    /**\n+     * Gets the item state.\n+     *\n+     * @return the item state\n+     */\n+    public State getItemState() {\n+        return itemState;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return String.format(\"Item '%s' updated to %s\", itemName, itemState);\n+    }\n+}\n",
    "test_patch": "diff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/items/GenericItemTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/items/GenericItemTest.java\nindex 370b86025ab..8a60f9ec776 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/items/GenericItemTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/items/GenericItemTest.java\n@@ -27,7 +27,9 @@\n import org.mockito.ArgumentCaptor;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.i18n.UnitProvider;\n+import org.openhab.core.items.events.ItemEvent;\n import org.openhab.core.items.events.ItemStateChangedEvent;\n+import org.openhab.core.items.events.ItemStateUpdatedEvent;\n import org.openhab.core.library.types.OnOffType;\n import org.openhab.core.library.types.PercentType;\n import org.openhab.core.library.types.RawType;\n@@ -58,24 +60,51 @@ public void testItemPostsEventsCorrectly() {\n         item.setEventPublisher(publisher);\n         State oldState = item.getState();\n \n-        // State changes -> one change event is fired\n+        // State changes -> one update and one change event is fired\n         item.setState(new RawType(new byte[0], RawType.DEFAULT_MIME_TYPE));\n \n-        ArgumentCaptor<ItemStateChangedEvent> captor = ArgumentCaptor.forClass(ItemStateChangedEvent.class);\n+        ArgumentCaptor<ItemEvent> captor = ArgumentCaptor.forClass(ItemEvent.class);\n \n-        verify(publisher, times(1)).post(captor.capture());\n+        verify(publisher, times(2)).post(captor.capture());\n \n-        ItemStateChangedEvent change = captor.getValue();\n+        List<ItemEvent> events = captor.getAllValues();\n+        assertEquals(2, events.size());\n \n+        // first event should be updated event\n+        assertInstanceOf(ItemStateUpdatedEvent.class, events.get(0));\n+        ItemStateUpdatedEvent updated = (ItemStateUpdatedEvent) events.get(0);\n+        assertEquals(item.getName(), updated.getItemName());\n+        assertEquals(\"openhab/items/member1/stateupdated\", updated.getTopic());\n+        assertEquals(item.getState(), updated.getItemState());\n+        assertEquals(ItemStateUpdatedEvent.TYPE, updated.getType());\n+\n+        // second event should be changed event\n+        assertInstanceOf(ItemStateChangedEvent.class, events.get(1));\n+        ItemStateChangedEvent change = (ItemStateChangedEvent) events.get(1);\n         assertEquals(item.getName(), change.getItemName());\n         assertEquals(\"openhab/items/member1/statechanged\", change.getTopic());\n         assertEquals(oldState, change.getOldItemState());\n         assertEquals(item.getState(), change.getItemState());\n         assertEquals(ItemStateChangedEvent.TYPE, change.getType());\n \n-        // State doesn't change -> no event is fired\n+        // reset invocations and captor\n+        clearInvocations(publisher);\n+        captor = ArgumentCaptor.forClass(ItemEvent.class);\n+\n+        // State doesn't change -> only update event is fired\n         item.setState(item.getState());\n-        verifyNoMoreInteractions(publisher);\n+        verify(publisher).post(captor.capture());\n+\n+        events = captor.getAllValues();\n+        assertEquals(1, events.size()); // two before and one additional\n+\n+        // event should be updated event\n+        assertInstanceOf(ItemStateUpdatedEvent.class, events.get(0));\n+        updated = (ItemStateUpdatedEvent) events.get(0);\n+        assertEquals(item.getName(), updated.getItemName());\n+        assertEquals(\"openhab/items/member1/stateupdated\", updated.getTopic());\n+        assertEquals(item.getState(), updated.getItemState());\n+        assertEquals(ItemStateUpdatedEvent.TYPE, updated.getType());\n     }\n \n     @Test\n\ndiff --git a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java\nindex 147c85ba65f..6d4612ac10d 100644\n--- a/bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java\n+++ b/bundles/org.openhab.core/src/test/java/org/openhab/core/library/items/NumberItemTest.java\n@@ -14,13 +14,18 @@\n \n import static org.hamcrest.CoreMatchers.*;\n import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.hamcrest.Matchers.instanceOf;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.mockito.Mockito.*;\n \n+import java.util.List;\n+\n import javax.measure.quantity.Energy;\n import javax.measure.quantity.Temperature;\n \n import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.hamcrest.Matchers;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n@@ -29,9 +34,11 @@\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.mockito.junit.jupiter.MockitoSettings;\n import org.mockito.quality.Strictness;\n+import org.openhab.core.events.Event;\n import org.openhab.core.events.EventPublisher;\n import org.openhab.core.i18n.UnitProvider;\n import org.openhab.core.items.events.ItemCommandEvent;\n+import org.openhab.core.items.events.ItemStateUpdatedEvent;\n import org.openhab.core.library.types.DecimalType;\n import org.openhab.core.library.types.HSBType;\n import org.openhab.core.library.types.PercentType;\n@@ -57,12 +64,15 @@ public class NumberItemTest {\n     private static final String ITEM_NAME = \"test\";\n \n     private @Mock @NonNullByDefault({}) StateDescriptionService stateDescriptionServiceMock;\n+    private @Mock @NonNullByDefault({}) UnitProvider unitProviderMock;\n+    private @Mock @NonNullByDefault({}) EventPublisher eventPublisherMock;\n \n     @BeforeEach\n     public void setup() {\n         when(stateDescriptionServiceMock.getStateDescription(ITEM_NAME, null))\n                 .thenReturn(StateDescriptionFragmentBuilder.create().withPattern(\"%.1f \" + UnitUtils.UNIT_PLACEHOLDER)\n                         .build().toStateDescription());\n+        when(unitProviderMock.getUnit(Temperature.class)).thenReturn(SIUnits.CELSIUS);\n     }\n \n     @Test\n@@ -286,4 +296,47 @@ void testNoUnitWhenUnitPlaceholderUsed() {\n         assertThat(item.getState(), is(new QuantityType<>(\"329 kWh\")));\n         assertThat(item.getUnit(), is(nullValue()));\n     }\n+\n+    public void quantityTypeCorrectlySetWithDifferentUnit() {\n+        NumberItem numberItem = new NumberItem(\"Number:Temperature\", ITEM_NAME);\n+        numberItem.setUnitProvider(unitProviderMock);\n+        numberItem.setEventPublisher(eventPublisherMock);\n+        numberItem.setState(new QuantityType<>(\"140 Â°F\"));\n+\n+        assertThat(numberItem.getState(), Matchers.is(new QuantityType<>(\"60 Â°C\")));\n+\n+        ArgumentCaptor<Event> captor = ArgumentCaptor.forClass(Event.class);\n+        verify(eventPublisherMock, times(2)).post(captor.capture());\n+\n+        List<Event> events = captor.getAllValues();\n+        assertThat(events, hasSize(2));\n+\n+        assertThat(events.get(0), Matchers.is(instanceOf(ItemStateUpdatedEvent.class)));\n+\n+        ItemStateUpdatedEvent updatedEvent = (ItemStateUpdatedEvent) events.get(0);\n+        assertThat(updatedEvent.getItemName(), Matchers.is(ITEM_NAME));\n+        assertThat(updatedEvent.getItemState(), Matchers.is(new QuantityType<>(\"60Â°C\")));\n+    }\n+\n+    @Test\n+    public void decimalTypeCorrectlySetWithUnit() {\n+        NumberItem numberItem = new NumberItem(\"Number:Temperature\", ITEM_NAME);\n+        numberItem.setUnitProvider(unitProviderMock);\n+        numberItem.setEventPublisher(eventPublisherMock);\n+        numberItem.setState(new DecimalType(10));\n+\n+        assertThat(numberItem.getState(), Matchers.is(new QuantityType<>(\"10 Â°C\")));\n+\n+        ArgumentCaptor<Event> captor = ArgumentCaptor.forClass(Event.class);\n+        verify(eventPublisherMock, times(2)).post(captor.capture());\n+\n+        List<Event> events = captor.getAllValues();\n+        assertThat(events, hasSize(2));\n+\n+        assertThat(events.get(0), Matchers.is(instanceOf(ItemStateUpdatedEvent.class)));\n+\n+        ItemStateUpdatedEvent updatedEvent = (ItemStateUpdatedEvent) events.get(0);\n+        assertThat(updatedEvent.getItemName(), Matchers.is(ITEM_NAME));\n+        assertThat(updatedEvent.getItemState(), Matchers.is(new QuantityType<>(\"10Â°C\")));\n+    }\n }\n\ndiff --git a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\nindex 2d04b921f3f..3a06424bad8 100644\n--- a/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\n+++ b/itests/org.openhab.core.automation.module.timer.tests/src/main/java/org/openhab/core/automation/module/timer/internal/BasicConditionHandlerTest.java\n@@ -179,7 +179,7 @@ public void receive(Event event) {\n         logger.info(\"Rule is enabled and idle\");\n \n         logger.info(\"Send and wait for item state is ON\");\n-        eventPublisher.post(ItemEventFactory.createStateEvent(testItemName1, OnOffType.ON));\n+        eventPublisher.post(ItemEventFactory.createStateUpdatedEvent(testItemName1, OnOffType.ON));\n \n         waitForAssert(() -> {\n             assertThat(itemEvent, is(notNullValue()));\n@@ -194,7 +194,7 @@ public void receive(Event event) {\n \n         // prepare the execution\n         itemEvent = null;\n-        eventPublisher.post(ItemEventFactory.createStateEvent(testItemName1, OnOffType.ON));\n+        eventPublisher.post(ItemEventFactory.createStateUpdatedEvent(testItemName1, OnOffType.ON));\n         waitForAssert(() -> {\n             assertThat(itemEvent, is(nullValue()));\n         });\n\ndiff --git a/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java b/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java\nindex 19501fc7e11..e1d8afe2c82 100644\n--- a/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java\n+++ b/itests/org.openhab.core.tests/src/main/java/org/openhab/core/items/GroupItemOSGiTest.java\n@@ -46,7 +46,9 @@\n import org.openhab.core.internal.items.ItemStateConverterImpl;\n import org.openhab.core.items.dto.GroupFunctionDTO;\n import org.openhab.core.items.events.GroupItemStateChangedEvent;\n+import org.openhab.core.items.events.GroupStateUpdatedEvent;\n import org.openhab.core.items.events.ItemCommandEvent;\n+import org.openhab.core.items.events.ItemStateUpdatedEvent;\n import org.openhab.core.items.events.ItemUpdatedEvent;\n import org.openhab.core.library.CoreItemFactory;\n import org.openhab.core.library.items.ColorItem;\n@@ -422,6 +424,7 @@ public void assertCyclicGroupItemsCalculateStateWithSubGroupFunction() {\n     public void assertThatGroupItemPostsEventsForChangesCorrectly() {\n         // from ItemEventFactory.GROUPITEM_STATE_CHANGED_EVENT_TOPIC\n         String groupitemStateChangedEventTopic = \"openhab/items/{itemName}/{memberName}/statechanged\";\n+        String groupitemStateUpdatedEventTopic = \"openhab/items/{itemName}/{memberName}/stateupdated\";\n \n         events.clear();\n         GroupItem groupItem = new GroupItem(\"root\", new SwitchItem(\"mySwitch\"), new GroupFunction.Equality());\n@@ -432,10 +435,21 @@ public void assertThatGroupItemPostsEventsForChangesCorrectly() {\n         groupItem.setEventPublisher(publisher);\n         State oldGroupState = groupItem.getState();\n \n-        // State changes -> one change event is fired\n+        // State changes -> one update and one change event is fired\n         member.setState(OnOffType.ON);\n \n-        waitForAssert(() -> assertThat(events.size(), is(1)));\n+        waitForAssert(() -> assertThat(events.size(), is(2)));\n+\n+        List<Event> updates = events.stream().filter(it -> it instanceof GroupStateUpdatedEvent)\n+                .collect(Collectors.toList());\n+        assertThat(updates.size(), is(1));\n+\n+        GroupStateUpdatedEvent update = (GroupStateUpdatedEvent) updates.get(0);\n+        assertThat(update.getItemName(), is(groupItem.getName()));\n+        assertThat(update.getMemberName(), is(member.getName()));\n+        assertThat(update.getTopic(), is(groupitemStateUpdatedEventTopic.replace(\"{memberName}\", member.getName())\n+                .replace(\"{itemName}\", groupItem.getName())));\n+        assertThat(update.getItemState(), is(groupItem.getState()));\n \n         List<Event> changes = events.stream().filter(it -> it instanceof GroupItemStateChangedEvent)\n                 .collect(Collectors.toList());\n@@ -451,9 +465,10 @@ public void assertThatGroupItemPostsEventsForChangesCorrectly() {\n \n         events.clear();\n \n-        // State doesn't change -> no events are fired\n+        // State doesn't change -> only update event is posted\n         member.setState(member.getState());\n-        assertThat(events.size(), is(0));\n+        waitForAssert(() -> assertThat(events.size(), is(1)));\n+        assertThat(events.get(0), is(instanceOf(ItemStateUpdatedEvent.class)));\n     }\n \n     @Test\n@@ -470,10 +485,10 @@ public void assertThatGroupItemChangesRespectGroupFunctionOR() throws Interrupte\n \n         groupItem.setEventPublisher(publisher);\n \n-        // State changes -> one change event is fired\n+        // State changes -> one update and one change event is fired\n         sw1.setState(OnOffType.ON);\n \n-        waitForAssert(() -> assertThat(events, hasSize(1)));\n+        waitForAssert(() -> assertThat(events, hasSize(2)));\n \n         List<Event> groupItemStateChangedEvents = events.stream().filter(it -> it instanceof GroupItemStateChangedEvent)\n                 .collect(Collectors.toList());\n@@ -490,13 +505,13 @@ public void assertThatGroupItemChangesRespectGroupFunctionOR() throws Interrupte\n \n         events.clear();\n \n-        // State does not change -> no change event is fired\n+        // State does not change -> only update event is fired\n         sw2.setState(OnOffType.ON);\n \n         // wait to see that the event doesn't fire\n         Thread.sleep(WAIT_EVENT_TO_BE_HANDLED);\n \n-        waitForAssert(() -> assertThat(events, hasSize(0)));\n+        waitForAssert(() -> assertThat(events, hasSize(1)));\n     }\n \n     @Test\n@@ -543,15 +558,19 @@ public void assertThatGroupItemChangesRespectGroupFunctionORWithUNDEF() throws I\n \n         groupItem.setEventPublisher(publisher);\n \n-        // State changes -> one change event is fired\n+        // State changes -> one update and one change event is fired\n         sw1.setState(OnOffType.ON);\n \n-        waitForAssert(() -> assertThat(events, hasSize(1)));\n+        waitForAssert(() -> assertThat(events, hasSize(2)));\n \n         List<Event> changes = events.stream().filter(it -> it instanceof GroupItemStateChangedEvent)\n                 .collect(Collectors.toList());\n         assertThat(changes, hasSize(1));\n \n+        List<Event> updates = events.stream().filter(it -> it instanceof GroupStateUpdatedEvent)\n+                .collect(Collectors.toList());\n+        assertThat(updates, hasSize(1));\n+\n         GroupItemStateChangedEvent change = (GroupItemStateChangedEvent) changes.get(0);\n         assertThat(change.getItemName(), is(groupItem.getName()));\n \n@@ -563,15 +582,21 @@ public void assertThatGroupItemChangesRespectGroupFunctionORWithUNDEF() throws I\n \n         events.clear();\n \n-        // State does not change -> no change event is fired\n+        // State does not change -> only update event is fired\n         sw2.setState(OnOffType.ON);\n \n         sw2.setState(UnDefType.UNDEF);\n \n-        // wait to see that the event doesn't fire\n+        // wait to see that only state updated events are fired\n         Thread.sleep(WAIT_EVENT_TO_BE_HANDLED);\n \n-        assertThat(events, hasSize(0));\n+        assertThat(events, hasSize(2));\n+\n+        changes = events.stream().filter(it -> it instanceof GroupItemStateChangedEvent).collect(Collectors.toList());\n+        assertThat(changes, hasSize(0));\n+\n+        updates = events.stream().filter(it -> it instanceof GroupStateUpdatedEvent).collect(Collectors.toList());\n+        assertThat(updates, hasSize(2));\n \n         assertThat(groupItem.getState(), is(OnOffType.ON));\n     }\n@@ -590,10 +615,10 @@ public void assertThatGroupItemChangesRespectGroupFunctionAND() {\n \n         groupItem.setEventPublisher(publisher);\n \n-        // State changes -> one change event is fired\n+        // State changes -> one update and one change event is fired\n         sw1.setState(OnOffType.ON);\n \n-        waitForAssert(() -> assertThat(events, hasSize(1)));\n+        waitForAssert(() -> assertThat(events, hasSize(2)));\n \n         List<Event> changes = events.stream().filter(it -> it instanceof GroupItemStateChangedEvent)\n                 .collect(Collectors.toList());\n@@ -610,10 +635,10 @@ public void assertThatGroupItemChangesRespectGroupFunctionAND() {\n \n         events.clear();\n \n-        // State changes -> one change event is fired\n+        // State changes -> one update and one change event is fired\n         sw2.setState(OnOffType.ON);\n \n-        waitForAssert(() -> assertThat(events, hasSize(1)));\n+        waitForAssert(() -> assertThat(events, hasSize(2)));\n \n         changes = events.stream().filter(it -> it instanceof GroupItemStateChangedEvent).collect(Collectors.toList());\n         assertThat(changes, hasSize(1));\n@@ -727,7 +752,7 @@ public void assertThatGroupItemwithDimmeritemAcceptsGetsPercentTypeStateIfMember\n \n         member1.setState(new PercentType(50));\n \n-        waitForAssert(() -> assertThat(events.size(), is(1)));\n+        waitForAssert(() -> assertThat(events.size(), is(2)));\n \n         List<Event> changes = events.stream().filter(it -> it instanceof GroupItemStateChangedEvent)\n                 .collect(Collectors.toList());\n@@ -746,7 +771,7 @@ public void assertThatGroupItemwithDimmeritemAcceptsGetsPercentTypeStateIfMember\n \n         member2.setState(new PercentType(10));\n \n-        waitForAssert(() -> assertThat(events.size(), is(1)));\n+        waitForAssert(() -> assertThat(events.size(), is(2)));\n \n         changes = events.stream().filter(it -> it instanceof GroupItemStateChangedEvent).collect(Collectors.toList());\n         assertThat(changes.size(), is(1));\n\ndiff --git a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java\nindex 3d4caccf051..faf25f40bd8 100644\n--- a/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java\n+++ b/itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/CommunicationManagerOSGiTest.java\n@@ -351,7 +351,7 @@ public void testItemCommandEventNotToSource() {\n \n     @Test\n     public void testItemStateEventSingleLink() {\n-        manager.receive(ItemEventFactory.createStateEvent(ITEM_NAME_2, OnOffType.ON));\n+        manager.receive(ItemEventFactory.createStateUpdatedEvent(ITEM_NAME_2, OnOffType.ON));\n         waitForAssert(() -> {\n             verify(stateProfileMock).onStateUpdateFromItem(eq(OnOffType.ON));\n             verify(triggerProfileMock).onStateUpdateFromItem(eq(OnOffType.ON));\n@@ -362,7 +362,7 @@ public void testItemStateEventSingleLink() {\n \n     @Test\n     public void testItemStateEventMultiLink() {\n-        manager.receive(ItemEventFactory.createStateEvent(ITEM_NAME_1, OnOffType.ON));\n+        manager.receive(ItemEventFactory.createStateUpdatedEvent(ITEM_NAME_1, OnOffType.ON));\n         waitForAssert(() -> {\n             verify(stateProfileMock, times(2)).onStateUpdateFromItem(eq(OnOffType.ON));\n             verify(triggerProfileMock, times(2)).onStateUpdateFromItem(eq(OnOffType.ON));\n@@ -374,7 +374,7 @@ public void testItemStateEventMultiLink() {\n     @Test\n     public void testItemStateEventNotToSource() {\n         manager.receive(\n-                ItemEventFactory.createStateEvent(ITEM_NAME_1, OnOffType.ON, STATE_CHANNEL_UID_2.getAsString()));\n+                ItemEventFactory.createStateUpdatedEvent(ITEM_NAME_1, OnOffType.ON, STATE_CHANNEL_UID_2.getAsString()));\n         waitForAssert(() -> {\n             verify(stateProfileMock).onStateUpdateFromItem(eq(OnOffType.ON));\n             verify(triggerProfileMock, times(2)).onStateUpdateFromItem(eq(OnOffType.ON));\n@@ -596,7 +596,7 @@ public void testItemStateEventTypeDowncast() {\n         thing.setHandler(thingHandlerMock);\n         when(thingRegistryMock.get(eq(THING_UID))).thenReturn(thing);\n \n-        manager.receive(ItemEventFactory.createStateEvent(ITEM_NAME_2, HSBType.fromRGB(128, 128, 128)));\n+        manager.receive(ItemEventFactory.createStateUpdatedEvent(ITEM_NAME_2, HSBType.fromRGB(128, 128, 128)));\n         waitForAssert(() -> {\n             ArgumentCaptor<State> stateCaptor = ArgumentCaptor.forClass(State.class);\n             verify(stateProfileMock).onStateUpdateFromItem(stateCaptor.capture());\n",
    "agent_patch": null,
    "FAIL_TO_PASS": [],
    "PASS_TO_PASS": [],
    "test_output_before": null,
    "errors_before": [],
    "failed_before": [],
    "test_output_after": null,
    "errors_after": [],
    "failed_after": []
  }
]