metadata
"{""instance_id"": ""alibaba__nacos-12805"", ""pr_id"": 12805, ""issue_id"": 12773, ""repo"": ""alibaba/nacos"", ""problem_statement"": ""The error message is not user-friendly when adding duplicate permissions.\n**Describe the bug**\r\nThe error message is not user-friendly when adding duplicate permissions.\r\n\r\n**Expected behavior**\r\nI expect a friendly error message, such as 'This permission already exists, please do not add it again.'\r\n\r\n**Actually behavior**\r\nThe prompt is not friendly enough, as it prints out backend stack trace information.\r\n\r\n**How to Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enter the permission management page.\r\n2. Add a permission.\r\n3. Add the same permission again.\r\n4. See errors\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [Windows]\r\n - Version [nacos-server 2.4.1]\r\n - Module [config]\r\n - SDK [spring-cloud-alibaba-nacos]\r\n\r\n**Additional context**\r\n![image](https://github.com/user-attachments/assets/0f927cf4-3e84-48b2-8bcb-efc36476e299)\r\n\r\n"", ""issue_word_count"": 123, ""test_files_count"": 2, ""non_test_files_count"": 2, ""pr_changed_files"": [""plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionController.java"", ""plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImpl.java"", ""plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionControllerTest.java"", ""plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImplTest.java""], ""pr_changed_test_files"": [""plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionControllerTest.java"", ""plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImplTest.java""], ""base_commit"": ""2a0dafa2f4e1a8f1fac38e8bf750b77858c03af3"", ""head_commit"": ""b99ca34808d5166c2a2c1da15d70d4cb110466bd"", ""repo_url"": ""https://github.com/alibaba/nacos/pull/12805"", ""swe_url"": ""https://swe-bench-plus.turing.com/repos/alibaba__nacos/12805"", ""dockerfile"": """", ""pr_merged_at"": ""2024-12-05T09:28:12.000Z"", ""patch"": ""diff --git a/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionController.java b/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionController.java\nindex 1392f7d2129..fdd57ccee29 100644\n--- a/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionController.java\n+++ b/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionController.java\n@@ -16,6 +16,7 @@\n \n package com.alibaba.nacos.plugin.auth.impl.controller;\n \n+import com.alibaba.nacos.api.model.v2.Result;\n import com.alibaba.nacos.auth.annotation.Secured;\n import com.alibaba.nacos.common.model.RestResultUtils;\n import com.alibaba.nacos.common.utils.StringUtils;\n@@ -105,4 +106,18 @@ public Object deletePermission(@RequestParam String role, @RequestParam String r\n         nacosRoleService.deletePermission(role, resource, action);\n         return RestResultUtils.success(\""delete permission ok!\"");\n     }\n+\n+    /**\n+     * Judge whether a permission is duplicate.\n+     *\n+     * @param role     the role\n+     * @param resource the related resource\n+     * @param action   the related action\n+     * @return true if duplicate, false otherwise\n+     */\n+    @GetMapping\n+    @Secured(resource = AuthConstants.CONSOLE_RESOURCE_NAME_PREFIX + \""permissions\"", action = ActionTypes.READ)\n+    public Result<Boolean> isDuplicatePermission(@RequestParam String role, @RequestParam String resource, @RequestParam String action) {\n+        return nacosRoleService.isDuplicatePermission(role, resource, action);\n+    }\n }\n\ndiff --git a/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImpl.java b/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImpl.java\nindex 7e6803d4b5d..e2907d1a37c 100644\n--- a/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImpl.java\n+++ b/plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImpl.java\n@@ -16,6 +16,7 @@\n \n package com.alibaba.nacos.plugin.auth.impl.roles;\n \n+import com.alibaba.nacos.api.model.v2.Result;\n import com.alibaba.nacos.auth.config.AuthConfigs;\n import com.alibaba.nacos.common.utils.CollectionUtils;\n import com.alibaba.nacos.common.utils.ConcurrentHashSet;\n@@ -370,5 +371,28 @@ public boolean hasGlobalAdminRole() {\n         authConfigs.setHasGlobalAdminRole(hasGlobalAdminRole);\n         return hasGlobalAdminRole;\n     }\n+\n+    /**\n+     * judge whether the permission is duplicate.\n+     *\n+     * @param role role name\n+     * @param resource resource\n+     * @param action action\n+     * @return true if duplicate, false otherwise\n+     */\n+    public Result<Boolean> isDuplicatePermission(String role, String resource, String action) {\n+        List<PermissionInfo> permissionInfos = getPermissions(role);\n+        if (CollectionUtils.isEmpty(permissionInfos)) {\n+            return Result.success(Boolean.FALSE);\n+        }\n+        for (PermissionInfo permissionInfo : permissionInfos) {\n+            boolean resourceMatch = StringUtils.equals(resource, permissionInfo.getResource());\n+            boolean actionMatch = StringUtils.equals(action, permissionInfo.getAction()) || \""rw\"".equals(permissionInfo.getAction());\n+            if (resourceMatch && actionMatch) {\n+                return Result.success(Boolean.TRUE);\n+            }\n+        }\n+        return Result.success(Boolean.FALSE);\n+    }\n     \n }\n"", ""test_patch"": ""diff --git a/plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionControllerTest.java b/plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionControllerTest.java\nindex 6f73ec63859..60eba753336 100644\n--- a/plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionControllerTest.java\n+++ b/plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionControllerTest.java\n@@ -16,6 +16,7 @@\n \n package com.alibaba.nacos.plugin.auth.impl.controller;\n \n+import com.alibaba.nacos.api.model.v2.Result;\n import com.alibaba.nacos.common.model.RestResult;\n import com.alibaba.nacos.persistence.model.Page;\n import com.alibaba.nacos.plugin.auth.impl.persistence.PermissionInfo;\n@@ -86,4 +87,12 @@ void testDeletePermission() {\n         assertEquals(200, result.getCode());\n     }\n     \n+    @Test\n+    void testDuplicatePermission() {\n+        when(nacosRoleService.isDuplicatePermission(anyString(), anyString(), anyString())).thenReturn(\n+                Result.success(Boolean.TRUE));\n+        Result<Boolean> result = permissionController.isDuplicatePermission(\""admin\"", \""test\"", \""test\"");\n+        assertEquals(0, result.getCode());\n+    }\n+    \n }\n\ndiff --git a/plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImplTest.java b/plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImplTest.java\nindex 315b3b3cac2..5405b9ce523 100644\n--- a/plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImplTest.java\n+++ b/plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImplTest.java\n@@ -36,6 +36,7 @@\n \n import java.lang.reflect.Field;\n import java.lang.reflect.Method;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.Properties;\n@@ -45,6 +46,8 @@\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n \n /**\n  * NacosRoleServiceImpl Test.\n@@ -203,4 +206,16 @@ void joinResource() throws Exception {\n         Object invoke = method.invoke(nacosRoleService, new Resource[] {resource});\n         assertNotNull(invoke);\n     }\n+    \n+    @Test\n+    void duplicatePermission() {\n+        List<PermissionInfo> permissionInfos = new ArrayList<>();\n+        PermissionInfo permissionInfo = new PermissionInfo();\n+        permissionInfo.setAction(\""rw\"");\n+        permissionInfo.setResource(\""test\"");\n+        permissionInfos.add(permissionInfo);\n+        NacosRoleServiceImpl spy = spy(nacosRoleService);\n+        when(spy.getPermissions(\""admin\"")).thenReturn(permissionInfos);\n+        spy.isDuplicatePermission(\""admin\"", \""test\"", \""r\"");\n+    }\n }\n"", ""agent_patch"": null, ""FAIL_TO_PASS"": [], ""PASS_TO_PASS"": [], ""test_output_before"": null, ""errors_before"": [], ""failed_before"": [], ""test_output_after"": null, ""errors_after"": [], ""failed_after"": []}"
"{""instance_id"": ""alibaba__nacos-12765"", ""pr_id"": 12765, ""issue_id"": 12719, ""repo"": ""alibaba/nacos"", ""problem_statement"": ""Accurately refresh the client's access token\n<!-- Here is for bug reports and feature requests ONLY! \r\n\r\nIf you're looking for help, please check our mail list\u3001WeChat group and the Gitter room.\r\n\r\nPlease try to use English to describe your issue, or at least provide a snippet of English translation.\r\n\u6211\u4eec\u9f13\u52b1\u4f7f\u7528\u82f1\u6587\uff0c\u5982\u679c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ffb\u8bd1\u8f6f\u4ef6\uff0c\u60a8\u4ecd\u65e7\u53ef\u4ee5\u4fdd\u7559\u4e2d\u6587\u539f\u6587\u3002\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIf the user updates the `nacos.core.auth.plugin.nacos.token.secret.key` parameter in the application, the generated access tokens will need to wait for the next cycle before being refreshed, with a refresh interval of ` nacos.core.auth.plugin.nacos.token.expire.seconds` - (`nacos.core.auth.plugin.nacos.token.expire.seconds`/10); During this period, when the client calls Nacos related interfaces, it will prompt: Invalid signature. The reason is that the server has already updated the key, causing the signature verification to fail.\r\n\r\n\u5982\u679c\u7528\u6237\u66f4\u65b0\u4e86application \u4e2d\u7684 nacos.core.auth.plugin.nacos.token.secret.key \u53c2\u6570\uff0c\u9488\u5bf9\u5df2\u7ecf\u4ea7\u751f\u7684accessToken\u9700\u8981\u7b49\u5f85\u4e0b\u4e00\u4e2a\u5468\u671f\u624d\u4f1a\u8fdb\u884c\u5237\u65b0\uff0c\u5237\u65b0\u95f4\u9694 = nacos.core.auth.plugin.nacos.token.expire.seconds  - \uff08nacos.core.auth.plugin.nacos.token.expire.seconds / 10\uff09\uff1b\u5728\u8fd9\u671f\u95f4\u5ba2\u6237\u7aef\u8c03\u7528Nacos\u76f8\u5173\u63a5\u53e3\u5c06\u4f1a\u63d0\u793a\uff1aInvalid signature \u539f\u56e0\u662f\u670d\u52a1\u7aef\u5df2\u7ecf\u66f4\u65b0key\u5bfc\u81f4\u7b7e\u540d\u6821\u9a8c\u4e0d\u901a\u8fc7\u3002\r\n\r\n**Describe the solution you'd like**\r\nJudge the server response code in the 'nacose client' code, such as code=403; In this scenario, it means that the Nacos server has adjusted the auth key, which can trigger a user to log in again to refresh the access token. This way, the client will obtain the latest access token.\r\n\r\n\u5728`nacose-client`\u4ee3\u7801\u4e2d\u5bf9\u670d\u52a1\u7aef\u54cd\u5e94code\u8fdb\u884c\u5224\u65ad\uff0c\u5982code=403\uff1b\u8fd9\u79cd\u573a\u666f\u4e0b\u610f\u5473\u7740Nacos\u670d\u52a1\u7aef\u8c03\u6574\u4e86auth key\uff0c\u90a3\u4e48\u53ef\u4ee5\u89e6\u53d1\u4e00\u6b21\u7528\u6237\u91cd\u65b0\u767b\u5f55\u6765\u5237\u65b0accessToken\uff0c\u8fd9\u6837\u5ba2\u6237\u7aef\u5c06\u83b7\u53d6\u5230\u6700\u65b0\u7684accessToken\u3002\r\n\r\n\r\n```java\r\nprivate <T extends Response> T requestToServer(AbstractNamingRequest request, Class<T> responseClass)\r\n            throws NacosException {\r\n        Response response = null;\r\n        try {\r\n            request.putAllHeader(\r\n                    getSecurityHeaders(request.getNamespace(), request.getGroupName(), request.getServiceName()));\r\n            response = requestTimeout < 0 ? rpcClient.request(request) : rpcClient.request(request, requestTimeout);\r\n            if (ResponseCode.SUCCESS.getCode() != response.getResultCode()) {\r\n                // TODO If the 403 login operation is triggered, refresh the accessToken of the client\r\n                throw new NacosException(response.getErrorCode(), response.getMessage());\r\n            }\r\n            if (responseClass.isAssignableFrom(response.getClass())) {\r\n                return (T) response;\r\n            }\r\n            NAMING_LOGGER.error(\""Server return unexpected response '{}', expected response should be '{}'\"",\r\n                    response.getClass().getName(), responseClass.getName());\r\n            throw new NacosException(NacosException.SERVER_ERROR, \""Server return invalid response\"");\r\n        } catch (NacosException e) {\r\n            recordRequestFailedMetrics(request, e, response);\r\n            throw e;\r\n        } catch (Exception e) {\r\n            recordRequestFailedMetrics(request, e, response);\r\n            throw new NacosException(NacosException.SERVER_ERROR, \""Request nacos server failed: \"", e);\r\n        }\r\n    }\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nWe encountered an issue when upgrading Nacos from version 2.2.3 to 2.4.2, where the client reconnecting to Nacos prompted: Invalid signature; After investigation, we found that versions 2.3. x and later have made adjustments to the base64 of the auth key, which led to this issue. For details, please refer to the issue: https://github.com/alibaba/nacos/pull/12434 The official suggestion for this issue is to adjust the Nacos parameter `nacos.core.auth.plugin.nacos.token.expire.seconds' to shorten the expiration time, but this will make the refresh frequency very frequent and require restarting the original service before upgrading, which is not very elegant.\r\n\r\n\u6211\u4eec\u5728\u5c06Nacos\u75312.2.3\u7248\u672c\u5347\u7ea7\u52302.4.2\u65f6\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u5ba2\u6237\u7aef\u91cd\u8fdeNacos\u63d0\u793a\uff1aInvalid signature\uff1b\u7ecf\u8fc7\u6392\u67e5\u6211\u4eec\u53d1\u73b02.3.x\u4ee5\u540e\u7684\u7248\u672c\u9488\u5bf9auth key\u7684base64\u8fdb\u884c\u8fc7\u8c03\u6574\uff0c\u5bfc\u81f4\u4e86\u8fd9\u4e2a\u95ee\u9898\u7684\u51fa\u73b0\uff0c\u8be6\u60c5\u53c2\u8003issue\uff1ahttps://github.com/alibaba/nacos/pull/12434  \u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b98\u65b9\u7684\u5efa\u8bae\u662f\u8c03\u6574Nacos\u53c2\u6570`nacos.core.auth.plugin.nacos.token.expire.seconds` \u6765\u7f29\u77ed\u8fc7\u671f\u65f6\u95f4\uff0c\u4f46\u662f\u8fd9\u6837\u4f1a\u5c06\u5237\u65b0\u53d8\u5f97\u5f88\u9891\u7e41\uff0c\u800c\u4e14\u9700\u8981\u5148\u91cd\u542f\u539f\u6709\u670d\u52a1\u518d\u5347\u7ea7\uff0c\u8fd9\u6837\u4e0d\u592a\u4f18\u96c5\u3002\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n"", ""issue_word_count"": 540, ""test_files_count"": 5, ""non_test_files_count"": 10, ""pr_changed_files"": [""api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigQueryResponse.java"", ""client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosAuthLoginConstant.java"", ""client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImpl.java"", ""client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java"", ""client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java"", ""client/src/main/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxy.java"", ""client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java"", ""client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java"", ""client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java"", ""client/src/test/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImplTest.java"", ""client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java"", ""client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxyTest.java"", ""client/src/test/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxyTest.java"", ""client/src/test/java/com/alibaba/nacos/client/security/SecurityProxyTest.java"", ""plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/LoginIdentityContext.java""], ""pr_changed_test_files"": [""client/src/test/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImplTest.java"", ""client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java"", ""client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxyTest.java"", ""client/src/test/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxyTest.java"", ""client/src/test/java/com/alibaba/nacos/client/security/SecurityProxyTest.java""], ""base_commit"": ""f425ef5eb617170a91faee5117e1b53dd909aae3"", ""head_commit"": ""b7b587e078d0af1aeb9119cda3f5dd8005f441dd"", ""repo_url"": ""https://github.com/alibaba/nacos/pull/12765"", ""swe_url"": ""https://swe-bench-plus.turing.com/repos/alibaba__nacos/12765"", ""dockerfile"": """", ""pr_merged_at"": ""2024-11-15T08:39:36.000Z"", ""patch"": ""diff --git a/api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigQueryResponse.java b/api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigQueryResponse.java\nindex 6b417fd6711..d92f273ed62 100644\n--- a/api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigQueryResponse.java\n+++ b/api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigQueryResponse.java\n@@ -30,6 +30,8 @@ public class ConfigQueryResponse extends Response {\n     \n     public static final int CONFIG_QUERY_CONFLICT = 400;\n     \n+    public static final int NO_RIGHT = 403;\n+    \n     String content;\n     \n     String encryptedDataKey;\n\ndiff --git a/client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosAuthLoginConstant.java b/client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosAuthLoginConstant.java\nindex df1d6369cba..aa38a97e70a 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosAuthLoginConstant.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosAuthLoginConstant.java\n@@ -37,5 +37,5 @@ public class NacosAuthLoginConstant {\n     \n     public static final String SERVER = \""server\"";\n     \n-    \n+    public static final String RELOGINFLAG = \""reLoginFlag\"";\n }\n\ndiff --git a/client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImpl.java b/client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImpl.java\nindex c374c1a9b77..eb3b41a2583 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImpl.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImpl.java\n@@ -59,6 +59,10 @@ public class NacosClientAuthServiceImpl extends AbstractClientAuthService {\n      */\n     private volatile LoginIdentityContext loginIdentityContext = new LoginIdentityContext();\n     \n+    /**\n+     * Re-login window in milliseconds.\n+     */\n+    private final long reLoginWindow = 60000;\n     \n     /**\n      * Login to servers.\n@@ -69,9 +73,16 @@ public class NacosClientAuthServiceImpl extends AbstractClientAuthService {\n     @Override\n     public Boolean login(Properties properties) {\n         try {\n-            if ((System.currentTimeMillis() - lastRefreshTime) < TimeUnit.SECONDS\n-                    .toMillis(tokenTtl - tokenRefreshWindow)) {\n-                return true;\n+            boolean reLoginFlag = Boolean.parseBoolean(loginIdentityContext.getParameter(NacosAuthLoginConstant.RELOGINFLAG, \""false\""));\n+            if (reLoginFlag) {\n+                if ((System.currentTimeMillis() - lastRefreshTime) < reLoginWindow) {\n+                    return true;\n+                }\n+            } else {\n+                if ((System.currentTimeMillis() - lastRefreshTime) < TimeUnit.SECONDS\n+                        .toMillis(tokenTtl - tokenRefreshWindow)) {\n+                    return true;\n+                }\n             }\n             \n             if (StringUtils.isBlank(properties.getProperty(PropertyKeyConst.USERNAME))) {\n\ndiff --git a/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java b/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\nindex bf5099e6009..a8629ecb0dc 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\n@@ -1221,10 +1221,17 @@ private Response requestProxy(RpcClient rpcClientInner, Request request, long ti\n                 throw new NacosException(NacosException.CLIENT_OVER_THRESHOLD,\n                         \""More than client-side current limit threshold\"");\n             }\n+            Response response;\n             if (timeoutMills < 0) {\n-                return rpcClientInner.request(request);\n+                response = rpcClientInner.request(request);\n+            } else {\n+                response = rpcClientInner.request(request, timeoutMills);\n+            }\n+            // If the 403 login operation is triggered, refresh the accessToken of the client\n+            if (response.getErrorCode() == ConfigQueryResponse.NO_RIGHT) {\n+                reLogin();\n             }\n-            return rpcClientInner.request(request, timeoutMills);\n+            return response;\n         }\n         \n         private RequestResource resourceBuild(Request request) {\n\ndiff --git a/client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java b/client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java\nindex 60d321f1620..b5518265e7c 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java\n@@ -136,6 +136,10 @@ public void start() throws NacosException {\n         startInternal();\n     }\n     \n+    public void reLogin() {\n+        securityProxy.reLogin();\n+    }\n+    \n     /**\n      * start client inner.\n      *\n\ndiff --git a/client/src/main/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxy.java b/client/src/main/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxy.java\nindex 7fa7a8ab9e5..9a684617a7c 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxy.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxy.java\n@@ -54,4 +54,8 @@ protected Map<String, String> getAppHeaders() {\n         result.put(APP_FILED, AppNameUtils.getAppName());\n         return result;\n     }\n+    \n+    protected void reLogin() {\n+        securityProxy.reLogin();\n+    }\n }\n\ndiff --git a/client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java b/client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java\nindex 27e44ce1ff3..508b76f0ab3 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java\n@@ -446,6 +446,10 @@ private <T extends Response> T requestToServer(AbstractNamingRequest request, Cl\n                     getSecurityHeaders(request.getNamespace(), request.getGroupName(), request.getServiceName()));\n             response = requestTimeout < 0 ? rpcClient.request(request) : rpcClient.request(request, requestTimeout);\n             if (ResponseCode.SUCCESS.getCode() != response.getResultCode()) {\n+                // If the 403 login operation is triggered, refresh the accessToken of the client\n+                if (NacosException.NO_RIGHT == response.getErrorCode()) {\n+                    reLogin();\n+                }\n                 throw new NacosException(response.getErrorCode(), response.getMessage());\n             }\n             if (responseClass.isAssignableFrom(response.getClass())) {\n\ndiff --git a/client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java b/client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java\nindex a8324483b02..a6568fc4010 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java\n@@ -440,6 +440,12 @@ public String callServer(String api, Map<String, String> params, Map<String, Str\n             if (HttpStatus.SC_NOT_MODIFIED == restResult.getCode()) {\n                 return StringUtils.EMPTY;\n             }\n+            \n+            // If the 403 login operation is triggered, refresh the accessToken of the client\n+            if (HttpStatus.SC_FORBIDDEN == restResult.getCode()) {\n+                reLogin();\n+            }\n+\n             throw new NacosException(restResult.getCode(), restResult.getMessage());\n         } catch (NacosException e) {\n             NAMING_LOGGER.error(\""[NA] failed to request\"", e);\n\ndiff --git a/client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java b/client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java\nindex d0362719be3..c695a98daa1 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java\n@@ -17,12 +17,15 @@\n package com.alibaba.nacos.client.security;\n \n import com.alibaba.nacos.api.exception.NacosException;\n+import com.alibaba.nacos.client.auth.impl.NacosAuthLoginConstant;\n import com.alibaba.nacos.plugin.auth.spi.client.ClientAuthPluginManager;\n import com.alibaba.nacos.plugin.auth.api.LoginIdentityContext;\n import com.alibaba.nacos.plugin.auth.spi.client.ClientAuthService;\n import com.alibaba.nacos.plugin.auth.api.RequestResource;\n import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n import com.alibaba.nacos.common.lifecycle.Closeable;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.util.HashMap;\n import java.util.List;\n@@ -37,6 +40,8 @@\n  */\n public class SecurityProxy implements Closeable {\n     \n+    private static final Logger LOGGER = LoggerFactory.getLogger(SecurityProxy.class);\n+    \n     private ClientAuthPluginManager clientAuthPluginManager;\n     \n     /**\n@@ -85,4 +90,23 @@ public Map<String, String> getIdentityContext(RequestResource resource) {\n     public void shutdown() throws NacosException {\n         clientAuthPluginManager.shutdown();\n     }\n+    \n+    /**\n+     * Login again to refresh the accessToken.\n+     */\n+    public void reLogin() {\n+        if (clientAuthPluginManager.getAuthServiceSpiImplSet().isEmpty()) {\n+            return;\n+        }\n+        for (ClientAuthService clientAuthService : clientAuthPluginManager.getAuthServiceSpiImplSet()) {\n+            try {\n+                LoginIdentityContext loginIdentityContext = clientAuthService.getLoginIdentityContext(new RequestResource());\n+                if (loginIdentityContext != null) {\n+                    loginIdentityContext.setParameter(NacosAuthLoginConstant.RELOGINFLAG, \""true\"");\n+                }\n+            } catch (Exception e) {\n+                LOGGER.error(\""[SecurityProxy] set reLoginFlag failed.\"", e);\n+            }\n+        }\n+    }\n }\n\ndiff --git a/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/LoginIdentityContext.java b/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/LoginIdentityContext.java\nindex 5077d34d7a9..18124a88289 100644\n--- a/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/LoginIdentityContext.java\n+++ b/plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/LoginIdentityContext.java\n@@ -42,6 +42,17 @@ public String getParameter(String key) {\n         return param.get(key);\n     }\n     \n+    /**\n+     * get key from context; if blank return default value.\n+     *\n+     * @param key key of request\n+     * @return value of param key\n+     */\n+    public String getParameter(String key, String defaultValue) {\n+        String val = param.get(key);\n+        return val == null ? defaultValue : val;\n+    }\n+    \n     /**\n      * put key and value to param.\n      *\n"", ""test_patch"": ""diff --git a/client/src/test/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImplTest.java b/client/src/test/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImplTest.java\nindex a2312d8b984..6508350e877 100644\n--- a/client/src/test/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImplTest.java\n+++ b/client/src/test/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImplTest.java\n@@ -235,4 +235,19 @@ void testGetAccessTokenWithInvalidTtl() throws Exception {\n         //when\n         assertFalse(nacosClientAuthService.login(properties));\n     }\n+    \n+    @Test\n+    void testReLogin() {\n+        NacosClientAuthServiceImpl nacosClientAuthService = new NacosClientAuthServiceImpl();\n+        nacosClientAuthService.login(new Properties());\n+        // reLogin\n+        nacosClientAuthService.getLoginIdentityContext(null).setParameter(NacosAuthLoginConstant.RELOGINFLAG, \""true\"");\n+        Properties properties = new Properties();\n+        properties.setProperty(PropertyKeyConst.USERNAME, \""aaa\"");\n+        properties.setProperty(PropertyKeyConst.PASSWORD, \""123456\"");\n+        List<String> serverList = new ArrayList<>();\n+        serverList.add(\""localhost\"");\n+        //when\n+        assertTrue(nacosClientAuthService.login(properties));\n+    }\n }\n\ndiff --git a/client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java b/client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java\nindex 7c3cd312962..5659c2c3684 100644\n--- a/client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java\n+++ b/client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java\n@@ -30,6 +30,7 @@\n import com.alibaba.nacos.api.config.remote.response.ConfigChangeBatchListenResponse;\n import com.alibaba.nacos.api.config.remote.response.ConfigPublishResponse;\n import com.alibaba.nacos.api.config.remote.response.ConfigQueryResponse;\n+import com.alibaba.nacos.api.config.remote.response.ConfigRemoveResponse;\n import com.alibaba.nacos.api.exception.NacosException;\n import com.alibaba.nacos.client.config.common.GroupKey;\n import com.alibaba.nacos.client.config.filter.impl.ConfigFilterChainManager;\n@@ -761,4 +762,21 @@ void testAddTenantListenersWithContentEnsureCacheDataSafe()\n         assertFalse(cacheDataFromCache2.isDiscard());\n         assertFalse(cacheDataFromCache2.isConsistentWithServer());\n     }\n+    \n+    @Test\n+    void testResponse403() throws NacosException {\n+        Properties prop = new Properties();\n+        ConfigFilterChainManager filter = new ConfigFilterChainManager(new Properties());\n+        ConfigServerListManager agent = Mockito.mock(ConfigServerListManager.class);\n+        \n+        final NacosClientProperties nacosClientProperties = NacosClientProperties.PROTOTYPE.derive(prop);\n+        final ClientWorker clientWorker = new ClientWorker(filter, agent, nacosClientProperties);\n+        \n+        ConfigRemoveResponse response = ConfigRemoveResponse.buildFailResponse(\""accessToken invalid\"");\n+        response.setErrorCode(ConfigQueryResponse.NO_RIGHT);\n+        Mockito.when(rpcClient.request(any(ConfigRemoveRequest.class)))\n+                .thenReturn(response);\n+        boolean result = clientWorker.removeConfig(\""a\"", \""b\"", \""c\"", \""tag\"");\n+        assertFalse(result);\n+    }\n }\n\ndiff --git a/client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxyTest.java b/client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxyTest.java\nindex 62314db5473..bdb9472cfbc 100644\n--- a/client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxyTest.java\n+++ b/client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxyTest.java\n@@ -709,4 +709,21 @@ void testConfigAppNameLabels() throws Exception {\n         String appName = config.labels().get(Constants.APPNAME);\n         assertNotNull(appName);\n     }\n+    \n+    @Test\n+    void testResponseCode403Exception() throws NacosException {\n+        Throwable exception = assertThrows(NacosException.class, () -> {\n+\n+            when(this.rpcClient.request(Mockito.any())).thenReturn(ErrorResponse.build(403, \""Invalid signature\""));\n+\n+            try {\n+                client.registerService(SERVICE_NAME, GROUP_NAME, instance);\n+            } catch (NacosException ex) {\n+                assertNull(ex.getCause());\n+\n+                throw ex;\n+            }\n+        });\n+        assertTrue(exception.getMessage().contains(\""Invalid signature\""));\n+    }\n }\n\ndiff --git a/client/src/test/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxyTest.java b/client/src/test/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxyTest.java\nindex dc0fccc2681..4cebc7f72de 100644\n--- a/client/src/test/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxyTest.java\n+++ b/client/src/test/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxyTest.java\n@@ -645,4 +645,29 @@ void testRegApiForDomain() throws NacosException {\n         });\n         \n     }\n+    \n+    @Test\n+    void testCallServerFail403() throws Exception {\n+        //given\n+        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);\n+\n+        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenAnswer(invocationOnMock -> {\n+            //return url\n+            HttpRestResult<Object> res = new HttpRestResult<Object>();\n+            res.setMessage(\""Invalid signature\"");\n+            res.setCode(403);\n+            return res;\n+        });\n+\n+        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField(\""nacosRestTemplate\"");\n+        nacosRestTemplateField.setAccessible(true);\n+        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);\n+        String api = \""/api\"";\n+        Map<String, String> params = new HashMap<>();\n+        Map<String, String> body = new HashMap<>();\n+        String method = HttpMethod.GET;\n+        String curServer = \""127.0.0.1\"";\n+        //then\n+        assertThrows(NacosException.class, () -> clientProxy.callServer(api, params, body, curServer, method));\n+    }\n }\n\ndiff --git a/client/src/test/java/com/alibaba/nacos/client/security/SecurityProxyTest.java b/client/src/test/java/com/alibaba/nacos/client/security/SecurityProxyTest.java\nindex 24288008357..739bfc1f77d 100644\n--- a/client/src/test/java/com/alibaba/nacos/client/security/SecurityProxyTest.java\n+++ b/client/src/test/java/com/alibaba/nacos/client/security/SecurityProxyTest.java\n@@ -17,11 +17,14 @@\n package com.alibaba.nacos.client.security;\n \n import com.alibaba.nacos.api.PropertyKeyConst;\n+import com.alibaba.nacos.api.exception.NacosException;\n import com.alibaba.nacos.client.auth.impl.NacosAuthLoginConstant;\n import com.alibaba.nacos.common.http.HttpRestResult;\n import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n import com.alibaba.nacos.common.http.param.Header;\n+import com.alibaba.nacos.plugin.auth.api.LoginIdentityContext;\n import com.alibaba.nacos.plugin.auth.api.RequestResource;\n+import com.alibaba.nacos.plugin.auth.spi.client.AbstractClientAuthService;\n import com.alibaba.nacos.plugin.auth.spi.client.ClientAuthPluginManager;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -100,4 +103,37 @@ void testLoginWithoutAnyPlugin() throws NoSuchFieldException, IllegalAccessExcep\n         Map<String, String> header = securityProxy.getIdentityContext(new RequestResource());\n         assertTrue(header.isEmpty());\n     }\n+    \n+    @Test\n+    void testReLogin() throws NoSuchFieldException, IllegalAccessException {\n+        Field clientAuthPluginManagerField = SecurityProxy.class.getDeclaredField(\""clientAuthPluginManager\"");\n+        clientAuthPluginManagerField.setAccessible(true);\n+        ClientAuthPluginManager clientAuthPluginManager = mock(ClientAuthPluginManager.class);\n+        clientAuthPluginManagerField.set(securityProxy, clientAuthPluginManager);\n+        when(clientAuthPluginManager.getAuthServiceSpiImplSet()).thenReturn(Collections.singleton(new AbstractClientAuthService() {\n+            \n+            private LoginIdentityContext loginIdentityContext;\n+            \n+            @Override\n+            public Boolean login(Properties properties) {\n+                return null;\n+            }\n+            \n+            @Override\n+            public LoginIdentityContext getLoginIdentityContext(RequestResource resource) {\n+                if (loginIdentityContext == null) {\n+                    loginIdentityContext = new LoginIdentityContext();\n+                }\n+                return loginIdentityContext;\n+            }\n+            \n+            @Override\n+            public void shutdown() throws NacosException {\n+            \n+            }\n+        }));\n+        securityProxy.reLogin();\n+        Map<String, String> identityContext = securityProxy.getIdentityContext(new RequestResource());\n+        assertEquals(identityContext.get(NacosAuthLoginConstant.RELOGINFLAG), \""true\"");\n+    }\n }\n"", ""agent_patch"": null, ""FAIL_TO_PASS"": [], ""PASS_TO_PASS"": [], ""test_output_before"": null, ""errors_before"": [], ""failed_before"": [], ""test_output_after"": null, ""errors_after"": [], ""failed_after"": []}"
